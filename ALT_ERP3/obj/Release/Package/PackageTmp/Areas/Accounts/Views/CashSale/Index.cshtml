@model LRInvoiceVM
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
@using Common;

<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>
<style>
    div.tabclas button.tablinks {
        background-color: inherit;
        float: left;
        background: linear-gradient(white,lightgray);
        width: 100px;
        border-top: solid;
        border-left: none;
        border-right: 1px;
        border-right-style: outset;
        border-bottom: none;
        border-top-color: dodgerblue;
        border-top-color: gray;
        border-right-color: gray;
        border-radius: 7px 7px 0 0;
        -webkit-border-radius: 7px 7px 0 0;
        outline: none;
        cursor: pointer;
        padding: 3px 3px;
        transition: 0.3s;
        color: black;
        height: 28px;
        font-family: fangsong !important;
    }

        div.tabclas button.tablinks:hover {
            background-color: #bfbfbf;
            background: linear-gradient(white,#BBBABA);
            color: red;
            border-top: solid;
            border-top-color: black;
        }

        div.tabclas button.tablinks.active {
            background: linear-gradient(white,#BBBABA);
            color: black;
            border-top: solid;
            border-top-color: orangered;
        }
</style>

<header class="header fixed-top" id="headerdiv" style=" position: fixed; background-color: lightgray; padding: 6px; width: 100%; margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt" id="headercaption">@Model.id (@Model.Type)</b>
        <span class="tools pull-right">
            @if (Model.LedgerThrough)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">&nbsp;&nbsp;@Model.Mode Mode&nbsp;</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

        <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
            <button id="nextbutton" class="btn btn-success" style="font-size:14px;padding:3px 12px;" tooltip="Show Next Voucher" onclick=NextEntry("N");>Next >></button>
        </div>
        <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
            <button id="previousbutton" class="btn btn-success" style="font-size:14px;padding:3px 12px;" tooltip="Show Previous Voucher" onclick=NextEntry("P");><< Previous</button>
        </div>
    </div>
</header>

<div class="panel">
    <div class="panel-body" style="padding:18px 3px 5px 3px;">
        <div class="form-horizontal" id="frmpurchase" role="form" style="margin-top:3%;">
            <div class="form-group" style="padding-left:10px;width:98%;padding-bottom:0px;">
                <script>
                    $(document).ready(function () {
                        $(".panel").height(490);
                        var mstartdate = $('#hdnStartDate').val();
                        var menddate = $('#hdnEndDate').val();
                        $('#DocuDate').focus();
                        $('#DocuDate').datepicker({
                            format: "dd-mm-yyyy",
                            autoclose: true,
                            startDate: new Date(mstartdate),
                            endDate: new Date(menddate)
                        });


                        $("#btnAddOns").click(function (event) {
                            event.preventDefault();
                            $('#addonmodel').modal({
                                backdrop: 'static',
                                keyboard: false
                            });
                            $('#addongrid input[id=txtf_F001]').focus();
                            $('#addonmodel').modal('show');
                        });
                    });
                </script>
                <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none;padding:2px;"></div>
                <div class="col-sm-1" style="width:100px;">
                    @if (Model.BillBoth)
                    {
                        <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                    }
                    else if (Model.LRGenerate == "M")
                    {
                        <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                    }
                    else
                    {
                        <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                    }
                </div>
                <label class="col-sm-1 control-label" style="padding-right:0px;padding-left:5px;">Document No:</label>
                <div class="col-sm-2" style="width:150px;padding-left:0px;">
                    @Html.TextBoxFor(x => x.Srl, new { @class = "form-control", @id = "Srl", @Name = "Srl", @disabled = "disabled", @Value = Model.Srl, @style = "font-weight:bolder;font-size:14px;" })
                </div>
                <label class="col-sm-1 control-label" style="padding-right:0px;padding-left:5px;">Document Dt:</label>
                <div class="col-sm-2" style="width:150px;padding-left:0px;">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.DocuDate, new { @type = "text", @class = "form-control", @id = "DocuDate", @Name = "DocuDate", @Value = Model.DocDate.ToString("dd-MM-yyyy"), @style = "text-align:center;font-weight:bolder;font-size:14px;" })
                    </div>
                </div>
                <label class="col-sm-1 control-label" style="padding-left:0px;padding-right:0px;width:5.3%;" id="gsttyplbl" hidden="hidden">GST Type:</label>
                <div class="col-sm-2" id="gsttypdiv" style="width:150px;" hidden="hidden">
                    @Html.TextBoxFor(x => x.GSTType, new { @class = "input-large search-query", @id = "GSTType", @Name = "GSTType", @Style = "width:100%;height:26px;" })
                </div>
                <label class="col-sm-1 control-label" style="padding-left:5px;padding-right:0px;width:7%">Cash Bank Acc:</label>
                <div class="col-sm-3" style="padding-left:0px;">
                    @Html.TextBoxFor(x => x.Account, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "Account", @name = "Account" })
                </div>
                <label class="col-sm-1 control-label" style="padding-left:5px;padding-right:0px;width:7%">ChequeNo:</label>
                <div class="col-sm-1" style="padding-left:0px;">
                    @Html.TextBoxFor(x => x.ChequeNo, new { @class = "form-control", @id = "ChequeNo", @maxlength = "10", @Name = "ChequeNo", @Value = Model.ChequeNo, @style = "font-weight:bolder;font-size:14px;" })
                </div>
            </div>
            <div class="form-group" style="padding-left:10px;width:98%;padding-top:0px;">
                <div class="col-sm-3">
                    <label class="col-sm-2 control-label" style="padding-left:15px;padding-right:0px;">Tickler:</label>
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.Tickler, new { @class = "form-control", @id = "Tickler", @Name = "Tickler", @disabled = "disabled", @style = "width:98%;background-color:#e4e4e4;" })
                    </div>
                </div>
                <label class="col-sm-1 control-label hidden" style="padding-left:0px;padding-right:0px;width:6.3%;">Address:</label>
                <div class="col-sm-3 hidden" style="padding-left:0px;">
                    @Html.TextAreaFor(x => x.AddressFrom, new { @class = "form-control", @id = "AddressFrom", @Name = "AddressFrom", @disabled = "disabled", @style = "background-color:#e4e4e4;" })
                </div>

                <label class="col-sm-1 control-label" hidden="hidden">Place Of Supply:</label>
                <div class="col-sm-2" hidden="hidden">
                    @Html.TextBoxFor(x => x.PlaceOfSupply, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "PlaceOfSupply", @Name = "PlaceOfSupply" })
                </div>
                <div class="col-sm-2">
                    <table>
                        <tbody style="height:48px;">
                            <tr style="height:16px;">
                                <td style="height:16px;width:50%">A/C Balance:</td>
                                <td style="height:16px">
                                    <label id="Balance" style="width:100%;margin-top:0px;">@Model.Balance</label>

                                </td>
                            </tr>
                            <tr style="height:16px;">
                                <td style="height:16px;">
                                    Credit Limit:
                                </td>
                                <td style="height:16px;">
                                    <label id="CrLimit" style="width:100%;margin-top:0px;">@Model.CrLimit</label>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <label class="col-sm-1 control-label" style="padding-left:5px;padding-right:0px;width:5.3%;">Credit Days:</label>
                <div class="col-sm-1" style="padding-left:0px;padding-right:0px;width:60px;">
                    @Html.TextBoxFor(x => x.CrPeriod, new { @class = "form-control", @id = "CrPeriod", @Name = "CrPeriod", @style = "width:100%;margin-top:2px;text-align:right;", @Value = Model.CrPeriod })
                </div>
                <label class="col-sm-1 control-label" style="padding-left:5px;padding-right:0px;width:7%">Customer:</label>
                <div class="col-sm-2" style="padding-left:0px;">
                    @Html.TextBoxFor(x => x.Customer, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "Customer", @name = "Customer" })
                </div>
                <label class="col-sm-1 control-label" style="padding-left:5px;padding-right:0px;width:7%">Debtors:</label>
                <div class="col-sm-2" style="padding-left:0px;">
                    @Html.TextBoxFor(x => x.AccParentGrp, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "AccParentGrp", @name = "AccParentGrp", @disabled = "disabled" })
                </div>
            </div>
            @*<div class="tab">
                    <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="Direct"> List</button>
                    <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')"> TDS Details</button>
                    <button class="tablinks" onclick="openCity(event, 'divLedgerTable3')">GST Details</button>
                </div>*@

            <div class="tabclas" style="border-bottom: 1px solid;-webkit-border-radius: 0px 0px 0 0;border-radius: 0px 0px 0 0;overflow: hidden;">
                <table>
                    <tr style="width:100%;">
                        <td>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="Direct"> List</button>
                        </td>
                        <td>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')"> TDS Details</button>
                        </td>
                        <td>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable3')">GST Details</button>
                        </td>
                        @if (Model.OthLRShow)
                        {
                            <td style="padding-left: 1%;">
                                <input value="" class="form-control" placeholder="Search Document" title="Search Document" id="btnadddata" name="btnadddata" style="width:125PX;margin-top:2px;" type="text">
                            </td>
                        }

                    </tr>
                </table>
            </div>


            <div id="divLedgerTable" class="tabcontent" style="min-height:285px;max-height:285px;padding-left: 5px!important;">
                @*<div class="grid" id="ItemChargeMoreDiv">*@
                @Html.Partial("ItemChargeMoreView", Model)
                @*</div>*@
            </div>
            <div id="divLedgerTable2" class="tabcontent" style="min-height:350px;max-height:350px;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">TDS Cut?</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.TDSFlag, new { @id = "addTDSFlag", @Name = "addTDSFlag", @Value = Model.TDSFlag })
                    </div>
                    <label class="col-sm-1 control-label">Code</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.TDSCode, new { @class = "input-large search-query", @id = "addTDSCode", @Name = "addTDSCode", @style = "width:99%;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">TDS Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.TDSRate, new { @class = "form-control", @id = "addTDSRate", @Name = "addTDSRate", @Value = Model.TDSRate })
                    </div>
                    <label class="col-sm-1 control-label">TDS Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.TDSAmt, new { @class = "form-control", @id = "addTDSAmt", @Name = "addTDSAmt", @Value = Model.TDSAmt })
                    </div>
                </div>
            </div>
            <div id="divLedgerTable3" class="tabcontent" style="min-height:350px;max-height:350px;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">GST Cut?</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.GSTFlag, new { @id = "addGSTNoItc", @Name = "addGSTNoItc" })
                    </div>
                    <label class="col-sm-1 control-label">GST Type</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.GSTCode, new { @class = "input-large search-query", @id = "addGSTCode", @Name = "addGSTCode", @style = "width:99%;" })
                    </div>
                    <label class="col-sm-1 control-label">Taxable</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.Taxable, new { @class = "form-control", @id = "addTaxable", @Name = "addTaxable" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">IGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTRate, new { @class = "form-control", @id = "addIGSTRate", @Name = "addIGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">IGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTAmt, new { @class = "form-control", @id = "addIGSTAmt", @Name = "addIGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">CGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTRate, new { @class = "form-control", @id = "addCGSTRate", @Name = "addCGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">CGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTAmt, new { @class = "form-control", @id = "addCGSTAmt", @Name = "addCGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">SGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTRate, new { @class = "form-control", @id = "addSGSTRate", @Name = "addSGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">SGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTAmt, new { @class = "form-control", @id = "addSGSTAmt", @Name = "addSGSTAmt" })
                    </div>
                </div>
            </div>
            <div class="form-group" style="margin-top:5px!important;">
                <label class="col-sm-1 control-label">Bill Narr:</label>
                <div class="col-sm-10">
                    @Html.TextAreaFor(x => x.BillNarr, new { @class = "form-control", @id = "BillNarr", @Name = "BillNarr", @rows = 1, @Model.BillNarr })
                </div>
            </div>
            <script>
            $(document).ready(function ()
            {
                loadTDSCodeList();
                loadGSTCodeList();
                $('#addTDSCode').change(function () {
                    var url = '@Url.Action("GetTDSRateDetail")?TDSCode=' + $('#addTDSCode').val() + '&DocuDate=' + $('#DocuDate').val();
                    $.ajax({
                        type: "GET",
                        dataType: "json",
                        cache: false,
                        url: url,
                        contentType: "application/json;charset=utf-8",
                        beforeSend: function () {
                            $('.spinner').show();
                        },
                        success: function (data) {
                            $('.spinner').hide();
                            $('#addTDSRate').val(data.TDSRate);
                            TDSCalculation();
                        },
                        error: function () {
                            alert("Error occured while processing your request.");
                        }
                    });
                });
                $('#addTDSRate').focusout(function () {
                    TDSCalculation();
                });

                $('#addTDSFlag').change(function () {
                    TDSCalculation();
                });
                $("#addGSTNoItc").change(function () {
                    GSTCalculation();
                });
                $('#addIGSTRate').focusout(function () {
                    GSTCalculation();
                });
                $('#addSGSTRate').focusout(function () {
                    GSTCalculation();
                });
                $('#addCGSTRate').focusout(function () {
                    GSTCalculation();
                });

                $("#TDSAmt").blur(function () {
                    $("#addTDSAmt").val(this.value);
                });
                $("#addTDSAmt").blur(function () {
                    $("#TDSAmt").val(this.value);
                });



                $('#addGSTCode').change(function () {
                    var url = '@Url.Action("GetGSTRateDetail")?Code=' + $('#addGSTCode').val() + '&Party=' + $('#Account').val() + '&DocDate=' + $('#DocuDate').val();
                    $.ajax({
                            type: "GET",
                            dataType: "json",
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#addIGSTRate').val(data.IGSTRate);
                                $('#addCGSTRate').val(data.CGSTRate);
                                $('#addSGSTRate').val(data.SGSTRate);
                                GSTCalculation();
                            },
                            error: function () {
                                alert("Error occured while processing your request.");
                            }

                        });
                });
                $('#addIGSTRate').focusout(function () {
                    GSTCalculation();
                });
                $('#addSGSTRate').focusout(function () {
                    GSTCalculation();
                });
                $('#addCGSTRate').focusout(function () {
                    GSTCalculation();
                });

            });

            function TDSCalculation()
            {
                debugger;
                $("#addTDSAmt").val(0);


                if ($('#addTDSFlag').is(":checked"))
                {
                    var rate1 = (parseFloat($("#addTDSRate").val()));
                    var amt1 = parseFloat($("#addTaxable").val());
                    var AmtTDS = (rate1 * amt1) / 100;
                    $('#addTDSAmt').val(AmtTDS);
                    $('#TDSAmt').val(AmtTDS);
                }
                else
                {
                    $('#addTDSAmt').val(0);
                    $('#TDSAmt').val(0);
                }
                }

            function GSTCalculation()
            {
                SetValuesInTable();
                //if ($('#addGSTNoItc').is(":checked")) {

                //    var irate1 = (parseFloat($("#addIGSTRate").val()));
                //    var srate1 = (parseFloat($("#addSGSTRate").val()));
                //    var crate1 = (parseFloat($("#addCGSTRate").val()));
                //    var amt1 = parseFloat($("#addTaxable").val());

                //    var AmtIgst = (irate1 * amt1) / 100;
                //    var AmtCgst = (crate1 * amt1) / 100;
                //    var AmtSgst = (srate1 * amt1) / 100;
                //    $('#addIGSTAmt').val(AmtIgst);
                //    $('#txttotigst').val(AmtIgst);
                //    $('#addCGSTAmt').val(AmtCgst);
                //    $('#txttotcgst').val(AmtCgst);
                //    $('#addSGSTAmt').val(AmtSgst);
                //    $('#txttotsgst').val(AmtSgst);
                //    $('#txtinvamt').val(amt1 + AmtIgst + AmtCgst + AmtSgst);
                //}
                //else
                //{
                //    var amt1 = parseFloat($("#addTaxable").val());

                //    var AmtIgst = 0;
                //    var AmtCgst = 0;
                //    var AmtSgst = 0;
                //    $('#addIGSTAmt').val(0);
                //    $('#txttotigst').val(0);
                //    $('#addCGSTAmt').val(0);
                //    $('#txttotcgst').val(0);
                //    $('#addSGSTAmt').val(0);
                //    $('#txttotsgst').val(0);
                //    $('#txtinvamt').val(amt1);
                //}

            }
            function loadTDSCodeList() {
                var url = '@Url.Action("GetTDSList")'
                $('#addTDSCode').select2({
                    minimumInputLength: 0,
                    placeholder: 'Search',
                    ajax: {
                        url: url,
                        dataType: 'json',
                        quietMillis: 100,
                        enableFiltering: true,
                        allowClear: true,
                        minimumInputLength: 0,
                        multiple: true,
                        width: 300,
                        data: function (term, page) {
                            return {
                                types: ["exercise"],
                                limit: -1,
                                term: term
                            };
                        },
                        results: function (data, page) {
                            clientObj = JSON.stringify(data);
                            return {
                                results: $.map(data, function (item) {
                                    return {
                                        text: item.Name,
                                        id: item.Code
                                    }
                                })
                            };
                        }
                    },
                    initSelection: function (element, callback) {
                        var data = { id: '@Model.TDSCode', text: '@Model.TDSCodeName' };
                        callback(data);
                    },
                    formatResult: function (exercise) {
                        return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                            "</div></span></div></div>";
                    },
                    formatSelection: function (exercise) {
                        return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                            "</div></span></div></div>";
                    },
                })
            };
            function loadGSTCodeList() {
                var url = '@Url.Action("GetGSTList")'
                $('#addGSTCode').select2({
                    minimumInputLength: 0,
                    placeholder: 'Search',
                    ajax: {
                        url: url,
                        dataType: 'json',
                        quietMillis: 100,
                        enableFiltering: true,
                        allowClear: true,
                        minimumInputLength: 0,
                        multiple: true,
                        width: 300,
                        data: function (term, page) {
                            return {
                                types: ["exercise"],
                                limit: -1,
                                term: term
                            };
                        },
                        results: function (data, page) {
                            clientObj = JSON.stringify(data);
                            return {
                                results: $.map(data, function (item) {
                                    return {
                                        text: item.Name,
                                        id: item.Code
                                    }
                                })
                            };
                        }
                    },
                    initSelection: function (element, callback) {
                        var data = { id: '@Model.GSTCode', text: '@Model.GSTCodeName' };
                        callback(data);
                    },
                    formatResult: function (exercise) {
                        return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                            "</div></span></div></div>";
                    },
                    formatSelection: function (exercise) {
                        return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                            "</div></span></div></div>";
                    },
                })
            };
            function openCity(evt, cityName) {
                $("#ErrorMessage1").hide();
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {

                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {

                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(cityName).style.display = "block";
                evt.currentTarget.className += " active";
            }
                document.getElementById("Direct").click();
            </script>
        </div>
    </div>
</div>

@if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
{
    <script>
        $(document).ready(function () {
            if ('@Model.Mode' != "Delete") {
                FreightBillAlertNoteMaster('@Model.ParentKey');
            }
            $('#FBothCHK').prop("disabled", true);
            $('#txttotitemqty').val(parseFloat(@Model.TotalQty).toFixed(2));
            $('#txttottxable').val(parseFloat(@Model.Taxable).toFixed(2));
            $('#addTaxable').val(parseFloat(@Model.Taxable).toFixed(2));
            $('#txttotcgst').val(parseFloat(@Model.CGSTAmt).toFixed(2));
            $('#txttotsgst').val(parseFloat(@Model.SGSTAmt).toFixed(2));
            $('#txttotigst').val(parseFloat(@Model.IGSTAmt).toFixed(2));
            $('#txtinvamt').val(parseFloat(@Model.InvoiceAmt).toFixed(2));
        });
    </script>

    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="margin-top:2px;">
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">TDS Amt:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.TDSAmt, new { @style = "width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;", @type = "number", @class = "form-control", @id = "TDSAmt", @name = "TDSAmt", @disabled = "disabled", @Value = @Model.TDSAmt })
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.InvoiceAmt, new
           {
               @class = "form-control",
               @style = "width:160px;text-align:right;font-weight:bolder;background-color:gray;color:white;padding-right:5px;font-size:15pt;",
               @Name = "txtinvamt",
               @Id = "txtinvamt",
               @readonly = "readonly"
           })
            </div>
        </div>
    </div>
}
else
{
    <script>
        $(document).ready(function () {
            $('#txttotitemqty').val(parseFloat(0).toFixed(2));
            $('#txttottxable').val(parseFloat(0).toFixed(2));
            $('#txttotcgst').val(parseFloat(0).toFixed(2));
            $('#txttotsgst').val(parseFloat(0).toFixed(2));
            $('#txttotigst').val(parseFloat(0).toFixed(2));
            $('#txtinvamt').val(parseFloat(0).toFixed(2));
        });
    </script>
    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="padding-top:2px;">

            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">TDS Amt:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.TDSAmt, new { @style = "width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;", @type = "number", @class = "form-control", @id = "TDSAmt", @name = "TDSAmt", @disabled = "disabled", @Value = @Model.TDSAmt })
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                <input type="text" id="txtinvamt" alt="" class="form-control" style="width:130px;border-color:black;background-color:gray;color:white;text-align:right;font-size:11pt;font-weight:bolder;" disabled="disabled" />
            </div>
        </div>
    </div>
}

<footer id="fixedbottom" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        @if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
        {
            <div class="col-sm-5">
                @*<button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>*@
                @*<button class="btn btn-warning" id="EditbtnAddOns" style="font-size: 13px;padding:3px 12px;" name="Command">AddOns</button>*@
                <button class="btn btn-warning" id="btnAddDoc" style="font-size: 13px;padding:3px 12px;" name="Command">Attach Doc</button>
            </div>
            <div class="col-sm-2" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                ALT AIR-3.0, Shruham Software
            </div>
            <div class="col-sm-5">
                <div class="pull-right">
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                    @if (Model.Mode == "Edit")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>

                    }
                    @if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="DeleteData">Delete</button>
                    }
                    @if (Model.LedgerThrough)
                    {
                        <a href="" onclick="window.top.close();" style="font-size: 13px;padding:3px 12px;margin-right:10px;" class="btn btn-danger" id="Cancel">Cancel</a>
                    }
                    else
                    {
                        <a href="~/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" style="font-size: 13px;padding:3px 12px;margin-right:10px;" class="btn btn-danger" id="Cancel">Cancel</a>
                    }
                </div>
            </div>

        }
        else
        {
            <div class="col-sm-5">
                <button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>
                <button class="btn btn-warning" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" name="Command">Attach Doc</button>

            </div>
            <div class="col-sm-2" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                ALT AIR-3.0, Shruham Software
            </div>
            <div class="col-sm-5">
                <div class="pull-right">

                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>
                    <a href="~/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="font-size: 13px;margin-right:10px;padding:3px 12px;" id="Cancel">Cancel</a>
                </div>
            </div>

        }
    </div>
</footer>

<div class="example-modal">
    <div id="ledpostmodel" class="modal modal-primary" style="margin-top:1%!important;">
        <div class="modal-dialog" style="width:700px;">
            <div id="ledpostingmodel">
                @Html.Partial("LedgerPosting")
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="pickuplist" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1250px;height:500px;">
            <div id="PickUpList">
                @Html.Partial("PickUp")
            </div>
        </div>
    </div>
</div>


<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @Html.Partial("MultiPrint")
            </div>
        </div>
    </div>
</div>
<script>
    var PrintLR = "";
    $(document).ready(function () {

        GetMyFavorites('@Model.ViewDataId');
        $(".panel").height(490);
        $('#attachdoc,#AlertNoteModal,#addnotemodel').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#attachdoc,#AlertNoteModal,#addnotemodel").modal("hide");
        document.getElementById("headerdiv").style.backgroundColor = '@Session["headerdivcolor"]';
        document.getElementById("headercaption").style.color = '@Session["headercaptioncolor"]';
        document.getElementById("fixedbottom").style.backgroundColor = '@Session["bottomcolor"]';
        $("#Srl").constrain({ allow: { regex: "[0-9]" } });
        loadGstType();
        $("#FBothCHK").change(function () {
            if (this.checked) {
                $("#Srl").removeAttr("disabled");
                $("#hdnLRGenerate").val('M');
            }
            else {

                $("#Srl").attr("disabled", "disabled");
                $("#hdnLRGenerate").val('A');
            }
        });

        var CGL = $('#hdnMode').val();
        if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
            $('#Srl').prop('disabled', false);
        }
        if (CGL == "Delete" || CGL == "View") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
        }
        var CDP = $('#hdnCheckMode').val();
        if (CDP == "True" || CDP == "true") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            //$('#btnAddDoc').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
            if ($('#hdnEnableParty').val() == "True" || $('#hdnEnableParty').val() == "true"){
                $('#PlaceOfSDiv :input').prop("disabled", false);
                $('#DelyCode').prop("disabled", false);
                $('.select2-input').prop("disabled", false);
                $('#DelyAltAdd').prop("disabled", false);
                $('#DelyContact').prop("disabled", false);
                 $('#CrPeriod').prop("disabled", false);

            }
            alert('@Model.Message')
            $('.btn').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
            $('.modal-content .form-group :input').prop("disabled", false);
        }

        if ('@Model.IsPickUpByOther' == 'True' ||'@Model.IsPickUpByOther' == 'true' ) {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            //$('#btnAddDoc').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
            if ($('#hdnEnableParty').val() == "True" || $('#hdnEnableParty').val() == "true") {
                $('#PlaceOfSDiv :input').prop("disabled", false);
                $('#DelyCode').prop("disabled", false);
                $('.select2-input').prop("disabled", false);
                $('#DelyAltAdd').prop("disabled", false);
                $('#DelyContact').prop("disabled", false);
            }
            alert('Product Already Picked Up in :' + '@Model.PickedUpIn')
            if ('@Model.Mode' == 'Edit') {
                var confrm = confirm("Do You Really want to Edit !");
                if (confrm == false) {
                    return;
                }
                else {
                    $('#SaveData').prop('disabled', false);
                    $('#ItemListTable :input').prop('disabled', false);
                    //$('button[action|="DeleteItem"]').prop('disabled', true);
                }
            }


        }

        if ('@Model.PeriodLock' == "True") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('This Document Lock By Author....!');
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            //$('#btnAddDoc').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
            $('.btn').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
        }

        $('.tablinks').prop("disabled", false);

        $("#btnAddNote").click(function (e) {
            e.preventDefault();
            $("#OnlyAlertNoteDiv").html('');
            var url = '/Logistics/AlertNote/ShoWAlertNoteList';
            var myTableArray = [];
            myTableArray.push('@Model.ParentKey');
            var DTO = { Type: "CMM00", TypeCode: myTableArray, DocTpe: "CMM00" };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    debugger;
                    $('#addnotemodel').modal('show');
                    var AttachDoc = $("#AlertAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);

                    $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                },
            });
        });
        $("#btnAddNarr").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").addClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").removeClass("hidden");
            var url = '/Logistics/AlertNote/PartialView';
            var ModelData = {};
            ModelData["AType"] = "CMM00";
            ModelData["DocReceived"] = $("#Srl").val();
            ModelData["DocumentKey"] = '@Model.ParentKey';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    debugger;
                    var AttachDoc = $("#AddAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                },
            });
        });
        $("#btnNarrList").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
        });
        $('#btnNarrSave').click(function (event) {
            event.preventDefault();
            debugger;
            if ($("#AType").val() == null || $("#AType").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Type is required..');
                return;
            }
            if ($("#CommonRemark").val() == null || $("#CommonRemark").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Remark is required..');
                return;
            }
            var AlertRefType = [];
            debugger;
            $('#ALerttbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');
                if ($(this).find(".chkfvalue").prop("checked") == true || $(this).find(".chkfvalueStop").prop("checked")) {
                    var myDets =
                    {
                        Code: tds.eq(1).text(),
                        select: $(this).find(".chkfvalue").prop("checked"),
                        stop: $(this).find(".chkfvalueStop").prop("checked"),
                    }
                    AlertRefType.push(myDets);
                }
            });
            var url = '/Logistics/AlertNote/SaveDataGetList';
            var ModelData = {};
            ModelData["AType"] = $("#AType").val();
            ModelData["TypeCode"] = $("#TypeCode").val();
            ModelData["RefersType"] = AlertRefType;
            ModelData["Remark"] = $("#CommonRemark").val();
            ModelData["Bling"] = $("#Bling").is(":checked");
            ModelData["PartyNarr"] = $("#PartyNarr").is(":checked");
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message);
                    } else
                    {
                        var LoadDownLoadFiles = $("#AlertAlertNoteDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                    }
                },
            });
        });
        $('#PickData').click(function (event) {
            event.preventDefault();

            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Account.');
                return;
            }

            var ModelData = {};

            ModelData["Account"] = $("#Account").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["LocationCode"] = $("#LocationCode").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Mode"] = $("#hdnMode").val();

            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $('#SaveData').click(function (event) {
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($('#hdnLRGenerate').val() == "M")
            {
                if ($("#Srl").val() == '') {
                    alert('Enter Document Number.');
                    return;
                }
            }
            if ($("#Account").val() == '')
            {
               alert('Select Party.');
                return;
            }
            if (tab2size == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Lr in List.');
                return;
            }
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected ="";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }

                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                AddonSerial.push(myDets);
            });
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    Fld: tds.eq(4).text(),
                    AddLess: tds.eq(1).text(),
                    ChgPostCode: tds.eq(3).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                }
                ChargeList.push(myDets);
            });
            debugger;
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                var ModelData = {};
                ModelData["Account"] = $("#Account").val();
                ModelData["Customer"] = $("#Customer").val();
                ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                ModelData["Srl"] = $("#Srl").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["Mode"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                ModelData["Branch"] = $('#hdnBranch').val();
                ModelData["ChequeNo"] = $('#ChequeNo').val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["BillNarr"] = $("#BillNarr").val();

                if ($('#addGSTNoItc').is(":checked")) {
                    ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                    ModelData["GSTCode"] = $("#addGSTCode").val();
                    ModelData["CGSTAmt"] = $('#txttotcgst').val();
                    ModelData["SGSTAmt"] = $('#txttotsgst').val();
                    ModelData["IGSTAmt"] = $('#txttotigst').val();
                    ModelData["CGSTRate"] = $('#addCGSTRate').val();
                    ModelData["IGSTRate"] = $('#addIGSTRate').val();
                    ModelData["SGSTRate"] = $('#addSGSTRate').val();
                }
                if ($('#addTDSFlag').is(":checked"))
                {
                    ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                    ModelData["TDSCode"] = $("#addTDSCode").val();
                    ModelData["TDSRate"] = $("#addTDSRate").val();
                    ModelData["TDSAmt"] = $('#TDSAmt').val();
                }
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == "ErrorValid") {
                            alert(data.Message);
                            $('.spinner').hide();
                        }
                        else
                        {
                            debugger;
                            if ($("#hdnShowLedgerPost").val() == "True" || $("#hdnShowLedgerPost").val() == "true") {
                                $('.spinner').hide();
                                $('#ledpostmodel').modal('show');
                                $('#ledpostingmodel').html(data.Html);
                                $('#controllername').val(data.Controller);
                            }
                            else
                            {
                                $('#ledpostingmodel').html(data.Html);
                                $('#controllername').val(data.Controller);

                                $('#LedgerPostgrid tfoot').find('tr').each(function () {
                                var $tds = $(this).find('td');
                                tdeb += parseFloat($tds.eq(3).text());
                                tcred += parseFloat($tds.eq(4).text());
                                });
                                if (tdeb != tcred) {
                                    alert('Credit and Debit doesnt Match cant Save')
                                    return;
                                }
                                else
                                {
                                    var tab2size = $('#tabledata2 tbody tr').length;
                                    if ($("#Account").val() == '') {
                                        alert('Select Party.');
                                        return;
                                    }
                                    if (tab2size == 0) {
                                        alert('Add Product.');
                                        return;
                                    }
                                    var ChargeList = [];
                                    var AddonSerial = [];

                                    $('#addongrid').find('tr[id="datacharge"]').each(function () {
                                        var $tds = $(this).find('td');
                                        var applselected = "";
                                        var selected = "";
                                        if ($tds.eq(4).text() == "X") {
                                            $tds.find(".addontxtfvalue input:checked").each(function () {
                                                selected = selected + $(this).val() + "^";
                                            })
                                            applselected = selected;
                                        }
                                        var myDets = {
                                            Fld: $tds.eq(0).text(),
                                            ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                                            FldType: $tds.eq(4).text(),
                                        }
                                        AddonSerial.push(myDets);
                                    });

                                    $('#sample-table-1 tbody tr').each(function () {
                                        var tds = $(this).find('td');
                                        var myDets = {
                                            Fld: tds.eq(4).text(),
                                            AddLess: tds.eq(1).text(),
                                            ChgPostCode: tds.eq(3).text(),
                                            Amt: tds.find("input[class='txtfvalue']").val(),
                                        }
                                        ChargeList.push(myDets);
                                    });
                                    if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                                        $('#fixedbottom :input').prop("disabled", true);
                                        $('#frmpurchase :input').prop("disabled", true);
                                        $('.form-horizontal :input').prop("disabled", true);
                                        $('#ItemListTable :input').prop('disabled', true);

                                        var myLederArray = [];
                                        $('#LedgerPostgrid tbody').find('tr').each(function () {
                                            var tds = $(this).find('td');

                                            var myDets = {
                                                tempId: tds.eq(0).text(),
                                                Code: tds.eq(1).text(),
                                                Debit: tds.eq(3).text(),
                                                Credit: tds.eq(4).text(),
                                                TDSFlag: tds.eq(6).text(),
                                                DelyCode: tds.eq(8).text()
                                            }
                                            myLederArray.push(myDets);
                                        });
                                        var mAuthorise = $('#hdnAuthorise').val();


                                        var url = '@Url.Action("SaveData")';
                                        var ModelData = {};
                                        ModelData["LedgerPostList"] = myLederArray;
                                        ModelData["DocuDate"] = $("#DocuDate").val();
                                        ModelData["CrPeriod"] = $("#CrPeriod").val();
                                        ModelData["Account"] = $("#Account").val();
                                        ModelData["Customer"] = $("#Customer").val();
                                        ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                                        ModelData["GSTType"] = $("#GSTType").val();
                                        ModelData["AltAddress"] = $("#AltAddress").val();
                                        ModelData["MainType"] = $("#hdnMType").val();
                                        ModelData["SubType"] = $("#hdnSType").val();
                                        ModelData["Type"] = $("#hdnType").val();
                                        ModelData["Charges"] = ChargeList;
                                        ModelData["Mode"] = $('#hdnMode').val();
                                        ModelData["TableName"] = $('#hdnTableName').val();
                                        ModelData["ParentKey"] = $("#hdnParentKey").val();
                                        ModelData["Srl"] = $("#Srl").val();
                                        ModelData["Prefix"] = $("#hdnPrefix").val();
                                        ModelData["Amt"] = $("#txtinvamt").val();
                                        ModelData["AddOnList"] = AddonSerial;
                                        ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                                        ModelData["Authorise"] = mAuthorise;
                                        ModelData["AuthLock"] = $('#hdnAuthLock').val();
                                        ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                                        ModelData["AuthReq"] = $('#hdnAuthReq').val();
                                        ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                                        ModelData["IsManual"] = $('#hdnIsManual').val();
                                        ModelData["CrLimit"] = $('#CrLimit').text();//Label
                                        ModelData["Header"] = $('#Header').val();
                                        ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                                        ModelData["TDSCode"] = $('#TDSCode').val();
                                        ModelData["BillNarr"] = $("#BillNarr").val();
                                        ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                                        ModelData["AccountName"] = $('#Account').select2('data').text;
                                        ModelData["ChequeNo"] = $('#ChequeNo').val();

                                        ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();
                                        ModelData["AccParentGrp"] = $('#AccParentGrp').val();
                                        ModelData["LRGenerate"] = $('#hdnLRGenerate').val();
                                        ModelData["Branch"] = $('#hdnBranch').val();
                                        ModelData["Taxable"] = $('#txttottxable').val();

                                        if ($('#addGSTNoItc').is(":checked")) {
                                            ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                                            ModelData["GSTCode"] = $("#addGSTCode").val();
                                            ModelData["CGSTAmt"] = $('#txttotcgst').val();
                                            ModelData["SGSTAmt"] = $('#txttotsgst').val();
                                            ModelData["IGSTAmt"] = $('#txttotigst').val();
                                            ModelData["CGSTRate"] = $('#addCGSTRate').val();
                                            ModelData["IGSTRate"] = $('#addIGSTRate').val();
                                            ModelData["SGSTRate"] = $('#addSGSTRate').val();
                                        }
                                        if ($('#addTDSFlag').is(":checked")) {
                                            ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                                            ModelData["TDSCode"] = $("#addTDSCode").val();
                                            ModelData["TDSRate"] = $("#addTDSRate").val();
                                            ModelData["TDSAmt"] = $('#TDSAmt').val();
                                        }
                                        var DTO = { Model: ModelData };
                                        $.ajax({
                                            type: "POST",
                                            dataType: "json",
                                            data: JSON.stringify(DTO),
                                            cache: false,
                                            url: url,
                                            contentType: "application/json; charset=utf-8",
                                            beforeSend: function () {
                                                $('.spinner').show();
                                            },
                                            success: function (data) {
                                                $('.spinner').hide();
                                                if (data.Status == 'AutoDocumentAlert') {
                                                    FreightBillAlertNoteMaster(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                }
                                                else if (data.Status == 'CancelError') {
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    alert(data.Message);
                                                }
                                                else if (data.Status == 'PrimaryKeyError') {
                                                    alert(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                }
                                                else if (data.Status == 'Success')
                                                {
                                                    alert("Document Saved as " + data.NewSrl.substring(13) + "");
                                                    $('#hdnEditDocument').val(data.NewSrl);
                                                    if (PrintLR == "SavePrint") {
                                                        $('.spinner').hide();
                                                        $('#printpostmodel').modal('show');
                                                    }
                                                    else
                                                    {
                                                        if ($('#hdnMode').val() != "Add") {
                                                            window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2";
                                                        }
                                                        else {
                                                            window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                                                        }
                                                    }
                                                }
                                                else if (data.Status == 'Error')
                                                {
                                                    alert(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    $("#ErrorMessage").show();
                                                    $("#ErrorMessage").text(data.Message);
                                                }
                                                else {
                                                    alert('Status not Success')
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    $("#ErrorMessage").show();
                                                    $("#ErrorMessage").html(data.html);
                                                }
                                            },
                                            error: function (ex) {
                                                alert(JSON.stringify(ex))
                                                alert("Error occured while processing your request.");
                                                $('#fixedbottom :input').prop("disabled", false);
                                                $('#frmpurchase :input').prop("disabled", false);
                                                $('.form-horizontal :input').prop("disabled", false);
                                                $('#ItemListTable :input').prop('disabled', false);
                                            }
                                        });
                                    }
                                }
                            }
                        }
                    },
                });
            }
            else
            {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["Customer"] = $("#Customer").val();
                ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Mode"] = $('#hdnMode').val();
                ModelData["ChequeNo"] = $('#ChequeNo').val();

                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();

                ModelData["AddOnList"] = AddonSerial;
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                 ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["LRGenerate"] = $('#hdnLRGenerate').val();
                ModelData["BillNarr"] = $('#BillNarr').val();
                ModelData["Branch"] = $('#hdnBranch').val();


                ModelData["Taxable"] = $("#txttottxable").val();

                if ($('#addGSTNoItc').is(":checked")) {

                    ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                    ModelData["GSTCode"] = $("#addGSTCode").val();
                    ModelData["CGSTAmt"] = $('#txttotcgst').val();
                    ModelData["SGSTAmt"] = $('#txttotsgst').val();
                    ModelData["IGSTAmt"] = $('#txttotigst').val();
                    ModelData["CGSTRate"] = $('#addCGSTRate').val();
                    ModelData["IGSTRate"] = $('#addIGSTRate').val();
                    ModelData["SGSTRate"] = $('#addSGSTRate').val();
                }
                if ($('#addTDSFlag').is(":checked")) {
                    ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                    ModelData["TDSCode"] = $("#addTDSCode").val();
                    ModelData["TDSRate"] = $("#addTDSRate").val();
                    ModelData["TDSAmt"] = $('#TDSAmt').val();
                }


                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            if ($('#hdnMode').val() != "Add") {
                                window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                            }
                            else {
                                window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                            }

                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                    error: function (ex) {
                        alert(JSON.stringify(ex))
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });
        $('#btnPrintOnly').click(function (event) {
            event.preventDefault();
            PrintLR = "OnlyPrint";
            $('#printpostmodel').modal('show');
        });
        $('#Print').click(function (event) {
            PrintLR = "SavePrint";
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($('#hdnLRGenerate').val() == "M")
            {
                if ($("#Srl").val() == '') {
                    alert('Enter Document Number.');
                    return;
                }
            }
            if ($("#Account").val() == '')
            {
               alert('Select Party.');
                return;
            }
            if (tab2size == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Lr in List.');
                return;
            }
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected ="";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }

                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                AddonSerial.push(myDets);
            });
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    Fld: tds.eq(4).text(),
                    AddLess: tds.eq(1).text(),
                    ChgPostCode: tds.eq(3).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                }
                ChargeList.push(myDets);
            });
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                var ModelData = {};
                ModelData["Account"] = $("#Account").val();
                ModelData["Customer"] = $("#Customer").val();
                ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                ModelData["Srl"] = $("#Srl").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["Mode"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                ModelData["Branch"] = $('#hdnBranch').val();
                ModelData["ChequeNo"] = $('#ChequeNo').val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["BillNarr"] = $("#BillNarr").val();
                if ($('#addGSTNoItc').is(":checked")) {
                    ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                    ModelData["GSTCode"] = $("#addGSTCode").val();
                    ModelData["CGSTAmt"] = $('#txttotcgst').val();
                    ModelData["SGSTAmt"] = $('#txttotsgst').val();
                    ModelData["IGSTAmt"] = $('#txttotigst').val();
                    ModelData["CGSTRate"] = $('#addCGSTRate').val();
                    ModelData["IGSTRate"] = $('#addIGSTRate').val();
                    ModelData["SGSTRate"] = $('#addSGSTRate').val();
                }
                if ($('#addTDSFlag').is(":checked"))
                {
                    ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                    ModelData["TDSCode"] = $("#addTDSCode").val();
                    ModelData["TDSRate"] = $("#addTDSRate").val();
                    ModelData["TDSAmt"] = $('#TDSAmt').val();
                }
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == "ErrorValid") {
                            alert(data.Message);
                            $('.spinner').hide();
                        }
                        else
                        {
                            if ($("#hdnShowLedgerPost").val() == "True" || $("#hdnShowLedgerPost").val() == "true") {
                                $('.spinner').hide();
                                $('#ledpostmodel').modal('show');
                                $('#ledpostingmodel').html(data.Html);
                                $('#controllername').val(data.Controller);
                            }
                            else
                            {
                                $('#ledpostingmodel').html(data.Html);
                                $('#controllername').val(data.Controller);

                                $('#LedgerPostgrid tfoot').find('tr').each(function () {
                                var $tds = $(this).find('td');
                                tdeb += parseFloat($tds.eq(3).text());
                                tcred += parseFloat($tds.eq(4).text());
                                });
                                if (tdeb != tcred) {
                                    alert('Credit and Debit doesnt Match cant Save')
                                    return;
                                }
                                else
                                {
                                    var tab2size = $('#tabledata2 tbody tr').length;
                                    if ($("#Account").val() == '') {
                                        alert('Select Party.');
                                        return;
                                    }
                                    if (tab2size == 0) {
                                        alert('Add Product.');
                                        return;
                                    }
                                    var ChargeList = [];
                                    var AddonSerial = [];

                                    $('#addongrid').find('tr[id="datacharge"]').each(function () {
                                        var $tds = $(this).find('td');
                                        var applselected = "";
                                        var selected = "";
                                        if ($tds.eq(4).text() == "X") {
                                            $tds.find(".addontxtfvalue input:checked").each(function () {
                                                selected = selected + $(this).val() + "^";
                                            })
                                            applselected = selected;
                                        }
                                        var myDets = {
                                            Fld: $tds.eq(0).text(),
                                            ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                                            FldType: $tds.eq(4).text(),
                                        }
                                        AddonSerial.push(myDets);
                                    });

                                    $('#sample-table-1 tbody tr').each(function () {
                                        var tds = $(this).find('td');
                                        var myDets = {
                                            Fld: tds.eq(4).text(),
                                            AddLess: tds.eq(1).text(),
                                            ChgPostCode: tds.eq(3).text(),
                                            Amt: tds.find("input[class='txtfvalue']").val(),
                                        }
                                        ChargeList.push(myDets);
                                    });
                                    if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                                        $('#fixedbottom :input').prop("disabled", true);
                                        $('#frmpurchase :input').prop("disabled", true);
                                        $('.form-horizontal :input').prop("disabled", true);
                                        $('#ItemListTable :input').prop('disabled', true);

                                        var myLederArray = [];
                                        $('#LedgerPostgrid tbody').find('tr').each(function () {
                                            var tds = $(this).find('td');

                                            var myDets = {
                                                tempId: tds.eq(0).text(),
                                                Code: tds.eq(1).text(),
                                                Debit: tds.eq(3).text(),
                                                Credit: tds.eq(4).text(),
                                                TDSFlag: tds.eq(6).text(),
                                                DelyCode: tds.eq(8).text()
                                            }
                                            myLederArray.push(myDets);
                                        });
                                        var mAuthorise = $('#hdnAuthorise').val();


                                        var url = '@Url.Action("SaveData")';
                                        var ModelData = {};
                                        ModelData["LedgerPostList"] = myLederArray;
                                        ModelData["DocuDate"] = $("#DocuDate").val();
                                        ModelData["CrPeriod"] = $("#CrPeriod").val();
                                        ModelData["Account"] = $("#Account").val();
                                        ModelData["Customer"] = $("#Customer").val();
                                        ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                                        ModelData["GSTType"] = $("#GSTType").val();
                                        ModelData["AltAddress"] = $("#AltAddress").val();
                                        ModelData["MainType"] = $("#hdnMType").val();
                                        ModelData["SubType"] = $("#hdnSType").val();
                                        ModelData["Type"] = $("#hdnType").val();
                                        ModelData["Charges"] = ChargeList;
                                        ModelData["Mode"] = $('#hdnMode').val();
                                        ModelData["TableName"] = $('#hdnTableName').val();
                                        ModelData["ParentKey"] = $("#hdnParentKey").val();
                                        ModelData["Srl"] = $("#Srl").val();
                                        ModelData["Prefix"] = $("#hdnPrefix").val();
                                        ModelData["Amt"] = $("#txtinvamt").val();
                                        ModelData["AddOnList"] = AddonSerial;
                                        ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                                        ModelData["Authorise"] = mAuthorise;
                                        ModelData["AuthLock"] = $('#hdnAuthLock').val();
                                        ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                                        ModelData["AuthReq"] = $('#hdnAuthReq').val();
                                        ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                                        ModelData["IsManual"] = $('#hdnIsManual').val();
                                        ModelData["CrLimit"] = $('#CrLimit').text();//Label
                                        ModelData["Header"] = $('#Header').val();
                                        ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                                        ModelData["TDSCode"] = $('#TDSCode').val();
                                        ModelData["BillNarr"] = $("#BillNarr").val();
                                        ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                                        ModelData["AccountName"] = $('#Account').select2('data').text;
                                        ModelData["ChequeNo"] = $('#ChequeNo').val();

                                        ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();
                                        ModelData["AccParentGrp"] = $('#AccParentGrp').val();
                                        ModelData["LRGenerate"] = $('#hdnLRGenerate').val();
                                        ModelData["Branch"] = $('#hdnBranch').val();
                                        ModelData["Taxable"] = $('#txttottxable').val();

                                        if ($('#addGSTNoItc').is(":checked")) {
                                            ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                                            ModelData["GSTCode"] = $("#addGSTCode").val();
                                            ModelData["CGSTAmt"] = $('#txttotcgst').val();
                                            ModelData["SGSTAmt"] = $('#txttotsgst').val();
                                            ModelData["IGSTAmt"] = $('#txttotigst').val();
                                            ModelData["CGSTRate"] = $('#addCGSTRate').val();
                                            ModelData["IGSTRate"] = $('#addIGSTRate').val();
                                            ModelData["SGSTRate"] = $('#addSGSTRate').val();
                                        }
                                        if ($('#addTDSFlag').is(":checked")) {
                                            ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                                            ModelData["TDSCode"] = $("#addTDSCode").val();
                                            ModelData["TDSRate"] = $("#addTDSRate").val();
                                            ModelData["TDSAmt"] = $('#TDSAmt').val();
                                        }
                                        var DTO = { Model: ModelData };
                                        $.ajax({
                                            type: "POST",
                                            dataType: "json",
                                            data: JSON.stringify(DTO),
                                            cache: false,
                                            url: url,
                                            contentType: "application/json; charset=utf-8",
                                            beforeSend: function () {
                                                $('.spinner').show();
                                            },
                                            success: function (data) {
                                                $('.spinner').hide();
                                                if (data.Status == 'AutoDocumentAlert') {
                                                    FreightBillAlertNoteMaster(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                }
                                                else if (data.Status == 'CancelError') {
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    alert(data.Message);
                                                }
                                                else if (data.Status == 'PrimaryKeyError') {
                                                    alert(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                }
                                                else if (data.Status == 'Success')
                                                {
                                                    alert("Document Saved as " + data.NewSrl.substring(13) + "");
                                                    $('#hdnEditDocument').val(data.NewSrl);
                                                    if (PrintLR == "SavePrint") {
                                                        $('.spinner').hide();
                                                        $('#printpostmodel').modal('show');
                                                    }
                                                    else
                                                    {
                                                        if ($('#hdnMode').val() != "Add") {
                                                            window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2";
                                                        }
                                                        else {
                                                            window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                                                        }
                                                    }
                                                }
                                                else if (data.Status == 'Error')
                                                {
                                                    alert(data.Message);
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    $("#ErrorMessage").show();
                                                    $("#ErrorMessage").text(data.Message);
                                                }
                                                else {
                                                    alert('Status not Success')
                                                    $('#fixedbottom :input').prop("disabled", false);
                                                    $('#frmpurchase :input').prop("disabled", false);
                                                    $('.form-horizontal :input').prop("disabled", false);
                                                    $('#ItemListTable :input').prop('disabled', false);
                                                    $("#ErrorMessage").show();
                                                    $("#ErrorMessage").html(data.html);
                                                }
                                            },
                                            error: function (ex) {
                                                alert(JSON.stringify(ex))
                                                alert("Error occured while processing your request.");
                                                $('#fixedbottom :input').prop("disabled", false);
                                                $('#frmpurchase :input').prop("disabled", false);
                                                $('.form-horizontal :input').prop("disabled", false);
                                                $('#ItemListTable :input').prop('disabled', false);
                                            }
                                        });
                                    }
                                }
                            }
                        }
                    },
                });
            }
            else
            {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["Customer"] = $("#Customer").val();
                ModelData["AccParentGrp"] = $("#AccParentGrp").val();
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Mode"] = $('#hdnMode').val();
                ModelData["ChequeNo"] = $('#ChequeNo').val();

                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();

                ModelData["AddOnList"] = AddonSerial;
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                 ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["LRGenerate"] = $('#hdnLRGenerate').val();
                ModelData["BillNarr"] = $('#BillNarr').val();
                ModelData["Branch"] = $('#hdnBranch').val();


                ModelData["Taxable"] = $("#txttottxable").val();

                if ($('#addGSTNoItc').is(":checked")) {

                    ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                    ModelData["GSTCode"] = $("#addGSTCode").val();
                    ModelData["CGSTAmt"] = $('#txttotcgst').val();
                    ModelData["SGSTAmt"] = $('#txttotsgst').val();
                    ModelData["IGSTAmt"] = $('#txttotigst').val();
                    ModelData["CGSTRate"] = $('#addCGSTRate').val();
                    ModelData["IGSTRate"] = $('#addIGSTRate').val();
                    ModelData["SGSTRate"] = $('#addSGSTRate').val();
                }
                if ($('#addTDSFlag').is(":checked")) {
                    ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                    ModelData["TDSCode"] = $("#addTDSCode").val();
                    ModelData["TDSRate"] = $("#addTDSRate").val();
                    ModelData["TDSAmt"] = $('#TDSAmt').val();
                }


                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            if ($('#hdnMode').val() != "Add") {
                                window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                            }
                            else {
                                window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                            }

                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                    error: function (ex) {
                        alert(JSON.stringify(ex))
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });
        $('#DeleteData').click(function (event) {
            event.preventDefault(event);
            var confrm = confirm('Are You Sure Do You Want To Delete');
            if (confrm == false) {
                $('.spinner').hide();
                return;
            }
            else {

                var ModelData = {};
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["Mode"] = $('#hdnMode').val();

                ModelData["Header"] = '@Model.Header';
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["Branch"] = $('#hdnBranch').val();
                ModelData["Account"] = $("#Account").val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("DeleteData")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        if (data.Status == 'Success') {
                            window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                        }
                        else {
                            alert(data.Message);
                        }
                    },
                    error: function (data) {
                        alert(data.Message);
                    }
                });
            }
        });

        $("#EditbtnAddOns").click(function (event) {
            event.preventDefault();
            $('#addonmodel').modal('show');
            $('#addongrid input[id=txtf_F001]').focus();
        });

        $("#btnAddDoc").click(function (event) {
            event.preventDefault();
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#hdnParentKey").val();
            ModelData["Type"] = "CMM00";
            ModelData["RefType"] = "@Model.Header";
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });

        $("#btnSendSMS").click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("SendPartywiseSMS")?msubtype=' + $('#hdnSType').val() + '&mParentKey=' + $('#hdnParentKey').val() + '&mCode=' + $('#Account').val() + '&mAltAdd=' + $("#AltAddress").val() + '&mAuto=' +'true'+ '&mBranch=' + '@Session["BranchCode"]';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (result) {
                    alert(result.Message)
                     $('.spinner').hide();
                },
                error: function () {
                    $('.spinner').hide();
                    alert("2-An error occurred while processing the request.");
                }
            });
        });


    });

    function FreightBillAlertNoteMaster(value) {
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        myTableArray.push(value);

        var DTO = { Type: "CMM00", TypeCode: myTableArray, DocTpe: "CMM00" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
                $("#StopActivityFromAlert").val(data.Stop);
            },
        });
    }
    function AlertNoteMasterSingle(value) {
        debugger;
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';

        var DTO = { Type: "LR000", TypeCode: value, DocTpe: "CMM00" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
                $("#StopActivityFromAlert").val(data.Stop);
            },
        });
    }
    function SetValuesInTable() {
            debugger;
            var ModelData = {};
            ModelData["Type"] = $("#hdnType").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
            ModelData["GSTType"] = $("#GSTType").val();
            ModelData["Taxable"] = $("#txttottxable").val();
            ModelData["CutTDS"] = $("#CutTDS").is(':checked');
            ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();

            if ($('#addGSTNoItc').is(":checked")) {

                ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                ModelData["GSTCode"] = $("#addGSTCode").val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["CGSTRate"] = $('#addCGSTRate').val();
                ModelData["IGSTRate"] = $('#addIGSTRate').val();
                ModelData["SGSTRate"] = $('#addSGSTRate').val();
            }
            if ($('#addTDSFlag').is(":checked")) {
                debugger;
                ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                ModelData["TDSCode"] = $("#addTDSCode").val();
                ModelData["TDSRate"] = $("#addTDSRate").val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
            }

            ModelData["DocuDate"] = $("#DocuDate").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetTotal")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('#txttotcgst,#addCGSTAmt').val(parseFloat(data.CGSTAmt).toFixed(2));
                    $('#txttotsgst,#addSGSTAmt').val(parseFloat(data.SGSTAmt).toFixed(2));
                    $('#txttotigst,#addIGSTAmt').val(parseFloat(data.IGSTAmt).toFixed(2));
                    if ($('#hdnIsRoundOff_').val() == "True") {
                        $('#txtinvamt').val(parseFloat(data.Total).toFixed(2));
                        var rou = (parseFloat(data.Total.toFixed(0))) - parseFloat(data.Total);
                        $('#txtRoundOffVal').val(rou.toFixed(2));

                    } else {
                        $('#txtinvamt').val(parseFloat(data.Total).toFixed(2));
                    }
                    $('#TDSAmt').val(parseFloat(data.TDSAmt).toFixed(2));
                    $('#addTDSAmt').val(parseFloat(data.TDSAmt).toFixed(2));
                    $('.spinner').hide();

                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        }



        function SetValuesInTableWithTDS()
        {
            var ModelData = {};
            ModelData["Type"] = $("#hdnType").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
            ModelData["GSTType"] = $("#GSTType").val();
            ModelData["Taxable"] = $("#txttottxable").val();
            ModelData["CutTDS"] = $("#CutTDS").is(':checked');
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();

            if ($('#addGSTNoItc').is(":checked")) {

                ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                ModelData["GSTCode"] = $("#addGSTCode").val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["CGSTRate"] = $('#addCGSTRate').val();
                ModelData["IGSTRate"] = $('#addIGSTRate').val();
                ModelData["SGSTRate"] = $('#addSGSTRate').val();
            }
            if ($('#addTDSFlag').is(":checked")) {
                ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                ModelData["TDSCode"] = $("#addTDSCode").val();
                ModelData["TDSRate"] = $("#addTDSRate").val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
            }


            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetTotal")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                    $('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                    $('#txttotigst').val(data.IGSTAmt.toFixed(2));
                    if ($('#hdnIsRoundOff').val() == "True") {
                        $('#txtinvamt').val(data.Total.toFixed(0));
                        var rou = (parseFloat(data.Total.toFixed(0))) - parseFloat(data.Total);
                        $('#txtRoundOffVal').val(rou.toFixed(2));

                    } else {
                        $('#txtinvamt').val(data.Total.toFixed(2));
                    }
                    $('#addTDSAmt').val(data.TDSAmt.toFixed(2));
                    $('#TDSAmt').val(data.TDSAmt.toFixed(2));
                    $('.spinner').hide();

                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        }
    function loadGstType() {
        var url = '@Url.Action("GetGSTType")'
        $('#GSTType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Text,
                                id: item.Value
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.GSTType', text: '@Model.GstTypeName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function NextEntry(mmode)
    {
        var url = '@Url.Action("MoveNextPrevious")?Mode=' + mmode + '&mdocument=' + $("#hdnParentKey").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.data != '') {
                    window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Document=" + result.data + "&Type=@Model.Type&ChangeLog=Edit&Mode=Edit&ViewDataId=@Model.ViewDataId&Header=@Model.Header&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.optiontype&OptionCode=@Model.OptionCode&Controller2=@Model.Controller2";
                }
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }


</script>



<script>
            $(document).ready(function () {
                LoadPlaceOfSupply()

                //$('#PlaceOfSupply').change(function (event) {
                //    event.preventDefault();
                //    CurrRateChange();
                //    GetGSTCalculation()
                //    Calculation()
                //});
            });
      function LoadPlaceOfSupply() {
           var url = '@Url.Action("GetPlaceOfSupply")';
            $('#PlaceOfSupply').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax:
                    {
                        url: url,
                        dataType: 'json',
                        quietMillis: 100,
                        enableFiltering: true,
                        allowClear: true,
                        minimumInputLength: 0,
                        multiple: true,
                        width: 300,
                        data: function (term, page) {
                            return {
                                types: ["exercise"],
                                limit: -1,
                                term: term
                            };
                        },
                        results: function (data, page) {
                            clientObj = JSON.stringify(data);
                            return {
                                results: $.map(data, function (item) {
                                    return {
                                        text: item.Name, id: item.Code
                                    }
                                })
                            };
                        }
                    },
                initSelection: function (element, callback) {
                    var data = { id: '@Model.PlaceOfSupply', text: '@Model.PlaceOfSupply' };
                    callback(data);
                },
                formatResult: function (exercise) {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                        "</div></span></div></div>";
                },
                formatSelection: function (exercise) {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                        "</div></span></div></div>";
                },
            })
        }
</script>


@if (Model.Mode != "Add")
{
    <script>
        $(document).ready(function () {
        });
    </script>
}

<script>
    $(document).ready(function () {
        loadParty();
        loadCustomer();
        loadCustomerParent();

        $('#Account').change(function () {
            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Code"] = $("#Account").val();
            ModelData["Type"] = $("#hdnType").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPartyDetails")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforesend: function () {
                    $('.spinner').show();
                },
                success: function (result) {
                    $('#CrPeriod').val(result.CrPeriod);
                    $('#PlaceOfSupply').select2('data', { id: result.PlaceOfSupply, text: result.PlaceOfSupply });
                    $('#CPerson').val(result.CPerson);
                    if (result.GstFlag == true) {
                        $("#addGSTNoItc").prop("checked", true);
                    } else {
                        $("#addGSTNoItc").prop("checked", false);
                    }
                    if (result.GSTCode == "0") {
                        $('#addGSTCode').select2('data', { id: '', text: '' });
                        $('#addIGSTRate,#addCGSTRate,#addSGSTRate').val("0");

                    }
                    else {
                        $('#addGSTCode').select2('data', { id: result.GSTCode, text: result.GSTName });
                        $('#addIGSTRate').val(result.IGST);
                        $('#addCGSTRate').val(result.CGST);
                        $('#addSGSTRate').val(result.SGST);
                    }
                    if (result.CutTDS == true /*&& ($('#hdnLRCutTDS').val() == "true" || $('#hdnLRCutTDS').val() == "True")*/) {
                        $("#addTDSFlag").prop("checked", true);
                    }
                    else {
                        $('#addTDSFlag').prop('checked', false);
                    }
                    if (result.TDSCode == "0") {
                        $('#addTDSCode').select2('data', { id: '', text: '' });
                        $('#addTDSRate').val("0");

                    }
                    else {
                        $('#addTDSCode').select2('data', { id: result.TDSCode, text: result.TDSCodeName });
                        $('#addTDSRate').val(result.TDSRate);
                    }

                    $('#Balance').html(result.Balance);
                    $('#Tickler').text(result.Tickler);
                    GetCrLimit()
                    if (result.AlertHoldInvoice == true) {
                        alert(result.HoldNarr)
                        $('#fixedbottom :input').prop("disabled", true);
                        return;
                    }
                    else {
                        $('#fixedbottom :input').prop("disabled", false);
                    }


                    $('.spinner').hide();
                },

                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        });
        $('#Customer').change(function () {
            var ModelData = {};
            ModelData["Customer"] = $("#Customer").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetCustomerParentDetails")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforesend: function () {
                    $('.spinner').show();
                },
                success: function (result) {
                    $('#AccParentGrp').select2('data', { id: result.AccParentGrp, text: result.AccParentGrpName });
                    $('.spinner').hide();
                },

                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        });
    });

    function loadParty() {
        var url = '@Url.Action("GetPartyList")';
        $('#Account').select2({
            minimumInputLength: @Session["MinAcc"],
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: @Session["MinAcc"],
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Account', text: '@Model.AccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadCustomer() {
        var url = '@Url.Action("GetCustomerList")';
        $('#Customer').select2({
            minimumInputLength: @Session["MinAcc"],
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: @Session["MinAcc"],
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Customer', text: '@Model.CustomerName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadCustomerParent() {
        var url = '@Url.Action("GetDebtorsList")';
        $('#AccParentGrp').select2({
            minimumInputLength: @Session["MinAcc"],
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: @Session["MinAcc"],
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.AccParentGrp', text: '@Model.AccParentGrpName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };



    function GetAddressByAltAddress() {
        var url = '@Url.Action("GetAddressBySno")?Code=' + $("#Account").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#AddressFrom').text(result);
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function GetCrLimit() {
        var url = '@Url.Action("GetCreditLimit")?Party=' + $("#Account").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#CrLimit').html(result.CrLimit);
                $('#CrPeriod').html(result.CrPeriod);
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }


</script>


@*Suchan Attachment*@
<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>

<!--Only Alert Note Modal -->
<div class="example-modal">
    <div id="AlertNoteModal" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="OnlyAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Alert/Note Modal -->
<div class="example-modal">
    <div id="addnotemodel" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="AlertAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                        <div class="form-group hidden" id="AddAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button class="btn btn-success" type="button" id="btnAddNarr">Add Narration</button>
                        <button class="btn btn-info hidden" type="button" id="btnNarrList">Show List</button>
                        <button class="btn btn-success hidden" type="button" id="btnNarrSave">Save</button>
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Consignment Multi Document Modal -->
<div class="example-modal">
    <div id="ConsignmentModels" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div id="consignmentmodels">
            </div>
        </div>
    </div>
</div>



@Html.HiddenFor(x => x.ProductAddOn, new
{
    @id = "hdnProductAddOn"
})
@Html.HiddenFor(x => x.ViewDataId, new
{
    @id = "hdnViewDataId"
})
@Html.HiddenFor(x => x.Controller2, new
{
    @id = "Controller2"
})
@Html.HiddenFor(x => x.Header, new
{
    @id = "Header"
})
@Html.HiddenFor(x => x.OptionCode, new
{
    @id = "OptionCode"
})
@Html.HiddenFor(x => x.optiontype, new
{
    @id = "optiontype"
})
@Html.HiddenFor(x => x.TableName, new
{
    @id = "TableName"
})
@Html.HiddenFor(x => x.Module, new
{
    @id = "Module"
})
@Html.HiddenFor(x => x.hdnAddonSaved, new
{
    @Id = "hdnAddonSaved"
})
@Html.HiddenFor(x => x.IsRoundOff, new
{
    @Id = "hdnIsRoundOff"
})
@Html.HiddenFor(x => x.CheckMode, new
{
    @id = "hdnCheckMode"
})

@Html.HiddenFor(x => x.Authorise, new
{
    @Id = "hdnAuthorise"
})
@Html.HiddenFor(x => x.AuthLock, new
{
    @Id = "hdnAuthLock"
})
@Html.HiddenFor(x => x.AuthNoPrint, new
{
    @Id = "hdnAuthNoPrint"
})
@Html.HiddenFor(x => x.AuthReq, new
{
    @Id = "hdnAuthReq"
})
@Html.HiddenFor(x => x.AuthAgain, new
{
    @Id = "hdnAuthAgain"
})
@Html.HiddenFor(x => x.IsManual, new
{
    @Id = "hdnIsManual"
})
@Html.HiddenFor(x => x.Mode, new
      {
          @id = "hdnMode"
      })

@Html.HiddenFor(x => x.EnableParty, new
{
    @Id = "hdnEnableParty"
})
@Html.HiddenFor(x => x.Store, new
{
    @Id = "hdnStore"
})
@Html.HiddenFor(x => x.MainType, new
  {
      @id = "hdnMType"
  })
@Html.HiddenFor(x => x.SubType, new
{
@id = "hdnSType"
})
@Html.HiddenFor(x => x.Type, new
{
@id = "hdnType"
})
@Html.HiddenFor(x => x.Prefix, new
{
@id = "hdnPrefix"
})

@Html.HiddenFor(x => x.Branch, new { @Id = "hdnBranch" })
@Html.HiddenFor(x => x.PrevInvAmt, new { @Id = "PrevInvAmt" })
@Html.HiddenFor(x => x.VATGSTApp, new { @Id = "hdnVATGSTApp" })
@Html.HiddenFor(x => x.ForceChln, new { @Id = "hdnForceChln" })
@Html.HiddenFor(x => x.SaveAsDraft, new { @Id = "hdnSaveAsDraft" })
@Html.HiddenFor(x => x.Document, new { @id = "hdnEditDocument" })
@Html.HiddenFor(x => x.ParentKey, new { @id = "hdnParentKey" })
@Html.HiddenFor(x => x.IsDraftSave, new { @id = "hdnIsDraftSave" })
@Html.HiddenFor(x => x.IsPickUp, new { @id = "IsPickUp" })
@Html.HiddenFor(x => x.TableName, new { @id = "hdnTableName" })
@Html.HiddenFor(x => x.IsPrint, new { @id = "hdnIsPrint" })
@Html.HiddenFor(x => x.ForceOrderS, new { @id = "hdnForceOrderS" })
@Html.HiddenFor(x => x.IsGstDocType, new { @id = "IsGstDocType" })
@Html.HiddenFor(x => x.ShowLedgerPost, new { @id = "hdnShowLedgerPost" })
@Html.HiddenFor(x => x.Account, new { @id = "hdnAccountId" })
@Html.HiddenFor(x => x.AccountName, new { @id = "hdnAccountName" })
@Html.HiddenFor(x => x.LRCutTDS, new { @id = "hdnLRCutTDS" })
@Html.HiddenFor(x => x.LRReqd, new { @id = "hdnLRReqd" })
@Html.HiddenFor(x => x.LRGenerate, new { @id = "hdnLRGenerate" })
<input type="hidden" id="StopActivityFromAlert" />
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })
