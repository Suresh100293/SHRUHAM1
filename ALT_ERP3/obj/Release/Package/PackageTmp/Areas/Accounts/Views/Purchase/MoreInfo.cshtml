@model ALT_ERP3.PurchaseVM
@using Common;

    <div class="form-horizontal" role="form" style="padding-right:0px;">
        <header class="panel-heading" style="margin-left:0px; background-color:lightgray;color:black;height:22px;padding-top:1px;border-radius:0px;border-radius:0px;">
            SalesMan Details
        </header>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Salesman:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.SalesmanCode, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @style = "width:100%;margin-bottom:2px;",
               @id = "SalesmanCode",
               @Name = "SalesmanCode"
           })
            </div>
            <label class="col-sm-1 control-label">Commission on:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.SCommOn, new
           {
               @style = "text-align:right;width:80%;",
               @class = "form-control",
               @id = "SCommOn",
               @Name = "SCommOn"
           })
            </div>
            <label class="col-sm-1 control-label">Commission%:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.SCommission, new
           {
               @style = "text-align:right;width:50%;",
               @class = "form-control",
               @id = "SCommission",
               @Name = "SCommission"
           })
            </div>
            <label class="col-sm-1 control-label">Amount:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.TextBoxFor(x => x.SAmt, new
           {
               @style = "text-align:right;width:70%;",
               @class = "form-control",
               @id = "SAmt",
               @Name = "SAmt"
           })
            </div>
        </div>
        <header class="panel-heading" style="margin-left:0px; background-color:lightgray;color:black;height:22px;padding-top:1px;border-radius:0px;border-radius:0px;">
            Broker Details
        </header>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Broker:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.BrokerName, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @style = "width:100%;margin-bottom:2px;",
               @id = "BrokerName",
               @Name = "BrokerName"
           })
            </div>
            <label class="col-lg-1 control-label">Commission on:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.BrokerOn, new
           {

                    @style = "text-align:right;width:80%;",
               @class = "form-control",
               @id = "BrokerOn",
               @Name = "BrokerOn"
           })
            </div>
            <label class="col-lg-1 control-label">Commission%:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.Brokerage, new
           {

                    @style = "text-align:right;width:50%",
               @class = "form-control",
               @id = "Brokerage",
               @Name = "Brokerage"
           })
            </div>
            <label class="col-lg-1 control-label">Amount:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.TextBoxFor(x => x.BrokerAmt, new
           {

                    @style = "text-align:right;width:70%;",
               @class = "form-control",
               @id = "BrokerAmt",
               @Name = "BrokerAmt"
           })
            </div>
        </div>
        <header class="panel-heading" style="margin-left:0px; background-color:lightgray;color:black;height:22px;padding-top:1px;border-radius:0px;border-radius:0px;">
            Transporter Details
        </header>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Transporter:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.TransporterN, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @style = "width:100%;",
               @id = "TransporterN",
               @Value = Model.TransporterN
           })
            </div>
            <label class="col-sm-1 control-label">Packages:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.NoPkg, new
                {
                    @class = "form-control",
                    @style = "width:80%;",
               @id = "NoPkg",
               @Name = "NoPkg",
               @Value = Model.NoPkg
           })
            </div>
            <label class="col-sm-1 control-label">Freight:</label>
            <div class="col-sm-2">
                <select class="form-control" id="FreightType">
                    <option value="1">To Pay</option>
                    <option value="2">Paid-Borne by US</option>
                    <option value="3">Paid-Borne by Party</option>
                    <option value="4">To be Build Out A/C</option>
                    <option value="5">To be Build Out Customer A/C</option>
                </select>
            </div>
            <label class="col-sm-1 control-label">Weight:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.TextBoxFor(x => x.TrxWeight, new { @style = "text-align:right;width:70%;", @class = "form-control", @id = "TrxWeight", @name = "TrxWeight", @value = Model.TrxWeight })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-1 control-label" style="padding-left:25px;">LR/Note No:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.NoteNo, new
           {
               @class = "form-control",
               @id = "NoteNo",
               @Name = "NoteNo",
               @Value = Model.NoteNo
           })
            </div>
            <label class="col-sm-1 control-label">Date:</label>
            <div class="col-sm-2">
                <div class="input-group">
                    @Html.TextBoxFor(x => x.NotuDate, new
               {
                   @type = "text",
                   @class = "form-control",
                   @id = "NotuDate",
                   @Name = "NotuDate",
                   @style = "width:90%;",
                   @Value = Model.NoteDate.ToString("dd-MM-yyyy")
               })
                </div>
            </div>
            <label class="col-sm-1 control-label">Vehicle No:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.VehicleNo, new
           {
               @class = "form-control",
               @id = "VehicleNo",
               @Name = "VehicleNo",
               @Value = Model.VehicleNo
           })
            </div>
            <label class="col-sm-1 control-label">Delivery:</label>
            <div class="col-sm-2" style="width:200px;">
                <select class="form-control" id="DeliveryType" style="width:90%;">
                    <option value="0">Select</option>
                    <option value="1">Door Delivery</option>
                    <option value="2">Godown Delivery</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Remark:</label>
            <div class="col-sm-2">
                @Html.TextAreaFor(x => x.Remark, new
           {
               @class = "form-control",
               @id = "Remark",
               @Name = "Remark",
               @style = "height:25px;",
               @Value = Model.Remark
           })
            </div>
            <label class="col-sm-1 control-label">Contact Person:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.ContactPerson, new
           {
               @class = "form-control",
               @id = "ContactPerson",
               @Name = "ContactPerson",
               @Value = Model.ContactPerson
           })
            </div>
            <label class="col-sm-1 control-label">Mode:</label>
            <div class="col-sm-2">

                <select class="form-control" id="TransMode">
                    <option value="Select">-- Select --</option>
                    <option value="Road">Road</option>
                    <option value="Rail">Rail</option>
                    <option value="Air">Air</option>
                    <option value="Sea">Sea</option>
                    <option value="Courier">Courier</option>
                </select>
            </div>
            <label class="col-sm-1 control-label">Type:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.DropDownListFor(x => x.TransportType, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @id = "TransportType",
               @Name = "TransportType",
               @Style = "width:90%;height:26px;",
           })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Eway Bill No:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.EwBillNo, new
           {
               @class = "form-control",
               @id = "EwBillNo",
               @Name = "EwBillNo",
               @Style = "width:100%;height:26px;",
               @Value = Model.EwBillNo
           })
            </div>

            <label class="col-sm-1 control-label">Eway Bill Date:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.StrEWBDate, new
           {
               @class = "form-control",
               @id = "StrEWBDate",
               @Name = "StrEWBDate",
               @Style = "width:80%;height:26px;",
               @Value = Model.EWBDate.ToString("dd-MM-yyyy")

           })
            </div>
        </div>
        <header class="panel-heading" style="margin-left:0px; background-color:lightgray;color:black;height:22px;padding-top:1px;border-radius:0px;">
            Links
        </header>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Work Order:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.WONumber, new
           {
               @class = "form-control",
               @id = "WONumber",
               @Name = "WONumber",
               @Style = "width:100%;height:26px;",
               @Value = Model.WONumber
           })
            </div>
            <label class="col-sm-1 control-label">Bill Reference:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.Reference, new
           {
               @class = "form-control",
               @id = "Reference",
               @Name = "Reference",
               @Style = "width:100%;height:26px;",
               @Value = Model.Reference
           })
            </div>
            <label class="col-sm-1 control-label">LC Number:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.LCNo, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "LCNo", @Name = "LCNo", @Style = "width:100%;height:26px;", })
            </div>
            <label class="col-sm-1 control-label">Adv License:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.DropDownListFor(x => x.AdvLicence, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "AdvLicence", @Name = "AdvLicence", @Style = "width:90%;height:26px;", })
            </div>
        </div>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Inco Terms:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.IncoTerms, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @id = "IncoTerms",
               @Name = "IncoTerms",
               @Style = "width:100%;height:26px;",
              @Value = Model.IncoTerms
           })
            </div>
            <label class="col-sm-1 control-label">Inco Place:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.IncoPlace, new
           {
               @class = "form-control",
               @id = "IncoPlace",
               @Name = "IncoPlace",
               @Style = "width:100%;height:26px;",
              @Value = Model.IncoPlace
           })
            </div>
            <label class="col-sm-1 control-label">Payment Terms:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.PayTerms, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @id = "PayTerms",
               @Name = "PayTerms",
               @Style = "width:100%;height:26px;",
           })
            </div>
            <label class="col-sm-1 control-label">Insurance No:</label>
            <div class="col-sm-2" style="width:200px;">
                @Html.DropDownListFor(x => x.InsuranceNo, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @id = "InsuranceNo",
               @Name = "InsuranceNo",
               @Style = "width:90%;height:26px;",
           })
            </div>
        </div>
        <div class="form-group" style="margin-top:5px;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Project:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(x => x.ProjCode,DropdownHelper.EmptyList(), new { @class = "form-control", @id = "ProjCode", @Name = "ProjCode", @style = "width:100%;" })
            </div>
        </div>
        <div class="form-group" style="width:100%;">
            <label class="col-sm-1 control-label" style="padding-left:25px;">Narration:</label>
            <div class="col-sm-11">
                @Html.TextAreaFor(x => x.RichNote, new { @class = "form-control", @id = "RichNote", @Name = "RichNote", @style = "width:98%;", @cols = 80, @rows = 10 })
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {

            loadSalesMan();
            loadBroker();
            loadTransporter();
            loadTransportType();
            loadIncoTerms();
            loadPayTerms();
            loadInsurance();
            loadAdvLic();
            loadLetterCr()
            loadProjCode()
            $('#NotuDate').datepicker({
                format: 'dd-mm-yyyy',
                autoclose: true,
            });
            $('#StrEWBDate').datepicker({
                format: 'dd-mm-yyyy',
                autoclose: true,
            });
        });

        function loadSalesMan() {
            $('#SalesmanCode').empty();
            var url = '@Url.Action("GetSalesMan")'
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#SalesmanCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#SalesmanCode').val('@Model.SalesmanCode').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadBroker() {
            $("#BrokerName").empty();
            var url = '@Url.Action("GetBroker")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#BrokerName").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#BrokerName').val('@Model.Broker').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadTransporter() {
            $("#TransporterN").empty();
            $("#TransporterN").append("<option value='" + 0 + "'>Select</option>");
            var url = '@Url.Action("GetTransporter")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#TransporterN").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#TransporterN').val('@Model.Transporter').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadTransportType() {
            var url = '@Url.Action("GetTransportType")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#TransportType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#TransportType').val('@Model.TransportType').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadIncoTerms() {
            var url = '@Url.Action("GetIncoTerms")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#IncoTerms").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#IncoTerms').val('@Model.IncoTerms').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };


        function loadPayTerms() {
            var url = '@Url.Action("GetPayTerms")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#PayTerms").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#PayTerms').val('@Model.PayTerms').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadInsurance() {
            var url = '@Url.Action("GetInsurance")?DocuDate=' + $('#DocuDate').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#InsuranceNo").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#InsuranceNo').val('@Model.InsuranceNo').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };


        function loadAdvLic() {
            var url = '@Url.Action("GetAdvLicence")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#AdvLicence").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#AdvLicence').val('@Model.AdvLicence').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };


        function loadLetterCr() {
            var url = '@Url.Action("GetLetterCredit")?mDate=' + $("#DocuDate").val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#LCNo").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#LCNo').val('@Model.LCNo').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };

        function loadProjCode() {
            var url = '@Url.Action("GetProjectCode")';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (result) {
                    $('#ProjCode').empty();
                    $.each(result, function (i, item) {
                        $("#ProjCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                    $('#ProjCode').val('@Model.ProjCode').attr("selected", "selected");
                },
                error: function () {
                    $('.spinner').hide();
                    alert("An error occurred while processing the request.");
                }
            });
        };
    </script>
<script>
    $(document).ready(function () {
        $('#TransMode').val('@Model.TransMode').attr("selected", "selected");
        $('#DeliveryType').val('@Model.DeliveryType').attr("selected", "selected");
        $('#FreightType').val('@Model.FreightType').attr("selected", "selected");
    });
</script>