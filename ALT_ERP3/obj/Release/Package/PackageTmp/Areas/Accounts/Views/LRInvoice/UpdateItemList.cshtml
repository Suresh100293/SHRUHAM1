@model LRInvoiceVM
@using Common;

<style>
    #UpdateQty:focus {
        border-color: #83eae4;
    }
</style>

<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding:7px;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
            <b class="CodeSt">@Model.SessionFlag Record: @Model.tempId</b>
            @*<h4>Edit Record: @Model.tempId</h4>*@
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <table style="border:solid;">
                    <tbody style="width:100%;">
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">LR Number:</div>
                                <div class="col-sm-5">
                                    @if (Model.SessionFlag == "Add")
                                    {
                                        @Html.TextBoxFor(x => x.LRName, new { @class = "form-control", @id = "UpdateLRName", @Name = "UpdateLRName", @style = "width:100%" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.LRName, new { @class = "form-control", @id = "UpdateLRName",@disabled="disabled", @Name = "UpdateLRName", @style = "width:100%" })
                                    }
                                </div>
                                @*<div>
                                    <button type="button" class="btn btn-success" id="btnUpdateLRName">Get Details</button>
                                </div>*@
                            </td>
                            <td style="width:50%;border-right:solid;padding-left:10px;">
                                <button class="btn btn-info" id="btnContrct" title="Contract Calculate" style="padding:4px 8px;" onclick="ConfirmScriptFunction()">Contract Rate</button>
                                <button class="btn btn-info" id="btnGenaralContrct" title="General Contract Calculate" style="padding:4px 8px;" onclick="ConfirmGeneralMethods()">General Rate</button>

                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Bal Quantity:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Pending, new { @style = "text-align:right;", @class = "form-control", @id = "UpdatePending", @Name = "UpdatePending", @Value = Model.Pending, @disabled = "disabled" })
                                </div>
                                <div class="col-sm-3 control-label">Bill Quantity:</div>
                                <div class="col-sm-3">
                                    @if (Model.LockQty)
                                    {
                                        @Html.TextBoxFor(x => x.Qty, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateQty", @Name = "UpdateQty",@disabled="disabled" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.Qty, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateQty", @Name = "UpdateQty" })
                                    }
                                </div>

                            </td>
                            <td rowspan="8" style="width:50%">
                                <div id="divadvancelst" style="min-height:250px;max-height: 250px; overflow: scroll;">
                                    <table id="addlchargesgrid" class="zui-table" style="width:100%;">
                                        <thead>
                                            <tr>
                                                <th>Charges</th>
                                                <th>+/-</th>
                                                <th>Value</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.LRChargeList != null)
                                            {
                                                foreach (var item in @Model.LRChargeList.ToList())
                                                {
                                                    <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td style="vertical-align:inherit;">@item.Header</td>
                                                        <td style="vertical-align:inherit;">@item.AddLess</td>
                                                        <td><input type="text" id="txtf_@item.Fld" alt="@item.Fld" value="@item.Amt" class="txtlrfvalue" style="text-align:right" /></td>
                                                        <td hidden="hidden">@item.ChgPostCode</td>
                                                        <td hidden="hidden">@item.Fld</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Total Qty:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.TotalQty, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateTotalQty", @Name = "UpdateTotalQty", @disabled = "disabled" })
                                </div>

                                <div class="col-sm-3 control-label">Bill To Party:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Account, new { @class = "form-control", @id = "UpdateAccount", @Name = "UpdateAccount", @disabled = "disabled" })
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">From Branch:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.FromLocation, new { @class = "form-control", @style = "width:100%;margin-bottom:2px;", @id = "UpdateFromLocation", @Name = "UpdateFromLocation", @disabled = "disabled" })
                                </div>
                                <div class="col-sm-3 control-label">To Branch:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.ToLocation, new { @class = "form-control", @style = "width:100%;margin-bottom:2px;", @id = "UpdateToLocation", @Name = "UpdateToLocation", @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Date:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.LRDocuDate, new { @class = "form-control", @id = "UpdateLRDocuDate", @disabled = "disabled", @Name = "UpdateLRDocuDate", @Value = @Model.LRDocDate.ToString("dd-MM-yyyy") })
                                </div>
                                <div class="col-sm-3 control-label">Bill Branch:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Branch, new { @Type = "text", @class = "form-control", @id = "UpdateBranch", @Name = "UpdateBranch", @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Consignor:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Consignor, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateConsignor", @Name = "UpdateConsignor", @disabled = "disabled" })
                                </div>
                                <div class="col-sm-3 control-label">Consignee:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Consignee, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateConsignee", @Name = "UpdateConsignee", @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Act Wt:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.ActWt, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateActWt", @Name = "UpdateActWt", @disabled = "disabled" })
                                </div>
                                <div class="col-sm-3 control-label">Charge Wt:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.ChgWt, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateChargeType", @Name = "UpdateChargeType", @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Invoice No:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.LRPartyInvoice, new { @style = "text-align:right;", @class = "form-control", @id = "LRPartyInvoice", @Name = "LRPartyInvoice", @disabled = "disabled" })
                                </div>
                                <div class="col-sm-3 control-label">PO-Number:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.LRPONumber, new { @style = "text-align:right;", @class = "form-control", @id = "LRPONumber", @Name = "LRPONumber", @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Description:</div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.ChargeType, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateNarr", @Name = "UpdateNarr" })
                                </div>
                                <div class="col-sm-3 control-label">POD:</div>
                                <div class="col-sm-3">
                                    @Html.CheckBoxFor(x => x.POD, new { @style = "height:16px;width:16px;", @id = "UpdatePOD", @Name = "UpdatePOD" })
                                </div>
                            </td>
                        </tr>

                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Book Narr:</div>
                                <div class="col-sm-7">
                                    @Html.TextAreaFor(x => x.BookNarr, new { @class = "form-control", @id = "UpdateBookNarr", @Name = "UpdateBookNarr", @rows = 2, @cols = 30, @disabled = "disabled" })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Bill Narr:</div>
                                <div class="col-sm-7">
                                    @Html.TextAreaFor(x => x.BillNarr, new { @class = "form-control", @id = "UpdateBillNarr", @Name = "UpdateBillNarr", @rows = 2, @cols = 30 })
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;"></td>
                        </tr>
                        <tr>
                            <td style="width:50%;border-right:solid;"></td>
                            <td style="width:50%;border-right:solid;">
                                <div class="col-sm-3 control-label">Total Amount:</div>
                                <div class="col-sm-7">
                                    @Html.TextBoxFor(x => x.Val1, new { @class = "form-control", @style = "text-align:right;", @id = "UpdateVal1", @Name = "UpdateVal1" })
                                </div>
                            </td>
                        </tr>

                    </tbody>
                </table>

            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;padding:5px;">

            <button type="button" class="btn btn-success" id="pushrecord">Save</button>
            <button type="button" class="btn btn-success" id="updaterecord">Save</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {


        $("#UpdateLRName").constrain({ allow: { regex: "[0-9]" } });
        
        if ($('#hdnuSessionFlag').val() == "Edit") {
            $('#LRName').prop('disabled', true);
            $('#UpdateQty').focus();
        } else {
            $('#UpdateLRName').focus();
        }

        $('#updaterecord').click(function (event) {
            event.preventDefault();
            $("#updaterecord").prop('disabled', true);
        var ModelData = {};
            ModelData["Code"] = $("#hdnLRRefTableKey").val();
        ModelData["Account"] = $("#Account").val();
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["POD"] = $('#UpdatePOD').is(':checked');
        var DTO = { Model: ModelData };
        var url = '@Url.Action("LRValidation")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.POD == true) {
                    var confrm = confirm('LRNo POD Already Send Do you want to continue ..');
                    if (confrm == false) {
                        $("#updaterecord").prop('disabled', false);
                       return;
                    } else {
                        UpdateLR();
                    }
                }
                else {
                    UpdateLR();
                }
                $('.spinner').hide();
            },
            error: function () {

                alert("1-An error occurred while processing the request.");
            }
        });


        });


        $('#btnUpdateLRName').click(function (event) {
            event.preventDefault();
            loadLRDetails();
        });
        $('#UpdateLRName1').blur(function (event) {
            event.preventDefault();
            if ('@Model.SessionFlag'=="Add") {
                loadLRDetails();
            }
        });


        $('#pushrecord').click(function (event) {
              event.preventDefault();
              if ($('#hdnLRReqd').val() == 'True' || $('#hdnLRReqd').val() == 'true') {
                  if ($('#UpdateCode').val() == '') {
                      alert('Please Select LR Number.')
                      return;
                  }

                  if (parseFloat($('#UpdatePending').val()) < parseFloat($('#UpdateQty').val())) {
                      alert('Bill Quantity Cant be Greater than Balance Quantity..')
                      $('#UpdateQty').focus();
                      return;

                  }
              }

            var justDCSerial = [];
            $('#addlchargesgrid tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    Fld: tds.eq(4).text(),
                    AddLess: tds.eq(1).text(),
                    ChgPostCode: tds.eq(3).text(),
                    Amt: tds.find("input[class='txtlrfvalue']").val(),
                }
                justDCSerial.push(myDets);
            });
            var ModelData = {};
            ModelData["Code"] = $('#UpdateLRName').val();
            ModelData["LRName"] = $('#UpdateLRName').select2('data').text;
            ModelData["LRChargeList"] = justDCSerial;
            var DTO = { Model: ModelData };
            var url = '@Url.Action("PushPickupChargeList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
               },
                success: function (data) {
                    $('#ErrorMessage').hide();
                    $('#itemlistupdate').modal('hide');
                    var abcCount = parseInt($('#hdnuCount').val());
                    var narrCount = parseInt(21) + parseInt($('#hdnuCount').val());
                    var mARRAY = Array.from(data.ChargesListSelect);

                    $('#tabledatapick tr:not(:first)').each(function () {
                        var tds = $(this).find('td');

                        if (tds.eq(6).text() == data.LRNo) {

                            for (i = 0; i < abcCount; i++) {
                                var ai = 21;
                                ai = ai + i;
                                tds.eq(ai).find('input[class="enttxtcls"]').val(mARRAY[i]);
                            }
                            tds.eq(narrCount).html($('#UpdateBillNarr').val());
                        }
                    })
                    $('.spinner').hide();
                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });



        $(".txtlrfvalue").focusout(function (event) {
                event.preventDefault();
            CalOnTab();
        });
    });

    


    function CalOnTab() {
        var justDCSerial = [];
        $('#addlchargesgrid tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Fld: tds.eq(4).text(),
                AddLess: tds.eq(1).text(),
                ChgPostCode: tds.eq(3).text(),
                Amt: tds.find("input[class='txtlrfvalue']").val(),
            }
            justDCSerial.push(myDets);
        });
        var ModelData = {};
        ModelData["LRChargeList"] = justDCSerial;
        ModelData["Type"] = $("#hdnType").val();
        ModelData["SubType"] = $("#hdnSType").val();
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["Freight"] = $('#UpdateFreight').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetLRChargesTotal")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('#UpdateVal1').val(data.Total);
                $('.spinner').hide();

            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });

    }

    function UpdateLR() {
       if (parseInt($('#UpdateQty').val()) == parseInt('0')) {
            var conqtyfrm = confirm('Bill Quantity entered is Zero Do you want to continue ..');
           if (conqtyfrm == false) {
               $("#updaterecord").prop('disabled', false);

                return;
            } else {
               UpdateLRentry();
            }
        }
        else {
           UpdateLRentry();
        }



    }

    function UpdateLRentry()
    {
        CalOnTab();
        var justDCSerial = [];
        $('#addlchargesgrid tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Fld: tds.eq(4).text(),
                AddLess: tds.eq(1).text(),
                ChgPostCode: tds.eq(3).text(),
                Amt: tds.find("input[class='txtlrfvalue']").val(),
            }
            justDCSerial.push(myDets);
        });
        if ($('#hdnLRReqd').val() == 'True' || $('#hdnLRReqd').val() == 'true')
        {
            if ($('#UpdateCode').val() == '') {
                alert('Please Select LR Number.');
                $("#updaterecord").prop('disabled', false);
                return;
            }
            if (parseFloat($('#UpdatePending').val()) < parseFloat($('#UpdateQty').val())) {
                alert('Bill Quantity Cant be Greater than Balance Quantity..');
                $("#updaterecord").prop('disabled', false);
                $('#UpdateQty').focus();
              return;
            }
        }
        var ModelData = {};
        ModelData["tempId"] = $('#hdnutempId').val();
        ModelData["Code"] = $('#hdnLRRefTableKey').val();
        ModelData["LRName"] = $('#UpdateLRName').select2('data').text;
        ModelData["TotalQty"] = $('#UpdateTotalQty').val();
        ModelData["Branch"] = $('#UpdateBranch').val();
        ModelData["Consignor"] = $('#UpdateConsignor').val();
        ModelData["Consignee"] = $('#UpdateConsignee').val();
        ModelData["Weightage"] = $('#UpdateWeightage').val();
        ModelData["FromLocation"] = $('#UpdateFromLocation').val();
        ModelData["ToLocation"] = $('#UpdateToLocation').val();
        ModelData["BookNarr"] = $('#UpdateBookNarr').val();
        ModelData["BillNarr"] = $('#UpdateBillNarr').val();
        ModelData["Qty"] = $('#UpdateQty').val();
        ModelData["Narr"] = $('#UpdateNarr').val();
        ModelData["Mode"] = $('#hdnMode').val();
        ModelData["SubType"] = $('#hdnSType').val();
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["LRChargeList"] = justDCSerial;
        ModelData["LRDocuDate"] = $('#UpdateLRDocuDate').val();
        ModelData["Account"]= $('#Account').val();
        ModelData["Type"] = $('#hdnType').val();
        ModelData["SessionFlag"] = $('#hdnuSessionFlag').val();
        ModelData["Val1"] = $('#UpdateVal1').val();
        ModelData["POD"] = $('#UpdatePOD').is(':checked');
        ModelData["CutTDS"] = $("#CutTDS").is(':checked');
        ModelData["TDSCode"] = $("#TDSCode").val();
        ModelData["TDSRate"] = $("#TDSRate").val();
        ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();
        ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();
        ModelData["LockQty"] = $('#hdnLockQty').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("UpdateItemList")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
           },
            success: function (data)
            {
                $('#ErrorMessage').hide();
                $("#updaterecord").prop('disabled', false);
                $('#itemlistupdate').modal('hide');
                $('#divLedgerTable').html(data.Html);
                $('#txttottxable').val(data.Total.toFixed(2));
                $('#addTaxable').val(data.Total.toFixed(2));
                $('#txttotitemqty').val(data.TotalQty);
                SetValuesInTable();
                //$("#btnadddata").focusout();
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }
    function ConfirmScriptFunction()
    {
        if ($("#UpdateLRName").val() == null || $("#UpdateLRName").val() == "") {
            alert("Please Enter LrNO....!");
            return;
        }
        var LRNO = $("#hdnLRRefTableKey").val();
        if ($("#HitContractType").val() == "C") {
            ForceToGetCustomerContract(LRNO, false);
        } else if ($("#HitContractType").val() == "I") {
            ItemwiseCustomerContract(LRNO, false);
        }
    }
    function ConfirmGeneralMethods()
    {
        if ($("#UpdateLRName").val() == null || $("#UpdateLRName").val() == "") {
            alert("Please Enter LrNO....!");
            return;
        }
        var LRNO = $("#hdnLRRefTableKey").val();
        if ($("#HitContractType").val() == "C") {
            GeneralContract(LRNO, false);
        } else if ($("#HitContractType").val() == "I") {
            GeneralItemContract(LRNO, false);
        }
    }
</script>






@Html.HiddenFor(x => x.tempId, new { @Id = "hdnutempId" })
@Html.HiddenFor(x => x.IsPickUp, new { @Id = "hdnuIsPickUp" })
@Html.HiddenFor(x => x.SessionFlag, new { @Id = "hdnuSessionFlag" })
@Html.HiddenFor(x => x.LockQty, new { @Id = "hdnLockQty" })
@Html.HiddenFor(x => x.LRRefTableKey, new { @Id = "hdnLRRefTableKey" })
