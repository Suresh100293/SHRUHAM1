@model GridOption
@{
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
<style>
    .ui-jqgrid tr.jqgrow td {
        word-wrap: break-word; /* IE 5.5+ and CSS3 */
        white-space: pre-wrap; /* CSS3 */
        overflow: hidden;
        height: auto;
        vertical-align: middle;
        padding-top: 3px;
        padding-bottom: 3px;
    }
    
</style>

<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>

<script type="text/javascript">
    var lastsel2;
    $(document).ready(function () {

        $("#MultiLedgerFooter").addClass("hidden");
        $("#fixedbottom").removeClass("hidden");

        GetMyFavorites('@Model.ViewDataId');
        document.getElementById("headerdiv").style.backgroundColor = '@Session["headerdivcolor"]';
        document.getElementById("headercaption").style.color = '@Session["headercaptioncolor"]';
        document.getElementById("fixedbottom").style.backgroundColor = '@Session["bottomcolor"]';

        loadPrintFormts();
        //loadaccgroup();

        $("#Branch").val("");
        CommonValue = "";
        if ('@Model.Branch' != "") {
            $.each('@Model.Branch'.split(','), function (idx, val) {
                $(".BranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#Branch').val(CommonValue);
        }
        $(".BranchL").change(function () {

            $('#Branch').val('');
            var selected = "";
            $(".BranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#Branch').val(selected)
            return false;
        });
        $(".CustomerL").change(function () {

            $('#CustomerCodes').val('');
            var selected = "";
            $(".CustomerL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CustomerCodes').val(selected)
            return false;
        });

        $('.BranchL,.CustomerL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '200',
            numberDisplayed: 1,
            nonSelectedText: 'Select Item...',
        });
        $("#Value1").constrain({ allow: { regex: "[0-9]" } });

        if ("@ViewBag.PeriodType" != "S")
        {
            $('#Fromdate').val('@Model.FromDate');
        }else{
            $('#Fromdate').val('01-01-2000');
        }
        $('#ToDate').val('@Model.ToDate');

        $('#Fromdate,#ToDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        //$('select').select2();
        $("#viewcode").val('@Model.ViewDataId');
        $("#hdnformatname").val('@Model.ViewDataId');
        $("#hdnselected").val('');
        $("#hdnsubtype").val('@Model.SubType');
        GetColumnsList($("#viewcode").val());
        //GridReload();

        $('#btnselectall').click(function (event) {
            $("#acdisplay").find('tr').each(function () {
                $(this).find("input[type='checkbox']").prop('checked', true);
            });
        });

        $('#btnunselectall').click(function (event) {
            $("#acdisplay").find('tr').each(function () {
                $(this).find("input[type='checkbox']").prop('checked', false);
            });
        });

        $('#btnRefresh').click(function (event) {
            event.preventDefault();
            clickRefresh();
        });
        $('#TempType').change(function (event) {
            event.preventDefault();
            clickRefresh();
        });

        $("#acdisplay").live("click", '.checkboxobject1', function () {
            $("#acdisplay").find('tr').each(function () {
                var row = $(this);
                if (row.find('input[type="checkbox"]').is(':checked')) {
                    var mvar = $("#hiddenvalues").val();
                    var $tds = $(this).find('td');
                    var mcode = mvar + "~" + $tds.eq(1).text();
                    $("#hiddenvalues").val(mcode);
                }
            });
        });
    });
    function loadPrintFormts() {
        var url = '@Url.Action("GetPrintFormats")';
        $('#Format').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Format', text:'@Model.Format' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
         })
    };
    function clickRefresh() {
        $('#acdisplay').jqGrid('clearGridData');
        $("#acdisplay").jqGrid("GridUnload");
        $('#acdisplay').trigger('reloadGrid');
        GridReload();
    }

    function GridXLSML() {
        $('.spinner').show();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sUrlPath = '@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=MultiLedgerPrint';
        sUrlpath = window.open(sUrlPath, '_blank');
        $('.spinner').hide();
    };

    function clickBulkPrint() {
        //$('.spinner').show();

        if ($("#Format").val() == "" || $("#Format").val() == null) {
            alert("Please Select Print-Format...!");
            return;
        }
        var mvar = "";
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var itemlist = [];
        $('#acdisplay tr:not(:first)').each(function () {
            var tds = $(this).find('td');
            if (tds.find('input[type="checkbox"]').is(':checked')) {
                mvar = mvar + tds.eq(1).text() + "^";
                var mydata = { Code: tds.eq(1).text() }
                itemlist.push(mydata);
            }
        })
        $("#hdnselected").val(mvar);
        window.open("/Accounts/MultiSelect/BulkPrint?mWhat=PDF&SelectContent=" + mvar + '&Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&Value1=' + $("#Value1").val() + '&Format=' + $("#Format").val(), "_blank");
        //window.open("/Reports/MultiSelect/BulkPrint?mWhat=PDF&list=" + itemlist + '&Date=' + mDate + '&ViewDataId=' + $("#viewcode").val(), "_blank");
        @*var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var ColName, Coldata;
        var ModelData = {};
        ModelData["Date"] = mDate;
        ModelData["ViewDataId"] = $("#viewcode").val();
        ModelData["list"] = itemlist;
        ModelData["mWhat"] = 'PDF';
        var DTO = { Model: ModelData };
        var sPathUrl = '@Url.Action("BulkPrint")';//?SelectContent=' + mvar + '&Date=' + mDate + '&ViewDataId=MultiLedgerPrint';
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(DTO),
            success: function (data) {
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("Error with AJAX callback");
            }
        });*@
    };

    function GridPrintML() {
        event.preventDefault();
        
        var itemlist = [];
        var mvar = "";
        $('#acdisplay tr:not(:first)').each(function () {
            var tds = $(this).find('td');
            if (tds.find('input[type="checkbox"]').is(':checked')) {
                mvar = mvar + tds.eq(1).text() + "^";
                var mydata = { Code: tds.eq(1).text() }
                itemlist.push(mydata);
            }
        });
        if (itemlist.length == 0) {
            alert("Please Select Account To Generate Multiledger....");
            return false;
        }
        $('.spinner').show();
        $('#openb').val("");
        $('#closeb').val("");
        $('#tdebit').val("");
        $('#tcredit').val("");
        $("#MultiLedgerFooter").removeClass("hidden");
        $("#fixedbottom").addClass("hidden");

        $("#hdnselected").val(mvar);
        $('#acdisplay').jqGrid('clearGridData');
        $("#acdisplay").jqGrid("GridUnload");
        $('#acdisplay').trigger('reloadGrid');
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var ColName, Coldata;
        var ModelData = {};
        ModelData["Date"] = mDate;
        ModelData["ViewDataId"] = 'MultiLedgerPrint';
        ModelData["list"] = itemlist;
        ModelData["Branch"] = $('#Branch').val();
        var DTO = { Model: ModelData };
        var sPathUrl = '@Url.Action("GetGridStructureML")';//?SelectContent=' + mvar + '&Date=' + mDate + '&ViewDataId=MultiLedgerPrint';
        var sUrlpath = '@Url.Action("GetGridDataML")?Date=' + mDate + '&MainType=' + '@Model.MainType' + '&SubType=' + '@Model.SubType' + '&Type=' + '@Model.Type' + '&ViewDataId=MultiLedgerPrint&searchField=' + $('#searchField').val() + '&searchString=' + $('#searchString').val() + '&searchOper=' + $('#searchOper').val() + '&Supress=' + $("#issuppress").is(':checked');
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(DTO),
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                var minfox = obj[4].split("|");
                $('#openb').val(minfox[0]);
                $('#closeb').val(minfox[1]);
                $('#tdebit').val(minfox[2]);
                $('#tcredit').val(minfox[3]);
                CreateGridDataML();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function CreateGridDataML() {
            $('#acdisplay').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                mtype: 'POST',
                colNames: ColName,
                colModel: Coldata,
                cellEdit: false,
                pager: $('#pager1'),
                rowNum: 50000,
                rowList: [10, 15, 20, 50, 100, 500, 1000, 3000, 5000, 10000, 50000],
                height: $(window).height() - 111 - 85 - 30,/*38 for search panel*/
                frozen: false,
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                loadComplete: function () {
                    $("tr.jqgrow:odd").css("background", "#EAEAEA");
                    $('.spinner').hide();
                }
            });
            jQuery("#acdisplay").jqGrid('navGrid', "#pager1",
                { edit: false, add: false, del: false, search: true, refresh: true, searchtext: "filter"});
            jQuery("#acdisplay").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    function GridReload() {
        event.preventDefault();

        $("#MultiLedgerFooter").addClass("hidden");
        $("#fixedbottom").removeClass("hidden");


        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var Code = "";
        if ($("#Customer").is(':checked'))
        {
            Code = $("#CustomerCodes").val();
        }
        
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val();
        var sUrlpath = '@Url.Action("GetGridData")?Date=' + mDate + '&MainType=' + '@Model.MainType' + '&SubType=' + '@Model.SubType' + '&Type=' + '@Model.Type' + '&ViewDataId=' + $("#viewcode").val() + '&searchField=' + $('#searchField').val() + '&searchString=' + $('#searchString').val() + '&searchOper=' + $('#searchOper').val() + '&Branch=' + $('#Branch').val() + '&TempType=' + Code;
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                CreateGridData();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function CreateGridData() {
            $('#acdisplay').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                mtype: 'POST',
                colNames: ColName,
                colModel: Coldata,
                cellEdit: '@Session["GridEdit"]' == 'True' ? true : false,
                editurl: '/Reports/MultiSelect/dummyurl',
                cellsubmit: '@Session["GridEdit"]' == 'True' ? 'clientArray' : '',
                pager: $('#pager1'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 3000, 5000, 10000, 50000],
                height: $(window).height() - 111 - 85 - 30,/*38 for search panel*/
                frozen: false,
                //sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                //onCellSelect: function (row, col, content, event) {
                //    mcurrentcol = col;
                //    var cm = jQuery("#acdisplay").jqGrid("getGridParam", "colModel");
                //    $('#searchField').val(cm[col].index).attr("selected", "selected");
                //},
                ondblClickRow: function (id) {
                    event.preventDefault();
                    var myGrid = $('#acdisplay');
                    var cellVal = myGrid.jqGrid('getCell', id, 'Code');
                    var murl = "Ledgers/Index?Document=" + cellVal + "&ViewDataId=AcLedgerScreen&Module=Finance&optiontype=R&optioncode=Ledgers&Header=Accounts%20Ledger&Controller2=Ledgers&Fromdate=" + $('#Fromdate').val() + '&ToDate=' + $('#ToDate').val();
                    window.open(murl, '_blank');
                },
                onSelectRow: function (id) {
                    //e.preventDefault();
                    //alert($("#viewcode").val());
                    $('#subgrid').jqGrid('clearGridData');
                    $('#subgrid').jqGrid("GridUnload");
                    $('#subgrid').trigger('reloadGrid');
                    var mcode = $('#acdisplay').jqGrid('getCell', id, 'Name');
                    $('#accountname').html(mcode);
                    mcode = $('#acdisplay').jqGrid('getCell', id, 'Code');
                    GridReloadSub(mcode);
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                loadComplete: function () {
                    $("tr.jqgrow:odd").css("background", "#EAEAEA");
                    var mcolindex = -1;
                    var mwidth = 0;
                    var cm = $('#acdisplay').jqGrid('getGridParam', 'colModel');
                    for (var i = 0, l = cm.length; i < l; i++) {
                        if (cm[i].name == 'Balances') {
                            mcolindex = i;
                            mwidth = parseInt(cm[i].width, 10);
                        }
                    }
                    // if Balances column is found then only generate sparkline graph
                    if (mcolindex != -1) {
                        $('tr.jqgrow td:nth-child(' + (mcolindex + 1) + ')').each(function (index, value) {
                            try {
                                if (mwidth == 0) mwidth = 100;
                                $(this).sparkline($.parseJSON('[' + $(this).text() + ']'), { type: 'line', minSpotColor: 'red', maxSpotColor: 'green', spotColor: false, width: mwidth });
                                //$(this).sparkline($.parseJSON('[' + $(this).text() + ']'), { type: 'bar', barWidth: mwidth/13, width: mwidth }); // /12 months and some margin so /13
                                //#F47922-orange, #7C167F-purple (two values x and 100-x)
                                //$(this).sparkline($.parseJSON('[' + Number($(this).text()) + ',' + (100 - Number($(this).text())) + ']'), { type: 'pie', sliceColors: ['#F47922', '#7C167F'], borderWidth: 0.4 });
                                // box plot
                                //$(this).sparkline($.parseJSON('[' + Number($(this).text()) + ',' + (100 - Number($(this).text())) + ']'), { type: 'pie', sliceColors: ['#F47922', '#7C167F'], borderWidth: 0.4 });
                            } catch (e) {
                                alert(e);
                            }
                        });
                    }
                    $("#searchString").val("");
                    $("#searchField").val("");

                    $('.spinner').hide();
                },
                gridComplete: function () {
                    var ids = jQuery("#acdisplay").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        var ra1 = "<input id='btnAdd" + rowId + "' type='checkbox' name='checkboxobject' Class='example2' style='margin-left: 0px;height: 27px;width: 19px;margin-top: 1px;' />";
                        //set the checkBox
                        jQuery("#acdisplay").jqGrid('setRowData', rowId, { 'Select': ra1 });
                    }

                    // display subgrid for first record
                    $('#subgrid').jqGrid('clearGridData');
                    $('#subgrid').jqGrid("GridUnload");
                    $('#subgrid').trigger('reloadGrid');
                    var mcode = $('#acdisplay').jqGrid('getCell', 1, 'Name');
                    $('#accountname').html(mcode);
                    mcode = $('#acdisplay').jqGrid('getCell', 1, 'Code');
                    GridReloadSub(mcode);
                },
            });
            jQuery("#acdisplay").jqGrid('navGrid', "#pager1",
                { edit: false, add: false, del: false, search: true, refresh: true, searchtext: "filter"});
            jQuery("#acdisplay").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for slaesgrid
    function GridReloadSub(mCode) {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        //var mDate = ('01-01-2000' + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSub")?Date=' + mDate + '&Document=' + mCode + '&ViewDataId=' + $("#viewcode").val();
        var sUrlpath = '@Url.Action("GetGridDataSub")?Date=' + mDate + '&Document=' + mCode + '&Fromdate=' + $('#Fromdate').val() + '&ToDate=' + $('#ToDate').val() + '&Type=' + '@Model.Type' + '&ViewDataId=' + $("#viewcode").val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Status=='Error')
                {
                    document.getElementById("leftdiv").style.width = '100%';
                    document.getElementById("rightdiv").style.width = '0%';
                    $('#subgrid').hide();
                    return;
                }
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                var mvalues = obj[4].split(",");
                var mwidth = (($(window).innerWidth() * 4 / 12) - 20).toString();
                $('.sparkbalances').sparkline(mvalues, { type: 'bar', lineColor: 'darkorange', barWidth: '30px', height: '40px', width: mwidth });
                CreateGridDataSub();
                $('.spinner').hide();
            },
            Error: function () {
                $('.spinner').hide();
                alert("Error with AJAX callback");
            }
        });

        function CreateGridDataSub() {
            $('#subgrid').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: true,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                //pager: $('#pager3'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 131 - 85 - 65,/*38 for search panel*/
                //width: $(window).innerWidth() * 4 / 12,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    $('.spinner').hide();
                },
            });
            //jQuery("#subgrid").jqGrid('navGrid', "#pager3",
                //{ edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#subgrid").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }
    function loadaccgroup() {
        var url = '@Url.Action("GetAccountGrps")';
        $('#TempType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.TempType', text: '@Model.TempTypeN' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })

    };
</script>

<header class="header fixed-top" id="headerdiv" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <div class="col-sm-2" style="padding-left:unset;padding:1px;">
            <b class="CodeSt" id="headercaption">@Model.Header</b>
        </div>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>
        @if (Model.SubType == "ML")
        {
            <div class="col-sm-1" style="width:auto;padding:0px;">
                @Html.CheckBoxFor(x => x.Customer, new { @id = "Customer", @name = "Customer", @value = Model.Customer,@title="Show List Selected Item From The Listbox.", @style = "height:20px;width:20px;" })
            </div>
            <div class="col-sm-1">
                @*@Html.TextBoxFor(m => m.TempType, new { @style = "width:99%; margin-top:2px;height:25px;", @class = "input-large search-query", @Name = "TempType", @Id = "TempType" })*@
                @Html.ListBoxFor(x => x.CustomerL, Model.Accounts, new { @class = "CustomerL", @id = "CustomerL" })
            </div>
        }

        @if (Model.SubType == "ML")
        {
            <div class="col-sm-1 pull-right" style="width:150px;">
                <button class="btn btn-warning pull-right" onclick="GridXLSML()" id="btnmultiprint" style="color:black; font-size:12px;height:27px;padding:3px;margin-left:0;width:100px;" name="Command">Export XLS</button>
            </div>
            <div class="col-sm-1 pull-right " style="padding-left:6px;font-family:Tahoma;padding-top:0px;padding-right:0px;font-size:9pt; width:unset;">
                <input title='Suppress Zero Balances In MultiLedger' type="checkbox" id="issuppress" name="issuppress" style="margin-top:6px;width:17px;height:17px;" />
            </div>
            <div class="col-sm-1 pull-right " style="color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:10pt;width:unset;">
                Suppress 0:
            </div>
        }

        @if (Model.SubType != "ML")
        {
            <div class="col-sm-2 pull-right" style="padding-top:-3px;float:right;align-items:flex-end;">
                <button class="btn btn-success" onclick="clickBulkPrint()" style="font-size:14px;padding:3px 12px;" id="btnBulkPrint">Print / Export</button>
            </div>
            <div class="col-sm-2 pull-right">
                @Html.TextBoxFor(m => m.Format, new { @style = "width:99%; margin-top:2px;height:25px;", @class = "input-large search-query", @Name = "Format", @Id = "Format" })
            </div>
            <div class="col-sm-2 pull-right" style="padding-top:-3px;float:right;align-items:flex-end;">
                <div class="col-sm-1" style="padding-right:1px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;text-align:right">
                    <a id="btnRefresh" class="fa fa-refresh" style="font-size:20px;cursor:pointer" title="Refresh the Report"></a>
                </div>
                <div class="col-sm-10">
                    <label class="col-sm-9 control-label" style="padding-left:5px;padding-right:0px;margin-top: 5%;color: black;">No. Of Copies:</label>
                    <div class="col-sm-3" style="padding-left:0px;">
                        @Html.TextBoxFor(x => x.Value1, new { @class = "form-control", @style = "text-align: center;width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @value = Model.Value1 })
                    </div>
                </div>
            </div>
        }
        @if (Model.SubType == "ML")
        {
            <div class="col-sm-2 pull-right" style="padding-right:unset;">
                @Html.ListBoxFor(x => x.BranchL, Model.Branches, new { @class = "BranchL", @id = "BranchL" })
            </div>
            <div class="col-sm-1 pull-right" style="padding-right:1px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;text-align:right">
                <a id="btnRefresh" class="fa fa-refresh" style="font-size:20px;cursor:pointer" title="Refresh the Report"></a>
            </div>
            <div class="col-sm-3 pull-right" style="padding-right:unset;">
                <div class="col-sm-1" style="color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:10pt;width:unset;">
                    Period:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
        }
        else
        {
            if (ViewBag.PeriodType != "S")
            {
                <div class="col-sm-3 pull-right" style="padding-right:unset;">
                    <div class="col-sm-1" style="color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:10pt;width:unset;">
                        Period:
                    </div>
                    <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                        <input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                        <span class="input-group-addon">to</span>
                        <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    </div>
                </div>
            }
            else
            {
                <div class="col-sm-3 pull-right" style="padding-right:unset;">
                    <div class="col-sm-2" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:10pt;width:unset;color:black;">
                        Period:
                    </div>
                    <div class="col-sm-6" style="padding-right:unset;">
                        <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                            <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                        </div>
                    </div>
                    <div class="col-sm-1" style="padding-right:unset;width:0px;">
                        <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                            <input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="width:0px;font-weight:bolder;text-align:center;visibility:hidden;">
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</header>

<section class="panel">
    <div class="panel-body" style="margin-top:3%;height:auto;padding:0px;">
        @Html.Partial("SearchGridView")
        <div class="col-sm-8" id="leftdiv" style="padding-left:0px;padding-right:0px;">
            @*<div class="panel-body" style="margin-top:30px;height:auto;padding-left:0px;padding-right:0px;">*@
            <div id="page-contentgrid">
                <div class="jqGrid">
                    <table id="acdisplay" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;"></table>
                    <div id="pager1" style="height:34px;"></div>
                </div>
            </div>
            @*</div>*@
        </div>
        <div class="col-sm-4" id="rightdiv" style="padding-left:0px;border:none;">
            <div class="panel-body" style="margin-top:0px;height:auto;padding:0px;width:100%;">
                <div class="col-sm-12" style="padding-left:0px;padding-right:0px;overflow:scroll;">
                    <div class="form-group">
                        <label id="accountname" class="col-sm-12 control-label" style="text-wrap:none;word-wrap:unset;margin:0;margin-top:0px;border:none;font-size:12pt;font-weight:bold;"></label>
                    </div>
                    <span style="text-align:left;height:40px;width:250px;" class="sparkbalances"></span>
                    <div id="page-contentgridright">
                        <div class="jqGrid">
                            <table id="subgrid" class="scroll" cellpadding="0" cellspacing="0" style="overflow:scroll;border-collapse:unset;"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="MultiLedgerFooter" class="footer-section" style="position:fixed;background-color: rgb(75, 74, 74);padding:2px;color:unset;border:solid 1px black;">
    <div class="row" style="padding-top:1px;">
        <label class="col-sm-1 control-label" style="padding-top:2px;padding-left:20px;color:white;">Opening:</label>
        <div class="col-sm-2">
            <input type="text" id="openb" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" style="padding-top:2px;padding-left:20px;color:white;">Total Debit:</label>
        <div class="col-sm-2">
            <input type="text" id="tdebit" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" style="padding-top:2px;padding-left:20px;color:white;">Total Credit:</label>
        <div class="col-sm-2">
            <input type="text" id="tcredit" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
        </div>
        <div class="col-sm-2" style="float:right;">
            <input type="text" id="closeb" alt="" class="form-control" style="width:80%;text-align:right;font-size:11pt;background-color:gray;color:white;font-weight:bolder;height:22px;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" style="float:right;padding-top:2px;color:white;">Closing:</label>
        
    </div>
</div>
<footer class="footer-section" id="fixedbottom" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;height:33px;">
    <div class="col-sm-4" style="padding-left:1px;">
        <button class="btn btn-primary" id="btnselectall" style="color:black; font-size:12px;height:27px;padding:3px;margin-left:0;width:100px;" name="Command">Select ALL</button>
        <button class="btn btn-default" id="btnunselectall" style="color:black; font-size:12px;height:27px;padding:3px;margin-left:0;width:100px;" name="Command">Un-Select ALL</button>
    </div>
    <div class="col-sm-4" style="text-align:center; margin-top:5px;color:white;font-family:Helvetica;font-size:9pt;padding-top:0px;">
        ALT AIR-3.0, Shruham Software
    </div>
    @if (Model.SubType == "ML")
    {
        <div class="col-sm-4">
            <button class="btn btn-warning pull-right" onclick="GridPrintML()" id="btnmultiprint" style="color:black; font-size:12px;height:27px;padding:3px;margin-left:0;" name="Command">Generate Multi-Ledgers</button>
        </div>
    }
</footer>

<div class="example-modal">
    <div id="dialogprint" class="modal modal-primary" style="z-index:2100;">
        <div class="modal-dialog" style="width:600px;">
            <div id="dialogtoprint">
                @Html.Partial("ReportPrintOptions")
            </div>
        </div>
    </div>
</div>
@Html.HiddenFor(x => x.ViewCode, new { @Id = "viewcode" })
<input type="hidden" id="hiddenvalues" />
<input type="hidden" id="hdnselected" />
<input type="hidden" id="hdnsubtype" />
@Html.HiddenFor(x => x.Branch)
@Html.HiddenFor(x => x.CustomerCodes)
