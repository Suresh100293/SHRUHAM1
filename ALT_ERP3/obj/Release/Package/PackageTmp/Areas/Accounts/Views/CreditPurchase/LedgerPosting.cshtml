@model ALT_ERP3.Areas.Accounts.Models.CreditPurchaseVM
@using Common;

<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title"><b>Ledger Posting</b></h4>
        </div>
        <div class="modal-body">
            <div class="grid" id="LedgerPostTable" style="max-height:360px;min-height:360px; width:100%; overflow: scroll;">
                <table id="LedgerPostgrid" class="zui-table">
                    <thead>
                        <tr role="row" style="font-family:Tahoma;font-size:9pt;">
                            <th style="width:3%">Sr.</th>
                            <th style="width:15%">Code</th>
                            <th style="width:35%">Account Descr</th>
                            <th style="width:15%">Debit</th>
                            <th style="width:15%">Credit</th>
                            <th style="width:10%">Branch</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.LedgerPostList != null)
                        {
                            foreach (var item in @Model.LedgerPostList.ToList())
                            {
                                <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;border:solid 1px lightgray;">
                                    <td style="width:3%;">@item.tempId</td>
                                    <td style="width:15%;">@item.Code</td>
                                    <td style="width:35%;">@item.AccountName</td>
                                    <td style="width:15%;text-align:right">@GetAbsolute(@item.Debit)</td>
                                    <td style="width:15%;text-align:right">@GetAbsolute(@item.Credit)</td>
                                    <td style="width:10%;" hidden="hidden">@item.Branch</td>
                                    <td>@item.BranchName</td>
                                    <td hidden="hidden">@item.Narr</td>
                                    <td hidden="hidden">@item.AltCode</td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="font-family:Tahoma;font-size:9pt;font-weight:bolder;border: solid 1px lightgray;background-color:lightgray;">
                            <td style="width:3%;"></td>
                            <td style="width:15%;"></td>
                            <td style="width:35%;">Total</td>
                            <td style="width:15%;text-align:right" id="txtledpostdeb"></td>
                            <td style="width:15%;text-align:right" id="txtledpostcred"></td>
                            <td style="width:10%;"></td>
                        </tr>
                    </tfoot>
                </table>

            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
            <button type="button" class="btn btn-warning" data-dismiss="modal" id="SaveLedgerPost">Save</button>
            <button data-dismiss="modal" class="btn btn-danger" type="button">Cancel</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        document.getElementById('txtledpostdeb').innerHTML = parseFloat(@Model.TotDebit).toFixed(2);
        document.getElementById('txtledpostcred').innerHTML = parseFloat(@Model.TotCredit).toFixed(2);
        var tdeb = 0;
        var tcred = 0;

        $('#SaveLedgerPost').click(function (event) {
            event.preventDefault();
            $('#LedgerPostgrid tfoot').find('tr').each(function () {
                var $tds = $(this).find('td');
                tdeb += parseFloat($tds.eq(3).text());
                tcred += parseFloat($tds.eq(4).text());

            });
            if (tdeb != tcred) {
                alert('Credit and Debit doesnt Match cant Save')
                return;
            }
            else
            {
                var tab2size = $('#tabledata tbody tr').length;
                if ($("#Account").val() == '') {
                    alert('Select Party.');
                    return;
                }
                if (tab2size == 0) {
                    alert('Add Product.');
                    return;
                }
                if ($("#hdnAllowZeroAmt").val() == "False" || $("#hdnAllowZeroAmt").val() == "false") {
                    if ($("#SumDebit").val() == 0 && $("#SumCredit").val() == 0) {
                        alert('Nothing Entered..');
                        return;
                    }
                }
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var myLederArray = [];
                $('#LedgerPostgrid tbody').find('tr').each(function () {
                    var tds = $(this).find('td');
                    var myDets = {
                        tempId: tds.eq(0).text(),
                        Code: tds.eq(1).text(),
                        Debit: tds.eq(3).text(),
                        Credit: tds.eq(4).text(),
                        Narr: tds.eq(7).text(),
                        AltCode: tds.eq(8).text()
                        //TDSFlag: tds.eq(6).text()
                    }
                    myLederArray.push(myDets);
                });
                var mAuthorise = $('#hdnAuthorise').val();
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["LedgerPostList"] = myLederArray;
                ModelData["OTGenerate"] = $("#hdnOTGenerate").val();
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["BankCashCode"] = $("#BankCashCode").val();
                ModelData["MainType"] = $("#hdnMainType").val();
                ModelData["SubType"] = $("#hdnSubType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Prefix"] = $("#hdnPrefix").val();
                ModelData["SumDebit"] = $("#SumDebit").val();
                ModelData["SumCredit"] = $("#SumCredit").val();
                ModelData["Srl"] = $("#Srl").val();
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Mode"] = $("#hdnMode").val();
                ModelData["Authorise"] = "A00";
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["OptionType"] = '@Model.OptionType';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["Branch"] = $('#hdnBranch').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                if ($('#addTDSFlag').is(":checked")) {
                    ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                    ModelData["TDSCode"] = $("#addTDSCode").val();
                    ModelData["TDSAmt"] = $('#TDSAmt').val();
                }
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["Amt"] = $('#txtinvamt').val();
                ModelData["BillDate"] = $("#BillDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'AutoDocumentAlert') {
                            PurchaseBillAlertNoteMaster(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'CancelError') {
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                            alert(data.Message);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            if ($('#hdnShowDocSerial').val() == 'True' || $('#hdnShowDocSerial').val() == 'true') {
                                alert("Document Saved as " + data.NewSrl + "");
                            }
                            if (PrintLR == "SavePrint") {
                                $('.spinner').hide();
                                $('#printpostmodel').modal('show');

                            }
                            else {
                                if ($('#hdnMode').val() != "Add") {
                                    window.location.href = "/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2";
                                }
                                else {
                                    window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.OptionType' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                                }
                            }
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").text(data.Message);
                        }
                        else {
                            alert('Status not Success')
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                        }
                    },
                    error: function (ex) {
                        alert(JSON.stringify(ex))
                        alert("Error occured while processing your request.");
                        $('#fixedbottom :input').prop("disabled", false);
                        $('#frmpurchase :input').prop("disabled", false);
                        $('.form-horizontal :input').prop("disabled", false);
                        $('#ItemListTable :input').prop('disabled', false);
                    }
                });
            }
        });
    });
</script>



@functions {
    decimal GetAbsolute(decimal dcb)
    {
        var msg = Math.Abs(dcb);
        return msg;
    }

    string GetFixedTwo(decimal dcb)
    {
        decimal d = Math.Floor(100 * dcb) / 100;
        string s = d.ToString("N2");
        return s;
    }
}
