@model ALT_ERP3.Areas.Accounts.Models.AssetsMastersVM
@using Common;
@{
    ViewBag.Title = "Assets Masters";
    Layout = null;
}

<script type="text/javascript">
    $(document).ready(function () {
        GetMyFavorites('@Model.ViewDataId');
        $('#FixedAsset_WarExpDate').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LicIssueDt').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_ExpDate').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_PurchDate').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_UseDate').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_DeprEndDt').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_policyDate').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LeaseFrom').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_NextPremiumDue').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LeaseTo').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_AMCFrom').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_AMCTo').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        @* iX9: Load List for Autocomplete Inputs i.e. ControlType='A' *@
        LoadDeprAccount();
        LoadProduct();
        LoadAccountCode();
        LoadAssetCategory();
        LoadCostCentre();
        LoadParentAsset();

        @* iX9: set the selected value to fixed combos *@
        $('#FixedAsset_DeprMethod').val('@Model.FixedAsset_DeprMethod').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#FixedAsset_AcqType').val('@Model.FixedAsset_AcqType').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#FixedAsset_AssetStatus').val('@Model.FixedAsset_AssetStatus').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#FixedAsset_ParentStatus').val('@Model.FixedAsset_ParentStatus').attr("selected", "selected");
        @* iX9: Date Picker Code *@
        $('#FixedAsset_WarExpDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LicIssueDt').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_ExpDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_PurchDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_UseDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_DeprEndDt').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_policyDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LeaseFrom').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_NextPremiumDue').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_LeaseTo').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_AMCFrom').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#FixedAsset_AMCTo').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        @* iX9: Validation rules for the fields where AllowBlank is False in Definition *@
        $('#AssetsMasters').validate({
            onfocusout: false,
            errorLabelContainer: $('#ErrorMessage'),
            wrapper: "li",
            rules: {
                FixedAsset_Code: {required: true,},
                FixedAsset_Name: {required: true,},
                FixedAsset_AssetCategory: {required: true,},
               },
            messages: {
                FixedAsset_Code: {required: 'Code is Required',},
                FixedAsset_Name: {required: 'Name is Required',},
                FixedAsset_AssetCategory: {required: 'AssetCategory is Required',},
            }
        });

        @* iX9: Input Contraints to limit the inputs to required Input Type i.e. String, Numeric etc. *@
        $("#FixedAsset_Code").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#FixedAsset_Warranty").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_Name").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#FixedAsset_AccumDepr").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_MinCharges").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_AssetCategory").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_CostCentre").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_BookValue").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_Cost").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_Pickup").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_DeprRate").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_DeprRateIT").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_NextDeprAmt").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_LifeMonths").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_ValueInsured").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_PremiumAmt").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_LeaseRate").constrain({ allow: { regex: "[0-9.-]" } });
        $("#FixedAsset_AMCRate").constrain({ allow: { regex: "[0-9.-]" } });

        @* iX9: Executed when Save/Submit button is Pressed *@
        $('#Submit').click(function (event) {
            event.preventDefault();
            //if ($("#AssetsMasters").validate().form() == false)
            //    return;

            if ($("#FixedAsset_Code").val() == null || $("#FixedAsset_Code").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Asset ID is Required..');
                return;
            }
            if ($("#FixedAsset_Name").val() == null || $("#FixedAsset_Name").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Asset Description is Required..');
                return;
            }
            if ($("#FixedAsset_AssetCategory").val() == null || $("#FixedAsset_AssetCategory").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Asset Category is Required..');
                return;
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["FixedAsset_Depreciable"] = $("#FixedAsset_Depreciable").is(':checked');
            ModelData["FixedAsset_Code"] = $("#FixedAsset_Code").val();
            ModelData["FixedAsset_Warranty"] = $("#FixedAsset_Warranty").val();
            ModelData["FixedAsset_AgencyName"] = $("#FixedAsset_AgencyName").val();
            ModelData["FixedAsset_WarExpDateVM"] = $("#FixedAsset_WarExpDate").val();
            ModelData["FixedAsset_Name"] = $("#FixedAsset_Name").val();
            ModelData["FixedAsset_RegNo"] = $("#FixedAsset_RegNo").val();
            ModelData["FixedAsset_TagNo"] = $("#FixedAsset_TagNo").val();
            ModelData["FixedAsset_DeprAccount"] = $("#FixedAsset_DeprAccount").val();
            ModelData["FixedAsset_OnSite"] = $("#FixedAsset_OnSite").is(':checked');
            ModelData["FixedAsset_AccumDepr"] = $("#FixedAsset_AccumDepr").val();
            ModelData["FixedAsset_Product"] = $("#FixedAsset_Product").val();
            ModelData["FixedAsset_MinCharges"] = $("#FixedAsset_MinCharges").val();
            ModelData["FixedAsset_FreeParts"] = $("#FixedAsset_FreeParts").is(':checked');
            ModelData["FixedAsset_LicIssueDtVM"] = $("#FixedAsset_LicIssueDt").val();
            ModelData["FixedAsset_AccountCode"] = $("#FixedAsset_AccountCode").val();
            ModelData["FixedAsset_DeprMethod"] = $("#FixedAsset_DeprMethod").val();
            ModelData["FixedAsset_AssetCategory"] = $("#FixedAsset_AssetCategory").val();
            ModelData["FixedAsset_FreeLabour"] = $("#FixedAsset_FreeLabour").is(':checked');
            ModelData["FixedAsset_CostCentre"] = $("#FixedAsset_CostCentre").val();
            ModelData["FixedAsset_ExpDateVM"] = $("#FixedAsset_ExpDate").val();
            ModelData["FixedAsset_BookValue"] = $("#FixedAsset_BookValue").val();
            ModelData["FixedAsset_Cost"] = $("#FixedAsset_Cost").val();
            ModelData["FixedAsset_Pickup"] = $("#FixedAsset_Pickup").val();
            ModelData["FixedAsset_PurchDateVM"] = $("#FixedAsset_PurchDate").val();
            ModelData["FixedAsset_DeprRate"] = $("#FixedAsset_DeprRate").val();
            ModelData["FixedAsset_DeprRateIT"] = $("#FixedAsset_DeprRateIT").val();
            ModelData["FixedAsset_UseDateVM"] = $("#FixedAsset_UseDate").val();
            ModelData["FixedAsset_DeprEndDtVM"] = $("#FixedAsset_DeprEndDt").val();
            ModelData["FixedAsset_AcqType"] = $("#FixedAsset_AcqType").val();
            ModelData["FixedAsset_InsuranceComp"] = $("#FixedAsset_InsuranceComp").val();
            ModelData["FixedAsset_DeprSinceInUse"] = $("#FixedAsset_DeprSinceInUse").is(':checked');
            ModelData["FixedAsset_AssetStatus"] = $("#FixedAsset_AssetStatus").val();
            ModelData["FixedAsset_WarrantyNote"] = $("#FixedAsset_WarrantyNote").val();
            ModelData["FixedAsset_PolicyNo"] = $("#FixedAsset_PolicyNo").val();
            ModelData["FixedAsset_NextDeprAmt"] = $("#FixedAsset_NextDeprAmt").val();
            ModelData["FixedAsset_LifeMonths"] = $("#FixedAsset_LifeMonths").val();
            ModelData["FixedAsset_policyDateVM"] = $("#FixedAsset_policyDate").val();
            ModelData["FixedAsset_ValueInsured"] = $("#FixedAsset_ValueInsured").val();
            ModelData["FixedAsset_Narr"] = $("#FixedAsset_Narr").val();
            ModelData["FixedAsset_ParentStatus"] = $("#FixedAsset_ParentStatus").val();
            ModelData["FixedAsset_ParentAsset"] = $("#FixedAsset_ParentAsset").val();
            ModelData["FixedAsset_LeaseFromVM"] = $("#FixedAsset_LeaseFrom").val();
            ModelData["FixedAsset_PremiumAmt"] = $("#FixedAsset_PremiumAmt").val();
            ModelData["FixedAsset_NextPremiumDueVM"] = $("#FixedAsset_NextPremiumDue").val();
            ModelData["FixedAsset_LeaseToVM"] = $("#FixedAsset_LeaseTo").val();
            ModelData["FixedAsset_LeaseRate"] = $("#FixedAsset_LeaseRate").val();
            ModelData["FixedAsset_Comprehensive"] = $("#FixedAsset_Comprehensive").is(':checked');
            ModelData["FixedAsset_AMCRate"] = $("#FixedAsset_AMCRate").val();
            ModelData["FixedAsset_AMCFromVM"] = $("#FixedAsset_AMCFrom").val();
            ModelData["FixedAsset_AMCToVM"] = $("#FixedAsset_AMCTo").val();
            ModelData["FixedAsset_CompreDet"] = $("#FixedAsset_CompreDet").val();
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function LoadDeprAccount() {
        var url = '@Url.Action("AutoCompleteDeprAccount")'
        $('#FixedAsset_DeprAccount').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_DeprAccount', text: '@Model.DeprAccountName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadProduct() {
        var url = '@Url.Action("AutoCompleteProduct")'
        $('#FixedAsset_Product').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_Product', text: '@Model.ProductName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadAccountCode() {
        var url = '@Url.Action("AutoCompleteAccountCode")'
        $('#FixedAsset_AccountCode').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_AccountCode', text: '@Model.AccountCodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadAssetCategory() {
        var url = '@Url.Action("AutoCompleteAssetCategory")'
        $('#FixedAsset_AssetCategory').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_AssetCategory', text: '@Model.AssetCategoryName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadCostCentre() {
        var url = '@Url.Action("AutoCompleteCostCentre")'
        $('#FixedAsset_CostCentre').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_CostCentre', text: '@Model.CostCentreName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadParentAsset() {
        var url = '@Url.Action("AutoCompleteParentAsset")'
        $('#FixedAsset_ParentAsset').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FixedAsset_ParentAsset', text: '@Model.ParentAssetName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>

@* iX9: Form Design *@
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            <a href="~/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="AssetsMasters" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Headers *@
            <div class="tab">
                <button class="tablinks" onclick="OpenTab(event, 'divGeneral')" id="FirstTab">General</button>
                <button class="tablinks" style="width: 140px;" onclick="OpenTab(event, 'divLicense/Insurance')">License/Insurance</button>
                <button class="tablinks" onclick="OpenTab(event, 'divDepreciation')">Depreciation</button>
                <button class="tablinks" onclick="OpenTab(event, 'divWarranty')">Warranty</button>
            </div>
            @* iX9: Tab Body Panels *@
            <div id="divGeneral" class="tabcontent" style="height:450px;overflow-y:auto;overflow-x:hidden;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">Asset ID:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_Code, new { @maxlength = "35", @class = "form-control", @Name = "FixedAsset_Code", @Id = "FixedAsset_Code" })
                    </div>
                    <label class="col-sm-1 control-label">Asset Description:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_Name, new { @maxlength = "50", @class = "form-control", @Name = "FixedAsset_Name", @Id = "FixedAsset_Name" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Tag/Serial Number:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_TagNo, new { @maxlength = "15", @class = "form-control", @Name = "FixedAsset_TagNo", @Id = "FixedAsset_TagNo" })
                    </div>
                    <label class="col-sm-1 control-label">Item Code:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_Product, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_Product", @Name = "FixedAsset_Product" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Account Code:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_AccountCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_AccountCode", @Name = "FixedAsset_AccountCode" })
                    </div>
                    <label class="col-sm-1 control-label">Asset Category:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_AssetCategory, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_AssetCategory", @Name = "FixedAsset_AssetCategory" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Cost Centre:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_CostCentre, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_CostCentre", @Name = "FixedAsset_CostCentre" })
                    </div>
                    <label class="col-sm-1 control-label">Cost:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_Cost, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_Cost", @Id = "FixedAsset_Cost" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Purchase Date:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_PurchDateVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_PurchDate", @id = "FixedAsset_PurchDate", @Value = Model.FixedAsset_PurchDate.ToString("dd/MM/yyyy") })
                    </div>
                    <label class="col-sm-1 control-label">Date of Use:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_UseDateVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_UseDate", @id = "FixedAsset_UseDate", @Value = Model.FixedAsset_UseDate.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Acquistion Type:</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(m => m.FixedAsset_AcqType, Model.AcqTypeList, new { @class = "form-control", @Id = "FixedAsset_AcqType", @Name = "FixedAsset_AcqType", @style = "border-color:black;height:24px;padding:2px 4px;" })
                    </div>
                    <label class="col-sm-1 control-label">Depr. Since InUse?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_DeprSinceInUse, new { @value = Model.FixedAsset_DeprSinceInUse, @id = "FixedAsset_DeprSinceInUse", @name = "FixedAsset_DeprSinceInUse", @style = "height:16px;width:16px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Asset Status:</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(m => m.FixedAsset_AssetStatus, Model.AssetStatusList, new { @class = "form-control", @Id = "FixedAsset_AssetStatus", @Name = "FixedAsset_AssetStatus", @style = "border-color:black;height:24px;padding:2px 4px;" })
                    </div>
                    <label class="col-sm-1 control-label">Userful Life (Months):</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_LifeMonths, new { @maxlength = "10", @class = "form-control", @Name = "FixedAsset_LifeMonths", @Id = "FixedAsset_LifeMonths" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Remark:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_Narr, new { @maxlength = "100", @class = "form-control", @Name = "FixedAsset_Narr", @Id = "FixedAsset_Narr" })
                    </div>
                    <label class="col-sm-1 control-label">Parent Status:</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(m => m.FixedAsset_ParentStatus, Model.ParentStatusList, new { @class = "form-control", @Id = "FixedAsset_ParentStatus", @Name = "FixedAsset_ParentStatus", @style = "border-color:black;height:24px;padding:2px 4px;" })
                    </div>
                    <label class="col-sm-1 control-label">Parent Asset:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_ParentAsset, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_ParentAsset", @Name = "FixedAsset_ParentAsset" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" style="font-size:13px;text-decoration: underline;font-weight:bold;">leasing information</label>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Lease From:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_LeaseFromVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_LeaseFrom", @id = "FixedAsset_LeaseFrom", @Value = Model.FixedAsset_LeaseFrom.ToString("dd/MM/yyyy") })
                    </div>
                    <label class="col-sm-1 control-label">Lease To Date:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_LeaseToVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_LeaseTo", @id = "FixedAsset_LeaseTo", @Value = Model.FixedAsset_LeaseTo.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Lease Rate:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_LeaseRate, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_LeaseRate", @Id = "FixedAsset_LeaseRate" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Comprehensive?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_Comprehensive, new { @value = Model.FixedAsset_Comprehensive, @id = "FixedAsset_Comprehensive", @name = "FixedAsset_Comprehensive", @style = "height:16px;width:16px;" })
                    </div>
                    <label class="col-sm-1 control-label">AMC Rate:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_AMCRate, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_AMCRate", @Id = "FixedAsset_AMCRate" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" style="font-size:13px;text-decoration: underline;font-weight:bold;">annual mainteance contract</label>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">AMC from:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_AMCFromVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_AMCFrom", @id = "FixedAsset_AMCFrom", @Value = Model.FixedAsset_AMCFrom.ToString("dd/MM/yyyy") })
                    </div>
                    <label class="col-sm-1 control-label">AMC To:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_AMCToVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_AMCTo", @id = "FixedAsset_AMCTo", @Value = Model.FixedAsset_AMCTo.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Detail:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_CompreDet, new { @maxlength = "100", @class = "form-control", @Name = "FixedAsset_CompreDet", @Id = "FixedAsset_CompreDet" })
                    </div>
                </div>
            </div>
            <div id="divLicense/Insurance" class="tabcontent" style="height:450px;overflow-y:auto;overflow-x:hidden;">
                <div class="form-group">
                    <label class="col-sm-3 control-label" style="font-size:13px;text-decoration: underline;font-weight:bold;">license information</label>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Agency Name:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_AgencyName, new { @maxlength = "35", @class = "form-control", @Name = "FixedAsset_AgencyName", @Id = "FixedAsset_AgencyName" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Reg.No.:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_RegNo, new { @maxlength = "15", @class = "form-control", @Name = "FixedAsset_RegNo", @Id = "FixedAsset_RegNo" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">License Issue Dt:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_LicIssueDtVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_LicIssueDt", @id = "FixedAsset_LicIssueDt", @Value = Model.FixedAsset_LicIssueDt.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Expiry Date:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_ExpDateVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_ExpDate", @id = "FixedAsset_ExpDate", @Value = Model.FixedAsset_ExpDate.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <label class="col-sm-3 control-label" style="font-size:13px;text-decoration: underline;font-weight:bold;">insurance information</label>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Insurance Company:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_InsuranceComp, new { @maxlength = "35", @class = "form-control", @Name = "FixedAsset_InsuranceComp", @Id = "FixedAsset_InsuranceComp" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Policy Number:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_PolicyNo, new { @maxlength = "15", @class = "form-control", @Name = "FixedAsset_PolicyNo", @Id = "FixedAsset_PolicyNo" })
                    </div>
                    <label class="col-sm-1 control-label">Policy Date:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_policyDateVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_policyDate", @id = "FixedAsset_policyDate", @Value = Model.FixedAsset_policyDate.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Value Insured:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_ValueInsured, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_ValueInsured", @Id = "FixedAsset_ValueInsured" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Premium Amt:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_PremiumAmt, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_PremiumAmt", @Id = "FixedAsset_PremiumAmt" })
                    </div>
                    <div class="col-sm-2"></div>
                    <label class="col-sm-1 control-label">Next Premium Due:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_NextPremiumDueVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_NextPremiumDue", @id = "FixedAsset_NextPremiumDue", @Value = Model.FixedAsset_NextPremiumDue.ToString("dd/MM/yyyy") })
                    </div>
                </div>
            </div>
            <div id="divDepreciation" class="tabcontent" style="height:450px;overflow-y:auto;overflow-x:hidden;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">Depreciable?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_Depreciable, new { @value = Model.FixedAsset_Depreciable, @id = "FixedAsset_Depreciable", @name = "FixedAsset_Depreciable", @style = "height:16px;width:16px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Depr. Account:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_DeprAccount, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "FixedAsset_DeprAccount", @Name = "FixedAsset_DeprAccount" })
                    </div>
                    <label class="col-sm-1 control-label">Accumulated Depr.:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_AccumDepr, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_AccumDepr", @Id = "FixedAsset_AccumDepr" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Depr. Method:</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(m => m.FixedAsset_DeprMethod, Model.DeprMethodList, new { @class = "form-control", @Id = "FixedAsset_DeprMethod", @Name = "FixedAsset_DeprMethod", @style = "border-color:black;height:24px;padding:2px 4px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Book Value:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_BookValue, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_BookValue", @Id = "FixedAsset_BookValue" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Depr. Rate:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_DeprRate, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_DeprRate", @Id = "FixedAsset_DeprRate" })
                    </div>
                    <div class="col-sm-2"></div>
                    <label class="col-sm-1 control-label">Depr. Rate-IT:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_DeprRateIT, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_DeprRateIT", @Id = "FixedAsset_DeprRateIT" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Last Depriciation:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_DeprEndDtVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_DeprEndDt", @id = "FixedAsset_DeprEndDt", @Value = Model.FixedAsset_DeprEndDt.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Next Depr. Amt:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_NextDeprAmt, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_NextDeprAmt", @Id = "FixedAsset_NextDeprAmt" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
            </div>
            <div id="divWarranty" class="tabcontent" style="height:450px;overflow-y:auto;overflow-x:hidden;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">Warranty Days:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_Warranty, "{0:n0}", new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_Warranty", @Id = "FixedAsset_Warranty" })
                    </div>
                    <div class="col-sm-2"></div>
                    <label class="col-sm-1 control-label">War.Exp.Date:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_WarExpDateVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "FixedAsset_WarExpDate", @id = "FixedAsset_WarExpDate", @Value = Model.FixedAsset_WarExpDate.ToString("dd/MM/yyyy") })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">On Site Service?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_OnSite, new { @value = Model.FixedAsset_OnSite, @id = "FixedAsset_OnSite", @name = "FixedAsset_OnSite", @style = "height:16px;width:16px;" })
                    </div>
                    <label class="col-sm-1 control-label">WarExpDate:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_MinCharges, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_MinCharges", @Id = "FixedAsset_MinCharges" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Free Parts Replace?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_FreeParts, new { @value = Model.FixedAsset_FreeParts, @id = "FixedAsset_FreeParts", @name = "FixedAsset_FreeParts", @style = "height:16px;width:16px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Free Labour?:</label>
                    <div class="col-sm-3">
                        @Html.CheckBoxFor(x => x.FixedAsset_FreeLabour, new { @value = Model.FixedAsset_FreeLabour, @id = "FixedAsset_FreeLabour", @name = "FixedAsset_FreeLabour", @style = "height:16px;width:16px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">Pickup:</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.FixedAsset_Pickup, "{0:n0}", new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "FixedAsset_Pickup", @Id = "FixedAsset_Pickup" })
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <br />
                <div class="form-group">
                    <label class="col-sm-1 control-label">WarrantyNote:</label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.FixedAsset_WarrantyNote, new { @maxlength = "100", @class = "form-control", @Name = "FixedAsset_WarrantyNote", @Id = "FixedAsset_WarrantyNote" })
                    </div>
                </div>
            </div>
            @* iX9: -- Code for Header Ends -- *@
            <script>
                function OpenTab(evt, tabName) {
                    var i, tabcontent, tablinks;
                    tabcontent = document.getElementsByClassName("tabcontent");
                    for (i = 0; i < tabcontent.length; i++) {
                        tabcontent[i].style.display = "none";
                    }
                    tablinks = document.getElementsByClassName("tablinks");
                    for (i = 0; i < tablinks.length; i++) {
                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                    }
                    document.getElementById(tabName).style.display = "block";
                    evt.currentTarget.className += " active";
                }
                document.getElementById("FirstTab").click();
            </script>
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                <a href="~/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

<input type="hidden" id="controllername" />
@*
    Code Auto Generated on Thu 07-Mar-2019 12:08 PM
    Engine: iX9Generator, ver: 3.7 Revision: 13
    by Team Shruham Software *@

