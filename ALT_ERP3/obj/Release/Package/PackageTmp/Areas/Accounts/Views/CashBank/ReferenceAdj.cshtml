@model ALT_ERP3.Areas.Accounts.Models.LedgerVM
@using Common;

<style>
    .modal-header {
        padding: 10px;
    }

    .modal-footer {
        padding: 3px;
    }

    .modal-header h4.modal-title {
        font-size: medium;
        font-family: Tahoma;
        font-weight: 700;
    }

    .table > thead > tr > th {
        padding: unset;
        text-align: center;
    }

    .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {
        border: 1px solid darkgrey;
    }

    .table-bordered {
        border: 1px solid darkgrey;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        padding: unset;
        font-family: Tahoma;
        font-size: 9pt;
        height: 26px;
    }

    .focus {
        background-color: #ff00ff;
        color: #fff;
        cursor: pointer;
        font-weight: bold;
    }

    .pageNumber {
        padding: 2px;
    }

    tr:nth-child(even) {
        background-color: unset;
    }

    .form-horizontal .control-label {
        color: black;
    }
</style>
<script>
    $(document).ready(function () {

        $('#RefAdjdataN').jqGrid('clearGridData');
        $("#RefAdjdataN").jqGrid("GridUnload");
        //$('#RefAdjdata').trigger('reloadGrid');
        $("#RefAdjdataN").trigger("reloadGrid", [{ current: true }]);
        OSGridReload();


        //if ($('#hdnSessionFlag').val() == "Add") {
        //    $('#AdjAgaintsInvoices').html('Adj.Against Invoice: 0:00');
        //    $('#OnAccount').html('On Account: 0:00');
        //}
        //else {
        //    CheckAdjAgaintsInvoices()
        //    CheckOnAccount()
        //}

        //$("#RefAdjdata tbody").on('click', '.rolemaster_AccessType', function () {
        //    var currentRow = $(this).closest("tr");
        //    var a = $(this).attr("atr");
        //    var checkbool = currentRow.find('td').find('input[type="checkbox"]').is(':checked');
        //    var mAmt = 0;
        //    var TopAmount = parseFloat($("#addAmt").val());
        //    var adjsum = 0;
        //    var finalamt;
        //    var balanceamt = 0;
        //    var EnteredMamt = 0;
        //    balanceamt = currentRow.find("td:eq(9)").text();

        //    //alert('balanceamt' + balanceamt)
        //    $('#RefAdjdata tr:not(:first)').each(function () {
        //        var tds = $(this).find('td');
        //        //if (tds.find('input[type="checkbox"]').is(':checked')) {
        //        var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
        //        adjsum += (parseFloat(abc));
        //        //}
        //    });
        //    var already = $('#TxtA_' + a + '').val();
        //    if (already == null) {
        //        already = 0;
        //    }
        //    var adjustamt = (parseFloat(TopAmount)) - (parseFloat(adjsum));

        //    //alert('adjustamt' + adjustamt);

        //    if (TopAmount < 1) {
        //        mAmt = (parseFloat(balanceamt));
        //    }
        //    else {
        //        mAmt = adjustamt
        //    }
        //    //alert('mAmt' + mAmt);
        //    EnteredMamt = (parseFloat(already)) + (parseFloat(mAmt));
        //    //alert('EnteredMamt' + EnteredMamt);
        //    var checkbal = (parseFloat(balanceamt)) - (parseFloat(EnteredMamt));
        //    //alert('checkbal' + checkbal)
        //    if (checkbal < 0) {
        //        //alert('balanceamt < EnteredMamt')
        //        finalamt = parseFloat(balanceamt);
        //    }
        //    else {
        //        //alert('balanceamt < EnteredMamt not')
        //        finalamt = parseFloat(EnteredMamt);
        //    }
        //    //alert('finalamt' + finalamt)

        //    if (checkbool == true) {
        //        $('#TxtA_' + a + '').val(finalamt.toFixed(2));
        //    }
        //    else {
        //        $('#TxtA_' + a + '').val(0);
        //    }

        //    CheckAdjAgaintsInvoices();
        //    CheckOnAccount();
        //});

        //$("#RefAdjdata tbody").on('focusout', '.txtfvalue', function () {
        //    var currentRow = $(this).closest("tr");
        //    var a = $(this).attr("alt");
        //    var finaladj = 0;
        //    var TopAmount = parseFloat($("#addAmt").val());
        //    var adjsum = 0;
        //    var balanceamt = 0;
        //    balanceamt = currentRow.find("td:eq(9)").text();

        //    var already = $('#TxtA_' + a + '').val();
        //    if (already == null) {
        //        already = 0;
        //    }

        //    $('#RefAdjdata tr:not(:first)').each(function () {
        //        var tds = $(this).find('td');
        //        var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
        //        adjsum += (parseFloat(abc));
        //    });


        //    if (parseFloat(already) > parseFloat(balanceamt)) {
        //        alert('Adjustment Amount Greater than Pending Amount..');
        //        $('#TxtA_' + a + '').val(0);
        //    }
        //    else {
        //        var adjustamt = (parseFloat(TopAmount)) - (parseFloat(adjsum));

        //        if (TopAmount < 1) {
        //        }
        //        else {
        //            if (adjustamt < 0) {
        //                alert('Adjustments are more than Document Amount..');
        //                $('#TxtA_' + a + '').val(0);
        //            }
        //            else {
        //            }
        //        }
        //    }
        //    CheckAdjAgaintsInvoices();
        //    CheckOnAccount();
        //});

        //$('#RefAddClear').click(function () {
        //    $('#RefAdjdata tr:not(:first)').each(function () {
        //        var tds = $(this).find('td');
        //        tds.find('input[type="checkbox"]').prop("checked", false);
        //        $('#TxtA_' + tds.eq(0).text() + '').val(0);
        //    })
        //    $('#AdjAgaintsInvoices').html('Adj.Against Invoice: 0:00');
        //    $('#OnAccount').html('On Account: 0:00');
        //});

    });
    function OSGridReload() {
        $('#RefAdjdataN').jqGrid('clearGridData');
        $("#RefAdjdataN").jqGrid("GridUnload");
        //$('#RefAdjdata').trigger('reloadGrid');
        $("#RefAdjdataN").trigger("reloadGrid", [{ current: true }]);
        var ColName, Coldata;

        //var ModelData = {};
        //ModelData["Code"] = $('#addCode').val();
        //ModelData["Branch"] = $('#addBranch').val();
        //ModelData["SubType"] = $('#hdnSubType').val();
        //ModelData["AmtType"] = $("input[name=AmtType]:checked").val();
        //ModelData["LocationCode"] = $('#addLocationCode').val();

        var sPathUrl = '@Url.Action("GetGridStructureRecords")?id=CROSList' + '&Branch=' + $('#addBranch').val() + '&SubType=' + $('#hdnSubType').val() + '&LocationCode=' + $('#addLocationCode').val() +'&Code=' + $('#addCode').val() + '&AcType=' + $("input[name=AmtType]:checked").val();
        var sUrlpath = '@Url.Action("GetGridData")?ViewDataId=CROSList' + '&Code=' + $('#addCode').val() + '&AcType=' + $("input[name=AmtType]:checked").val() + '&ReportTypeL='+$('#hdnTempDOCD').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
               
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                var minfox = obj[4].split("|");
                $('#AdvancesAC').html("Advances(On A / C): "+ minfox[0]);
                $('#NetOuststanding').html("Net O/S: " + minfox[1]);
                $('#ConsOuststanding').html("Cons.O/S: " + minfox[2]);
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function CreateGridData() {
            $('#RefAdjdataN').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#listpager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                height:150,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                //scroll: false,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                scrollrows: true,
                onSelectRow: function (id, status, e) {
                    $('.spinner').hide();
                },
                ondblClickRow: function (id) {
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    var ids = jQuery("#RefAdjdataN").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        
                        var beChecked = "<input type ='checkbox' atr='" + jQuery("#RefAdjdataN").getCell(rowId, "SrNo")+"'    id='" + jQuery("#RefAdjdataN").getCell(rowId, "SrNo") + "' value='" + jQuery("#RefAdjdataN").getCell(rowId, "SrNo") + "'   class='OSGrid' name='OSGrid'  style='height: 22px;width: 19px;' />"; //onclick = 'JQGridCheckbox();'
                        var LoadGQty = "<center><input type ='text' alt='" + jQuery("#RefAdjdataN").getCell(rowId, "SrNo") +"' value='0' id=OSAmt" + jQuery("#RefAdjdataN").getCell(rowId, "SrNo") + " class='form-control OSAmt' name='OSAmt'   style='width:100px;' disabled /></center>";//  onblur='QtysCheck()'
                        jQuery("#RefAdjdataN").jqGrid('setRowData', rowId, { 'Adj Document': beChecked, 'Adj Amount': LoadGQty });
                    }
                    $('.spinner').hide();

                    $("#ResfAdjdataFooter").removeClass("hidden");
                    AutoSelectCheckBox();
                    CheckAdjAgaintsInvoices();
                    CheckOnAccount();
                    //if ($('#hdnSessionFlag').val() != "Add")
                    //{
                    //    AutoSelectCheckBox();
                    //    CheckAdjAgaintsInvoices();
                    //    CheckOnAccount();
                    //}

                },
            });
            jQuery("#RefAdjdataN").jqGrid('navGrid', "#listpager",
            { edit: false, add: false, del: false, print:false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#RefAdjdataN").jqGrid("setFrozenColumns");
            $("#RefAdjdataN tbody").on('click', '.OSGrid', function () {
                

                var currentRow = $(this).closest("tr");
                var a = $(this).attr("atr");
                var checkbool = currentRow.find('td').find('input[type="checkbox"]').is(':checked');
                var mAmt = 0;
                var TopAmount = parseFloat($("#addAmt").val());
                var adjsum = 0;
                var finalamt;
                var balanceamt = 0;
                var EnteredMamt = 0;
                balanceamt = currentRow.find("td:eq(9)").text();

                //alert('balanceamt' + balanceamt)
                $('#RefAdjdataN tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    //if (tds.find('input[type="checkbox"]').is(':checked')) {
                    var abc = $('#OSAmt' + tds.eq(0).text() + '').val();
                    adjsum += (parseFloat(abc));
                    //}
                });
                var already = $('#OSAmt' + a + '').val();
                if (already == null) {
                    already = 0;
                }
                var adjustamt = (parseFloat(TopAmount)) - (parseFloat(adjsum));

                //alert('adjustamt' + adjustamt);

                if (TopAmount < 1) {
                    mAmt = (parseFloat(balanceamt));
                }
                else {
                    mAmt = adjustamt
                }
                //alert('mAmt' + mAmt);
                EnteredMamt = (parseFloat(already)) + (parseFloat(mAmt));
                //alert('EnteredMamt' + EnteredMamt);
                var checkbal = (parseFloat(balanceamt)) - (parseFloat(EnteredMamt));
                //alert('checkbal' + checkbal)
                if (checkbal < 0) {
                    //alert('balanceamt < EnteredMamt')
                    finalamt = parseFloat(balanceamt);
                }
                else {
                    //alert('balanceamt < EnteredMamt not')
                    finalamt = parseFloat(EnteredMamt);
                }
                //alert('finalamt' + finalamt)

                if (checkbool == true) {
                    $('#OSAmt' + a + '').val(finalamt.toFixed(2));
                    $('#OSAmt' + a + '').prop("disabled", false);
                    //$(this).closest("tr").addClass("Selectrow");
                }
                else {
                    $('#OSAmt' + a + '').val(0);
                    $('#OSAmt' + a + '').prop("disabled", true);
                    //$(this).closest("tr").removeClass("Selectrow");
                }

                CheckAdjAgaintsInvoices();
                CheckOnAccount();
            });
            $("#RefAdjdataN tbody").on('focusout', '.OSAmt', function () {
                
                var currentRow = $(this).closest("tr");
                var a = $(this).attr("alt");
                var finaladj = 0;
                var TopAmount = parseFloat($("#addAmt").val());
                var adjsum = 0;
                var balanceamt = 0;
                balanceamt = currentRow.find("td:eq(9)").text();

                var already = $('#OSAmt' + a + '').val();
                if (already == null) {
                    already = 0;
                }

                $('#RefAdjdataN tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var abc = $('#OSAmt' + tds.eq(0).text() + '').val();
                    adjsum += (parseFloat(abc));
                });


                if (parseFloat(already) > parseFloat(balanceamt)) {
                    alert('Adjustment Amount Greater than Pending Amount..');
                    $('#OSAmt' + a + '').val(0);
                }
                else {
                    var adjustamt = (parseFloat(TopAmount)) - (parseFloat(adjsum));

                    if (TopAmount < 1) {
                    }
                    else {
                        if (adjustamt < 0) {
                            alert('Adjustments are more than Document Amount..');
                            $('#OSAmt' + a + '').val(0);
                        }
                        else {
                        }
                    }
                }
                CheckAdjAgaintsInvoices();
                CheckOnAccount();
            });
            $('#RefAddClear').click(function () {
                $('#RefAdjdataN tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    tds.find('input[type="checkbox"]').prop("checked", false);
                    $('#OSAmt' + tds.eq(0).text() + '').val(0);
                    $('#OSAmt' + tds.eq(0).text() + '').prop("disabled", true);
                    //$(this).closest("tr").removeClass("Selectrow");

                })
                $('#AdjAgaintsInvoices').html('Adj.Against Invoice: 0:00');
                $('#OnAccount').html('On Account: 0:00');
            });
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#listpager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            //$("#searchmodfbox_RefAdjdata").css('z-index', 3000);
        };

    }
    function AutoSelectCheckBox() {
        debugger;
        var SelectedOs = $("#hdnTempDOCD").val().split(",");
        var SelectedOsAmt = $("#hdnTempDOCDAmt").val().split(",");
        //for (var i = 0; i < SelectedOs.length; i++)
        {
            $("#RefAdjdataN > tbody  > tr").each(function () {
                var TableKey = $(this).find('td:eq(14)').text();
                debugger;
                if ($.inArray(TableKey, SelectedOs) > -1) {
                    //yourElement in yourArray
                    //code here
                    var i = $.inArray(TableKey, SelectedOs);
                    $(this).find("input[class='OSGrid']").prop("checked", true);
                    $(this).find("input[name='OSAmt']").val(SelectedOsAmt[i]);
                    $(this).find("input[name='OSAmt']").prop("disabled", false);
                } else {
                    $(this).find("input[class='OSGrid']").prop("checked", false);
                    $(this).find("input[name='OSAmt']").val(0);
                    $(this).find("input[name='OSAmt']").prop("disabled", true);
                }


                //if (TableKey == SelectedOs[i]) {
                //    debugger;
                //    $(this).find("input[class='OSGrid']").prop("checked", true);
                //    $(this).find("input[name='OSAmt']").val(SelectedOsAmt[i]);
                //    $(this).find("input[name='OSAmt']").prop("disabled", false);
                //    //$(this).closest("tr").addClass("Selectrow");
                //}
                //else {
                //    $(this).find("input[class='OSGrid']").prop("checked", false);
                //    $(this).find("input[name='OSAmt']").val(0);
                //    $(this).find("input[name='OSAmt']").prop("disabled", true);
                //    //(this).closest("tr").removeClass("Selectrow");
                //}
            });
        }
    }
    function CheckAdjAgaintsInvoices() {
        var adjsum1 = 0;
        $('#RefAdjdataN tr:not(:first)').each(function () {
            var tds1 = $(this).find('td');
            //if (tds1.find('input[type="checkbox"]').is(':checked')) {
            var abc1 = $('#OSAmt' + tds1.eq(0).text() + '').val();
            adjsum1 += (parseFloat(abc1));
        });
        $('#AdjAgaintsInvoices').html('Adj.Against Invoice:' + adjsum1.toFixed(2));
    }
    function CheckOnAccount() {
        var adjsum2 = 0;
        var TopAmount1 = parseFloat($("#addAmt").val());
        var TotalAmt = 0;
        $('#RefAdjdataN tr:not(:first)').each(function () {
            var tds2 = $(this).find('td');
            //if (tds2.find('input[type="checkbox"]').is(':checked')) {
            var abc2 = $('#OSAmt' + tds2.eq(0).text() + '').val();
            adjsum2 += (parseFloat(abc2));
            if (TopAmount1 == 0) {
                TotalAmt = 0;
            }
            else {
                TotalAmt = TopAmount1 - adjsum2;
            }
        });
        $('#OnAccount').html('On Account:' + (parseFloat(TotalAmt)).toFixed(2));
    }


    //function CheckAdjAgaintsInvoices() {
    //    var adjsum1 = 0;
    //    $('#RefAdjdata tr:not(:first)').each(function () {
    //        var tds1 = $(this).find('td');
    //        //if (tds1.find('input[type="checkbox"]').is(':checked')) {
    //        var abc1 = $('#TxtA_' + tds1.eq(0).text() + '').val();
    //        adjsum1 += (parseFloat(abc1));
    //    });
    //    $('#AdjAgaintsInvoices').html('Adj.Against Invoice:' + adjsum1.toFixed(2));
    //}

    //function CheckOnAccount() {
    //    var adjsum2 = 0;
    //    var TopAmount1 = parseFloat($("#addAmt").val());
    //    var TotalAmt = 0;
    //    $('#RefAdjdata tr:not(:first)').each(function () {
    //        var tds2 = $(this).find('td');
    //        //if (tds2.find('input[type="checkbox"]').is(':checked')) {
    //        var abc2 = $('#TxtA_' + tds2.eq(0).text() + '').val();
    //        adjsum2 += (parseFloat(abc2));
    //        if (TopAmount1 == 0) {
    //            TotalAmt = 0;
    //        }
    //        else {
    //            TotalAmt = TopAmount1 - adjsum2;
    //        }
    //    });
    //    $('#OnAccount').html('On Account:' + (parseFloat(TotalAmt)).toFixed(2));
    //}
</script>

<div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
    <table id="RefAdjdataN" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
    <div id="listpager" style="height:32px;width:100%;"></div>
    <div id="ResfAdjdataFooter" class="modal-footer hidden" style="background-color:#cccccc">
        <label class="col-sm-2 control-label" style="padding-right:10px;" id="AdvancesAC">Advances (On A/C): @Model.PartyAdvances</label>
        <label class="col-sm-2 control-label" style="padding-right:unset;" id="NetOuststanding">Net O/S: @Model.PartyNetOutstanding</label>
        <label class="col-sm-2 control-label" style="padding-right:unset;" id="ConsOuststanding">Cons.O/S: @Model.PartyConsOutstanding</label>
        <label class="col-sm-2 control-label" style="padding-right:unset;" id="AdjAgaintsInvoices"></label>
        <label class="col-sm-2 control-label" style="padding-right:10px;" id="OnAccount">On Account:0</label>

        <button type="button" class="btn btn-warning" id="RefAddClear">Clear All</button>

    </div>

</div>
@*<div class="grid" style="max-height: 200px; width: auto; overflow: auto;">
    <table id="RefAdjdata" class="zui-table">
        <thead>
            <tr role="row" style="font-family:Tahoma;font-size:9pt;height:25px;">
                <th style="vertical-align:inherit;width:10%;">Sr.</th>
                <th style="vertical-align:inherit;width:10%;">Type</th>
                <th style="vertical-align:inherit;width:0%;" hidden="hidden">Prefix</th>
                <th style="vertical-align:inherit;width:10%;">Serial</th>
                <th style="vertical-align:inherit;width:5%;">Sno</th>
                <th style="vertical-align:inherit;width:20%;">Bill No</th>
                <th style="vertical-align:inherit;width:20%;">Date</th>
                <th style="vertical-align:inherit;width:10%;">Curr</th>
                <th style="vertical-align:inherit;width:10%;">Bill Amt</th>
                <th style="vertical-align:inherit;width:10%;">Balance</th>
                <th style="vertical-align:inherit;width:2%;">Full</th>
                <th style="vertical-align:inherit;width:10%;">Adjustment</th>
                <th style="vertical-align:inherit;width:10%;" hidden="hidden">Narration</th>
                <th style="vertical-align:inherit;width:10%;" hidden="hidden">ParentKey</th>
                <th style="vertical-align:inherit;width:10%;" hidden="hidden">TableKey</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.OSAdjList != null)
            {
                for (int i = 0; i < Model.OSAdjList.Count; i++)
                {
                    <tr style="font-family:Tahoma;font-size:9pt;height:25px;">
                        <td style="vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].tempId)</td>
                        <td style="vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].Type)</td>
                        <td style="vertical-align:inherit;width:0%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].Prefix)</td>
                        <td style="vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].Srl)</td>
                        <td style="vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].Sno)</td>
                        <td style="vertical-align:inherit;width:20%;">@Html.DisplayFor(m => Model.OSAdjList[i].BillNumber)</td>
                        <td style="vertical-align:inherit;width:20%;">@Html.DisplayFor(m => Model.OSAdjList[i].StrBillDate)</td>
                        <td style="vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].CurrName)</td>
                        <td style="text-align:right;vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].BillAmt)</td>
                        <td style="text-align:right;vertical-align:inherit;width:10%;">@Html.DisplayFor(m => Model.OSAdjList[i].BalanceAmt)</td>
                        <td style="text-align:center;width:10%;">@Html.CheckBoxFor(m => Model.OSAdjList[i].OSAdjFlag, new { @class = "rolemaster_AccessType", @atr = Model.OSAdjList[i].tempId })</td>
                        <td contenteditable="true" class="sum" style="text-align:right;vertical-align:inherit;width:10%;"><input type="text" id="TxtA_@Model.OSAdjList[i].tempId" alt="@Model.OSAdjList[i].tempId" class="txtfvalue" style="text-align:right" value="@Model.OSAdjList[i].AdjustAmt" /></td>
                        <td style="vertical-align:inherit;width:10%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].Narr)</td>
                        <td style="vertical-align:inherit;width:10%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].ParentKey)</td>
                        <td style="vertical-align:inherit;width:10%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].TableKey)</td>
                        <td style="vertical-align:inherit;width:10%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].MainType)</td>
                        <td style="vertical-align:inherit;width:10%;" hidden="hidden">@Html.DisplayFor(m => Model.OSAdjList[i].SubType)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div id="mm"></div>
</div>

<div class="modal-footer" style="background-color:#cccccc">
    <label class="col-sm-2 control-label" style="padding-right:10px;" id="AdvancesAC">Advances (On A/C): @Model.PartyAdvances</label>
    <label class="col-sm-2 control-label" style="padding-right:unset;" id="NetOuststanding">Net O/S: @Model.PartyNetOutstanding</label>
    <label class="col-sm-2 control-label" style="padding-right:unset;" id="ConsOuststanding">Cons.O/S: @Model.PartyConsOutstanding</label>
    <label class="col-sm-2 control-label" style="padding-right:unset;" id="AdjAgaintsInvoices"></label>
    <label class="col-sm-2 control-label" style="padding-right:10px;" id="OnAccount">On Account:</label>

    <button type="button" class="btn btn-warning" id="RefAddClear">Clear All</button>

</div>*@