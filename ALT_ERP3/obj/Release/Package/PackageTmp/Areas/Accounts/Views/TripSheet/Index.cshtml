@model ALT_ERP3.Areas.Accounts.Models.TripSheetModel
@using Common
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<header id="headerfixedtop2" class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header (@Model.Type)</b>
        <span class="tools pull-right">
            <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel">
    <div class="panel-body">
        <div class="form-horizontal" id="frmaddnewadvancebal" role="form" style="margin-top:32px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none; padding:3px;"></div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Voucher No:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Srl, new { @class = "form-control", @id = "Srl", @Name = "Srl", @style = "height:28px;font-size:13pt;font-weight:bolder;", @Value = Model.Srl })
                </div>
                <label class="col-sm-1 control-label">Bank Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Bank, new { @class = "input-large search-query", @id = "Bank", @Name = "Bank", @style = "width:99%;" })
                </div>
            </div>
           
            <div class="form-group">
                <label class="col-sm-1 control-label">Voucher Date:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.DocuDate, new { @type = "text", @class = "form-control", @id = "DocuDate", @Name = "DocuDate", @style = "height:28px;font:size:13pt;font-weight:bolder;", @Value = Model.DocDate.ToString("dd-MM-yyyy") })
                </div>
                <label class="col-sm-1 control-label">Amount:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(m => m.Amt, new {@type="number", @class = "form-control", @id = "Amt", @Name = "Amt", @style = "width:99%;text-align:right;", @Value = Model.Amt })
                </div>
                <label class="col-sm-1 control-label">Cheque No:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(m => m.ChequeNo, new { @class = "form-control", @id = "ChequeNo", @Name = "ChequeNo", @style = "width:99%;", @Value = Model.ChequeNo })
                </div>
            </div>
            
            <div id="divLedgerTable" style="min-height:360px;">
                @Html.Partial("LedgerList", Model)
            </div>
        </div>
    </div>
</section>
<div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
    <div class="row" style="padding-top:2px;">
        <label class="col-sm-1 control-label" style="padding-left:20px;">Remark:</label>
        <div class="col-sm-4">
            @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", @id = "Remark", @Name = "Remark", @style = "width:99%;", @Value = Model.Remark })
        </div>
        

    </div>
</div>
<footer id="saveFooter" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            <button class="btn btn-warning" id="btnAddOns" style="font-size: 13px;padding:3px 12px;" name="Command">AddOns</button>
            <button class="btn btn-info" id="btnAddNote" style="font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>
            <button class="btn btn-warning" id="btnAddDoc" style="font-size: 13px;padding:3px 12px;" name="Command">Attach Doc</button>
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "Delete")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnSave">Save</button>
                }

                @if (Model.Mode == "Delete")
                {<button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                }
                <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>
@Html.HiddenFor(x => x.Mode, new { @id = "hdnMode" })
@Html.HiddenFor(x => x.MainType, new { @id = "hdnMainType" })
@Html.HiddenFor(x => x.Type, new { @id = "hdnType" })
@Html.HiddenFor(x => x.SubType, new { @id = "hdnSubType" })

<script>
    $(document).ready(function () {

        GetMyFavorites('@Model.ViewDataId');
        loadBank()
        
        $('#DocuDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

         $('#btnDelete').click(function () {
            event.preventDefault();
            $("#ErrorMessage").hide();
             if ($("#Srl").val() == '') {
                 alert('Missing Serial');
                return;
            }

            var ModelData = {};
             ModelData["Srl"] = $("#Srl").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteData")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    if (data.Status == 'Success') {

                        window.location.href = "/Accounts/TransactionMaintenanceGrid?ViewDataId=@Model.ViewDataId&MainType=@Model.MainType&Module=@Model.Module&TableName=@Model.TableName&optiontype=@Model.OptionType&optioncode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2"
                    }
                    else {
                        //$('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });


        $('#btnSave').click(function () {
            event.preventDefault();
             if ($("#DocuDate").val() == '') {
                alert('Please Select DocDate.');
                return;
             }
             if ($("#Bank").val() == '') {
                 alert('Please Select Bank.');
                 return;
             }
             if ($("#Account").val() == '') {
                 alert('Please Select Broker.');
                 return;
             }
            //var AddonSerial = [];
            //$('#addongrid').find('tr[id="datacharge"]').each(function () {
            //    var $tds = $(this).find('td');
            //    var myDets = {
            //        Fld: $tds.eq(0).text(),
            //        ApplCode: ($tds.eq(4).text() == "C" || $tds.eq(4).text() == "M") ? $tds.find(".addontxtfvalue").val() : $tds.find("input[class='addontxtfvalue']").val(),
            //        FldType: $tds.eq(4).text()
            //    }

            //    AddonSerial.push(myDets);
            //});
            var url = '@Url.Action("SaveData")';
            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Account"] = $("#Account").val();
            ModelData["Bank"] = $("#Bank").val();
            ModelData["MainType"] = $("#hdnMainType").val();
            ModelData["SubType"] = $("#hdnSubType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Prefix"] = $("#hdnPrefix").val();
            ModelData["Amt"] = $("#Amt").val();
            ModelData["NetAmt"] = $("#NetAmt").val();
            ModelData["Srl"] = $("#Srl").val();
            ModelData["Mode"] = $("#hdnMode").val();
            /*ModelData["AddOnList"] = AddonSerial;*/
            ModelData["Header"] = '@Model.Header';
            ModelData["Remark"] = $("#Remark").val();
            ModelData["ChequeNo"] = $("#ChequeNo").val();
            ModelData["AdvType"] = $("#AdvType").val();
            ModelData["Controller2"] = '@Model.Controller2';
            ModelData["Module"] = '@Model.Module';
            ModelData["ViewDataId"] = '@Model.ViewDataId';
            ModelData["TableName"] = '@Model.TableName';
            ModelData["OptionType"] = '@Model.OptionType';
            ModelData["OptionCode"] = '@Model.OptionCode';
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        alert("Document Saved as " + data.NewSrl + "");
                        if ($('#hdnMode').val() != "Add") {
                            window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                        }
                        else
                        {
                            window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=@Model.Type&ChangeLog=Add&Mode=Add&ViewDataId=@Model.ViewDataId&Header=@Model.Header&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Controller2=@Model.Controller2"
                        }

                    }
                    else if (data.Status == 'failure') {
                        $('.spinner').hide();
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Select Atleast One Record For Ledger.');
                    }
                    else {
                        $('.spinner').hide();
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").html(data.html);
                    }
                },
            });
        });
    });

  
     function loadBank() {
        var url = '@Url.Action("GetBankList")';
         $('#Bank').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength:0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Bank', text: '@Model.BankName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };



   
</script>