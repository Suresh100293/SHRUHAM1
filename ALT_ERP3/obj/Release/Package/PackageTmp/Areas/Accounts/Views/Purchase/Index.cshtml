@model ALT_ERP3.PurchaseVM
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
@using Common;
<style>
    .form-horizontal .control-label {
        padding-top: 6px;
        color: black;
        text-align: left;
    }

    .headername {
        font-size: medium;
        font-family: Tahoma;
        font-weight: 700;
    }

    /*.fixhead {
        text-transform: uppercase;
    }*/

    .modal-dialog {
        /*margin: 124px auto;*/
        align-self: center;
    }

    .form-group {
        margin-bottom: 5px;
    }

    .btnsaveclass {
        background-color: #95b75d;
        border-color: #95b75d;
        color: #FFFFFF;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .tabcontent {
        overflow: scroll;
        height: 380px;
        padding: 0px 0px;
    }

    .select2-container .wrap.select2-selection--single .select2-selection__rendered {
        word-wrap: break-word;
        text-overflow: inherit;
        white-space: normal;
    }
</style>

<header class="header fixed-top" id="headerdiv" style=" position: fixed; background-color: lightgray; padding: 6px; width: 100%; margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt" id="headercaption">@Model.id (@Model.Type)</b>
        <span class="tools pull-right">
            <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">&nbsp;&nbsp;@Model.Mode Mode&nbsp;</b>
        </span>
        <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
            <button id="nextbutton" class="btn btn-success" style="font-size:14px;padding:3px 12px;" tooltip="Show Next Voucher" onclick=NextEntry("N");>Next >></button>
        </div>
        <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
            <button id="previousbutton" class="btn btn-success" style="font-size:14px;padding:3px 12px;" tooltip="Show Previous Voucher" onclick=NextEntry("P");><< Previous</button>
        </div>
    </div>
</header>

<div class="panel">
    <div class="panel-body" style="padding:18px 3px 5px 3px;">
        <div class="form-horizontal" id="frmpurchase" role="form" style="margin-top:3%;">
            @if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
            {
                <script>
                    $(document).ready(function () {
                        $(".panel").height(560);
                        $('#DocuDate').focus();
                        $('#DocuDate').datepicker({
                            format: 'dd-mm-yyyy',
                            autoclose: true,
                        });
                        $('#OrdDate').datepicker({
                            format: 'dd-mm-yyyy',
                            autoclose: true,
                        });

                        if (($("#hdnSType").val() == "ES") || ($("#hdnSType").val() == "EP")) {
                            $("#lblDate").text('Enq.Ref.Dt:');
                            $("#lblNo").text('Enq.Ref:');
                        } else if (($("#hdnSType").val() == "QS") || ($("#hdnSType").val() == "QP")) {
                            $("#lblDate").text('Qtn.Ref.Dt:');
                            $("#lblNo").text('Qtn.Ref:');
                        } else if (($("#hdnSType").val() == "OS") || ($("#hdnSType").val() == "OP") || ($("#hdnSType").val() == "OC") || ($("#hdnSType").val() == "RS") || ($("#hdnSType").val() == "CS")) {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        } else if (($("#hdnSType").val() == "PI")) {
                            $("#lblDate").text('PInv.Ref.Dt:');
                            $("#lblNo").text('Prof.Ref:');
                        } else if (($("#hdnSType").val() == "IC") || ($("#hdnSType").val() == "PX")) {
                            $("#lblDate").text('Chln.Ref.Dt:');
                            $("#lblNo").text('Chln.Ref:');
                        } else if (($("#hdnSType").val() == "CP") || ($("#hdnSType").val() == "RP") || ($("#hdnSType").val() == "NP") || ($("#hdnSType").val() == "IM") || ($("#hdnSType").val() == "GP") || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "SX") {
                            $("#lblDate").text('Bill Ref.Dt:');
                            $("#lblNo").text('Bill Ref:');
                        } else if (($("#hdnSType").val() == "OC") || ($("#hdnSType").val() == "RS") || ($("#hdnSType").val() == "CS")) {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        } else if ($("#hdnSType").val() == "PK") {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        }

                        if ($('#hdnMode').val() == "Edit" && ($('#hdnSType').val() == "QP" || $('#hdnSType').val() == "QS" || $('#hdnSType').val() == "OP" || $('#hdnSType').val() == "OS" || $('#hdnSType').val() == "EP" || $('#hdnSType').val() == "ES")) {
                            $('#btnTabRev').show();
                        }
                    });
                </script>
                <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none;padding:2px;"></div>
                @Html.HiddenFor(x => x.LocationCode, new { @id = "hdnLocationCode" })
            }
            else
            {
                <script>
                    $(document).ready(function () {
                        $(".panel").height(560);
                        $('#DocuDate').focus();
                        $('#DocuDate').datepicker({
                            format: 'dd-mm-yyyy',
                            autoclose: true,
                        });
                        $('#OrdDate').datepicker({
                            format: 'dd-mm-yyyy',
                            autoclose: true,
                        });
                        if (('@Model.MainType' == "PR") || ('@Model.SubType' == "EP")) {
                            $("#Sales").text("Purchase");
                            $("#ABroker").hide();
                            $("#ACRM").hide();
                        }
                        if (('@Model.MainType' == "SL") || ('@Model.SubType' == "ES")) {
                            $("#Sales").text("Sales");
                            $("#ABroker").hide();
                            $("#ACRM").hide();
                        }

                        if (($("#hdnSType").val() == "ES") || ($("#hdnSType").val() == "EP")) {
                            $("#lblDate").text('Enq.Ref.Dt:');
                            $("#lblNo").text('Enq.Ref:');
                        } else if (($("#hdnSType").val() == "QS") || ($("#hdnSType").val() == "QP")) {
                            $("#lblDate").text('Qtn.Ref.Dt:');
                            $("#lblNo").text('Qtn.Ref:');
                        } else if (($("#hdnSType").val() == "OS") || ($("#hdnSType").val() == "OP") || ($("#hdnSType").val() == "OC") || ($("#hdnSType").val() == "RS") || ($("#hdnSType").val() == "CS")) {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        } else if (($("#hdnSType").val() == "PI")) {
                            $("#lblDate").text('Prof.Ref.Dt:');
                            $("#lblNo").text('Prof.Ref:');
                        } else if (($("#hdnSType").val() == "IC") || ($("#hdnSType").val() == "PX")) {
                            $("#lblDate").text('Chln.Ref.Dt:');
                            $("#lblNo").text('Chln.Ref:');
                        } else if (($("#hdnSType").val() == "CP") || ($("#hdnSType").val() == "RP") || ($("#hdnSType").val() == "NP") || ($("#hdnSType").val() == "IM") || ($("#hdnSType").val() == "GP") || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "SX") {
                            $("#lblDate").text('Bill Ref.Dt:');
                            $("#lblNo").text('Bill Ref:');
                        } else if (($("#hdnSType").val() == "OC") || ($("#hdnSType").val() == "RS") || ($("#hdnSType").val() == "CS")) {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        } else if ($("#hdnSType").val() == "PK") {
                            $("#lblDate").text('Order Ref.Dt:');
                            $("#lblNo").text('Order Ref:');
                        }
                        $("#btnAddOns").click(function (event) {
                            event.preventDefault();
                            $('#addonmodel').modal({
                                backdrop: 'static',
                                keyboard: false
                            });
                            $('#addongrid input[id=txtf_F001]').focus();
                            $('#addonmodel').modal('show');
                        });
                    });
                </script>
                <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none; padding:2px;"></div>
            }
            <div class="form-group" style="padding-left:10px;width:98%;">
                @if (Model.SubType == "QS" || Model.SubType == "QP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%">Quote Date:</label>
                }
                else if (Model.SubType == "ES" || Model.SubType == "EP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%">Enquiry Date:</label>
                }
                else if (Model.SubType == "OS" || Model.SubType == "OP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%">Order Date:</label>
                }
                else
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%">Document Dt:</label>
                }
                <div class="col-sm-2" style="width:150px;">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.DocuDate, new { @type = "text", @class = "form-control", @id = "DocuDate", @Name = "DocuDate", @Value = Model.DocDate.ToString("dd-MM-yyyy"), @style = "text-align:center;font-weight:bolder;font-size:14px;" })
                    </div>
                </div>
                @if (Model.SubType == "QS" || Model.SubType == "QP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%">Quote No:</label>
                }
                else if (Model.SubType == "ES" || Model.SubType == "EP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%">Enquiry No:</label>
                }
                else if (Model.SubType == "OS" || Model.SubType == "OP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%">Order No:</label>
                }
                else
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;">Document No:</label>
                }
                <div class="col-sm-2" style="width:150px;">
                    @Html.TextBoxFor(x => x.Srl, new { @class = "form-control", @id = "Srl", @Name = "Srl", @disabled = "disabled", @Value = Model.Srl, @style = "font-weight:bolder;font-size:14px;" })
                </div>
                @if (Model.Mode == "Add")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;">Prev Srl:</label>
                    <div class="col-sm-2" style="width:150px;">
                        <input type="text" value="@ViewData["PrevSrl"]" style="font-weight:bolder;font-size:14px;" disabled="disabled" class="form-control" />
                    </div>
                }

                <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;" id="lblNo">Enquiry No:</label>
                <div class="col-sm-2" style="width:150px;">
                    @Html.TextBoxFor(x => x.BillNumber, new { @class = "form-control", @id = "BillNumber", @Name = "BillNumber", @Value = Model.BillNumber })
                </div>
                <label class="col-sm-1 control-label" style="padding-right:0px;width:5.3%;padding-left:0px;" id="lblDate">Date:</label>
                <div class="col-sm-2" style="width:150px;">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.OrdDate, new { @type = "text", @class = "form-control", @id = "OrdDate", @Name = "OrdDate", @Value = Model.BillDate.ToString("dd-MM-yyyy") })
                    </div>
                </div>
            </div>
            <div class="form-group" style="padding-left:10px;width:98%">
                <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%;" id="gsttyplbl">GST Type:</label>
                <div class="col-sm-2" id="gsttypdiv" style="width:150px;">
                    @Html.TextBoxFor(x => x.GSTType, new
               {
                   @class = "input-large search-query",
                   @id = "GSTType",
                   @Name = "GSTType",
                   @Style = "width:100%;height:26px;"
               })
                </div>
                <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;">Warehouse:</label>
                <div class="col-sm-2" style="width:150px;">
                    @Html.DropDownListFor(x => x.LocationCode, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @id = "LocationCode",
                   @name = "LocationCode"
               })
                </div>
                <div id="CurrDiv">
                    <div class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;">Currency:</div>
                    <div class="col-sm-2" style="width:150px;">
                        @Html.DropDownListFor(x => x.CurrName, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "CurrName", @Name = "CurrName" })
                    </div>
                    <div class="col-sm-1 control-label" style="padding-right:0px;width:5.3%;padding-left:0px;">Curr. Rate:</div>
                    <div class="col-sm-2" style="width:150px;">
                        @Html.TextBoxFor(x => x.CurrRate, new { @class = "form-control", @id = "CurrRate", @Name = "CurrRate", @style = "text-align:right;" })
                    </div>
                </div>

                <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;" id="lblDocSource">Doc. Source:</label>
                <div class="col-sm-2" style="width:150px;">
                    @Html.DropDownListFor(m => m.RefDoc, DropdownHelper.EmptyList(), new
               {
                   @id = "RefDoc",
                   @class = "form-control",
                   @style = "font-weight:bolder;"
               })
                </div>
                <div class="col-sm-2" style="width:150px;padding-left:3px;">
                    <button type="button" style="height:28px;padding-top:4px;" class="btn btn-primary" id="PickData">Source Document</button>
                </div>
                @if (Model.IsBarCodeScan == true)
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;width:3%;padding-left:0px;">BarCode:</label>
                    <div class="col-md-2">
                        @Html.TextBoxFor(x => x.BarCode, new { @class = "form-control", @id = "BarCode", @Name = "BarCode", @style = "width:205px;" })
                    </div>
                }
                <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;" id="lblReasonSource">Reason :</label>
                <div class="col-sm-2" style="width:150px;" id="divReasonSource">
                    @Html.DropDownListFor(x => x.ReasonCode, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @id = "ReasonCode",
                   @name = "ReasonCode"
               })
                </div>
                @if (Model.SubType == "RP" || Model.SubType == "NP")
                {
                    <label class="col-sm-1 control-label" style="padding-right:0px;padding-left:0px;">Not Eligible for ITC</label>
                }
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.GSTNoITC, new { @id = "GSTNoITC", @name = "GSTNoITC", @style = "padding-top:4px;" })
                </div>
            </div>

            @Html.HiddenFor(x => x.MainType, new
       {
           @id = "hdnMType"
       })
            @Html.HiddenFor(x => x.SubType, new
       {
           @id = "hdnSType"
       })
            @Html.HiddenFor(x => x.Type, new
       {
           @id = "hdnType"
       })
            @Html.HiddenFor(x => x.Prefix, new
       {
           @id = "hdnPrefix"
       })
        </div>

        <div class="tab">
            <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="Sales">General</button>
            <button class="tablinks" onclick="openCity(event, 'divLedgerTableM')">More Info</button>
            <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')" id="btntabitem">Items</button>
            <button class="tablinks" onclick="openCity(event, 'divLedgerTable3')">Charges</button>
            <button class="tablinks" onclick="openCity(event, 'divLedgerTable4')">Terms</button>
            <button class="tablinks" onclick="openCity(event, 'divRevision')" id="btnTabRev" hidden="hidden">Doc Revision</button>
            <button class="tablinks" onclick="openCity(event, 'divMultiParty')" id="btnMultiParty" hidden="hidden">Multi Vendor</button>
            <button class="tablinks" onclick="openCity(event, 'divRefAdjust')" id="btnRefAdjust">Adjustment</button>
        </div>

        <div id="divLedgerTable" class="tabcontent">
            @Html.Partial("Sales", Model)
        </div>
        <div id="ItemChargeMoreDiv">
            @Html.Partial("ItemChargeMoreView", Model)
        </div>

        <script>
            function openCity(evt, cityName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(cityName).style.display = "block";
                evt.currentTarget.className += " active";
            }
            document.getElementById("Sales").click();
        </script>
    </div>
</div>
@if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
{
    <script>
        $(document).ready(function () {
            $('#txttotitemqty').val(parseFloat(@Model.TotalQty).toFixed(2))
            $('#txttottxable').val(parseFloat(@Model.Taxable).toFixed(2))
            $('#txttotcgst').val(parseFloat(@Model.CGSTAmt).toFixed(2))
            $('#txttotsgst').val(parseFloat(@Model.SGSTAmt).toFixed(2))
            $('#txttotigst').val(parseFloat(@Model.IGSTAmt).toFixed(2))
            $('#txtinvamt').val(parseFloat(@Model.InvoiceAmt).toFixed(2))
        });
    </script>

    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="margin-top:2px;">
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Total Qty:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotitemqty" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.InvoiceAmt, new
           {
               @class = "form-control",
               @style = "width:160px;text-align:right;font-weight:bolder;background-color:gray;color:white;padding-right:5px;font-size:15pt;",
               @Name = "txtinvamt",
               @Id = "txtinvamt",
               @readonly = "readonly"
           })
            </div>
        </div>
    </div>
}
else
{
    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="padding-top:2px;">
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Total Qty:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotitemqty" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                <input type="text" id="txtinvamt" alt="" class="form-control" style="width:130px;border-color:black;background-color:gray;color:white;text-align:right;font-size:11pt;font-weight:bolder;" disabled="disabled" />
            </div>
        </div>
    </div>
}

<footer id="fixedbottom" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        @if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
        {
            <div class="col-sm-3">
                <button class="btn btn-warning" id="EditbtnAddOns" style="font-size: 13px;padding:3px 12px;" name="Command">AddOns</button>
                <button class="btn btn-warning" id="btnAddDoc" style="font-size: 13px;padding:3px 12px;" name="Command">Attach Doc</button>

            </div>
            <div class="col-sm-2" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                T.FAT ERP-iX9, Suchan
            </div>
            <div class="col-sm-7">
                <div class="pull-right">
                    @if (Model.Mode != "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="JustPrint" formtarget="_blank">Print Only</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="JustEmail" formtarget="_blank">Email Only</button>
                    }
                    @if (Model.Mode == "Edit")
                    {
                        if (@Model.SubType == "OP" || @Model.SubType == "OS" || @Model.SubType == "QP" || @Model.SubType == "QS" || @Model.SubType == "ES" || @Model.SubType == "EP")
                        {
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveCopy" formtarget="_blank">Save As</button>
                        }
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnSendSMS">Send SMS</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="BothSaveEmail" formtarget="_blank">Save & Email</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>

                    }
                    @if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="DeleteData">Delete</button>
                    }
                    <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" style="font-size: 13px;padding:3px 12px;margin-right:10px;" class="btn btn-danger" id="Cancel">Cancel</a>
                </div>
            </div>
            <input type="hidden" id="controllername" />
            @Html.HiddenFor(x => x.Mode, new
       {
           @id = "hdnMode"
       })
            <input type="hidden" id="hdnnarrval" />
            <input type="hidden" id="hdnperid" />
            @Html.HiddenFor(x => x.ValueLast, new
       {
           @id = "hdnValueLast"
       })
        }
        else
        {
            <div class="col-sm-3">
                <button class="btn btn-warning" style="font-size: 13px;padding:3px 12px;" id="btnAddOns" name="Command">AddOns</button>
                <button class="btn btn-warning" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" name="Command">Attach Doc</button>
                @*<button class="btn btn-warning" id="btnAddLedPost" name="Command">Ledger Post</button>*@
            </div>
            <div class="col-sm-2" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                T.FAT ERP-iX9, Suchan
            </div>
            <div class="col-sm-7">
                <div class="pull-right">
                    @if (Model.AllowDraftSave == true)
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveDraft">Save Draft and Preview</button>
                    }
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="BothSaveEmail" formtarget="_blank">Save & Email</button>
                    <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="font-size: 13px;margin-right:10px;padding:3px 12px;" id="Cancel">Cancel</a>
                </div>
            </div>
            <input type="hidden" id="controllername" />
            @Html.HiddenFor(x => x.Mode, new
       {
           @id = "hdnMode"
       })
            <input type="hidden" id="hdnnarrval" />
            <input type="hidden" id="hdnperid" />
        }
    </div>
</footer>

<div class="example-modal">
    <div id="ledpostmodel" class="modal modal-primary">
        <div class="modal-dialog" style="width:700px;">
            <div id="ledpostingmodel">
                @Html.Partial("LedgerPosting")
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="pickuplist" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;height:500px;">
            <div id="PickUpList">
                @Html.Partial("PickUp")
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="multiprint" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;">
            <div id="MultiPrintDiv">
                @Html.Partial("MultiPrint")
            </div>
        </div>
    </div>
</div>


<div class="example-modal">
    <div id="emailprint" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;">
            <div id="MultiEmailDiv">
                @Html.Partial("EmailPurSale")
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $(".panel").height(560);
        //var mheight = $(window).height() - 300;
        //alert(mheight);
        //$("#divLedgerTable2.height").height = mheight;
        document.getElementById("headerdiv").style.backgroundColor = '@Session["headerdivcolor"]';
        document.getElementById("headercaption").style.color = '@Session["headercaptioncolor"]';
        document.getElementById("fixedbottom").style.backgroundColor = '@Session["bottomcolor"]';

        loadGstType();
        GetSourceDocument();
        GetCurrencyCode();
        loadLocationCodes();
        loadReasonCode();
        if ($('#hdnSkipStock').val() == "Y" || $('#hdnSkipStock').val() == "y") {
            $('#btntabitem').hide();
            $('#RefDoc').hide();
            $('#PickData').hide();
            $('#divLedgerTable2').hide();
        }

        if ($('#hdnLockWarehouse').val() == "True" || $('#hdnLockWarehouse').val() == "true") {
            $('#LocationCode').prop("disabled", true);
        }
        
        $('#btnRefAdjust').hide();
        if($('#hdnSType').val() == "RP" || $('#hdnSType').val() =="CP" || $('#hdnSType').val() =="RS" || $('#hdnSType').val() == "CS" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "NP"){
             $('#btnRefAdjust').show();
        }
       
        $('#LocationCode').change(function () {
            $("#Store").empty();
            var url = '@Url.Action("GetStoreCode")?Type=' + $('#hdnType').val() + '&SubType=' + $('#hdnSType').val() + '&LocationCode=' + $('#LocationCode').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#Store").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                },
                error: function () {
                    $('.spinner').hide();
                    alert("2-An error occurred while processing the request.");
                }
            });
        });

        if ($('#hdnVATGSTApp').val() == "V") {
            $('#igstfootlbl').html('Tax');
            $('#sgstfootlbl').html('Surcharge');
            $('#cgstfootlbl').html('Add.Tax');
            $('#gsttyplbl').hide();
            $('#gsttypdiv').hide();
        }
        if ($('#hdnCurrConv').val() != "Y") {
            $('#CurrDiv').hide();
        }
        $("#txttotid").val($("#hdnValueLast").val());
        var CGL = $('#hdnMode').val();
        if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
            $('#Srl').prop('disabled', false);
        }
        if (CGL == "Delete" || CGL == "View") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
        }
        var CDP = $('#hdnCheckMode').val();
        if (CDP == "True" || CDP == "true") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            //$('#btnAddDoc').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#BothSaveEmail').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
            if ($('#hdnEnableParty').val() == "True" || $('#hdnEnableParty').val() == "true"){
                $('#PlaceOfSDiv :input').prop("disabled", false);
                $('#DelyCode').prop("disabled", false);
                $('.select2-input').prop("disabled", false);
                $('#DelyAltAdd').prop("disabled", false);
                $('#DelyContact').prop("disabled", false);
                 $('#CrPeriod').prop("disabled", false);

            }
            alert('@Model.Message')
        }

        if ('@Model.IsPickUpByOther' == 'True' ||'@Model.IsPickUpByOther' == 'true' ) {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#ChargeListDivTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            //$('#btnAddDoc').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#BothSaveEmail').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('.buttondownload').prop('disabled', false);
            if ($('#hdnEnableParty').val() == "True" || $('#hdnEnableParty').val() == "true") {
                $('#PlaceOfSDiv :input').prop("disabled", false);
                $('#DelyCode').prop("disabled", false);
                $('.select2-input').prop("disabled", false);
                $('#DelyAltAdd').prop("disabled", false);
                $('#DelyContact').prop("disabled", false);
            }
            alert('Product Already Picked Up in :' + '@Model.PickedUpIn')
            if ('@Model.Mode' == 'Edit') {
                var confrm = confirm("Do You Really want to Edit !");
                if (confrm == false) {
                    return;
                }
                else {
                    $('#SaveData').prop('disabled', false);
                    $('#ItemListTable :input').prop('disabled', false);
                    //$('button[action|="DeleteItem"]').prop('disabled', true);
                }
            }


        }

        if ($('#hdnIsDraftSave').val() == "True" || $('#hdnIsDraftSave').val() == "true") {
            $('#Print').prop('disabled', true);
            $('#SaveData').prop('disabled', false);
            $('#JustEmail').prop('disabled', true);
            $('#DeleteData').prop('disabled', false);
            $('#BothSaveEmail').prop('disabled', true);
            $('#SaveCopy').prop('disabled', true);
        }
        $('.tablinks').prop("disabled", false);

        $('#CurrName').change(function () {
            var url = '@Url.Action("GetCurrencyRate")?Code=' + $('#CurrName').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var currRateI = parseFloat(data);
                    $('#CurrRate').val(currRateI.toFixed(2));
                    CurrRateChange();
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $("#CurrRate").change(function (event) {
            event.preventDefault();
            CurrRateChange();
        });

        $("#GSTType").change(function (event) {
            event.preventDefault();
            CurrRateChange();
        });

       
        $('#SaveData').click(function (event) {
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
                if ($("#Srl").val() == '') {
                    alert('Enter Document Number.');
                    return;
                }
            }
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            if ($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) {
                   alert('Select Place Of Supply.');
                   return;
            }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            //else if ($("#hdnSType").val() == "OP") {
            //    if ($("#BillNumber").val() == '') {
            //        $("#ErrorMessage").show();
            //        $("#ErrorMessage").text('Enter Order Number.');
            //        return;
            //    }
            //}
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != 'Challans') {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }

            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }

            if ($("#hdnSType").val() == "EP") {
                var divText = [];
                $("#MultiVendorList :selected").each(function () {
                    divText.push("" + $(this).val() + "");
                });
                $('#hdnmultivendorarray').val(divText)
            }

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "NS") {
               $('#RefAdjdata tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
                    refajsum += (parseFloat(abc));
               });
               if (parseFloat(refajsum) > parseFloat($("#txtinvamt").val())) {
                    alert('Adjustments are more than Document Amount..');
                    return;
                }
            }

            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected ="";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }
                    var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                //var myDets = {
                //    Fld: $tds.eq(0).text(),
                //    ApplCode: $tds.find(".addontxtfvalue").val(),
                //    FldType: $tds.eq(4).text()
                //}

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text(),
                    TaxAmt: tds.find("input[class='txt_gstchg']").val()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};
                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}

            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                ModelData["MultiVendor"] = $('#hdnmultivendorarray').val();
                ModelData["GSTNoITC"] = $('#GSTNoITC').is(':checked');
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["StrEWBDate"] = $("#StrEWBDate").val();
                ModelData["ProjCode"] = $('#ProjCode').val();
                ModelData["CurrConv"] = $('#hdnCurrConv').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["ShipFrom"] = $('#ShipFrom').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            if ($('#hdnMode').val() != "Add") {
                                window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                            }
                            else {
                                window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                            }

                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                    error: function (ex) {
                        alert(JSON.stringify(ex))
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $('#PickData').click(function (event) {
            event.preventDefault();
            if ($("#RefDoc").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Source Doc.');
                return;
            }
            if ($("#Account").val() == '' && $("#RefDoc").val() != 'Indents') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Account.');
                return;
            }
            if (($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) && $("#RefDoc").val() != 'Indents') {
                   alert('Select Place Of Supply.');
                   return;
               }
            if ($("#LocationCode").val() == '' || $("#LocationCode").val() == '0') {
                alert('Select WareHouse/Location.');
                return;
            }
            //$('#pickuplist').modal({
            //    backdrop: 'static',
            //    keyboard: false
            //});

            var ModelData = {};
            ModelData["SourceDoc"] = $("#RefDoc").val();
            ModelData["Code"] = $("#Account").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["LocationCode"] = $("#LocationCode").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["MileStoneReqd"] = $("#hdnMileStoneReqd").val();
            ModelData["CurrConv"] = $("#hdnCurrConv").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#Print').click(function (event) {
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
             if ($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) {
                   alert('Select Place Of Supply.');
                   return;
               }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }
            else {

            }

            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }

             if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "NS") {
               $('#RefAdjdata tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
                    refajsum += (parseFloat(abc));
               });
               if (parseFloat(refajsum) > parseFloat($("#txtinvamt").val())) {
                    alert('Adjustments are more than Document Amount..');
                    return;
                }
            }
            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('Y');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected ="";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                //var myDets = {
                //    Fld: $tds.eq(0).text(),
                //    ApplCode: $tds.find(".addontxtfvalue").val(),
                //    FldType: $tds.eq(4).text()
                //}

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text(),
                    TaxAmt: tds.find("input[class='txt_gstchg']").val()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                ModelData["GSTNoITC"] = $('#GSTNoITC').is(':checked');
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["StrEWBDate"] = $("#StrEWBDate").val();
                ModelData["ProjCode"] = $('#ProjCode').val();
                ModelData["CurrConv"] = $('#hdnCurrConv').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["ShipFrom"] = $('#ShipFrom').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            //location.href = "/Transactions/Purchase/PrintData?Document=" + data.NewSrl + "";
                            var ModelData = {};
                            ModelData["Type"] = $("#hdnType").val();
                            ModelData["Document"] = data.NewSrl;
                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("GetMultiPrint")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data1) {
                                    $("#ErrorMessage").hide();
                                    $('.spinner').hide();
                                    $('#multiprint').modal('show');
                                    $('#MultiPrintDiv').html(data1.Html);
                                    $('#PrintDocument').val(data1.Document);
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }
                            });
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });


        $('#SaveDraft').click(function (event) {
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            if ($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) {
                   alert('Select Place Of Supply.');
                   return;
            }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }

            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "NS") {
               $('#RefAdjdata tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
                    refajsum += (parseFloat(abc));
               });
               if (parseFloat(refajsum) > parseFloat($("#txtinvamt").val())) {
                    alert('Adjustments are more than Document Amount..');
                    return;
                }
            }
            $("#hdnSaveAsDraft").val('Y');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected = "";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                //var myDets = {
                //    Fld: $tds.eq(0).text(),
                //    ApplCode: $tds.find(".addontxtfvalue").val(),
                //    FldType: $tds.eq(4).text()
                //}

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text(),
                    TaxAmt: tds.find("input[class='txt_gstchg']").val()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();

                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Authorise"] = 'X00';
                ModelData["SaveAsDraft"] = 'Y';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                ModelData["GSTNoITC"] = $('#GSTNoITC').is(':checked');
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["StrEWBDate"] = $("#StrEWBDate").val();
                ModelData["ProjCode"] = $('#ProjCode').val();
                ModelData["CurrConv"] = $('#hdnCurrConv').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["ShipFrom"] = $('#ShipFrom').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);

                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            $('#hdnIsDraftSave').val('True');
                            alert("Draft saved as " + data.NewSrl + "");
                            var ModelData = {};
                            ModelData["Type"] = $("#hdnType").val();
                            ModelData["Document"] = data.NewSrl;
                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("GetMultiPrint")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data1) {
                                    $("#ErrorMessage").hide();
                                    $('.spinner').hide();
                                    $('#multiprint').modal('show');
                                    $('#MultiPrintDiv').html(data1.Html);
                                    $('#PrintDocument').val(data1.Document);
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }
                            });
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });


        $('#BothSaveEmail').click(function (event) {
            event.preventDefault();
            var refajsum = 0;
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
             if ($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) {
                   alert('Select Place Of Supply.');
                   return;
               }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }
            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "NS") {
               $('#RefAdjdata tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var abc = $('#TxtA_' + tds.eq(0).text() + '').val();
                    refajsum += (parseFloat(abc));
               });
               if (parseFloat(refajsum) > parseFloat($("#txtinvamt").val())) {
                    alert('Adjustments are more than Document Amount..');
                    return;
                }
            }

            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('Y');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var applselected = "";
                var selected = "";
                if ($tds.eq(4).text() == "X") {
                    $tds.find(".addontxtfvalue input:checked").each(function () {
                        selected = selected + $(this).val() + "^";
                    })
                    applselected = selected;
                }
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text(),
                }

                //var myDets = {
                //    Fld: $tds.eq(0).text(),
                //    ApplCode: $tds.find(".addontxtfvalue").val(),
                //    FldType: $tds.eq(4).text()
                //}

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text(),
                    TaxAmt: tds.find("input[class='txt_gstchg']").val()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });
                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["PlaceOfSupply"] = $('#PlaceOfSupply').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);

                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnMode').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                ModelData["GSTNoITC"] = $('#GSTNoITC').is(':checked');
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["StrEWBDate"] = $("#StrEWBDate").val();
                ModelData["ProjCode"] = $('#ProjCode').val();
                ModelData["CurrConv"] = $('#hdnCurrConv').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["ShipFrom"] = $('#ShipFrom').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            $('#emailprint').modal('show');
                            $('#hdnSendEmailDocument').val(data.NewSrl);
                            $('.form-horizontal :input').prop("disabled", false);
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });

        $('#SaveCopy').click(function (event) {
            event.preventDefault();
            var confrm = confirm("Do You Really want to Save As !");
            if (confrm == false) {
                return;
            } else {

                var tab2size = $('#tabledata2 tbody tr').length;
                if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
                    if ($("#Srl").val() == '') {
                        alert('Enter Document Number.');
                        return;
                    }
                }
                if ($("#Account").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Select Party.');
                    return;
                }
               if ($("#PlaceOfSupply").val() == '' || $("#PlaceOfSupply").val() == null) {
                   alert('Select Place Of Supply.');
                   return;
               }
                if ($("#LocationCode").val() == 0) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Select Warehouse/Location.');
                    return;
                }
                if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Add Product.');
                    return;
                }
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                    if ($("#BillNumber").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Enter Bill Number.');
                        return;
                    }
                }
                else if ($("#hdnSType").val() == "OP") {
                    if ($("#BillNumber").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Enter Order Number.');
                        return;
                    }
                }
                else {

                }

                $("#ErrorMessage").hide();
                var ChargeList = [];
                var AddonSerial = [];
                var TermList = [];

                $('#addongrid').find('tr[id="datacharge"]').each(function () {
                    var $tds = $(this).find('td');
                    var applselected = "";
                    var selected = "";
                    if ($tds.eq(4).text() == "X") {
                        $tds.find(".addontxtfvalue input:checked").each(function () {
                            selected = selected + $(this).val() + "^";
                        })
                        applselected = selected;
                    }
                    var myDets = {
                        Fld: $tds.eq(0).text(),
                        ApplCode: ($tds.eq(4).text() == "X") ? applselected : $tds.find(".addontxtfvalue").val(),
                        FldType: $tds.eq(4).text(),
                    }

                    //var myDets = {
                    //    Fld: $tds.eq(0).text(),
                    //    ApplCode: $tds.find(".addontxtfvalue").val(),
                    //    FldType: $tds.eq(4).text()
                    //}

                    AddonSerial.push(myDets);
                });
                $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                    var tds = $(this).find('td');
                    var chgs = {
                        Code: tds.eq(0).text(),
                        AddLess: tds.eq(1).text(),
                        Amt: tds.find("input[class='txtfvalue']").val(),
                        Val1: tds.find("input[class='txt_row']").val(),
                        ChgPostCode: tds.eq(4).text(),
                        Fld: tds.eq(5).text(),
                        TaxAmt: tds.find("input[class='txt_gstchg']").val()
                    }
                    ChargeList.push(chgs);
                });
                $('#TermTbl tbody tr').each(function () {
                    var tds = $(this).find('td');
                    var myDets = {
                        tempId: tds.eq(0).text(),
                        TermId: tds.eq(1).text(),
                        TermName: tds.eq(2).text(),
                    }
                    TermList.push(myDets);
                });

                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = "Add";
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["IsSaveAs"] = "Yes";
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["GSTNoITC"] = $('#GSTNoITC').is(':checked');
                ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
                ModelData["AccountName"] = $('#Account').select2('data').text;
                ModelData["StrEWBDate"] = $("#StrEWBDate").val();
                ModelData["ProjCode"] = $('#ProjCode').val();
                ModelData["CurrConv"] = $('#hdnCurrConv').val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["ShipFrom"] = $('#ShipFrom').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                            $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });

        $('#JustPrint').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Document"] = $("#hdnEditDocument").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetMultiPrint")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#multiprint').modal('show');
                    $('#MultiPrintDiv').html(data.Html);
                    $('#PrintDocument').val($("#hdnEditDocument").val());
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#JustEmail').click(function (event) {
            event.preventDefault();
            $('#emailprint').modal('show');
            $('#hdnSendEmailDocument').val($("#hdnEditDocument").val());
        });

        $('#DeleteData').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["Header"] = '@Model.Header';
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Amt"] = $("#txtinvamt").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteData")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == 'Success') {
                        window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                    }
                    else {
                        alert(data.Message);
                    }
                },
                error: function (data) {
                    alert(data.Message);
                }
            });
        });

        $("#EditbtnAddOns").click(function (event) {
            event.preventDefault();
            $('#addonmodel').modal('show');
            $('#addongrid input[id=txtf_F001]').focus();
        });

        $("#btnAddDoc").click(function (event) {
            event.preventDefault();
            $('#attachdoc').modal({
                backdrop: 'static',
                keyboard: false
            });
            var url = '@Url.Action("UploadFile")';
            $.ajax({
                async: false,
                cache: false,
                url: url,
                type: "POST",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#attachdoc').modal('show');
                    $('#controllername').val(data.Controller);
                },
            });
        });

        $("#btnSendSMS").click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("SendPartywiseSMS")?msubtype=' + $('#hdnSType').val() + '&mParentKey=' + $('#hdnParentKey').val() + '&mCode=' + $('#Account').val() + '&mAltAdd=' + $("#AltAddress").val() + '&mAuto=' +'true'+ '&mBranch=' + '@Session["BranchCode"]';
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (result) {
                    alert(result.Message)
                     $('.spinner').hide();
                },
                error: function () {
                    $('.spinner').hide();
                    alert("2-An error occurred while processing the request.");
                }
            });
        });
    });

    function loadGstType() {
        var url = '@Url.Action("GetGSTType")'
        $('#GSTType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Text,
                                id: item.Value
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.GSTType', text: '@Model.GstTypeName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function GetSourceDocument() {
        $("#RefDoc").empty();
        var url = '@Url.Action("GetSourceDocument")?SubType=' + $('#hdnSType').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#RefDoc").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#RefDoc').val('@Model.SourceDoc').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function GetCurrencyCode() {
        $("#CurrName").empty();
        var url = '@Url.Action("GetCurrencyName")?SubType=' + $('#hdnSType').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#CurrName").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#CurrName').val('@Model.CurrName').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadLocationCodes() {
        var url = '@Url.Action("GetLocationCode")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#LocationCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#LocationCode').val('@Model.LocationCode').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function loadReasonCode() {
        var url = '@Url.Action("GetReasonCodes")?MainType=' + $('#hdnMType').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ReasonCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ReasonCode').val('@Model.ReasonCode').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function CurrRateChange() {
        var ModelData = {};
        ModelData["SubType"] = $('#hdnSType').val();
        ModelData["CurrRate"] = $('#CurrRate').val();
        ModelData["LocationCode"] = $('#LocationCode').val();
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["ChangeLog"] = $('#hdnMode').val();
        ModelData["DocuDate"] = $('#DocuDate').val();
        ModelData["Account"] = $('#Account').val();
        ModelData["DelyCode"] = $('#DelyCode').val();
        ModelData["DelyAltAdd"] = $('#DelyAltAdd').val();
        ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
        ModelData["GSTType"] = $("#GSTType").val();
        ModelData["Type"] = $('#hdnType').val();
        ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
        ModelData["IsGstDocType"] = $('#IsGstDocType').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("UpdateItemByCurrConv")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
                $('#SaveData').prop('disabled', true);
                $('#BothSaveEmail').prop('disabled', true);
                $('#Print').prop('disabled', true);
            },
            success: function (data) {

                $('#errormessage').hide();
                $('#ItemListTable').html(data.Html);
                $('#txtf_F001').val(data.Taxable.toFixed(2));
                $('#txtb_F001').val(data.Taxable.toFixed(2));
                $('#txttotitemqty').val(data.TotalQty.toFixed(2));
                $('#txttottxable').val(data.Taxable.toFixed(2));
                //$('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                //$('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                //$('#txttotigst').val(data.IGSTAmt.toFixed(2));

                SetValuesInTable()

            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }

    function NextEntry(mmode)
    {
        var url = '@Url.Action("MoveNextPrevious")?Mode=' + mmode + '&mdocument=' + $("#hdnParentKey").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.data != '') {
                    window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Document=" + result.data + "&Type=@Model.Type&ChangeLog=Edit&Mode=Edit&ViewDataId=@Model.ViewDataId&Header=@Model.Header&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.optiontype&OptionCode=@Model.OptionCode&Controller2=@Model.Controller2";
                }
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function WarningMessage() {
         var ModelData = {};

        ModelData["MainType"] = $('#hdnMType').val();
        ModelData["SubType"] = $('#hdnSType').val();
        ModelData["Account"] = $('#Account').val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["DocuDate"] = $("#DocuDate").val();
        ModelData["ChangeLog"] = $('#hdnMode').val();
        ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
        ModelData["Prefix"] = $("#hdnPrefix").val();
        ModelData["Amt"] = $("#txtinvamt").val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("CheckWarnings")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.Message != null && result.Message != "") {
                    alert(result.Message)
                }
                //$('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("1-An error occurred while processing the request.");
            }
        });
    }
</script>

@Html.HiddenFor(x => x.ProductAddOn, new
{
    @id = "hdnProductAddOn"
})
@Html.HiddenFor(x => x.ViewDataId, new
{
    @id = "hdnViewDataId"
})
@Html.HiddenFor(x => x.Controller2, new
{
    @id = "Controller2"
})
@Html.HiddenFor(x => x.Header, new
{
    @id = "Header"
})
@Html.HiddenFor(x => x.OptionCode, new
{
    @id = "OptionCode"
})
@Html.HiddenFor(x => x.optiontype, new
{
    @id = "optiontype"
})
@Html.HiddenFor(x => x.TableName, new
{
    @id = "TableName"
})
@Html.HiddenFor(x => x.Module, new
{
    @id = "Module"
})
@Html.HiddenFor(x => x.hdnAddonSaved, new
{
    @Id = "hdnAddonSaved"
})
@Html.HiddenFor(x => x.IsRoundOff, new
{
    @Id = "hdnIsRoundOff"
})
@Html.HiddenFor(x => x.CheckMode, new
{
    @id = "hdnCheckMode"
})
@Html.HiddenFor(x => x.LockRate, new
{
    @Id = "hdnLockRate"
})
@Html.HiddenFor(x => x.LockDiscount, new
{
    @Id = "hdnLockDiscount"
})
@Html.HiddenFor(x => x.AUTHORISE, new
{
    @Id = "hdnAuthorise"
})
@Html.HiddenFor(x => x.AuthLock, new
{
    @Id = "hdnAuthLock"
})
@Html.HiddenFor(x => x.AuthNoPrint, new
{
    @Id = "hdnAuthNoPrint"
})
@Html.HiddenFor(x => x.AuthReq, new
{
    @Id = "hdnAuthReq"
})
@Html.HiddenFor(x => x.AuthAgain, new
{
    @Id = "hdnAuthAgain"
})
@Html.HiddenFor(x => x.IsManual, new
{
    @Id = "hdnIsManual"
})

@Html.HiddenFor(x => x.CurrConv, new
{
    @Id = "hdnCurrConv"
})

@Html.HiddenFor(x => x.AllowCurr, new
{
    @Id = "hdnAllowCurr"
})

@Html.HiddenFor(x => x.EnableParty, new
{
    @Id = "hdnEnableParty"
})
@Html.HiddenFor(x => x.Store, new
{
    @Id = "hdnStore"
})

@Html.HiddenFor(x => x.BinConcept, new
{
    @Id = "hdnBinConcept"
})

@Html.HiddenFor(x => x.MultiUnit, new
{
    @Id = "hdnMultiUnit"
})
@Html.HiddenFor(x => x.MileStoneReqd, new
{
    @Id = "hdnMileStoneReqd"
})
@Html.HiddenFor(x => x.NegStock, new { @Id = "hdnNegStock" })
@Html.HiddenFor(x => x.IsBarCodeScan, new { @Id = "hdnIsBarCodeScan" })
@Html.HiddenFor(x => x.PrevInvAmt, new { @Id = "PrevInvAmt" })
@Html.HiddenFor(x => x.NonStock, new { @Id = "NonStock" })
@Html.HiddenFor(x => x.InterBranch, new { @Id = "InterBranch" })
@Html.HiddenFor(x => x.ITFKey, new { @Id = "ITFKey" })
@Html.HiddenFor(x => x.InterSrl, new { @Id = "InterSrl" })
@Html.HiddenFor(x => x.LockAddon, new { @Id = "hdnLockAddon" })
@Html.HiddenFor(x => x.VATGSTApp, new { @Id = "hdnVATGSTApp" })
@Html.HiddenFor(x => x.ForceChln, new { @Id = "hdnForceChln" })
@Html.HiddenFor(x => x.SkipStock, new { @Id = "hdnSkipStock" })
@Html.HiddenFor(x => x.SaveAsDraft, new { @Id = "hdnSaveAsDraft" })
@Html.HiddenFor(x => x.Document, new { @id = "hdnEditDocument" })
@Html.HiddenFor(x => x.ParentKey, new { @id = "hdnParentKey" })
@Html.HiddenFor(x => x.IsDraftSave, new { @id = "hdnIsDraftSave" })
@Html.HiddenFor(x => x.IsPickUp, new { @id = "IsPickUp" })
@Html.HiddenFor(x => x.SendEmail, new { @id = "hdnSendEmail" })
@Html.HiddenFor(x => x.TableName, new { @id = "hdnTableName" })
@Html.HiddenFor(x => x.IsPrint, new { @id = "hdnIsPrint" })
@Html.HiddenFor(x => x.HideAddlCharges, new { @id = "hdnHideAddlCharges" })
@Html.HiddenFor(x => x.LockStore, new { @id = "hdnLockStore" })
@Html.HiddenFor(x => x.LockFactor, new { @id = "hdnLockFactor" })
@Html.HiddenFor(x => x.LockTax, new { @id = "hdnLockTax" })
@Html.HiddenFor(x => x.LockHSN, new { @id = "hdnLockHSN" })
@Html.HiddenFor(x => x.ForceOrderS, new { @id = "hdnForceOrderS" })
@Html.HiddenFor(x => x.FIFOOrder, new { @id = "hdnFIFOOrder" })
@Html.HiddenFor(x => x.LockItem, new { @id = "hdnLockItem" })
@Html.HiddenFor(x => x.LockQty, new { @id = "hdnLockQty" })
@Html.HiddenFor(x => x.LockDiscCharges, new { @id = "hdnLockDiscCharges" })
@Html.HiddenFor(x => x.IsItemClass, new { @id = "hdnIsItemClass" })
@Html.HiddenFor(x => x.LockWarehouse, new { @id = "hdnLockWarehouse" })
@Html.HiddenFor(x => x.LoadKey, new { @id = "LoadKey" })
@Html.HiddenFor(x => x.IsGstDocType, new { @id = "IsGstDocType" })
@Html.HiddenFor(x => x.ScanAndEdit, new { @id = "hdnScanAndEdit" })