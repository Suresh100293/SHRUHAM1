@model DebtorReceiptVM
@using Common
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header (@Model.Type)</b>
        <span class="tools pull-right">
            @if (Model.LedgerThrough)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel">
    <div class="panel-body">
        <div class="form-horizontal" id="frmaddnewadvancebal" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none; padding:3px;"></div>
            <div class="form-group">
                <label class="col-sm-1 control-label" hidden="hidden">Doc.Serial:</label>
                <div class="col-sm-2" hidden="hidden">
                    @Html.TextBoxFor(x => x.Srl, new { @class = "form-control", @id = "Srl", @Name = "Srl", @style = "height:28px;font-size:13pt;font-weight:bolder;", @Value = Model.Srl })
                </div>
                <label class="col-sm-1 control-label">Doc.Date:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.DocuDate, new { @type = "text", @class = "form-control", @id = "DocuDate", @Name = "DocuDate", @style = "height:28px;font:size:13pt;font-weight:bolder;", @Value = Model.DocDate.ToString("dd-MM-yyyy") })
                </div>
                <label class="col-sm-1 control-label">Customer :</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(m => m.Account, new { @class = "input-large-query", @id = "Account", @name = "Account", @style = "width:99%;margin-top:2px;" })
                </div>
                <label id="lblCustBalance" class="col-sm-1" style="color:red;width:auto;">Balance: @Model.CustBalance</label>
                <label class="col-sm-1 control-label">Bank Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Bank, new { @class = "input-large search-query", @id = "Bank", @Name = "Bank", @style = "width:99%;" })
                </div>
                <label id="lblCashBalance" class="col-sm-1" style="color:red;width:auto;">Balance :@Model.CashBalance</label>

            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Amount:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.AccAmt, new { @class = "form-control", @id = "UpAccAmt", @Name = "UpAccAmt", @style = "width:99%;", @Value = Model.AccAmt.ToString("F2") })
                </div>
                <label class="col-sm-1 control-label">Cheque No:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(m => m.ChequeNo, new { @class = "form-control", @id = "ChequeNo", @Name = "ChequeNo", @style = "width:99%;", @Value = Model.ChequeNo })
                </div>
                <div class="col-sm-1" style="width:150px;padding-left:3px;">
                    <button type="button" style="height:28px;padding-top:4px;" class="btn btn-primary" id="PickData">Pick Document</button>
                </div>
            </div>


            <div class="tab">
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="Direct"> List</button>
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')"> TDS Details</button>
                @*<button class="tablinks" onclick="openCity(event, 'divLedgerTable3')">GST Details</button>*@
            </div>


            <div id="divLedgerTable" class="tabcontent" style="min-height:320px;max-height:320px;">
                <div class="grid">
                    @Html.Partial("LedgerList", Model)
                </div>
            </div>
            <div id="divLedgerTable2" class="tabcontent" style="min-height:350px;max-height:350px;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">Auto TDS Cut?</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.TDSFlag, new { @id = "addTDSFlag", @Name = "addTDSFlag", @Value = Model.TDSFlag })
                    </div>
                    <label class="col-sm-1 control-label">Code</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.TDSCode, new { @class = "input-large search-query", @id = "addTDSCode", @Name = "addTDSCode", @style = "width:99%;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">TDS Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.TDSRate, new { @class = "form-control", @id = "addTDSRate", @Name = "addTDSRate", @Value = Model.TDSRate })
                    </div>
                    <label class="col-sm-1 control-label">TDS Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.TDSAmt, new { @class = "form-control", @id = "addTDSAmt", @Name = "addTDSAmt", @Value = Model.TDSAmt.ToString("F2") })
                    </div>
                </div>
            </div>
            <div id="divLedgerTable3" class="tabcontent" style="min-height:350px;max-height:350px;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">GST Cut?</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.GSTFlag, new { @id = "addGSTNoItc", @Name = "addGSTNoItc" })
                    </div>
                    <label class="col-sm-1 control-label">GST Type</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.GSTCode, new { @class = "input-large search-query", @id = "addGSTCode", @Name = "addGSTCode", @style = "width:99%;" })
                    </div>
                    <label class="col-sm-1 control-label">Taxable</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.Taxable, new { @class = "form-control", @id = "addTaxable", @Name = "addTaxable" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">IGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTRate, new { @class = "form-control", @id = "addIGSTRate", @Name = "addIGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">IGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTAmt, new { @class = "form-control", @id = "addIGSTAmt", @Name = "addIGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">CGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTRate, new { @class = "form-control", @id = "addCGSTRate", @Name = "addCGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">CGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTAmt, new { @class = "form-control", @id = "addCGSTAmt", @Name = "addCGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">SGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTRate, new { @class = "form-control", @id = "addSGSTRate", @Name = "addSGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">SGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTAmt, new { @class = "form-control", @id = "addSGSTAmt", @Name = "addSGSTAmt" })
                    </div>
                </div>
            </div>

            <script>
                $(document).ready(function ()
                {
                    loadTDSCodeList();
                    loadGSTCodeList();
                    $('#addTDSCode').change(function () {
                        var url = '@Url.Action("GetTDSRateDetail")?TDSCode=' + $('#addTDSCode').val() + '&DocuDate=' + $('#DocuDate').val();
                        $.ajax({
                            type: "GET",
                            dataType: "json",
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#addTDSRate').val(data.TDSRate);
                                TDSCalculation();
                            },
                            error: function () {
                                alert("Error occured while processing your request.");
                            }
                        });
                    });
                    $('#addTDSRate').focusout(function () {
                        TDSCalculation();
                    });
                    $('#addTDSFlag').change(function () {
                        TDSCalculation();
                    });
                    $("#addGSTNoItc").change(function () {
                        GSTCalculation();
                    });
                    $('#addIGSTRate').focusout(function () {
                        GSTCalculation();
                    });
                    $('#addSGSTRate').focusout(function () {
                        GSTCalculation();
                    });
                    $('#addCGSTRate').focusout(function () {
                        GSTCalculation();
                    });

                    $("#TDSAmt").blur(function () {
                        $("#addTDSAmt").val(this.value);
                    });
                    $("#addTDSAmt").blur(function () {
                        $("#TDSAmt").val(this.value);
                    });




                    $('#addGSTCode').change(function () {
                        var url = '@Url.Action("GetGSTRateDetail")?Code=' + $('#addGSTCode').val() + '&Party=' + $('#Account').val() + '&DocDate=' + $('#DocuDate').val();
                        $.ajax({
                                type: "GET",
                                dataType: "json",
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data) {
                                    $('.spinner').hide();
                                    $('#addIGSTRate').val(data.IGSTRate);
                                    $('#addCGSTRate').val(data.CGSTRate);
                                    $('#addSGSTRate').val(data.SGSTRate);
                                    GSTCalculation();
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }

                            });
                    });
                    $('#addIGSTRate').focusout(function () {
                        GSTCalculation();
                    });
                    $('#addSGSTRate').focusout(function () {
                        GSTCalculation();
                    });
                    $('#addCGSTRate').focusout(function () {
                        GSTCalculation();
                    });
                });
                function TDSCalculation()
                {
                    debugger;
                    $("#addTDSAmt").val(0);

                    if ($('#addTDSFlag').is(":checked")) {
                        //var rate1 = (parseFloat($("#addTDSRate").val()));
                        //var amt1 = parseFloat($("#addTaxable").val());
                        var AmtTDS = 0;
                        $('#tabledata tbody tr').each(function () {
                            debugger;
                            var tds = $(this).find('td');
                            AmtTDS = AmtTDS + parseFloat(tds.eq(9).text());
                        });


                        $('#addTDSAmt').val(AmtTDS);
                        $('#TDSAmt').val(AmtTDS);
                    }
                    else {
                        $('#addTDSAmt').val(0);
                        $('#TDSAmt').val(0);
                    }
                }
                function GSTCalculation()
                {
                    debugger;

                    if ($('#addGSTNoItc').is(":checked")) {

                        var irate1 = (parseFloat($("#addIGSTRate").val()));
                        var crate1 = (parseFloat($("#addSGSTRate").val()));
                        var srate1 = (parseFloat($("#addCGSTRate").val()));
                        var amt1 = parseFloat($("#addTaxable").val());

                        var AmtIgst = (irate1 * amt1) / 100;
                        var AmtCgst = (crate1 * amt1) / 100;
                        var AmtSgst = (srate1 * amt1) / 100;
                        $('#addIGSTAmt').val(AmtIgst);
                        $('#txttotigst').val(AmtIgst);
                        $('#addCGSTAmt').val(AmtCgst);
                        $('#txttotcgst').val(AmtCgst);
                        $('#addSGSTAmt').val(AmtSgst);
                        $('#txttotsgst').val(AmtSgst);
                        $('#txtinvamt').val(amt1 + AmtIgst + AmtCgst + AmtSgst);
                    }
                    else {
                        var amt1 = parseFloat($("#addTaxable").val());

                        var AmtIgst = 0;
                        var AmtCgst = 0;
                        var AmtSgst = 0;
                        $('#addIGSTAmt').val(0);
                        $('#txttotigst').val(0);
                        $('#addCGSTAmt').val(0);
                        $('#txttotcgst').val(0);
                        $('#addSGSTAmt').val(0);
                        $('#txttotsgst').val(0);
                        $('#txtinvamt').val(amt1);
                    }




                }
                function loadTDSCodeList() {
                    var url = '@Url.Action("GetTDSList")'
                    $('#addTDSCode').select2({
                        minimumInputLength: 0,
                        placeholder: 'Search',
                        ajax: {
                            url: url,
                            dataType: 'json',
                            quietMillis: 100,
                            enableFiltering: true,
                            allowClear: true,
                            minimumInputLength: 0,
                            multiple: true,
                            width: 300,
                            data: function (term, page) {
                                return {
                                    types: ["exercise"],
                                    limit: -1,
                                    term: term
                                };
                            },
                            results: function (data, page) {
                                clientObj = JSON.stringify(data);
                                return {
                                    results: $.map(data, function (item) {
                                        return {
                                            text: item.Name,
                                            id: item.Code
                                        }
                                    })
                                };
                            }
                        },
                        initSelection: function (element, callback) {
                            var data = { id: '@Model.TDSCode', text: '@Model.TDSCodeName' };
                            callback(data);
                        },
                        formatResult: function (exercise) {
                            return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                                "</div></span></div></div>";
                        },
                        formatSelection: function (exercise) {
                            return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                                "</div></span></div></div>";
                        },
                    })
                };
                function loadGSTCodeList() {
                    var url = '@Url.Action("GetGSTList")'
                    $('#addGSTCode').select2({
                        minimumInputLength: 0,
                        placeholder: 'Search',
                        ajax: {
                            url: url,
                            dataType: 'json',
                            quietMillis: 100,
                            enableFiltering: true,
                            allowClear: true,
                            minimumInputLength: 0,
                            multiple: true,
                            width: 300,
                            data: function (term, page) {
                                return {
                                    types: ["exercise"],
                                    limit: -1,
                                    term: term
                                };
                            },
                            results: function (data, page) {
                                clientObj = JSON.stringify(data);
                                return {
                                    results: $.map(data, function (item) {
                                        return {
                                            text: item.Name,
                                            id: item.Code
                                        }
                                    })
                                };
                            }
                        },
                        initSelection: function (element, callback) {
                            var data = { id: '@Model.GSTCode', text: '@Model.GSTCodeName' };
                            callback(data);
                        },
                        formatResult: function (exercise) {
                            return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                                "</div></span></div></div>";
                        },
                        formatSelection: function (exercise) {
                            return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                                "</div></span></div></div>";
                        },
                    })
                };

                function openCity(evt, cityName)
                {
                    var i, tabcontent, tablinks;
                    tabcontent = document.getElementsByClassName("tabcontent");
                    for (i = 0; i < tabcontent.length; i++) {
                        tabcontent[i].style.display = "none";
                    }
                    tablinks = document.getElementsByClassName("tablinks");
                    for (i = 0; i < tablinks.length; i++) {
                        debugger;
                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                    }

                    document.getElementById(cityName).style.display = "block";
                    evt.currentTarget.className += " active";
                }
                document.getElementById("Direct").click();

            </script>
        </div>
        <div class="row" style="padding-top:2px;">
            <label class="col-sm-1 control-label" style="padding-left:20px;">Remark:</label>
            <div class="col-sm-4">
                @Html.TextAreaFor(m => m.Remark, new { @class = "form-control", @id = "Remark", @Name = "Remark", @style = "width:99%;", @Value = Model.Remark, @maxlength = 100 })
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;">Net Amt:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(m => m.NetAmt, new { @class = "form-control", @id = "NetAmt", @Name = "NetAmt", @style = "width:99%;", @Value = Model.NetAmt.ToString("F2") })
            </div>
        </div>
    </div>
</section>

@if (Model.Mode == "Edit" || Model.Mode == "View" || Model.Mode == "Delete")
{
    <script>
        $(document).ready(function () {
            $('#txttotitemqty').val(parseFloat(@Model.TotalQty).toFixed(2));
            $('#txttottxable').val(parseFloat(@Model.Taxable).toFixed(2));
            $('#txttotcgst').val(parseFloat(@Model.CGSTAmt).toFixed(2));
            $('#txttotsgst').val(parseFloat(@Model.SGSTAmt).toFixed(2));
            $('#txttotigst').val(parseFloat(@Model.IGSTAmt).toFixed(2));
            $('#txtinvamt').val(parseFloat(@Model.InvoiceAmt).toFixed(2));
        });
    </script>

    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="margin-top:2px;">
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">TDS Amt:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.TDSAmt, new { @style = "width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;", @type = "number", @class = "form-control", @id = "TDSAmt", @name = "TDSAmt", @disabled = "disabled", @Value = @Model.TDSAmt.ToString("F2") })
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.InvoiceAmt, new
           {
               @class = "form-control",
               @style = "width:160px;text-align:right;font-weight:bolder;background-color:gray;color:white;padding-right:5px;font-size:15pt;",
               @Name = "txtinvamt",
               @Id = "txtinvamt",
               @readonly = "readonly"
           })
            </div>
        </div>
    </div>
}
else
{
    <script>
        $(document).ready(function () {
            $('#txttotitemqty').val(parseFloat(0).toFixed(2));
            $('#txttottxable').val(parseFloat(0).toFixed(2));
            $('#txttotcgst').val(parseFloat(0).toFixed(2));
            $('#txttotsgst').val(parseFloat(0).toFixed(2));
            $('#txttotigst').val(parseFloat(0).toFixed(2));
            $('#txtinvamt').val(parseFloat(0).toFixed(2));
        });
    </script>
    <div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
        <div class="row" style="padding-top:2px;">

            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:20px;">Taxable:</label>
            <div class="col-sm-1">
                <input type="text" id="txttottxable" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">TDS Amt:</label>
            <div class="col-sm-1">
                @Html.TextBoxFor(x => x.TDSAmt, new { @style = "width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;", @type = "number", @class = "form-control", @id = "TDSAmt", @name = "TDSAmt", @disabled = "disabled", @Value = @Model.TDSAmt.ToString("F2") })
            </div>
            <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">IGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotigst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">SGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotsgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">CGST Amt:</label>
            <div class="col-sm-1">
                <input type="text" id="txttotcgst" alt="" class="form-control" style="width:90px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:4px;padding-left:0px;padding-right:0px;width:7.33%;">Inv.Amount:</label>
            <div class="col-sm-1">
                <input type="text" id="txtinvamt" alt="" class="form-control" style="width:130px;border-color:black;background-color:gray;color:white;text-align:right;font-size:11pt;font-weight:bolder;" disabled="disabled" />
            </div>
        </div>
    </div>
}
<footer id="saveFooter" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            @*<button class="btn btn-warning" id="btnAddOns" style="font-size: 13px;padding:3px 12px;" name="Command">AddOns</button>
                <button class="btn btn-info" id="btnAddNote" style="font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>
                <button class="btn btn-warning" id="btnAddDoc" style="font-size: 13px;padding:3px 12px;" name="Command">Attach Doc</button>*@
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "Add")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                }
                @if (Model.Mode == "Edit" || Model.Mode == "Add")
                {

                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnSave">Save</button>
                }

                @if (Model.Mode == "Delete")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                }
                @if (Model.LedgerThrough)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Accounts/MasterGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.OptionType&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>
<script>
    var PrintLR = "";
    $(document).ready(function () {
        GetMyFavorites('@Model.ViewDataId');
        loadParty();
        loadBank();
        if ($("#hdnMode").val() == "Delete" || $("#hdnMode").val() == "View")
        {
            $('.form-horizontal :input').prop("disabled", true);
            $('.footer-section :input').prop("disabled", true);
            $('#divLedgerTable :input').prop('disabled', true);
            $('#saveFooter :input').prop("disabled", true);
            $('#btnDelete').prop("disabled", false);
            $('#Cancel').prop("disabled", false);
            $('#btnPrintOnly').prop("disabled", false);

        }
        if ('@Model.PeriodLock' == "True") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('This Document Lock By Author....!');
            $('.form-horizontal :input').prop("disabled", true);
            $('#divLedgerTable :input').prop('disabled', true);
            $('.footer-section :input').prop("disabled", true);
            $('#saveFooter :input').prop("disabled", true);
            $('.btn').prop("disabled", true);
            $('#Cancel').prop("disabled", false);
            $('#btnPrintOnly').prop("disabled", false);
        }
        if ($("#hdnMode").val() == "Edit" ||$("#hdnMode").val() == "Delete")
        {
            if ('@Model.LockAuthorise' == "True" || '@Model.LockAuthorise' == "true")
            {
                var Message = $("#ErrorMessage").text() + "<br>Document Lock In @Model.Mode Mode As Per The Authentication Rule...";
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message);
                $('.form-horizontal :input').prop("disabled", true);
                $('#divLedgerTable :input').prop('disabled', true);
                $('.footer-section :input').prop("disabled", true);
                $('#saveFooter :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
                $('#Cancel').prop("disabled", false);
                $('#btnPrintOnly').prop("disabled", false);
            }
        }

        $('.tablinks').prop("disabled", false);
        $('#changebranch :input').prop("disabled", false);
        $('#changeperiod :input').prop("disabled", false);
        $('#printpostmodel :input').prop("disabled", false);
        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();
        $('#DocuDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        $('#UpAccAmt').blur(function (event) {
            event.preventDefault();
            $('#addTaxable').val(this.value);
            $('#txttottxable').val(this.value);
            $('#txtinvamt').val(this.value);
            TDSCalculation();
            GSTCalculation();
        });
        $('#btnDelete').click(function (event) {
            event.preventDefault();
            $("#ErrorMessage").hide();
             var confrm = confirm('Are You Sure Do You Want To Delete');
             if (confrm == false) {
                 $('.spinner').hide();
                 return;
             }
             else {
                 var ModelData = {};
                 ModelData["DocuDate"] = $("#DocuDate").val();
                 ModelData["MainType"] = $("#hdnMainType").val();
                 ModelData["SubType"] = $("#hdnSubType").val();
                 ModelData["Type"] = $("#hdnType").val();
                 ModelData["Prefix"] = $("#hdnPrefix").val();
                 ModelData["ParentKey"] = $("#hdnParentKey").val();
                 ModelData["Srl"] = $("#Srl").val();
                 ModelData["Mode"] = $("#hdnMode").val();
                 ModelData["LedgerSrl"] = $("#hdnLedgerSrl").val();
                 ModelData["LedgerPrefix"] = $("#hdnLedgerPrefix").val();
                 ModelData["LedgerParentKey"] = $("#hdnLedgerParentKey").val();
                 ModelData["LedgerType"] = $("#hdnLedgerType").val();
                 ModelData["LedgerSubType"] = $("#hdnLedgerSubType").val();
                 ModelData["Account"] = $("#Account").val();
                 ModelData["Branch"] = $('#hdnBranch').val();
                 ModelData["Bank"] = $("#Bank").val();
                 ModelData["Header"] = '@Model.Header';

                 var DTO = { Model: ModelData };
                 var url = '@Url.Action("DeleteData")';
                 $.ajax({
                     type: "POST",
                     dataType: "json",
                     data: JSON.stringify(DTO),
                     cache: false,
                     url: url,
                     contentType: "application/json; charset=utf-8",
                     beforeSend: function () {
                         $('.spinner').show();
                     },
                     success: function (data) {
                         $('.spinner').hide();
                         if (data.Status == 'Success') {

                             window.location.href = "/Accounts/MasterGrid?ViewDataId=@Model.ViewDataId&MainType=@Model.MainType&Module=@Model.Module&TableName=@Model.TableName&optiontype=@Model.OptionType&optioncode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2"
                         }
                         else {
                             //$('.spinner').hide();
                             alert(data.Message);
                         }
                     },
                 });
             }
        });

        $('#btnPrintOnly').click(function (event) {
            event.preventDefault();
            PrintLR = "OnlyPrint";
            $('#printpostmodel').modal('show');
        });
        $('#btnSave').click(function (event) {
            event.preventDefault();
             if ($("#DocuDate").val() == '') {
                alert('Please Select DocDate.');
                return;
             }
             if ($("#Bank").val() == '') {
                 alert('Please Select Bank.');
                 return;
             }
             if ($("#Account").val() == '') {
                 alert('Please Select Broker.');
                 return;
            }
            if ($("#UpAccAmt").val() == '' /*|| $("#UpAccAmt").val() == '0'*/) {
                alert('Please Select Amount.');
                return;
            }


            //var AccAmt = parseFloat($("#UpAccAmt").val());
            //var BalAmtD = 0;
            //$('#tabledata tbody tr').each(function () {
            //    debugger;

            //    var tds = $(this).find('td');
            //    BalAmtD += parseFloat(tds.eq(8).text());
            //});
            //debugger;
            //if (!(BalAmtD <= AccAmt))
            //{
            //    alert('Your Amount Not Less Than Total Adjsust Amount Please Check IT......');
            //    return;
            //}
            var OnAmt = parseFloat($("#UpAccAmt").val());
            var NetAmt = parseFloat($("#NetAmt").val());
            if (!(OnAmt >= NetAmt)) {
                alert('Amount Cannot Less Than Net Amount..........!');
                return;
            }

            var TdsAmt = parseFloat($("#TDSAmt").val());
            var TotalTds = 0;
            //tabledata
            $('#tabledata tbody tr').each(function () {
                debugger;
                var tds = $(this).find('td');

                    TotalTds = TotalTds + parseFloat(tds.eq(9).text());

            });

            TotalTds = parseFloat(TotalTds).toFixed(2);
            TdsAmt = parseFloat(TdsAmt).toFixed(2);
            if (TotalTds > 0) {
                if ($("#addTDSFlag").prop('checked') == false) {
                    alert('Please Select  TDS Cut CheckBox ..........!');
                    return;
                }
                if ($("#addTDSCode").val() == '') {
                    alert('Please Select Tds Code.');
                    return;
                }
            }
            if ((TdsAmt != TotalTds)) {
                alert('Total Bill TDS Amount Does Not Match With Posting  TDS Amount...!');
                return;
            }
            //var tab2size = $('#tabledata tbody tr').length;
            //if (tab2size == 0) {
            //    alert('Aleast 1 Record is Required.');
            //    return;
            //}


             //$('#ledpostmodel').modal({
             //       backdrop: 'static',
             //       keyboard: false
             //   });

                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["Bank"] = $("#Bank").val();
                ModelData["MainType"] = $("#hdnMainType").val();
                ModelData["SubType"] = $("#hdnSubType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Prefix"] = $("#hdnPrefix").val();
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Amt"] = $("#Amt").val();
                ModelData["NetAmt"] = $("#NetAmt").val();
                ModelData["Srl"] = $("#Srl").val();
                ModelData["Mode"] = $("#hdnMode").val();
                /*ModelData["AddOnList"] = AddonSerial;*/
                ModelData["Header"] = '@Model.Header';
                ModelData["Remark"] = $("#Remark").val();
                ModelData["ChequeNo"] = $("#ChequeNo").val();
                ModelData["AdvType"] = $("#AdvType").val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.OptionType';
                ModelData["OptionCode"] = '@Model.OptionCode';
                ModelData["Branch"] = $('#hdnBranch').val();
                ModelData["LedgerSrl"] = $("#hdnLedgerSrl").val();
                ModelData["LedgerPrefix"] = $("#hdnLedgerPrefix").val();
                ModelData["LedgerParentKey"] = $("#hdnLedgerParentKey").val();
                ModelData["LedgerType"] = $("#hdnLedgerType").val();
                ModelData["LedgerSubType"] = $("#hdnLedgerSubType").val();
            ModelData["AccAmt"] = $("#UpAccAmt").val()


            if ($('#addTDSFlag').is(":checked")) {
                ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                ModelData["TDSCode"] = $("#addTDSCode").val();
                ModelData["TDSRate"] = $("#addTDSRate").val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
            }


                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        if (data.Status == "ErrorValid") {
                            alert(data.Message);
                            $('.spinner').hide();
                        }
                        else {
                            $('.spinner').hide();
                            $('#ledpostmodel').modal('show');
                            $('#ledpostingmodel').html(data.Html);
                            $('#controllername').val(data.Controller);
                        }
                    },
                });

        });
        $('#Print').click(function (event) {
            event.preventDefault();
            PrintLR = "SavePrint";
            if ($("#DocuDate").val() == '') {
                alert('Please Select DocDate.');
                return;
             }
             if ($("#Bank").val() == '') {
                 alert('Please Select Bank.');
                 return;
             }
             if ($("#Account").val() == '') {
                 alert('Please Select Broker.');
                 return;
            }
            if ($("#UpAccAmt").val() == '' /*|| $("#UpAccAmt").val() == '0'*/) {
                alert('Please Select Amount.');
                return;
            }
            //var AccAmt = parseFloat($("#UpAccAmt").val());
            //var BalAmtD = 0;
            //$('#tabledata tbody tr').each(function () {
            //    debugger;

            //    var tds = $(this).find('td');
            //    BalAmtD += parseFloat(tds.eq(8).text());
            //});
            //debugger;
            //if (!(BalAmtD <= AccAmt))
            //{
            //    alert('Your Amount Not Less Than Total Adjsust Amount Please Check IT......');
            //    return;
            //}
            var OnAmt = parseFloat($("#UpAccAmt").val());
            var NetAmt = parseFloat($("#NetAmt").val());
            if (!(OnAmt >= NetAmt)) {
                alert('Amount Cannot Less Than Net Amount..........!');
                return;
            }

            var TdsAmt = parseFloat($("#TDSAmt").val());
            var TotalTds = 0;
            //tabledata
            $('#tabledata tbody tr').each(function () {
                debugger;
                var tds = $(this).find('td');

                    TotalTds = TotalTds + parseFloat(tds.eq(9).text());

            });

            TotalTds = parseFloat(TotalTds).toFixed(2);
            TdsAmt = parseFloat(TdsAmt).toFixed(2);
            if (TotalTds > 0) {
                if ($("#addTDSFlag").prop('checked') == false) {
                    alert('Please Select  TDS Cut CheckBox ..........!');
                    return;
                }
                if ($("#addTDSCode").val() == '') {
                    alert('Please Select Tds Code.');
                    return;
                }
            }
            if (!(TdsAmt >= TotalTds)) {
                alert('TDS Cannot Less Than Total Tds Amount Of List..........!');
                return;
            }

            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Account"] = $("#Account").val();
            ModelData["Bank"] = $("#Bank").val();
            ModelData["MainType"] = $("#hdnMainType").val();
            ModelData["SubType"] = $("#hdnSubType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Prefix"] = $("#hdnPrefix").val();
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["Amt"] = $("#Amt").val();
            ModelData["NetAmt"] = $("#NetAmt").val();
            ModelData["Srl"] = $("#Srl").val();
            ModelData["Mode"] = $("#hdnMode").val();
            /*ModelData["AddOnList"] = AddonSerial;*/
            ModelData["Header"] = '@Model.Header';
            ModelData["Remark"] = $("#Remark").val();
            ModelData["ChequeNo"] = $("#ChequeNo").val();
            ModelData["AdvType"] = $("#AdvType").val();
            ModelData["Controller2"] = '@Model.Controller2';
            ModelData["Module"] = '@Model.Module';
            ModelData["ViewDataId"] = '@Model.ViewDataId';
            ModelData["TableName"] = '@Model.TableName';
            ModelData["Header"] = '@Model.Header';
            ModelData["optiontype"] = '@Model.OptionType';
            ModelData["OptionCode"] = '@Model.OptionCode';
            ModelData["Branch"] = $('#hdnBranch').val();
            ModelData["LedgerSrl"] = $("#hdnLedgerSrl").val();
            ModelData["LedgerPrefix"] = $("#hdnLedgerPrefix").val();
            ModelData["LedgerParentKey"] = $("#hdnLedgerParentKey").val();
            ModelData["LedgerType"] = $("#hdnLedgerType").val();
            ModelData["LedgerSubType"] = $("#hdnLedgerSubType").val();
            ModelData["AccAmt"] = $("#UpAccAmt").val()
            if ($('#addTDSFlag').is(":checked")) {
                ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                ModelData["TDSCode"] = $("#addTDSCode").val();
                ModelData["TDSRate"] = $("#addTDSRate").val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
            }
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPostingNew")';
            $.ajax({
                async: false,
                cache: false,
                url: url,
                data: JSON.stringify(DTO),
                type: "POST",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == "ErrorValid") {
                        alert(data.Message);
                        $('.spinner').hide();
                    }
                    else {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    }
                },
            });
        });

        $('#PickData').click(function (event) {
            event.preventDefault();
             if ($("#Bank").val() == '') {
                 alert('Please Select Bank.');
                 return;
             }
             if ($("#Account").val() == '') {
                 alert('Please Select Broker.');
                 return;
            }

            if ($("#UpAccAmt").val() == '') {
            alert('Please Select Amount.');
            return;
             }
            var ModelData = {};


            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();

            ModelData["Type"] = $("#hdnType").val();

             ModelData["Account"] = $("#Account").val();
            ModelData["FilBranch"] = "All";
            ModelData["AccAmt"] = $("#UpAccAmt").val();
            debugger;
            if ($("#hdnMode").val()=="Add") {
                ModelData["UnAdjustedAmt"] = $("#UpAccAmt").val();
            }




            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
         });


        $('#Account').change(function () {
            event.preventDefault();
            var url = '@Url.Action("GetAccountDetails")';
            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Account"] = $("#Account").val();

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#lblCustBalance').html('Balance: ' + data.CustBalance);
                    if (data.CutTDS == true) {
                        $("#addTDSFlag").prop("checked", true);
                    }
                    else {
                        $("#addTDSFlag").prop("checked", false);
                    }
                    if (data.TDSCode == "0" || data.TDSCode == "") {
                        $('#addTDSCode').select2('data', { id: '', text: '' });
                        $('#addTDSRate').val("0");

                    }
                    else {
                        $('#addTDSCode').select2('data', { id: data.TDSCode, text: data.TDSName });
                        $('#addTDSRate').val(data.TDSRate);
                    }

                    if (data.GstFlag == true) {
                        $("#addGSTNoItc").prop("checked", true);
                    } else {
                        $("#addGSTNoItc").prop("checked", false);
                    }
                    if (data.GSTCode == "0") {
                        $('#addGSTCode').select2('data', { id: '', text: '' });
                        $('#addIGSTRate,#addCGSTRate,#addSGSTRate').val("0");

                    }
                    else {
                        $('#addGSTCode').select2('data', { id: data.GSTCode, text: data.GSTName });
                        $('#addIGSTRate').val(data.IGST);
                        $('#addCGSTRate').val(data.CGST);
                        $('#addSGSTRate').val(data.SGST);
                    }

                    DeleteAdvanceLedger();


                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        })

        $('#Bank').change(function () {
            event.preventDefault();
            var url = '@Url.Action("GetBankDetails")';
            var ModelData = {};

            ModelData["Bank"] = $("#Bank").val();

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#lblCashBalance').html('Balance: ' +data.CashBalance);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        })

    });
    function DeleteAdvanceLedger() {
        var ModelData = {};
        ModelData["tempId"] = "0";
        ModelData["Mode"] = $("#hdnMode").val();
        if ($('#addTDSFlag').is(":checked")) {
            ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
            ModelData["TDSCode"] = $("#addTDSCode").val();
            ModelData["TDSRate"] = $("#addTDSRate").val();
            ModelData["TDSAmt"] = $('#TDSAmt').val();
        }
        var DTO = { Model: ModelData };
        var url = '@Url.Action("DeleteAdvanceLedger")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#ErrorMessage').hide();
                $('#SelectedledgerTable').html(data.Html);
                $('#NetAmt').val(data.SumAmt);
                $('#TDSAmt').val(data.TDSAmt);
                $('#addTDSAmt').val(data.TDSAmt);
            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }
    function loadParty() {
        var url = '@Url.Action("GetAccountList")';
        $('#Account').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength:0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Account', text: '@Model.AccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

     function loadBank() {
        var url = '@Url.Action("GetBankList")';
         $('#Bank').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength:0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Bank', text: '@Model.BankName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


</script>
@Html.HiddenFor(x => x.Mode, new { @id = "hdnMode" })
@Html.HiddenFor(x => x.MainType, new { @id = "hdnMainType" })
@Html.HiddenFor(x => x.Type, new { @id = "hdnType", @Value = Model.Type })
@Html.HiddenFor(x => x.SubType, new { @id = "hdnSubType" })
@Html.HiddenFor(x => x.Prefix, new { @id = "hdnPrefix" })
@Html.HiddenFor(x => x.ParentKey, new { @id = "hdnParentKey" })
@Html.HiddenFor(x => x.Branch, new { @id = "hdnBranch" })
@Html.HiddenFor(x => x.LedgerSrl, new { @id = "hdnLedgerSrl" })
@Html.HiddenFor(x => x.LedgerPrefix, new { @id = "hdnLedgerPrefix" })
@Html.HiddenFor(x => x.LedgerSubType, new { @id = "hdnLedgerSubType" })
@Html.HiddenFor(x => x.LedgerType, new { @id = "hdnLedgerType", @Value = Model.LedgerType })
@Html.HiddenFor(x => x.LedgerParentKey, new { @id = "hdnLedgerParentKey" })
@Html.HiddenFor(x => x.Document, new { @id = "hdnEditDocument" })
@Html.HiddenFor(x => x.RoundOff, new { @id = "hdnRoundOff" })
@Html.HiddenFor(x => x.TDSBillWiseCut, new { @id = "hdnTDSBillWiseCut" })
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })
<div class="example-modal">
    <div id="pickuplist" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1240px;height:500px;">
            <div id="PickUpList">
                @Html.Partial("PickUp")
            </div>
        </div>
    </div>
</div>
<div class="example-modal">
    <div id="ledpostmodel" class="modal modal-primary">
        <div class="modal-dialog" style="width:700px;">
            <div id="ledpostingmodel">
                @Html.Partial("LedgerPosting")
            </div>
        </div>
    </div>
</div>
@*Print Option*@
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @Html.Partial("ReportPrintOptions")
            </div>
        </div>
    </div>
</div>