@model AdvancePayModel
@using Common;

<style>
    .fixPickupTableHead {
        overflow-y: auto;
        height: 450px;
    }
    .fixPickupTableHead thead th {
        position: sticky;
        top: 0;
    }
    .fixPickupTableHead tfoot tr {
        position: sticky;
        bottom: 0;
    }
</style>
<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding:7px;font-weight:bolder;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
            <h4 class="modal-title">Pick from Source Document</h4>
        </div>
        <div class="modal-body" style="padding: 0px;">
            <div class="form-group">
                <div class="col-sm-5">
                    <div class="col-sm-2">
                        <label class=" bold control-label" style="margin-top: 5px;"> Select By</label>
                    </div>
                    <div class="col-sm-3">
                        <input type="text" id="SelectLR" tabindex="1" class="form-control" placeholder="FM NO" />
                    </div>
                    <div class="col-sm-2">
                        <label class=" bold control-label" style="margin-top: 5px;"> Search</label>
                    </div>
                    <div class="col-sm-5">
                        <input type="text" id="SearchPickup" tabindex="2" class="form-control" placeholder="Search Here" />
                    </div>

                </div>
            </div>

            <div class="fixPickupTableHead" id="PickTable" style="width:100%;">
                <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                    <table id="tabledatapick" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                    <div id="pager" style="height:32px;width:100%;"></div>
                </div>
            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;">
            <button type="button" class="btn btn-success" tabindex="3" id="pickrecord">Accept Data</button>
            <button type="button" class="btn btn-danger" tabindex="4" data-dismiss="modal">Discard</button>
        </div>
    </div>
</div>
@Html.HiddenFor(x => x.TotalQty, new { @id = "hdnuCount" })
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {

        $('#tabledatapick').jqGrid('clearGridData');
        $("#tabledatapick").jqGrid("GridUnload");
        $('#tabledatapick').trigger('reloadGrid');
        GridReload();

        $("#SelectLR").blur(function () {
            var ScrollRow;
            if ($("#SelectLR").val() != "" && $("#SelectLR").val() != null) {
                var count = 0;
                var WantToselectLRNO = $("#SelectLR").val();
                $('#tabledatapick tbody tr').each(function () {
                    
                    var Row = $(this).closest('tr');
                    var LRNO = Row.find('td:eq(12)').text();
                    var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
                    if (LRNO == WantToselectLRNO) {
                        ScrollRow = Row;
                        count++;
                        var objTable = $("#tabledatapick");
                        var iRow = ScrollRow.find("td:eq(5)").text();
                        objTable.jqGrid('setSelection', iRow);
                        jQuery("#tabledatapick").jqGrid('setRowData', parseInt(iRow), false, { background: 'none' });
                        
                        Row.find("input[class='DebitGrid']").trigger('click');
                    }
                    else {
                        if (CheckBox) {
                             
                        }
                    }
                });
                if (count == 0) {
                    alert("Not Found");
                    $("#SelectLR").focus();
                }
                else {
                    //$("#SelectLR").focus();
                }
            }
            $("#SelectLR").val("");
        });
        $('#SearchPickup,#SelectLR').keyup(function () {
            var value = $(this).val();
            if (value != "") {
                $('#tabledatapick > tbody > tr').removeClass('SearchRow');

                $("#tabledatapick > tbody > tr > td ").each(function () {
                    if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        var dd = $(this).text().toLowerCase();
                        $(this).addClass("SearchRow");
                    }
                    else {
                        $(this).removeClass("SearchRow");
                    }
                });
            }
            else {
                $('#tabledatapick td').removeClass('SearchRow');
            }
        });
        $('#pickrecord').click(function (event) {
            event.preventDefault();
            var myTableArray = [];
            var check = $('#tabledatapick').find("input[class='DebitGrid']:checked").length;
            if (parseInt(check) == parseInt(0)) {
                alert('Select Document to Pickup')
                return;
            }
            var TotalAmount = 0;
            $('#tabledatapick  > tbody  > tr').each(function () {
                var Row = $(this).closest('tr');
                if (Row.find("input[class='DebitGrid']").is(':checked')) {
                    var PPSerial = [];
                    //PPSerial.push(Row.find('input[class="txtfvalue"]').val());
                    //PPSerial.push(Row.find('input[class="txtftdsvalue"]').val());
                    Row.find("input[name='txtCharges']").each(function () {
                        PPSerial.push($(this).val());
                        TotalAmount += parseFloat($(this).val());
                    });
                    var myDets = {
                        tempId: Row.find('td:eq(5)').text(),
                        FMNo: Row.find('td:eq(12)').text(),
                        FMDateStr: Row.find('td:eq(13)').text(),
                        Branch: Row.find('td:eq(14)').text(),
                        AdvType: Row.find('td:eq(17)').text(),
                        VehicleNO: Row.find('td:eq(25)').text(),
                        DriverName: Row.find('td:eq(26)').text(),
                        ChargeRef: Row.find('td:eq(27)').text(),

                        Party: Row.find('td:eq(9)').text(),
                        RelatedTo: Row.find('td:eq(7)').text(),
                        AdvAmt: Row.find('td:eq(20)').text(),
                        AdvPending: Row.find('td:eq(23)').text(),
                        RefTableKey: Row.find('td:eq(10)').text(),
                        aSno: Row.find('td:eq(11)').text(),
                        PartyCode: Row.find('td:eq(8)').text(),
                        RelatedToCode: Row.find('td:eq(6)').text(),
                        FromTable: Row.find('td:eq(28)').text(),
                        ChgPickupList: PPSerial,
                        Remark: $(this).find(".Narr").val(),
                        FMRefParentkey: Row.find('td:eq(42)').text(),
                    }
                    myTableArray.push(myDets);
                }
            });

            var ModelData = {};
            ModelData["PickUpList"] = myTableArray;
            ModelData["SubType"] = $("#hdnSubType").val();
            ModelData["MainType"] = $("#hdnMainType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Mode"] = $('#hdnMode').val();

            ModelData["TDSFlag"] = $("#addTDSFlag").prop('checked');
            ModelData["GSTFlag"] = $("#addGSTNoItc").prop('checked');
            ModelData["TDSRate"] = $("#addTDSRate").val();
            ModelData["IGSTRate"] = $("#addIGSTRate").val();
            ModelData["CGSTRate"] = $("#addCGSTRate").val();
            ModelData["SGSTRate"] = $("#addSGSTRate").val();
            ModelData["AccAmt"] = $("#UpAccAmt").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("PostPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                $('.spinner').show();

            },
                success: function (data) {

                $("#pickrecord").prop("disabled", false);

                if (data.Status == "Success") {
                    $('.spinner').hide();
                    $('#ErrorMessage').hide();
                    $('#pickuplist').modal('hide');
                    $('#divLedgerTable').html('');
                    $('#divLedgerTable').html(data.Html);

                    $('#NetAmt').val(data.NetAmt);
                    //$('#addTaxable').val(data.SumAmt);
                    //$('#txttottxable').val(data.SumAmt);

                    //$('#TDSAmt').val(data.TdsAmt.toFixed(2));
                    //$('#addTDSAmt').val(data.TdsAmt.toFixed(2));

                    $('#txttotigst').val(data.IGST.toFixed(2));
                    $('#addIGSTAmt').val(data.IGST.toFixed(2));

                    $('#txttotsgst').val(data.SGST.toFixed(2));
                    $('#addSGSTAmt').val(data.SGST.toFixed(2));

                    $('#txttotcgst').val(data.CGST.toFixed(2));
                    $('#addCGSTAmt').val(data.CGST.toFixed(2));

                    $('#txtinvamt').val(data.InvAmt.toFixed(2));

                    AlertNoteMaster();
                }
                else if (data.Status == "Fail") {
                    alert(data.Message)
                }
            },
                error: function (err) {
                alert(JSON.stringify(err))
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
            });
        });
    });
    function SearchFocus() {
        $("#SelectLR").focus();
    }
    function GridReload() {
        var ColName, Coldata;
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?id=AdvBalPayPickUpDocument';
        var Code = $("#Account").val();
        var sUrlpath = '@Url.Action("GetMasterGridData")?ViewDataId=AdvBalPayPickUpDocument&Code=' + Code ;
        if (Code != "")
        {
            $.ajax({
                url: sPathUrl,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var obj = $.parseJSON(data);
                    ColName = obj[0].split(",");
                    Coldata = obj[1];
                    CreateGridData();
                    $('.spinner').hide();
                },
                error: function () {
                    alert("Error with AJAX callback");
                }
            });
        }

        function CreateGridData() {
            $('#tabledatapick').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                height:350,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                //scroll: false,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                scrollrows: true,
                onSelectRow: function (id, status, e) {
                    //e.preventDefault();
                    $('.spinner').hide();

                },
                ondblClickRow: function (id) {
                    //event.preventDefault();
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    
                    var ids = jQuery("#tabledatapick").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        var Check = "<input type ='checkbox' id='" + rowId + "' value='" + jQuery("#tabledatapick").getCell(rowId, "Document") + "'  class='DebitGrid' name='DebitGrid'  style='height: 22px;width: 19px;' />";
                        var Narr = "<center><textarea value='' class='Narr' onblur='SearchFocus();' name='Narr' rows='1' cols='50' maxlength='80' disabled /></center>";

                        var Txtxbox1 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox2 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox3 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox4 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox5 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox6 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox7 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox8 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox9 = "<center><input type ='text' value='0'   id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox10 = "<center><input type ='text' value='0'  id=enttxtcls" + rowId + " class='enttxtclsplus' name='txtCharges' style='width:95px;' disabled /></center>";

                        if ('@Model.AllAddlessList[0]'=="-") {
                            Txtxbox1 = "<center><input type ='text' value='0'  id=minus0  class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[1]'=="-") {
                            Txtxbox2 = "<center><input type ='text' value='0'  id=minus1 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[2]'=="-") {
                            Txtxbox3 = "<center><input type ='text' value='0'  id=minus2 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[3]'=="-") {
                            Txtxbox4 = "<center><input type ='text' value='0'  id=minus3 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[4]'=="-") {
                            Txtxbox5 = "<center><input type ='text' value='0'  id=minus4 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[5]'=="-") {
                            Txtxbox6 = "<center><input type ='text' value='0'  id=minus5 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[6]'=="-") {
                            Txtxbox7 = "<center><input type ='text' value='0'  id=minus6 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[7]'=="-") {
                            Txtxbox8 = "<center><input type ='text' value='0'  id=minus7 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[8]'=="-") {
                            Txtxbox9 = "<center><input type ='text' value='0'  id=minus8 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        if ('@Model.AllAddlessList[9]'=="-") {
                            Txtxbox10 = "<center><input type ='text' value='0'  id=minus9 class='enttxtclsminus' name='txtCharges' style='width:95px;' disabled /></center>";
                        }
                        var Txttdsxbox = "<center><input type ='text' value='0'  id=txtftdsvalue" + rowId + " class='txtftdsvalue' name='txtCharges' style='width:95px;' disabled /></center>";
                        var Txtxbox = "<center><input type ='text' value='0'  id=txtfvalue" + rowId + "    class='txtfvalue' name='txtCharges' style='width:95px;' disabled /></center>";

                        if (jQuery("#tabledatapick").getCell(rowId, "AdvType") == "Balance")
                        {
                            $("#tabledatapick").jqGrid('setCell', rowId, 'Amount', jQuery("#tabledatapick").getCell(rowId, "BalAmt"));
                            $("#tabledatapick").jqGrid('setCell', rowId, 'Balance', jQuery("#tabledatapick").getCell(rowId, "BalPending"));
                        }
                        else
                        {
                            $("#tabledatapick").jqGrid('setCell', rowId, 'Amount', jQuery("#tabledatapick").getCell(rowId, "AdvAmt"));
                            $("#tabledatapick").jqGrid('setCell', rowId, 'Balance', jQuery("#tabledatapick").getCell(rowId, "AdvPending"));
                        }
                        jQuery("#tabledatapick").jqGrid('setRowData', rowId, { 'Select': Check, 'PaymentNarr': Narr, 'Adjustment': Txtxbox, 'TDS': Txttdsxbox, 'F001': Txtxbox1, 'F002': Txtxbox2, 'F003': Txtxbox3, 'F004': Txtxbox4, 'F005': Txtxbox5, 'F006': Txtxbox6, 'F007': Txtxbox7, 'F008': Txtxbox8, 'F009': Txtxbox9, 'F010': Txtxbox10 });
                    }
                    $(".txtftdsvalue,.txtfvalue,.enttxtclsplus,.enttxtclsminus").constrain({ allow: { regex: "[0-9.]" } });
                    
                    $("#tabledatapick").jqGrid('setLabel', 'F001', '@Model.AllHeaderList[0]');
                    $("#tabledatapick").jqGrid('setLabel', 'F002', '@Model.AllHeaderList[1]');
                    $("#tabledatapick").jqGrid('setLabel', 'F003', '@Model.AllHeaderList[2]');
                    $("#tabledatapick").jqGrid('setLabel', 'F004', '@Model.AllHeaderList[3]');
                    $("#tabledatapick").jqGrid('setLabel', 'F005', '@Model.AllHeaderList[4]');
                    $("#tabledatapick").jqGrid('setLabel', 'F006', '@Model.AllHeaderList[5]');
                    $("#tabledatapick").jqGrid('setLabel', 'F007', '@Model.AllHeaderList[6]');
                    $("#tabledatapick").jqGrid('setLabel', 'F008', '@Model.AllHeaderList[7]');
                    $("#tabledatapick").jqGrid('setLabel', 'F009', '@Model.AllHeaderList[8]');
                    $("#tabledatapick").jqGrid('setLabel', 'F010', '@Model.AllHeaderList[9]');

                    $(".DebitGrid").click(function () {
                        var Row = $(this).closest('tr');
                        $('#tabledatapick > tbody > tr').removeClass("SelectedRow");
                        $('#tabledatapick tbody tr').each(function () {
                            var ColorRow = $(this).closest('tr');
                            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
                            if (CheckBox)
                            {
                                ColorRow.addClass("SelectedRow");
                            } else
                            {
                                ColorRow.removeClass("SelectedRow");
                            }
                        });
                        
                        var CheckBox = Row.find("input[class='DebitGrid']").is(':checked');
                        if (CheckBox) {
                            Row.find(".txtftdsvalue,.txtfvalue,.enttxtclsminus,.enttxtclsplus,.Narr").prop("disabled", false);
                            var mpending = parseFloat(Row.find("td:eq(23)").text());
                            var TdsFlag = $('#addTDSFlag').is(":checked");
                            var TdsRate = (parseFloat($("#addTDSRate").val()));
                            var TdsBillFlag = $("#hdnTDSBillWiseCut").val();
                            var TdsRound = parseInt($("#hdnRoundOff").val());
                            var TdsAmt = 0;
                            if (TdsFlag == true && TdsBillFlag == "True") {
                                if (TdsRound != 0) {
                                    TdsAmt = ((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(TdsRound);
                                }
                                else {
                                    TdsAmt = Math.round((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(2);
                                }
                                Row.find("input[class='txtftdsvalue']").val(TdsAmt);//tds amt
                                Row.find("input[class='txtfvalue']").val(mpending.toFixed(2));//amout
                            }
                            else {
                                Row.find("input[class='txtfvalue']").val(mpending.toFixed(2));//amount
                            }
                            
                            Row.find("input[class='txtfvalue']").focus();
                        }
                        else {
                            Row.find(".txtftdsvalue,.txtfvalue,.enttxtclsminus,.enttxtclsplus").val("0");
                            Row.find(".txtftdsvalue,.txtfvalue,.enttxtclsminus,.enttxtclsplus,.Narr").prop("disabled", true);
                        }
                    });
                    $(".txtfvalue").blur(function () {
                        var TdsFlag = $('#addTDSFlag').is(":checked");
                        var TdsRate = (parseFloat($("#addTDSRate").val()));
                        var TdsBillFlag = $("#hdnTDSBillWiseCut").val();
                        var TdsRound = parseInt($("#hdnRoundOff").val());
                        var TdsAmt = 0;
                        var Row = $(this).closest('tr');
                        var AccountAmt = parseFloat(Row.find("td:eq(23)").text());
                        var AdjustAmount = parseFloat(Row.find("input[class='txtfvalue']").val());
                        var MinusAmount = 0,ExtraAmount = 0;
                        Row.find("input[class='enttxtclsplus']").each(function () {
                            ExtraAmount += parseFloat($(this).val());
                        });
                        Row.find("input[class='enttxtclsminus']").each(function () {
                            MinusAmount += parseFloat($(this).val());
                        });
                        var AdjustUpto = AccountAmt - MinusAmount;
                        if (AdjustAmount <= AdjustUpto)
                        {
                            mpending = AdjustAmount + ExtraAmount;
                            if (TdsFlag == true && TdsBillFlag == "True") {
                                if (TdsRound != 0) {
                                    TdsAmt = ((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(TdsRound);
                                }
                                else {
                                    TdsAmt = Math.round((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(2);
                                }
                                Row.find("input[class='txtftdsvalue']").val(TdsAmt);
                            }
                        }
                        else
                        {
                            alert("Adjust Upto : " + AdjustUpto + " Only...!\nPlease Check It...!");
                            mpending = AdjustUpto +  ExtraAmount;
                            Row.find("input[class='txtfvalue']").val(AdjustUpto);
                            if (TdsFlag == true && TdsBillFlag == "True")
                            {
                                if (TdsRound != 0) {
                                    TdsAmt = ((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(TdsRound);
                                }
                                else {
                                    TdsAmt = Math.round((TdsRate * mpending) / 100);
                                    TdsAmt = parseFloat(TdsAmt).toFixed(2);
                                }
                                Row.find("input[class='txtftdsvalue']").val(TdsAmt);
                            }
                        }
                    });
                    $(".enttxtclsminus").blur(function () {
                        var Row = $(this).closest('tr');
                        var CurrentCharges = $(this).attr("id");
                        var CurrentChargesAmt = 0;
                        var AccountAmt = parseFloat(Row.find("td:eq(23)").text());
                        var AdjustAmount = parseFloat(Row.find("input[class='txtfvalue']").val());
                        var MinusAmount = 0, ExtraAmount = 0;
                        Row.find("input[class='enttxtclsplus']").each(function () {
                            ExtraAmount += parseFloat($(this).val());
                        });
                        Row.find("input[class='enttxtclsminus']").each(function ()
                        {
                            if ($(this).attr("id") == CurrentCharges)
                            {
                                CurrentChargesAmt = parseFloat($(this).val());
                            }
                            else
                            {
                                MinusAmount += parseFloat($(this).val());
                            }
                        });
                        var AdjustUpto = AccountAmt - (MinusAmount + AdjustAmount);
                        if (CurrentChargesAmt <= AdjustUpto) {
                        }
                        else {
                            alert("Adjust Upto : " + AdjustUpto + " Only...!\nPlease Check It...!");
                            $(this).val(AdjustUpto);
                        }
                    });
                    $(".enttxtclsplus").blur(function () {
                        var Row = $(this).closest('tr');
                        var TdsFlag = $('#addTDSFlag').is(":checked");
                        var TdsRate = (parseFloat($("#addTDSRate").val()));
                        var TdsBillFlag = $("#hdnTDSBillWiseCut").val();
                        var TdsRound = parseInt($("#hdnRoundOff").val());
                        var TdsAmt = 0;
                        var Row = $(this).closest('tr');
                        var AdjustAmount = parseFloat(Row.find("input[class='txtfvalue']").val());
                        var ExtraAmount = 0;
                        Row.find("input[class='enttxtclsplus']").each(function () {
                            ExtraAmount += parseFloat($(this).val());
                        });
                        mpending = AdjustAmount + ExtraAmount;
                        if (TdsFlag == true && TdsBillFlag == "True") {
                            if (TdsRound != 0) {
                                TdsAmt = ((TdsRate * mpending) / 100);
                                TdsAmt = parseFloat(TdsAmt).toFixed(TdsRound);
                            }
                            else {
                                TdsAmt = Math.round((TdsRate * mpending) / 100);
                                TdsAmt = parseFloat(TdsAmt).toFixed(2);
                            }
                            Row.find("input[class='txtftdsvalue']").val(TdsAmt);
                        }
                    });

                    $('.spinner').hide();
                    $("#SelectLR").focus();
                },
            });
            jQuery("#tabledatapick").jqGrid('navGrid', "#pager",
            { edit: false, add: false, del: false, print:false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#tabledatapick").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
        };
    };



</script>


