@model ALT_ERP3.Areas.Accounts.Models.CashMemoReportVM

<style>
    .ModalLabel {
        font-weight: bold !important;
        color: black !important;
        padding: 3px !important;
    }
    .td1 {
        width: 500px !important;
    }

    .td2 {
        width: 500px !important;
    }

    .td3 {
        width: 500px !important;
    }

</style>
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<script type="text/javascript">
    $(document).ready(function () {


        $(".ReportName").val("");
        if ('@Model.ReportTypeL'!="" && '@Model.ReportTypeL'!=null) {
            $(".ReportName").val('@Model.ReportTypeL');
        }

        $("#txtReportName").val("");
        if ('@Model.ReportName' != "") {
            $("#txtReportName").val('@Model.ReportName');
        }

        $('#Fromdate').val('@Model.FromDate');
        $('#ToDate').val('@Model.ToDate');

        $("#FormatCode").val("CashMemoReport");

        $("#Customer").val("");
        if ('@Model.Customer' != "") {
            $.each('@Model.Customer'.split(','), function (idx, val) {
                $(".CustomerL option[value='" + val + "']").attr("selected", true);
            });
            $('#Customer').val('@Model.Customer');
        }
        $("#Master").val("");
        if ('@Model.Master' != "") {
            $.each('@Model.Master'.split(','), function (idx, val) {
                $(".MasterL option[value='" + val + "']").attr("selected", true);
            });
            $('#Master').val('@Model.Master');
        }

        $("#CashMemoChargesReq").val(false);
        if ('@Model.CashMemoChargesReq'=="True" || '@Model.CashMemoChargesReq'=="true") {
            $("#CashMemoChargesReq").val(true);
            $(".chkCashMemoChargesReq").prop("checked", true);
        }

        $('#Branch').val('');
        if ('@Model.Branch' != "") {
            $.each('@Model.Branch'.split(','), function (idx, val) {
                $(".BranchL option[value='" + val + "']").attr("selected", true);
            });
            $('#Branch').val('@Model.Branch');
        }

        $(".ReportTypeL").change(function () {
            debugger;
            $("#FormatCode").val(this.value);
            $("#Ledger").html($(".ReportTypeL option:selected").text());
            $("#CashMemoChargesReq").val(false);
            if (this.value =="CashMemoReport")
            {
                $('.chkCashMemoChargesReq').prop("checked", false);
                $('.chkCashMemoChargesReq').prop('disabled', false);
            }
            else
            {
                $('.chkCashMemoChargesReq').prop("checked", false);
                $('.chkCashMemoChargesReq').prop('disabled', true);
            }
        });

        $(".BranchL").change(function () {
            debugger;
            $('#Branch').val('');
            var selected = "";
            $(".BranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#Branch').val(selected)
            return false;
        });

        $("input[name$='AccountType']").change(function () {
            debugger;
            var GetChrgesName = this.value;
            if (GetChrgesName == "CustomerFF") {
                $('.CustomerDiv').removeClass("hidden");
                $('.MasterDiv').addClass("hidden");
                $(".CustomerL").trigger("change");
            }
            else if (GetChrgesName == "MasterF") {
                $('.CustomerDiv').addClass("hidden");
                $('.MasterDiv').removeClass("hidden");
                $(".MasterL").trigger("change");
            }
        });

        $(".CustomerL").change(function () {

            $('#Customer').val('');
            var selected = "";
            $(".CustomerL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#Customer').val(selected)
            return false;
        });

        $(".MasterL").change(function () {

            $('#Master').val('');
            var selected = "";
            $(".MasterL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#Master').val(selected)
            return false;
        });

        $(".chkCashMemoChargesReq").change(function () {
            if (this.checked) {
                $('#CashMemoChargesReq').val(true);
                LRChargesCoumnsList(true, $("#ReportTypeL").val());

            } else {
                $('#CashMemoChargesReq').val(false);
                LRChargesCoumnsList(false, $("#ReportTypeL").val());
            }
        });

        $('#SubmitSaveReport').click(function (event) {
            event.preventDefault();
            $('#SaveReportName').modal('show');
        });

        $('#btnopnFormat').click(function(event){
            event.preventDefault();
            var ModelData = {};
            ModelData["ViewDataId"] = $("#FormatCode").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetReportFormat")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#updTfatsearch').modal('show');
                    $('#updTfatsearchDiv').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('.BranchL,.CustomerL,.MasterL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Item',
        })
    });
</script>
<table class="table table-striped table-bordered">
    <thead>
    </thead>
    <tbody>
        <tr>
            <td class="td1">
                <label class=" ModalLabel  control-label" style="width:auto;">Voucher No :</label>
                @Html.TextBoxFor(x => x.VoucherNo, new { @class = "form-control txtBillNo", @id = "txtBillNo", @style = "width:100px;display: inline-table;float: initial;" })
            </td>
            <td class="td2"></td>
            <td class="td3">
                <label class=" ModalLabel  control-label" style="width:auto;">Report Type :</label>
                @Html.DropDownListFor(x => x.ReportTypeL, Model.ReportsType, new { @class = "form-control ReportTypeL", @style = "float: right;width:163px;display: inline-table;" })
            </td>
        </tr>
        <tr>
            <td class="td1">
                <label class=" ModalLabel  control-label" style="width:auto;"> Branch :</label>
                @Html.ListBoxFor(x => x.BranchL, Model.BranchesOnly, new { @class = "BranchL", @id = "BranchL" })
            </td>
            <td class="td2">
                <div id="MasterDiv" class="MasterDiv ">
                    <label class=" ModalLabel  control-label" style="width:auto;">Master :</label>
                    @Html.ListBoxFor(x => x.MasterL, Model.Masters, new { @class = "MasterL", @id = "MasterL" })
                </div>
            </td>
            <td class="td3">
                <label class=" ModalLabel  control-label" style="width:auto;">Show Cash-Sale (LR Details):</label>
                <div style="display:flex;float:right;">
                    <input type="checkbox" class="form-control chkCashMemoChargesReq" id="CashMemoChargesReq" value="CashMemoChargesReq" style="height:20px;width:35px;" />
                </div>
            </td>
        </tr>
        <tr>
            <td class="td1">
                <label class=" ModalLabel  control-label" style="width:auto;">Customer :</label>
                @Html.ListBoxFor(x => x.CustomerL, Model.Customers, new { @class = "CustomerL", @id = "CustomerL" })
            </td>
        </tr>

    </tbody>
</table>

