@model ALT_ERP3.PurchaseVM
@using Common;
<style>
    #txtQty:focus {
        border-color: #83eae4;
    }
</style>

<div class="grid" id="SelectedledgerTable" style="max-height:300px; width:100%; overflow: scroll;">
    
    <table id="tabledata2" class="zui-table2" style="width:100%">
        <thead>
            <tr role="row" style="font-family:Tahoma;font-size:9pt;width:100%;">
                <th style="width:1%">Sr.</th>

                <th style="width:13%;">LR No</th>

                <th style="width:10%;">Consigner</th>
                <th style="width:10%;">Consignee</th>
                <th style="width:10%">From</th>
                <th style="width:10%">To</th>
                <th style="width:10%">Wt</th>
                <th style="width:10%">Total Qty</th>
                <th style="width:10%">Qty</th>
                <th style="width:10%">Total</th>

                <th colspan="2" style="width:6%"></th>
            </tr>

        </thead>
        <tbody>
            @if (Model.NewItemList != null)
            {
                foreach (var item in @Model.NewItemList.Where(x => x.tempIsDeleted == false).ToList())
                {
                   
                    <tr role="row">
                        <td style="width:1%">@item.tempId</td>
                        <td colspan="13">
                        <td colspan="3" style="width:20%">[@item.Code]  @item.ItemName @item.ClassValues1  @item.ClassValues2 </td>
                        <td style="width:9%">@item.StoreName</td>
                        <td class="Bintdcl" style="width:4%">@item.BinNumber</td>
                        <td style="width:5%">@item.Unit</td>
                        <td style="width:5%;text-align:right;">@item.Qty</td>
                        <td colspan="3" class="MultiUnitCl" style="width:15%;text-align:left;">Factor:@item.Factor |Qty2: @item.Qty2|Unit2: @item.Unit2|  @item.RateOn2  </td>
                        <td style="width:5%">@item.HSN</td>
                        <td style="width:7%">@item.GSTCode</td>
                        <td style="width:5%;text-align:right;">@item.Rate</td>
                      
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div class="example-modal">
    <div id="itemlistupdate" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;overflow:unset">
            <div id="ItemListUpdate">
                @Html.Partial("UpdateItemList")
            </div>
        </div>
    </div>
</div>


@Html.HiddenFor(x => x.HSN, new
{
    @Id = "hdnHSN"
})
@Html.HiddenFor(x => x.GSTCode, new
{
    @Id = "hdnGSTCode"
})
@Html.HiddenFor(x => x.Unit2, new
{
    @Id = "hdnUnit2"
})

@Html.HiddenFor(x => x.BinNumber, new
{
    @Id = "hdnBinNumber"
})
@Html.HiddenFor(x => x.Inclusive, new
{
    @Id = "hdnInclusive"
})
@Html.HiddenFor(x => x.SerialReq, new
{
    @Id = "hdnSerialReq"
})
@Html.HiddenFor(x => x.MinSaleRate, new
{
    @Id = "hdnMinSaleRate"
})
@Html.HiddenFor(x => x.IsBatchReqd, new { @Id = "hdnIsBatchReqd" })
@Html.HiddenFor(x => x.BatchNoDupl, new { @Id = "hdnBatchNoDupl" })
@Html.HiddenFor(x => x.RateType, new { @Id = "hdnRateType" })
@Html.HiddenFor(x => x.RateTypeTaxable, new { @Id = "hdnRateTypeTaxable" })
@Html.HiddenFor(x => x.RateCalcType, new { @Id = "hdnRateCalcType" })
@Html.HiddenFor(x => x.DiscChargeAmt, new { @Id = "hdnDiscChargeAmt" })
@Html.HiddenFor(x => x.hdnAddDisChgSvd, new { @Id = "hdnAddDisChgSvd" })
@Html.HiddenFor(x => x.DiscNotAllowed, new { @Id = "hdnDiscNotAllowed" })
@Html.HiddenFor(x => x.IsStockSerial, new { @Id = "hdnIsStockSerial" })
@Html.HiddenFor(x => x.PriceDiscCode, new { @Id = "hdnPriceDiscCode" })
@Html.HiddenFor(x => x.ClassValues1, new { @Id = "hdnClassValues1" })
@Html.HiddenFor(x => x.ClassValues2, new { @Id = "hdnClassValues2" })
@Html.HiddenFor(x => x.PriceRateCode, new { @Id = "hdnPriceRateCode" })
@Html.HiddenFor(x => x.ItemSchemeCode, new { @Id = "hdnItemSchemeCode" })
@Html.HiddenFor(x => x.DiscOnTaxable, new { @Id = "hdnDiscOnTaxable" })
@Html.HiddenFor(x => x.ChkReOrderLevel, new { @Id = "hdnChkReOrderLevel" })
@Html.HiddenFor(x => x.ReOrderLevel, new { @Id = "hdnReOrderLevel" })
@Html.HiddenFor(x => x.ChkMinQtyLevel, new { @Id = "hdnChkMinQtyLevel" })
@Html.HiddenFor(x => x.MinQty, new { @Id = "hdnMinQty" })
@Html.HiddenFor(x => x.Store, new { @Id = "hdnPrStore" })
@Html.HiddenFor(x => x.CheckStock, new { @Id = "hdnPrCheckStock" })
<input id="hdnStkAdjSaved" hidden="hidden">
<script>
    $(document).ready(function () {
     
        $("#btnadddata").click(function (event) {
            event.preventDefault();
            $('#ErrorMessage').hide();
            var ModelData = {};
            ModelData["Code"] = $('#txtitemcode').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("AddItemlist")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                    $('#SaveData').prop('disabled', true);
                    $('#BothSaveEmail').prop('disabled', true);
                    $('#Print').prop('disabled', true);
                },
                success: function (data) {
                    $('#errormessage').hide();
                   
                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });

        $('button[action|="EditItem"]').click(function (event) {
            event.preventDefault(event);
            //$('#itemlistupdate').modal({
            //    backdrop: 'static',
            //    keyboard: false
            //});

            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["Account"] = $('#Account').val();
            ModelData["DelyCode"] = $('#DelyCode').val();
            ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
            ModelData["Type"] = $("#hdnType").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetItemListforUpdate")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {

                },
                success: function (data) {
                    if (data.Status == "Error") {
                        $('.spinner').hide();
                        alert(data.Message);
                        return;
                    }
                    else if(data.Status == "Confirm"){
                        var confrm = confirm(data.Message);
                        if (confrm == false) {
                            return;
                        }
                        else {
                            $('#itemlistupdate').modal({
                                backdrop: 'static',
                                keyboard: false
                            });
                            $('#itemlistupdate').modal('show');
                            $('#ItemListUpdate').html(data.Html);
                        }
                    }
                    else {
                        $('#itemlistupdate').modal({
                         backdrop: 'static',
                         keyboard: false
                        });
                        $('#itemlistupdate').modal('show');
                        $('#ItemListUpdate').html(data.Html);
                    }

                },
                error: function (er) {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('button[action|="DeleteItem"]').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteItemList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                    $('#SaveData').prop('disabled', true);
                    $('#BothSaveEmail').prop('disabled', true);
                    $('#Print').prop('disabled', true);
                },
                success: function (data) {
                    if(data.Status == "Success"){

                    $('#ErrorMessage').hide();
                    $('#ItemListTable').html(data.Html);
                    $('#txtf_F001').val(data.Taxable.toFixed(2));
                    $('#txtb_F001').val(data.Taxable.toFixed(2));
                    $('#txttotitemqty').val(data.TotalQty.toFixed(2));
                    $('#txttottxable').val(data.Taxable.toFixed(2));
                    //$('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                    //$('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                    //$('#txttotigst').val(data.IGSTAmt.toFixed(2));
                    //if ($('#hdnSType').val() == "RP") {
                    //    $('#TDSAble').val(data.Taxable.toFixed(2));
                    //}
                    SetValuesInTable()
                    var tab2size = $('#tabledata2 tbody tr').length;
                    if (tab2size == 0) {
                        $('#divLedgerTable :input').prop('disabled', false);
                        //$('#CurrDiv :input').prop('disabled', false);
                    }

                 }
                   if(data.Status == "Error"){
                    $('.spinner').hide();
                    alert(data.Message);
                    $('#SaveData').prop('disabled', false);
                    $('#BothSaveEmail').prop('disabled', false);
                    $('#Print').prop('disabled', false);
                    return;

                  }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

    });
</script>

@functions{
    string GetFixedTwo(decimal dcb)
    {
        decimal d = Math.Floor(100 * dcb) / 100;
        string s = d.ToString("N2");
        return s;
    }
}