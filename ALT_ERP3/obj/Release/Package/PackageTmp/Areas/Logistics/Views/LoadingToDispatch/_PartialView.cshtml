@model ALT_ERP3.Areas.Logistics.Models.LoadingToDispatchVM
@using Common;
@{
    ViewBag.Title = "FM Master";
    Layout = null;
}
<style>
    .AutoRetrive {
        background: #95cac7;
        color: black;
    }

    #NodddtificationDiv {
        background-color: #21b11fd9;
        height: 100px;
        width: 100px;
        animation-duration: 4s;
        animation-name: example;
        border-radius: 60px;
        padding: 30px 3px 0 3px;
        text-align: center;
        color: cornsilk;
        font-size: 14px;
        font-weight: bold;
    }
</style>
<style>
    .circle {
        width: 38px;
        height: 84px;
        position: relative;
    }

    .icon {
        position: absolute;
        top: 39%;
        left: 33%;
        transform: translate(-50%, -50%);
        width: 10px;
        height: 10px;
        display: block;
    }

    .multiselect {
        width: 205px !important;
        text-align: left !important;
    }

    /*.multiselect .dropdown-toggle .btn btn-default .disabled:hover{
        background-color:aqua !important;
    }*/
    .btn-group > .multiselect:hover {
        color: red !important;
    }

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    .legend {
        top: -0.0em;
        color: red !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: white;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }

    /*.legend {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: white;
        color: red !important;
        width: auto;
        z-index: auto;
        padding: 5px 45px 5px 45px;
    }*/

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -40px;
    }

    .legend3 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        /*background-color: #57c8f1;*/
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -40px;
    }


    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }

        .toggle.btn {
            min-width: 77px !important;
            min-height: 34px;
        }
</style>
<style>
    .example {
        border: 1px solid #ccc !important;
        border-collapse: collapse !important;
        width: max-content;
        font-size: 9px !important;
        white-space: nowrap !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
    }

        .example th {
            background-color: #F7F7F7 !important;
            font-weight: bold !important;
        }

        .example th, .example td {
            border: 1px solid #ccc !important;
            padding: 5px !important;
            font-size: 12px !important;
        }

        .example, .example table td {
            border: 0px solid #ccc !important;
        }

    .example2 {
        border: 1px solid #ccc !important;
        border-collapse: collapse !important;
        width: max-content;
        font-size: 9px !important;
        white-space: nowrap !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
    }

        .example2 th {
            background-color: #F7F7F7 !important;
            font-weight: bold !important;
        }

        .example2 th, .example2 td {
            border: 1px solid #ccc !important;
            padding: 5px !important;
            font-size: 12px !important;
        }

    .example2, .example table td {
        border: 1px solid #ccc !important;
    }
</style>
<style>
    .tablinks {
        height: 40px !important;
    }

    #btnClear {
        display: inline-block;
        padding: 3px 3px;
        font-size: 12px;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        outline: none;
        color: white;
        background: linear-gradient(#53b972,#2fc177);
        border: none;
        border-radius: 24px;
        box-shadow: 0 9px #999;
    }

        #btnClear:hover {
            background: linear-gradient(#d03425,#bb1f1f);
        }

        #btnClear:active {
            background: linear-gradient(#53b972,#2fc177);
            box-shadow: 0 5px #666;
            transform: translateY(4px);
        }
</style>
<!-- Direct Loading Modal CSS   -->
<style>
    .SearchRow {
        background-color: coral;
    }

    .SelectedRow {
        background-color: #e1cde1 !important;
    }
    .legend3 {
        top: 0.1em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

</style>

<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>
<script type="text/javascript">
    var value = 0;

    $(document).ready(function ()
    {

        AlertNoteMaster();
        $('#AlertNoteModal,#addnotemodel,#LoadConsignent,#attachdoc,#DVattachdoc').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#AlertNoteModal,#addnotemodel,#LoadConsignent,#attachdoc,#DVattachdoc").modal("hide");

        GetMyFavorites('@Model.ViewDataId');

        if (('@Model.Mode' == "View") || ('@Model.Mode' == "Delete")) {
            $('.form-group :input').prop("disabled", true);
            $('#btnAttachment').prop("disabled", true);
            //$('#btnClear').prop("disabled", true);
            $('#btnDestination').prop("disabled", false);
            $('#btnSchedule,#btnViewVehicleAttachment').prop("disabled", false);
        }
        else
        {

            $("#FmDetailsToogle").slideToggle("slow");
            $('#FmPanelDetails .form-group :input').prop("disabled", true);
            $('#btnSchedule,#btnViewVehicleAttachment').prop("disabled", false);
            $('#btnDestination').prop("disabled", false);

        }
        if ('@Model.Mode' == "View") {
            $(".gellrlistOfLc").prop("disabled", false);
        }

        if ('@ViewBag.Authenticate' == "N" || '@ViewBag.Authenticate' == "R")
        {
            $('.form-group :input').prop("disabled", true);
            $('#btnDestination').prop("disabled", false);
            $('#btnSchedule,#btnViewVehicleAttachment').prop("disabled", false);
            if ('@ViewBag.Authenticate' == "N")
            {
                alert("This Is Un-Authorise FM So U Can Not Do Any Activity ...!");
            }
            else if ('@ViewBag.Authenticate' == "R")
            {
                alert("This Is Rejected FM So U Can Not Do Any Activity ...!");
            }
        }




        $("#ArrivalKM").constrain({ allow: { regex: "[0-9]" } });
        $("#DispachKM").constrain({ allow: { regex: "[0-9]" } });

        LoadVehicleGroupStatus();
        AddButtonValidation();
        LoadVehicle("");
        LoadBroker();
        LoadFrom();
        ComboDestination();
        LoadTo();
        LoadVehicleGroupCategory();
        LoadPayableAt();
        OTHBranchUnload();
        //BlobalLoadingBranch();
        $(".tablinks").prop("disabled", false);
        $("#btnFmDetailsToogle").click(function () {
            $("#FmDetailsToogle").slideToggle("slow");
        });
        $("#btnSearchLCNo").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#demo tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
        $("#btnAddNote").click(function (e) {
            e.preventDefault();
            $("#OnlyAlertNoteDiv").html('');
            var url = '/Logistics/AlertNote/ShoWAlertNoteList';
            var myTableArray = [];
            myTableArray.push($('#FMNO').val());
            var DTO = { Type: "FM000", TypeCode: myTableArray, DocTpe: "FM000" };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    
                    $('#addnotemodel').modal('show');
                    var AttachDoc = $("#AlertAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);

                    $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");


                },
            });
        });

        $("#btnAddNarr").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").addClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").removeClass("hidden");
            var url = '/Logistics/AlertNote/PartialView';
            var ModelData = {};
            ModelData["AType"] = "FM000";
            ModelData["DocReceived"] = $("#FMNO").val();
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    
                    var AttachDoc = $("#AddAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                },
            });
        });

        $("#btnNarrList").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
        });

        $('#btnNarrSave').click(function (event) {
            event.preventDefault();
            
            if ($("#AType").val() == null || $("#AType").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Type is required..');
                return;
            }
            if ($("#CommonRemark").val() == null || $("#CommonRemark").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Remark is required..');
                return;
            }
            var AlertRefType = [];
            
            $('#ALerttbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');
                if ($(this).find(".chkfvalue").prop("checked") == true || $(this).find(".chkfvalueStop").prop("checked")) {
                    var myDets =
                    {
                        Code: tds.eq(1).text(),
                        select: $(this).find(".chkfvalue").prop("checked"),
                        stop: $(this).find(".chkfvalueStop").prop("checked"),
                    }
                    AlertRefType.push(myDets);
                }
            });
            var url = '/Logistics/AlertNote/SaveDataGetList';
            var ModelData = {};
            ModelData["AType"] = $("#AType").val();
            ModelData["TypeCode"] = $("#TypeCode").val();
            ModelData["RefersType"] = AlertRefType;
            ModelData["Remark"] = $("#CommonRemark").val();
            ModelData["Bling"] = $("#Bling").is(":checked");
            ModelData["PartyNarr"] = $("#PartyNarr").is(":checked");
            ModelData["Mode"] = 'Edit';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message);
                    } else
                    {
                        var LoadDownLoadFiles = $("#AlertAlertNoteDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                    }
                },
            });
        });

        $("#btnViewVehicleAttachment").click(function (event) {
            event.preventDefault();
            var url = '/Logistics/Attachment/GetAllAttachmentsOnlyView';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#VehicleNo").val();
            ModelData["Type"] = "Vehic";
            ModelData["HideDelete"] = true;

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#DVAttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $("#btnCamera").hide();
                    $('#DVattachdoc').modal('show');
                },
            });
        });


        $('#btnFMLODAAll').click(function (event) {
            event.preventDefault();
            
            var url = '@Url.Action("LoadedAllLCPartialView")';
                var DTO = { Reco: $("#Document").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#ShowAllLoadedLCList");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#GetLoadedAllLCLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                    },
                });
        });

        //Select Particular Consignment
        $("#DirectLR").blur(function () {
            var CountLrExistOrNot = 0, TotalQty = 0, TotalWeight = 0, count = 0;
            var WantToselectLRNO = $("#DirectLR").val();
            var ScrollRow;

            
            if ($("#DirectLR").val() != "" && $("#DirectLR").val() != null) {
                $('#Loadinglist > tbody > tr').removeClass("SelectedRow");
                $('#Loadinglist > tbody > tr input[class="DebitGrid"]:checked').closest('tr').addClass("SelectedRow");
                $('#Loadinglist tbody tr').each(function () {
                    
                    var Qty = 0, Weight = 0;
                    var Row = $(this).closest('tr');
                    var LRNO = Row.find('td:eq(7)').text();
                    var Auth = Row.find('td:eq(27)').text();
                    var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
                    if (LRNO == WantToselectLRNO) {
                        ScrollRow = Row;
                        if (Auth == "A") {
                            Row.find("input[class='DebitGrid']").prop("checked", true);
                            Row.find(".LGQty").val(Row.find('td:eq(12)').text());
                            Row.find(".LGQty").prop("disabled", false);
                            Row.find(".LDQty").val("0");
                            Row.find(".LDQty").prop("disabled", false);
                            Row.find(".CalculateWeight").val(Row.find('td:eq(17)').text());
                            Row.find(".CalculateWeight").prop("disabled", false);

                            Row.find('.SearchLoadingVehicle').select2('enable');
                            Row.find(".SearchLoadingVehicle").select2('data', { id: ConsignmentDestId, text: ConsignmentDestName });

                            Qty = parseInt(Row.find('td:eq(12)').text());
                            Weight = parseInt(Row.find('td:eq(17)').text());
                            count++;

                            
                            var objTable = $("#Loadinglist");
                            var iRow = ScrollRow.find("td:eq(6)").text();
                            objTable.jqGrid('setSelection', iRow);
                            jQuery("#Loadinglist").jqGrid('setRowData', parseInt(iRow), false, { background: 'unset' });
                        }
                        else if (Auth == "N") {
                            alert("This Is Un-Authorised Consignment So U Can't Select IT...");
                            Row.find("input[class='DebitGrid']").prop("checked", false);
                        }
                        else if (Auth == "R") {
                            alert("This Is Reject Consignment So U Can't Select IT...");
                            Row.find("input[class='DebitGrid']").prop("checked", false);
                        }
                    }
                    else {
                        if (CheckBox) {
                            Qty = parseInt(Row.find(".LGQty").val());
                            Weight = parseInt(Row.find('.CalculateWeight').val());
                        }
                    }

                    TotalQty += Qty;
                    TotalWeight += Weight;
                })

                var check = $('#Loadinglist').find("input[class='DebitGrid']:checked").length;
                $("#mLoadTotalLR").html(check);
                $("#mLoadTotalQty").html(TotalQty);
                $("#mTotalWeight").html(TotalWeight);

                
                if (count == 0) {
                    alert("Not Found");
                    $("#DirectSearch").focus();
                }
                else {
                    $("#DirectLR").focus();
                }
            }
            $("#DirectLR").val("");
        });
        // Search all columns
        $('#DirectSearch').keyup(function () {
            var value = $(this).val();
            if (value != "") {
                $('#Loadinglist > tbody > tr').removeClass('SearchRow');
                $("#Loadinglist > tbody > tr > td ").each(function () {
                    if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        var dd = $(this).text().toLowerCase();
                        $(this).addClass("SearchRow");
                    }
                    else {
                        $(this).removeClass("SearchRow");
                    }
                });
            }
            else {
                $('#Loadinglist td').removeClass('SearchRow');
            }
        });

        $('#btnGetloadinglr').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true") {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else {
                $('#Loadinglist').jqGrid('clearGridData');
                $("#Loadinglist").jqGrid("GridUnload");
                $('#Loadinglist').trigger('reloadGrid');

                $("#DirectSearch").val("");
                $("#DirectLR").val("");
                GridReloadConsignment("");
            }
        });
        $("#txtSearchLr").blur(function (event)
        {
            debugger;
            event.preventDefault();
            if (parseInt($("#txtSearchLr").val()) > 0 ) {

                if ($("#StopActivityFromAlert").val() == "true") {
                    alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
                }
                else {
                    $('#Loadinglist').jqGrid('clearGridData');
                    $("#Loadinglist").jqGrid("GridUnload");
                    $('#Loadinglist').trigger('reloadGrid');

                    $("#DirectSearch").val("");
                    $("#DirectLR").val("");
                    GridReloadConsignment("1");
                }
            }
        });

        

        $('#btnLoadConsignment').click(function (event) {
            event.preventDefault();

            var ValidData = true;
            var ErrorMessage = "";
            var url = '@Url.Action("CheckNewRoute")';
            var myTableArray = [];
            $("#Loadinglist > tbody  > tr").each(function () {

                if ($(this).find("input[class='DebitGrid']").prop("checked") == true) {
                    debugger;
                    var Row = $(this).closest('tr');
                    var Destination = Row.find(".SearchLoadingVehicle").select2('data').id;
                    if (Destination == "" || Destination == null) {
                        if (ValidData) {
                            ValidData = false;
                        }
                        ErrorMessage += "Please select the Destination of Consignment for Consignment " + $(this).find('td:eq(7)').text() +"\n";
                    }
                    var myDets = {
                        Parentkey: $(this).find('td:eq(4)').text(),
                        LRNO: $(this).find('td:eq(7)').text(),
                        BookDate: $(this).find('td:eq(8)').text(),
                        AvailableQty: $(this).find('td:eq(12)').text(),
                        LoadQty: $(this).find(".LGQty").val(),
                        LoadWeight: $(this).find(".CalculateWeight").val(),
                        ChgWT: $(this).find('td:eq(16)').text(),
                        ActWT: $(this).find('td:eq(17)').text(),
                        ChargeType: $(this).find('td:eq(19)').text(),
                        Unit: $(this).find('td:eq(18)').text(),
                        From: $(this).find('td:eq(20)').text(),
                        To: $(this).find('td:eq(21)').text(),
                        Consignor: $(this).find('td:eq(24)').text(),
                        Consignee: $(this).find('td:eq(25)').text(),
                        LRType: $(this).find('td:eq(26)').text(),
                        LRMode: $(this).find('td:eq(28)').text(),
                        ConsignmentDest: Row.find(".SearchLoadingVehicle").select2('data').id
                    }
                    myTableArray.push(myDets);
                }
            });
            var check = $('#Loadinglist').find("input[class='DebitGrid']:checked").length;
            if (check > 0) {
                if (ValidData == false) {
                    alert(ErrorMessage);
                    return;
                }

                $("#LoadConsignent").modal("hide");
                var ModelData = {};
                ModelData["loadConsignmentList"] = myTableArray;
                ModelData["Document"] = $("#Document").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        debugger;
                        if (data.RoutFlag == true || data.RoutFlag == "true" || data.RoutFlag == "True") {
                            var result = confirm(data.NewRouteName + " This Destination Not In Current Vehicle Route, Add New Routes In Freight Memo ?");
                            if (result) {
                                NewRouteGenerate(data.NewRoute);
                                SaveDirectLoading();
                            }
                        } else {
                            SaveDirectLoading();
                        }
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $("#DirectSearch").val("");
                    },
                });
            }
            else {
                alert("Atleast One Consignment Required...");
            }
        });


        $('#btnGetPendingLC').click(function (event)
        {
            event.preventDefault();
            
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("LoadTabPartialView")';
                var DTO = { Reco: $("#Document").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#ShowPendingLCList");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#GetPEndingLCLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                    },
                });
            }




        });
        $('#btnLoadIT').click(function (event) {
            event.preventDefault();


            var myTableArray = [];
            $("#LcCombo .Ordertable-row").each(function () {
                
                if ($(this).find('input[type=checkbox]').prop("checked") == true) {
                    var LRValue = $(this).find(".LCTablekey").text();
                    myTableArray.push(LRValue);
                }
            });

            if (myTableArray.length > 0)
            {
                var url = '/Logistics/AlertNote/ShoWAlertNoteList';
                var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "LOD00" };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        
                        $('.spinner').hide();
                        if (data.Status == "Success") {
                            var AttachDoc = $("#OnlyAlertNoteDiv");
                            AttachDoc.html('');
                            AttachDoc.html(data.Html);
                            $('#AlertNoteModal').modal('show');


                        }
                        AlertNotePopUp();

                    },
                });
            }
            else
            {
                alert("Sorry U Not Select Any LC...")
                $('#GetPEndingLCLIst').modal('show');
                return;
            }
        });

        $('#OTHbtnGetUnloadinglr').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("OTHUnloadTabPartialView")';
                var DTO = { Fmno: $("#Document").val(), Branch: $("#UnloadBranch").val()};
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#OTHShowLRListOFUnload");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#OTHGetLRLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                });
            }
        });
        $('#OTHbtnGetAllMaterial').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("OTHAllMaterialForUnloadPartialView")';
                var DTO = { Fmno: $("#Document").val(), Branch: $("#UnloadBranch").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#OTHShowLRListOFUnload");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#OTHGetLRLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                });
            }
        });
        $('#OTHbtnGetLR').click(function (event) {
            event.preventDefault();
            $("#OTHGetLRLIst").modal("hide");
            var RecoList = "", Gqty = "", DQty = "", Weight = "", Branch = "";

            $("#OTHUnloadReadyForLrListexample1 > tbody  > tr").each(function ()
            {
                if ($(this).find('input[type=checkbox]').prop("checked") == true)
                {
                    
                    var RecorKey = $(this).find(".RecorKey").text();
                    var LGQty = $(this).find(".LGQty").val();
                    var LDQty = $(this).find(".LDQty").val();
                    var RowBranch = $(this).find("#OTHBranch").val();
                    var CalculateWeight = $(this).find(".CalculateWeight").val();
                    RecoList = RecoList + RecorKey + ",";
                    Gqty = Gqty + LGQty + ",";
                    DQty = DQty + LDQty + ",";
                    Weight = Weight + CalculateWeight + ",";
                    Branch = Branch + RowBranch + ",";
                }
            });

            var check = $('#OTHUnloadReadyForLrListexample1').find('input[type=checkbox]:checked').length;
            if (check > 0)
            {
                var url = '@Url.Action("OTHUnLoadGridView")';
                var DTO = { RecoList: RecoList.substr(0, RecoList.length - 1), GQty: Gqty.substr(0, Gqty.length - 1), DQty: DQty.substr(0, DQty.length - 1), Weight: Weight.substr(0, Weight.length - 1), Branch: Branch.substr(0, Branch.length - 1) };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        var LoadDownLoadFiles1 = $("#OTHUnloadPartialViewDiv");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles1.html('');
                        LoadDownLoadFiles1.html(data.Html);
                        
                        OTHUNLOADAlertNoteMaster();

                    },
                });
            }
            else {
                alert("Atleast One LR Required...");
            }
        });
        $('#OTHbtnFMUNLoading').click(function (event) {
            event.preventDefault();

            var myTableArray = [];
            $("#OTHUnloadGridexample1 > tbody  > tr").each(function () {

                var tds = $(this).find('td');
                myTableArray.push(tds.eq(0).text());
            });
            if (myTableArray.length > 0) {
                OTHCheckUNLOADAlertNoteMaster();
            }
        });
        $('#btnGetUnloadinglr').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("UnloadTabPartialView")';
                var DTO = { Fmno: $("#Document").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#ShowLRListOFUnload");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#GetLRLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                });
            }
        });
        $('#btnGetAllMaterial').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("AllMaterialForUnloadPartialView")';
                var DTO = { Fmno: $("#Document").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#ShowLRListOFUnload");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#GetLRLIst').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                });
            }
        });

        $('#btnGetLR').click(function (event) {
            event.preventDefault();
            $("#GetLRLIst").modal("hide");
            var RecoList = "", Gqty = "", DQty = "", Weight = "";

            $("#UnloadReadyForLrListexample1 > tbody  > tr").each(function ()
            {
                if ($(this).find('input[type=checkbox]').prop("checked") == true)
                {
                    var RecorKey = $(this).find(".RecorKey").text();
                    var LGQty = $(this).find(".LGQty").val();
                    var LDQty = $(this).find(".LDQty").val();
                    var CalculateWeight = $(this).find(".CalculateWeight").val();
                    RecoList = RecoList + RecorKey + ",";
                    Gqty = Gqty + LGQty + ",";
                    DQty = DQty + LDQty + ",";
                    Weight = Weight + CalculateWeight + ",";
                }
            });

            var check = $('#UnloadReadyForLrListexample1').find('input[type=checkbox]:checked').length;
            if (check > 0)
            {
                var url = '@Url.Action("UnLoadGridView")';
                var DTO = { RecoList: RecoList.substr(0, RecoList.length - 1), GQty: Gqty.substr(0, Gqty.length - 1), DQty: DQty.substr(0, DQty.length - 1), Weight: Weight.substr(0, Weight.length - 1) };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        var LoadDownLoadFiles1 = $("#UnloadPartialViewDiv");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles1.html('');
                        LoadDownLoadFiles1.html(data.Html);

                        UNLOADAlertNoteMaster();

                    },
                });
            }
            else {
                alert("Atleast One LR Required...");
            }
        });
        $('#btnFMUNLoading').click(function (event) {
            event.preventDefault();

            var myTableArray = [];
            $("#UnloadGridexample1 > tbody  > tr").each(function () {

                var tds = $(this).find('td');
                myTableArray.push(tds.eq(0).text());
            });
            if (myTableArray.length>0) {
                CheckUNLOADAlertNoteMaster();
            }
        });
        $('#btnGetDelivery').click(function (event) {
            event.preventDefault();
            var check = $('#DeliveryTable').find('input[type=checkbox]:checked').length;
            if (check > 0)
            {
                PopUpStopDelivery();
            }
            else
            {
                alert("Atleast One Consignment Required...");
            }
        });
        $('#btnGetDeliveryConsignment').click(function (event)
        {
            event.preventDefault();
            if ($("#StopActivityFromAlert").val() == "true")
            {
                alert($("#FMNO").val() + " FM Activity Stop From Alert Master....!");
            }
            else
            {
                var url = '@Url.Action("Delivery")';
                var DTO = { Fmno: $("#Document").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#ShowLRDel");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $('#GetLRDel').modal('show');
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                });
            }
        });


        $("#btnFMAddDoc").click(function (event) {
            event.preventDefault();
            
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = 'Edit';
            ModelData["Srl"] = $("#Parentkey").val();
            ModelData["Type"] = "FM000";
            ModelData["RefType"] = "@Model.Header";
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });
        $("#btnFMLODAddDoc,#btnDLCFMAddDoc").click(function (event) {
            event.preventDefault();
            
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = 'Edit';
            ModelData["Srl"] = $("#Parentkey").val();
            ModelData["Type"] = "FM000";
            ModelData["RefType"] = "Loading";

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });
        $("#btnFMUNLODAddDoc").click(function (event) {
            event.preventDefault();
            
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = 'Edit';
            ModelData["Srl"] = $("#Parentkey").val();
            ModelData["Type"] = "FM000";
            ModelData["RefType"] = "Un-Loading";
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });

        $('#btnListPrint').click(function(event){
            event.preventDefault();

            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["Type"] = 'LOD00'
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetMultiPrint")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#printpostmodel').modal('show');
                    $('#Printmodel').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $('#btnListUNLODPrint').click(function (event) {
            event.preventDefault();

            var ModelData = {};
            var KeyList = "";
            $("#UnloadGridexample1 > tbody  > tr").each(function () {
                var tds = $(this).find('td');
                KeyList += tds.eq(0).text() + ",";
            });
            KeyList = KeyList.substring(0, KeyList.length - 1);
            ModelData["Document"] = KeyList;
            ModelData["Type"] = 'UNLOD'
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetMultiPrint")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#printpostmodel').modal('show');
                    $('#Printmodel').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $(document).on('change', '.SearchLoadingVehicle', function (event) {
            // Your event handling code here
            
            ConsignmentDestId = $(this).select2('data').id;
            ConsignmentDestName = $(this).select2('data').text;
        });


    });
    var ConsignmentDestId = "", ConsignmentDestName = "";
    function GridReloadConsignment(value) {

        //$("#GlobalLoadingBranch").select2('data', { id: "", text: "Search" });
        ConsignmentDestId = "", ConsignmentDestName = "";

        var ColName, Coldata;
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?id=DirectLoadingConsignment';
        var sUrlpath = '@Url.Action("GetGridData")?ViewDataId=DirectLoadingConsignment';
        if (value == "1")
        {
            sPathUrl = '@Url.Action("GetGridStructureRecords")?id=DirectLoadingSearchConsignment';
            sUrlpath = '@Url.Action("GetGridData1")?ViewDataId=DirectLoadingSearchConsignment&mVar3=' + $("#txtSearchLr").val();
            $("#txtSearchLr").val("");
        }
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });
        function CreateGridData() {
            
            $('#Loadinglist').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#Loadpager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                height:350,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                scrollrows: true,
                onSelectRow: function (id, status, e) {
                    $('.spinner').hide();
                },
                ondblClickRow: function (id) {
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    var ids = jQuery("#Loadinglist").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        var gridId = jQuery("#Loadinglist").getDataIDs();
                        //loop through grid rows
                        var Auth = jQuery("#Loadinglist").getCell(rowId, "Authenticate");
                        var beChecked = "<input type ='checkbox' id='" + rowId + "' value='" + jQuery("#Loadinglist").getCell(rowId, "Recordekey") + "'  onclick='AutoSelectConsignmentQty(" + rowId + ");' class='DebitGrid' name='DebitGrid'  style='height: 22px;width: 19px;' />";
                        var LoadGQty = "<center><input type ='text' value='0' id=LGQty" + rowId + " class='LGQty' name='LGQty' onblur='ConsignmentQtyCheck()'  style='width:100px;' disabled /></center>";
                        var LoadDQty = "<center><input type ='text' value='0'  class='LDQty' name='LDQty' onblur='ConsignmentQtyCheck()' style='width:100px;' disabled /></center>";
                        var LoadWeight = "<center><input type ='text' value='0'  class='CalculateWeight' onblur='ConsignmentWeightCheck()' name='CalculateWeight'   style='width:100px;' disabled /></center>";
                        var Demo = "<input id='LrwiseBranch'  name='DirectLoad'  class='SearchLoadingVehicle input-large search-query' style='width:150px;'/>";

                        if (Auth == "A")
                        {

                        }
                        else if (Auth == "N")
                        {
                            jQuery("#Loadinglist").jqGrid('setRowData', ids[i], false, { background: 'rgb(80 121 212)' });
                        }
                        else if (Auth == "R")
                        {
                            jQuery("#Loadinglist").jqGrid('setRowData', ids[i], false, { background: 'rgb(191 104 96)' });
                        }

                        jQuery("#Loadinglist").jqGrid('setRowData', rowId, { 'Select': beChecked, 'LoadGQty': LoadGQty, 'LoadDQty': LoadDQty, 'LRActWeight': LoadWeight,'Destination': Demo });

                    }
                    loadingVehicleList();
                    $('.SearchLoadingVehicle').select2('disable');
                },
            });
            jQuery("#Loadinglist").jqGrid('navGrid', "#Loadpager",
            { edit: false, add: false, del: false, print:false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#Loadinglist").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#Loadpager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            $('#LoadConsignent').modal('show');
        };
    }
    function BlobalLoadingBranch() {
        var url = '@Url.Action("OTHBranchUnload")'
        $('#GlobalLoadingBranch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            @*initSelection: function (element, callback) {
                var data = { id: '@Model.UnloadBranch', text: '@Model.UnloadBranchL' };
                callback(data);
            },*@

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadingVehicleList() {
        var url = '@Url.Action("OTHBranchUnload")'
        $('.SearchLoadingVehicle').select2({
             minimumInputLength: 0,
             placeholder: 'Search',
             ajax: {
                 url: url,
                 dataType: 'json',
                 quietMillis: 100,
                 enableFiltering: true,
                 allowClear: true,
                 minimumInputLength: 0,
                 multiple: true,
                 width: 300,
                 data: function (term, page) {
                     return {
                         types: ["exercise"],
                         limit: -1,
                         term: term
                     };
                 },
                 results: function (data, page) {
                     clientObj = JSON.stringify(data);
                     return {
                         results: $.map(data, function (item) {
                             return {
                                 text: item.Name,
                                 id: item.Code
                             }
                         })
                     };
                 }
             },
             @*initSelection: function (element, callback) {
                 var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNoN' };
                 callback(data);
             },*@
             formatResult: function (exercise) {
                 return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                     "</div></span></div></div>";
             },
             formatSelection: function (exercise) {
                 return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                     "</div></span></div></div>";
             },
         })
    };
    function AutoSelectConsignmentQty(RowId) {

        var TotalQty = 0, TotalWeight = 0, count = 0;
        $('#Loadinglist > tbody > tr').removeClass("SelectedRow");
        $('#Loadinglist > tbody > tr input[class="DebitGrid"]:checked').closest('tr').addClass("SelectedRow");
        
        debugger;
        var CurrRow = $('#Loadinglist').find('tr#' + RowId);
        var CheckBox = CurrRow.find("input[class='DebitGrid']").is(':checked');
        var Auth = CurrRow.find('td:eq(27)').text();
        if (Auth == "A") {
            if (CheckBox) {
                CurrRow.find(".LGQty").val(CurrRow.find('td:eq(12)').text());
                CurrRow.find(".LGQty").prop("disabled", false);
                CurrRow.find(".LDQty").val("0");
                CurrRow.find(".LDQty").prop("disabled", false);
                CurrRow.find(".CalculateWeight").val(CurrRow.find('td:eq(17)').text());
                CurrRow.find(".CalculateWeight").prop("disabled", false);
                CurrRow.find('.SearchLoadingVehicle').select2('enable');
                CurrRow.find(".SearchLoadingVehicle").select2('data', { id: ConsignmentDestId, text: ConsignmentDestName });

            }
            else {
                CurrRow.find(".LGQty").val("0");
                CurrRow.find(".LGQty").prop("disabled", true);
                CurrRow.find(".LDQty").val("0");
                CurrRow.find(".LDQty").prop("disabled", true);
                CurrRow.find(".CalculateWeight").val("0");
                CurrRow.find(".CalculateWeight").prop("disabled", true);

                CurrRow.find('.SearchLoadingVehicle').select2('disable');
                CurrRow.find(".SearchLoadingVehicle").select2('data', { id: '', text: 'Search' });
            }
        }
        else if (Auth == "N") {
            alert("This Is Un-Authorised LR So U Cant Select IT...");
            CurrRow.find("input[class='DebitGrid']").prop("checked", false);
        }
        else if (Auth == "R") {
            alert("This Is Reject LR So U Cant Select IT...");
            CurrRow.find("input[class='DebitGrid']").prop("checked", false);
        }

        $('#Loadinglist tbody tr').each(function () {
            
            var Row = $(this).closest('tr');
            var CheckReq = $(this).find("input[class='DebitGrid']").is(':checked');
            var AuthReq = Row.find('td:eq(27)').text();
            var Qty = 0, Weight = 0;
            if (AuthReq == "A") {
                if (CheckReq) {
                    Qty = parseInt(Row.find('td:eq(12)').text());
                    Weight = parseInt(Row.find('td:eq(17)').text());
                    count++;
                }
            }

            TotalQty += Qty;
            TotalWeight += Weight;

        })
        $("#mLoadTotalLR").html(count);
        $("#mLoadTotalQty").html(TotalQty);
        $("#mTotalWeight").html(TotalWeight);
    }
    function ConsignmentQtyCheck() {
        
        var TotalQty1 = 0, TotalWeight1 = 0, count = 0;
        $('#Loadinglist tbody tr').each(function () {
            
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
            var Qty = 0, Weight = 0;

            if (CheckBox) {
                var TotalQty = Row.find('td:eq(12)').text();
                var TotalWeight = Row.find('td:eq(17)').text();
                var LoadGQty = Row.find(".LGQty").val();
                var LoadDQty = Row.find(".LDQty").val();
                var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
                if (LoadQty == 0) {
                    Row.find(".LGQty").val("0");
                    Row.removeClass("SelectedRow");
                    Row.find(".LGQty").prop("disabled", true);
                    Row.find(".LDQty").val("0");
                    Row.find(".LDQty").prop("disabled", true);
                    Row.find(".CalculateWeight").val("0");
                    Row.find(".CalculateWeight").prop("disabled", true);
                    Row.find("input[class='DebitGrid']").prop('checked', false);
                }
                else {
                    count++;
                    if (parseFloat(TotalQty) < parseFloat(LoadQty)) {
                        Row.find(".CalculateWeight").val(TotalWeight);
                        alert("GodownQty and DoorQty Not Greater Than Qty OF Lr.....!");
                        Row.find(".LGQty").val(TotalQty);
                        Row.find(".LDQty").val("0");

                        Qty = parseInt(TotalQty);
                        Weight = parseInt(TotalWeight);
                    }
                    else {
                        var CalculateWeight = parseFloat(LoadQty) / parseFloat(TotalQty) * parseFloat(TotalWeight);
                        if (parseInt(CalculateWeight) >= parseInt(TotalWeight)) {
                            Row.find(".CalculateWeight").val(Math.round(TotalWeight));
                            Weight = parseInt(TotalWeight);
                            Qty = parseInt(TotalQty);
                        }
                        else {
                            Row.find(".CalculateWeight").val(Math.round(CalculateWeight));
                            Weight = parseInt(CalculateWeight);
                            Qty = parseInt(LoadQty);
                        }
                    }
                }
            }
            TotalQty1 += Qty;
            TotalWeight1 += Weight;
        })
        $("#mLoadTotalLR").html(count);
        $("#mLoadTotalQty").html(TotalQty1);
        $("#mTotalWeight").html(TotalWeight1);

    }

    function ConsignmentWeightCheck() {
        var TotalQty1 = 0, TotalWeight1 = 0, count = 0;
        $('#Loadinglist tbody tr').each(function () {
            
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
            var Qty = 0, Weight = 0;
            if (CheckBox) {
                count++;
                
                var TotalQty = Row.find('td:eq(12)').text();
                var TotalWeight = Row.find('td:eq(17)').text();

                var LoadGQty = Row.find(".LGQty").val();
                var LoadDQty = Row.find(".LDQty").val();
                var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
                var LoadWeight = Row.find(".CalculateWeight").val();

                if (parseFloat(TotalWeight) < parseFloat(LoadWeight)) {
                    Row.find(".CalculateWeight").val(TotalWeight);
                    alert("Weight Not Greater Than Act Weight OF Lr.....!");
                    Weight = parseInt(TotalWeight);
                    Qty = parseInt(LoadQty);
                } else {
                    var CalculateWeight = parseFloat(LoadQty) / parseFloat(TotalQty) * parseFloat(TotalWeight);
                    Row.find(".CalculateWeight").val(Math.round(CalculateWeight));
                    Weight = parseInt(CalculateWeight);
                    Qty = parseInt(LoadQty);
                }
            }
            TotalQty1 += Qty;
            TotalWeight1 += Weight;
        })
        $("#mLoadTotalLR").html(count);
        $("#mLoadTotalQty").html(TotalQty1);
        $("#mTotalWeight").html(TotalWeight1);
    }

    function PopUpStopDelivery() {
        var myTableArray = [];
        $('#DeliveryTable tbody').find('tr').each(function () {
            var Row = $(this).closest('tr');
            if (Row.find('.checkbox').prop("checked") == true) {
                myTableArray.push(Row.find('td:eq(0)').text());
            }
        });
        var url = '@Url.Action("DeliveryStopAlertNote")';
        var DTO = { Type:"LR000", TypeCode:myTableArray};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $("#ErrorMessage").hide();
                    SaveDelivery();
                }
                else
                {
                    $('.spinner').hide();
                    alert(data.Message);
                    DeliveryAlertNoteGet();
                }
            },
        });
    }
    function DeliveryAlertNoteGet() {
        var myTableArray = [];
        $('#DeliveryTable tbody').find('tr').each(function () {
            var Row = $(this).closest('tr');
            if (Row.find('.checkbox').prop("checked") == true) {
                myTableArray.push(Row.find('td:eq(0)').text());
            }
        });
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "DELV0" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
            },
        });
    }
    function SaveDelivery()
    {
        var myTableArray = [];
        $("#GetLRDel").modal("hide");
        $('#DeliveryTable tbody').find('tr').each(function () {
            var Row = $(this).closest('tr');
            if (Row.find('.checkbox').prop("checked") == true) {
                var myDets = {
                    TableKey: Row.find('td:eq(0)').text(),
                    Lrno: Row.find('td:eq(2)').text(),
                    DelDate: Row.find(".DLDate").val(),
                    ShortQty: Row.find(".DLShortQty").val(),
                    DeliveredQty: Row.find(".DLQty").val(),
                    DelVehicleNo: Row.find(".DLVehicle").val(),
                    DelStatus: Row.find("#DelStatus").val(),
                    DelNarr: Row.find("#item_DelNarr").val(),
                }
                myTableArray.push(myDets);
            }
        });
        var ModelData = {};
        ModelData["Document"] = $('#Document').val();
        ModelData["vehicleDeliveries"] = myTableArray;
        var DTO = { mModel: ModelData };
        var url = '@Url.Action("SaveDelivery")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
            },
            success: function (data)
            {
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                if (data.Status == "Success")
                {
                    if (data.Popup != "" && data.Popup != null) {
                        alert(data.Popup);
                    }
                    DeliveryPartialView();
                }
                else
                {
                    alert(data.Message);
                }
            },
            error: function (er) {
                alert("Error occured while processing your request.");
            }
        });
    }
    function DeliveryPartialView() {
        var url = '@Url.Action("DeliverdDone")';
        var DTO = { Document: $("#Document").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                var LoadDownLoadFiles1 = $("#UnloadPartialViewDelivery");
                LoadDownLoadFiles1.html('');
                LoadDownLoadFiles1.html(data.Html);
            },
        });
    }
    function GetPendingMaterial() {
        var url = '@Url.Action("PendingMaterialView")';
        var DTO = { Fmno: $("#Document").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var LoadDownLoadFiles = $("#PendingMaterials");
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
            },
        });
    }
    function GetPayloadMaterial() {
        var url = '@Url.Action("PayloadMaterialView")';
        var DTO = { Fmno: $("#Document").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                $("#Loaded").val(data.LoadedWeight);
                $("#AvailablePayload").val(data.Available);

            },
        });
    }






    function AlertNoteMaster() {
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        myTableArray.push($("#Document").val());

        var DTO = { Type: "FM000", TypeCode: myTableArray, DocTpe: "ACTVT" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
                $("#StopActivityFromAlert").val(data.Stop);
            },
        });
    }
    function UNLOADAlertNoteMaster() {
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        $("#UnloadGridexample1 > tbody  > tr").each(function () {

            var tds = $(this).find('td');
            myTableArray.push(tds.eq(0).text());
        });

        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "UNLOD" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
            },
        });
    }
    function OTHUNLOADAlertNoteMaster() {
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';

        var myTableArray = [];
        $("#OTHUnloadGridexample1 > tbody  > tr").each(function () {
            
            var tds = $(this).find('td');
            myTableArray.push(tds.eq(0).text());
        });

        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "UNLOD" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
            },
        });
    }
    function CheckUNLOADAlertNoteMaster()
    {
        event.preventDefault();
        var url = '@Url.Action("CheckStopUNLODAlertNote")';
        var myTableArray = [];
        $("#UnloadGridexample1 > tbody  > tr").each(function () {

            var tds = $(this).find('td');
            myTableArray.push(tds.eq(0).text());
        });

        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe:"UNLOD"};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $("#ErrorMessage").hide();
                    SaveUnload();
                }
                else
                {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function OTHCheckUNLOADAlertNoteMaster()
    {
        event.preventDefault();
        var url = '@Url.Action("CheckStopUNLODAlertNote")';
        var myTableArray = [];
        $("#OTHUnloadGridexample1 > tbody  > tr").each(function () {

            var tds = $(this).find('td');
            myTableArray.push(tds.eq(0).text());
        });

        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe:"UNLOD"};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $("#ErrorMessage").hide();
                    OTHSaveUnload();
                }
                else
                {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }


    function SaveUnload()
    {
        var url = '/Logistics/UnLoading/SaveData';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};
        ModelData["Document"] = $('#Document').val();
        ModelData["From"] = $('#From').val();
        var UnloadLrList = [];
        $("#UnloadGridexample1 > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            
            var myDets = {
                recordkey: tds.eq(0).text(),
                unloadGQty: tds.find(".LGQty").val(),
                unloadDQty: tds.find(".LDQty").val(),
            }
            UnloadLrList.push(myDets);
        });
        ModelData["LRLIst"] = UnloadLrList;
        var DeleteUnloadLr = $("#DeleteUnloadLr").val();
        //ModelData["DeleteUnloadLR"] = DeleteUnloadLr == "" ? null : DeleteUnloadLr.substring(0, DeleteUnloadLr.length - 1);

        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    $("#ErrorMessageLC").hide();
                    alert(data.Message);
                    checkActivityofUnLoading();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                    $('.spinner').hide();
                }
            },
        });
    }
    function OTHSaveUnload() {
        var url = '/Logistics/UnLoading/OTHSaveData';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};
        ModelData["Document"] = $('#Document').val();
        ModelData["From"] = $('#From').val();
        var UnloadLrList = [];
        $("#OTHUnloadGridexample1 > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            
            var myDets = {
                recordkey: tds.eq(0).text(),
                unloadGQty: tds.find(".LGQty").val(),
                unloadDQty: tds.find(".LDQty").val(),
                OTHBranch: tds.eq(3).text(),
            }
            UnloadLrList.push(myDets);
        });
        ModelData["LRLIst"] = UnloadLrList;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    $("#ErrorMessageLC").hide();
                    alert(data.Message);
                    OTHcheckActivityofUnLoading();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                    $('.spinner').hide();
                }
            },
        });
    }

    function AlertNotePopUp()
    {
        var LrList = "";
            $("#LcCombo .Ordertable-row").each(function () {
                if ($(this).find('input[type=checkbox]').prop("checked") == true) {
                    var LRValue = $(this).find(".LCTablekey").text();
                    LrList = LrList + LRValue + ",";
                }
            });

            if (LrList == "") {
                alert("Sorry U Not Select Any LC...")
                $('#GetPEndingLCLIst').modal('show');
                return;
            }
            else
            {
                var url = '@Url.Action("CheckStopLODAlertNote")';
                var myTableArray = [];
                $("#LcCombo .Ordertable-row").each(function () {
                    if ($(this).find('input[type=checkbox]').prop("checked") == true) {
                        var LRValue = $(this).find(".LCTablekey").text();
                        myTableArray.push(LRValue);
                    }
                });
                var DTO = { Type:"LR000", TypeCode:myTableArray ,DocTpe:"LOD00"};
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        if (data.Status == 'Success')
                        {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                            $('#GetPEndingLCLIst').modal('hide');
                            SaveLoading();
                        }
                        else
                        {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                            //alert(data.Message);
                        }
                    },
                });
            }
    }

    function NewRouteGenerate(value) {
        var url = '/Logistics/Loading_Dispatch/AddNewRouteExistingRouteOfFreightMemo';
        var DTO = { fmNo: $("#FMNO").val(), toBranch: value };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                
                $('.spinner').hide();
                if (data.Status == "Success") {
                    alert("New Route Create Sucessfully......!");
                }
            },
        });
    }
    function SaveDirectLoading() {
            var ValidData = true;
            var ErrorMessage = "";
            var url = '@Url.Action("DirectLoading")';
            var myTableArray = [];
            $("#Loadinglist > tbody  > tr").each(function () {

                if ($(this).find("input[class='DebitGrid']").prop("checked") == true) {
                    debugger;
                    var Row = $(this).closest('tr');
                    var Destination = Row.find(".SearchLoadingVehicle").select2('data').id;
                    if (Destination == "" || Destination == null) {
                        if (ValidData) {
                            ValidData = false;
                        }
                        ErrorMessage += "Please select the Destination of Consignment for Consignment " + $(this).find('td:eq(7)').text() +"\n";
                    }
                    var myDets = {
                        Parentkey: $(this).find('td:eq(4)').text(),
                        LRNO: $(this).find('td:eq(7)').text(),
                        BookDate: $(this).find('td:eq(8)').text(),
                        AvailableQty: $(this).find('td:eq(12)').text(),
                        LoadQty: $(this).find(".LGQty").val(),
                        LoadWeight: $(this).find(".CalculateWeight").val(),
                        ChgWT: $(this).find('td:eq(16)').text(),
                        ActWT: $(this).find('td:eq(17)').text(),
                        ChargeType: $(this).find('td:eq(19)').text(),
                        Unit: $(this).find('td:eq(18)').text(),
                        From: $(this).find('td:eq(20)').text(),
                        To: $(this).find('td:eq(21)').text(),
                        Consignor: $(this).find('td:eq(24)').text(),
                        Consignee: $(this).find('td:eq(25)').text(),
                        LRType: $(this).find('td:eq(26)').text(),
                        LRMode: $(this).find('td:eq(28)').text(),
                        ConsignmentDest: Row.find(".SearchLoadingVehicle").select2('data').id
                    }
                    myTableArray.push(myDets);
                }
            });
            var check = $('#Loadinglist').find("input[class='DebitGrid']:checked").length;
            if (check > 0) {
                if (ValidData == false) {
                    alert(ErrorMessage);
                    return;
                }

                $("#LoadConsignent").modal("hide");
                var ModelData = {};
                ModelData["loadConsignmentList"] = myTableArray;
                ModelData["Document"] = $("#Document").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        debugger;
                        if (data.Status =="Success") {
                            var LoadDownLoadFiles1 = $("#loadPartialViewDiv");
                            LoadDownLoadFiles1.html('');
                            LoadDownLoadFiles1.html(data.Html);
                        }
                        alert(data.Message);
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        $("#DirectSearch").val("");
                    },
                });
            }
            else {
                alert("Atleast One Consignment Required...");
            }
        }
    function SaveLoading()
    {

        var LrList = "";
        $("#LcCombo .Ordertable-row").each(function () {
            if ($(this).find('input[type=checkbox]').prop("checked") == true) {
                var LRValue = $(this).find(".LCTablekey").text();
                LrList = LrList + LRValue + ",";
            }
        });
        var url = '/Logistics/Loading_Dispatch/LoadLC';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["From"] = $("#From").val();
        ModelData["LcNo"] = LrList.substr(0, LrList.length - 1);
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    $("#ErrorMessageLC").hide();
                    GetloadLCList();
                    alert(data.Message);


                    if (data.RoutFlag == true || data.RoutFlag == "true"|| data.RoutFlag == "True") {
                        var result = confirm("Are You Sure To Add New Routes In Freight Memo ?");
                        if (result)
                        {
                            NewRouteGenerate(data.LCBranch);
                        }
                    }
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }

    function ArrivalPartial() {
        var url = '@Url.Action("ArrivalPartial")';
        var DTO = { Reco: $("#Document").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data)
                {
                    var LoadDownLoadFiles = $("#ArrivalDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                },
                error: function (error) {
                    alert("errror");
                }
            });
    }

    function DispatchPartial() {
        var url = '@Url.Action("DispatchPartial")';
        var DTO = { Reco: $("#Document").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                var LoadDownLoadFiles = $("#DispatchDiv");
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function UnLoadGridView() {
        var url = '@Url.Action("RefreshUnLoadGridView")';
        var DTO = {  };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#UnloadPartialViewDiv");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        checkActivityofUnLoading();
                    },
                });
    }
    function OTHUnLoadGridView() {
        var url = '@Url.Action("OTHRefreshUnLoadGridView")';
        var DTO = {  };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#OTHUnloadPartialViewDiv");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        OTHcheckActivityofUnLoading();
                    },
                });
    }

    function GetloadLCList()
    {
        
        var url = '@Url.Action("LoadingRefresh")';
        var DTO = { Reco: $("#Document").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var LoadDownLoadFiles = $("#LoadedLC");
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
                checkActivityofLoading();
            },
        });
    }

    function checkActivityofLoading() {
        var Payload = parseInt($("#hdnAvlBal").val());
        var LoadWeight = 0;
        $("#SaveLcCombo  > tbody  > tr").each(function () {
            var Weight = parseInt($(this).find(".Weight").text());
            Payload -= Weight;
            LoadWeight += Weight;
        });
        $("#Loaded").val(LoadWeight);
        $("#AvailablePayload").val(Payload);
        $("#hdnAvlBal").val(Payload);
    }
    function checkActivityofUnLoading() {
        var Payload = parseInt($("#AvailablePayload").val());
        var UnLoadWeight = 0;
        $("#UnloadGridexample1  > tbody  > tr").each(function () {
            var Weight = parseInt($(this).find(".CalculateWeight").val());
            Payload += Weight;
        });
        $("#AvailablePayload").val(Payload);
    }
    function OTHcheckActivityofUnLoading() {
        var Payload = parseInt($("#AvailablePayload").val());
        var UnLoadWeight = 0;
        $("#OTHUnloadGridexample1  > tbody  > tr").each(function () {
            var Weight = parseInt($(this).find(".CalculateWeight").val());
            Payload += Weight;
        });
        $("#AvailablePayload").val(Payload);
    }


    function LoadVehicleGroupStatus() {

            var url = '@Url.Action("GetVehicleGroup")'
            $('#VehicleGroup').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {

                    AddButtonValidation();
                    LoadVehicle($("#VehicleGroup").val());
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
    };
    function AddButtonValidation() {

        var VehicleStatus = $("#VehicleGroup").val();
        if (VehicleStatus == "100001") {
            $("#HideHireBtn").hide();
            $("#ShowHireBtn").show();
        } else {
            $("#HideHireBtn").show();
            $("#ShowHireBtn").hide();
        }
    }function LoadVehicle(value) {


        var url = '@Url.Action("GetVehicle")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        TruckStatus: value,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNoName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })

    };
    function LoadBroker() {
        var url = '@Url.Action("GetBroker")'
        $('#Broker').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker', text: '@Model.Broker_Name' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadFrom() {
        var flag = false;
        var url = '@Url.Action("From")'
        $('#From').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        Flag: true
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.From', text: '@Model.From_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function ComboDestination() {
        var url = '@Url.Action("AddDestination")'
        $('#DestCombo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#From').val(),
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DestCombo', text: '@Model.DestCombo_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                AddViaRoute();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function AddViaRoute() {
        var url = '@Url.Action("StoreAllDestination")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = { ViaRoute: $("#DestCombo").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    var LoadDownLoadFiles = $("#GetDestView");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    //$('#GETDestMODAL').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#DestCombo").prop("disabled", true);
                    ShowRouteDest();
                },
            });
    }
    function ShowRouteDest() {
        var url = '@Url.Action("ShowListBox")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = {  };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    var LoadDownLoadFiles = $("#ListBoxDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    //$('#GETDestMODAL').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);

                    $(".listbox").prop('disabled', 'disabled');
                },
            });
    }
    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#To').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#From').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.To', text: '@Model.To_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function OTHBranchUnload() {
        var url = '@Url.Action("OTHBranchUnload")'
        $('#UnloadBranch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.UnloadBranch', text: '@Model.UnloadBranchL' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadVehicleGroupCategory() {

            var url = '@Url.Action("GetVehicleGroupCategory")'
            $('#VehicleCategory').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleCategory', text: '@Model.VehicleCategory_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
    };
    function LoadPayableAt() {
        var url = '@Url.Action("PayableAt")'
        $('#PayableAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.PayableAt', text: '@Model.PayableAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            <a href="~/Logistics/LoadingToDispatch/Index?ViewDataId=LoadingToDispatch&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=LoadingToDispatch&Header=Vehicle-Activity&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>
    </div>
</header>

<form class="form-horizontal" id="frmaccountLedger" role="form" style="margin-top:0px;">
    <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
</form>

<section class="panel" id="FmPanelDetails" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="FreightMemo" role="form" style="margin-top:4%;">
            <fieldset class=" col-sm-12" style="margin-top: 0px;">
                @*<legend id="btnFmDetailsToogle">Fm Details</legend>*@
                <span class="btn btn-info legend" id="btnFmDetailsToogle">Fm Details</span>
                <button class="btn btn-info legend2" id="btnFMAddDoc">Attachment</button>
                <div class="panel panel-default" id="FmDetailsToogle">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-sm-9">
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">F.M No:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.FMNO, new { @class = "form-control", @style = "width:100px;", @Value = Model.FMNO, @readonly = "readonly" })
                                </div>
                                <div class="col-sm-2">
                                    <label class=" bold   col-sm-3  control-label">Time:</label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.FM_Time, new { @class = "form-control", @type = "time", @style = "width:105px;", @Value = Model.FM_Time })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;">Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.FM_Date, new { @class = "form-control", @style = "width:236px;", @Value = Model.FM_Date })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Vehicle Group:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleGroup })
                                </div>
                            </div>
                            <div class="form-group ">
                                <label class=" bold   col-sm-1  control-label">VehicleNo:</label>
                                <div class="col-sm-3 ">
                                    @if (Model.VehicleGroup == "100001")
                                    {
                                        <div class="col-sm-12" style="padding:0px;margin:0px;">
                                            @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleNo })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-sm-10" style="padding:0px;margin:0px;">
                                            @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleNo })
                                        </div>
                                        <div class="col-sm-2" style="padding-left: 3px;padding:0px;margin:0px;">
                                            <button class="btn btn-success" id="btnViewVehicleAttachment" title="View Vehicle Attachments" style="font-size: 13px;padding:2px 12px;"><i class="glyphicon glyphicon-eye-open"></i></button>
                                        </div>
                                    }
                                </div>

                                <label class=" bold   col-sm-1  control-label">Broker:</label>
                                <div class="col-sm-3 " style="">
                                    @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">KM:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.KM, new { @class = "form-control", @style = "width:110px;", @Value = Model.KM })
                                </div>
                            </div>
                            <div class="form-group ">
                                <label class=" bold   col-sm-1  control-label">From:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.From, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.From })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Add-Dest.:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.DestCombo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DestCombo, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Final-Dest:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.To, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.To })
                                </div>


                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Vehicle Cate.:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.VehicleCategory, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleCategory, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">View-Dest:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" id="btnDestination" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#GETDestMODAL"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;" id="ListBoxDiv">
                                        @Html.Partial("PartialOfListBox", Model)
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Receipt No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ReceiptNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ReceiptNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Driver-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @style = "width:100%;", @Value = Model.DriverName, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">Licence-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceNo, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Lic.Exp-Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceExpDate, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceExpDate, @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Owner-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Owner, new { @class = "form-control", @style = "width:100%;", @Value = Model.Owner, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Challan-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ChallanNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ChallanNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Contact-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ContactNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Freight:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Freight, new { @class = "form-control", @style = "width:100%;", @Value = Model.Freight.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Advance:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Advance, new { @class = "form-control", @style = "width:236px;", @Value = Model.Advance.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Payable-At:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.PayableAt, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.PayableAt })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Remark:</label>
                                <div class="col-sm-11 ">
                                    @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.Remark })
                                </div>

                            </div>
                            <br />
                            <div class="form-group">
                                <div class="col-sm-2" style="display: -webkit-box;">
                                    <label class=" bold     control-label">&nbsp;&nbsp;View:&nbsp;&nbsp;</label>
                                    <button class="btn btn-primary" id="btnSchedule" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleModal"><i class="glyphicon glyphicon-eye-open"></i></button>
                                </div>
                                <label class=" bold   col-sm-1  control-label">PayLoad:<span style="color:red;">*</span></label>
                                <div class="col-sm-2 " style="">
                                    @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @Value = Model.PayLoad })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div style="border: 2px solid #d3d3d3;height:215px;">
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Other Charges</label>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold  col-sm-offset-1 col-sm-11 control-label">Partial View:</label>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold   col-sm-offset-1  col-sm-3 control-label">Balance:</label>
                                    <div class="col-sm-5">
                                        @Html.TextBoxFor(x => x.Balance, new { @class = "form-control", @style = "width:100%;", @Value = Model.Balance.ToString("0.00") })
                                    </div>
                                </div>
                                <br />
                            </div>
                            @*<div style="border: 2px solid #d3d3d3;height:88px;" id="AttachList">
                                    @Html.Partial("_AttachmentList", Model)
                                </div>*@
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>

<section class="panel" id="ActivityPanel" style="margin-top: 20px;margin-bottom:3%;">
    <div class="panel-body" style="margin-top:-30px;">
        <div class="form-horizontal " role="form" style="">
            <div id="ErrorMessage2" name="ErrorMessage" class="alert alert-danger" style="display: none;margin-top:0px;"></div>

            <fieldset class=" col-md-12" style="">
                <div class="panel panel-default" style="height:auto;">

                    <div class="panel-body " style="padding-left: 0px !important;">
                        <div id="ErrorMessageLC" name="ErrorMessage" class="alert alert-danger" style="display: none;margin-top:0px;"></div>
                        <div class="col-sm-12" id="">
                            <div class="tab">
                                <button class="tablinks" onclick="openCity(event, 'Arrival')" id="FirstTab">Arrival</button>
                                <button class="tablinks" onclick="openCity(event, 'Loading')" id="SecondTab">Load Challan</button>
                                <button class="tablinks" onclick="openCity(event, 'ConsignmentLoading')" id="NinthTab">Consignemnt Loading</button>
                                <button class="tablinks" onclick="openCity(event, 'UnLoading')" id="ThirdTab">Godown UnLoading</button>
                                @if (Model.LogisticsFlow.GeneralUnloadReq)
                                {
                                    <button class="tablinks" onclick="openCity(event, 'OtherWareHouseUnLoading')" id="NinthTab" style="width: 150px;">Other WareHouse UnLoading</button>

                                }
                                else
                                {
                                    <button class="tablinks" onclick="openCity(event, 'OtherWareHouseUnLoading')" id="NinthTab" style="width: 150px;pointer-events: none;">Other WareHouse UnLoading</button>
                                }
                                <button class="tablinks" onclick="openCity(event, 'DeliveryDiv')" id="SixthTab">Direct Delivery</button>
                                <button class="tablinks" onclick="openCity(event, 'Dispatch')" id="FourthTab">Dispatch</button>
                                <button class="tablinks" onclick="openCity(event, 'Material')" id="FifthTab" style="width: 150px;">Vehicle Balance Material</button>
                                <button class="tablinks" onclick="openCity(event, 'MaterialActivity')" id="SeventhTab" style="width: 150px;">Vehicle Material Activity</button>
                                <button class="tablinks" onclick="openCity(event, 'Payload')" id="EightTab">Payload Details</button>
                                @*<button class="" onclick="Clear();" id="btnClear">Clear</button>*@
                            </div>
                            <div id="Arrival" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group" id="ArrivalDiv">
                                        @Html.Partial("_ArrivalPartialView", Model)
                                    </div>
                                </div>
                            </div>
                            <div id="MaterialActivity" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        @*<h4 style="color: brown;">Consignment Details</h4>*@
                                        <table id="VehicleMaterialHistory" class="table-bordered example" style="width:100%!important;">
                                            <thead>
                                                <tr>
                                                    <th colspan="8" style="text-align: center;color: brown;">Loaded Consignment Details</th>
                                                    <th colspan="2" style="text-align: center;background-color: #ed5050 !important;color: black;">Balance Details</th>
                                                    <th colspan="4" style="text-align: center;background-color: #50edb3 !important;color: black;">Unload Details</th>
                                                    <th colspan="4" style="text-align: center;background-color: #edcb50 !important;color: black;">Delivery Details</th>
                                                </tr>
                                                <tr>
                                                    <th>Load-Branch</th>
                                                    <th>Load-Date</th>

                                                    <th>No</th>
                                                    <th>Date</th>
                                                    <th>Qty</th>
                                                    <th>Weight</th>
                                                    <th>From</th>
                                                    <th>To</th>

                                                    <th style="background-color: #ed5050 !important;color: black;">Bal-Qty</th>
                                                    <th style="background-color: #ed5050 !important;color: black;">Bal-Weight</th>

                                                    <th style="background-color: #50edb3 !important;color: black;">Unload Branch</th>
                                                    <th style="background-color: #50edb3 !important;color: black;">Unload Date</th>
                                                    <th style="background-color: #50edb3 !important;color: black;">Unload Qty</th>
                                                    <th style="background-color: #50edb3 !important;color: black;">Unload Weight</th>

                                                    <th style="background-color: #edcb50 !important;color: black;">Delivery Branch</th>
                                                    <th style="background-color: #edcb50 !important;color: black;">Delivery Date</th>
                                                    <th style="background-color: #edcb50 !important;color: black;">Delivery Qty</th>
                                                    <th style="background-color: #edcb50 !important;color: black;">Delivery Weight</th>


                                                </tr>

                                            </thead>
                                            <tbody style="max-height:400px;min-height:400px;width:100%; overflow-x:hidden;overflow-y:auto">

                                                @foreach (var item in Model.consignmentTrackings)
                                                {
                                                    <tr>
                                                        <td>@item.ConsignLoadBranch</td>
                                                        <td>@item.ConsignLoadDate</td>

                                                        <td>@item.ConsignNo</td>
                                                        <td>@item.ConsignDate</td>
                                                        <td>@item.ConsignNoQty</td>
                                                        <td>@item.ConsignNoWeight</td>
                                                        <td>@item.ConsignNoFrom</td>
                                                        <td>@item.ConsignNoTo</td>

                                                        <td>@item.ConsignNoBalQty</td>
                                                        <td>@item.ConsignNoBalWeight</td>

                                                        <td>

                                                            @if (item.trackingUnloads.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingUnloads)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.UnloadBranch</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingUnloads.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingUnloads)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.UnloadDate</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingUnloads.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingUnloads)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.UnloadQty</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingUnloads.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingUnloads)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.UnloadWeight</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>

                                                        <td>
                                                            @if (item.trackingDeliveries.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingDeliveries)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.DeliveryBranch</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingDeliveries.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingDeliveries)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.DeliveryDate</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingDeliveries.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingDeliveries)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.DeliveryQty</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (item.trackingDeliveries.Count == 0)
                                                            {

                                                            }
                                                            else
                                                            {
                                                                <table class="">
                                                                    @foreach (var unload in item.trackingDeliveries)
                                                                    {
                                                                        <tr>
                                                                            <td style="border: none!important;">@unload.DeliveryWeight</td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                                <tr style="color: black;font-weight: bold;">
                                                    <td colspan="3">Total :</td>
                                                    <td></td>
                                                    <td>@Model.consignmentTrackings.Sum(x => x.ConsignNoQty)</td>
                                                    <td>@Model.consignmentTrackings.Sum(x => x.ConsignNoWeight)</td>

                                                    <td></td>
                                                    <td></td>
                                                    <td>@Model.consignmentTrackings.Sum(x => x.ConsignNoBalQty)</td>
                                                    <td>@Model.consignmentTrackings.Sum(x => x.ConsignNoBalWeight)</td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div id="ConsignmentLoading" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetloadinglr">Material For Curr-Branch </button>
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnDLCFMAddDoc">Attachment</button>
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnDLCListPrint">Print</button>
                                            <input class="legend3" type="text" placeholder="Search Consignment" style="text-align:center;width:205px;" id="txtSearchLr" />
                                    </div>
                                    <div class="form-group" id="loadPartialViewDiv">
                                        @Html.Partial("loadLrGridView", Model.loadConsignmentList)
                                    </div>
                                </div>
                            </div>
                            <div id="Loading" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetPendingLC">Load LC</button>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnFMLODAddDoc">Attachment</button>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnFMLODAAll">Loaded LC</button>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnListPrint">Print</button>
                                    </div>
                                    <div class="form-group" id="LoadedLC">
                                        @Html.Partial("_LoadLCGridView", Model.ExistLClist)
                                    </div>
                                </div>

                            </div>
                            <div id="UnLoading" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetUnloadinglr">Material For Curr-Branch </button>
                                        @if (Model.LogisticsFlow.UnloadAllMaterialReq)
                                        {
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetAllMaterial">All Material</button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetAllMaterial" disabled>All Material</button>
                                        }
                                        <button class="btn btn-danger" style="font-size: 13px;padding:4px 12px;" id="btnFMUNLoading">Save</button>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnFMUNLODAddDoc">Attachment</button>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnListUNLODPrint">Print</button>

                                        @*<button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnFMUNLODAddDoc" title="Attachment"><i class="glyphicon glyphicon-paperclip"><br />FM Unload Attachment</i></button>*@
                                    </div>
                                    <div class="form-group" id="UnloadPartialViewDiv">
                                        @Html.Partial("UnloadLrGridView", Model.UnloadLrList)
                                    </div>
                                </div>
                            </div>
                            <div id="OtherWareHouseUnLoading" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        <label class=" bold  col-sm-1 control-label">Warehouse Name:</label>
                                        <div class="col-sm-3">
                                            @Html.TextBoxFor(x => x.UnloadBranch, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.UnloadBranch })
                                        </div>
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="OTHbtnGetUnloadinglr">Material For Curr-Branch </button>
                                        @if (Model.LogisticsFlow.UnloadAllMaterialReq)
                                        {
                                            <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="OTHbtnGetAllMaterial">All Material</button>
                                        }
                                        <button class="btn btn-danger" style="font-size: 13px;padding:4px 12px;" id="OTHbtnFMUNLoading">Save</button>
                                    </div>
                                    <div class="form-group" id="OTHUnloadPartialViewDiv">
                                        @Html.Partial("OTHUnloadLrGridView", Model.OTHUnloadLrList)
                                    </div>
                                </div>
                            </div>

                            <div id="DeliveryDiv" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        <button class="btn btn-info" style="font-size: 13px;padding:4px 12px;" id="btnGetDeliveryConsignment">New Deliveries</button>
                                    </div>
                                    <div class="form-group" id="UnloadPartialViewDelivery">
                                        @Html.Partial("_DeliverdView", Model)
                                    </div>
                                </div>
                            </div>
                            <div id="Dispatch" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group" id="DispatchDiv">
                                        @Html.Partial("_DispatchPartialView", Model)
                                    </div>
                                </div>
                            </div>
                            <div id="Material" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group" id="PendingMaterials">
                                    </div>
                                </div>
                            </div>
                            <div id="Payload" style="height:425px;overflow: auto;" class="tabcontent">
                                <div class="container-fluid">
                                    <div class="form-group">
                                        <label class=" bold   col-sm-1  control-label">PayLoad:</label>
                                        <div class="col-sm-1 " style="">
                                            @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @Value = Model.PayLoad, @readonly = "readonly" })
                                        </div>
                                        <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width:auto;">Loaded :</label>
                                        <div class="col-sm-1 ">
                                            @Html.TextBoxFor(x => x.Loaded, new { @class = "form-control", @style = "", @Value = Model.Loaded, @readonly = "readonly" })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="margin-left: 0px;width: auto;">Available PayLoad:</label>
                                        <div class="col-sm-1 ">
                                            @Html.TextBoxFor(x => x.AvailablePayload, new { @class = "form-control", @style = "", @Value = Model.AvailablePayload, @readonly = "readonly" })
                                        </div>
                                        @*<label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width: auto;">Over Load:</label>
                                            <div class="col-sm-1 ">
                                                @Html.TextBoxFor(x => x.OverLoadLoad, new { @class = "form-control", @style = "", @Value = Model.OverLoadLoad, @readonly = "readonly" })
                                            </div>*@
                                    </div>
                                </div>
                            </div>

                            <script>
                                function openCity(evt, cityName) {

                                    if (cityName == "UnLoading") {
                                        // GetUnloadLCList();
                                    } else if (cityName == "Material") {
                                        GetPendingMaterial();
                                    }
                                    else if (cityName == "Payload") {
                                        GetPayloadMaterial();
                                    }

                                    var i, tabcontent, tablinks;
                                    tabcontent = document.getElementsByClassName("tabcontent");
                                    for (i = 0; i < tabcontent.length; i++) {

                                        tabcontent[i].style.display = "none";
                                    }
                                    tablinks = document.getElementsByClassName("tablinks");
                                    for (i = 0; i < tablinks.length; i++) {

                                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                                    }
                                    document.getElementById(cityName).style.display = "block";
                                    evt.currentTarget.className += " active";
                                }
                                document.getElementById("FirstTab").click();
                            </script>
                        </div>
                    </div>

                </div>
            </fieldset>
        </div>
    </div>
</section>

<footer id="saveFooter" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            @*<button class="btn btn-info" id="btnAddNote" style="font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>*@
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                <a href="~/Logistics/LoadingToDispatch/Index?ViewDataId=LoadingToDispatch&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=LoadingToDispatch&Header=Vehicle-Activity&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

<!--All Destination Modal -->
<div class="modal fade" id="GETDestMODAL" style="overflow:scroll;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" @*style="margin-top: 60px;"*@>
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: fit-content;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-body">
                <div id="GetDestView">
                    @Html.Partial("_Get_Destination_List", Model)
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--All Schedule Modal -->
<div class="example-modal">
    <div id="ScheduleModal" class="modal modal-default">
        <div class="modal-dialog modal-md" @*style="width:1080px;"*@>
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Schedule</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th style="width: 35px;">Branch</th>
                                            <th style="width: 120px;" colspan="1">Arrival Schedule</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Schedule</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.ViewSchedule != null)
                                            {
                                                foreach (var item in Model.ViewSchedule)
                                                {
                                                    <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td>@item.Branch</td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ArrivalSchDate</td>
                                                                        <td>@item.ArrivalSchTime</td>
                                                                        <td>@item.ArrivalSchKm</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.DispatchSchDate</td>
                                                                        <td>@item.DispatchSchTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                }

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Pending Lc modal -->
<div class="modal fade" id="GetPEndingLCLIst" style="z-index:auto;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" @*style="margin-top: 60px;"*@>
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: auto;margin: auto;margin-top: 8%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group" @*style="display: inline-flex;margin-left: 40%;"*@>
                    <div class="col-sm-offset-5 col-sm-3">
                        <h4 class="modal-title"><b>Pending Lorry Challan</b></h4>
                    </div>
                    <div class="col-sm-3">
                        <label class="col-sm-2 control-label" style="color:black;margin-top:0%;width:auto;">Doc No:</label>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" id="btnSearchLCNo" style="margin-top:5px;" placeholder="Search By LC No">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="grid" id="FormatTable" style="max-height:350px;min-height:350px; width:100%;overflow:auto;">
                    <div id="" class="" style="width:100%;">
                        <div class="form-group col-sm-12" id="ShowPendingLCList">

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                    <label class="col-sm-12 control-label" style="width:auto;color:black;">Rejected LC :</label>
                    <svg width="20" height="20">
                        <title>Rejected LR</title>
                        @*<a onclick="SVGClear();">*@
                        <rect width="20" height="20" style="fill:#bf6860;stroke-width:3;stroke:rgb(0,0,0)" />
                        @*</a>*@
                    </svg>
                </div>
                <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                    <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Authorise LC:</label>
                    <svg width="20" height="20">
                        <title>Un-Authorise LR</title>
                        @*<a onclick="SVGComplete();">*@
                        <rect width="20" height="20" style="fill:#5079d4;stroke-width:3;stroke:rgb(0,0,0)" />
                        @*</a>*@
                    </svg>
                </div>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnLoadIT">Load</button>
            </div>
        </div>
    </div>
</div>

<!--Unload LR List Modal -->
<div class="modal fade" id="GetLRLIst" style="width: 100%;">
    <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-2"><h4 class="modal-title"><b>Add Lorry Receipt</b></h4></div>
                    <div class="col-md-5">

                    </div>
                    <div class="col-md-4" style="float:right;">

                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="ShowLRListOFUnload" style="overflow: auto;width: 100%;display: block;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnGetLR">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="OTHGetLRLIst" style="width: 100%;">
    <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-2"><h4 class="modal-title"><b>Unload Lorry Receipt</b></h4></div>
                    <div class="col-md-5">

                    </div>
                    <div class="col-md-4" style="float:right;">

                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="OTHShowLRListOFUnload" style="overflow: auto;width: 100%;display: block;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="OTHbtnGetLR">Submit</button>
            </div>
        </div>
    </div>
</div>

<!--Delivery Modal -->
<div class="modal fade" id="GetLRDel" style="width: 100%;">
    <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-5"><h4 class="modal-title"><b>New Delivery Consignment</b></h4></div>
                    <div class="col-md-4" style="float:right;">

                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="ShowLRDel" style="overflow: auto;width: 100%;display: block;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnGetDelivery">Submit</button>
            </div>
        </div>
    </div>
</div>

<!--Pending Lc modal -->
<div class="modal fade" id="GetLoadedAllLCLIst" style="z-index:auto;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" @*style="margin-top: 60px;"*@>
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: auto;margin: auto;margin-top: 8%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group" @*style="display: inline-flex;margin-left: 40%;"*@>
                    <div class="col-sm-offset-5 col-sm-3">
                        <h4 class="modal-title"><b>All Loaded Lorry Challan</b></h4>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="grid" id="FormatTable" style="max-height:350px;min-height:350px; width:100%;overflow:auto;">
                    <div id="" class="" style="width:100%;">
                        <div class="form-group col-sm-12" id="ShowAllLoadedLCList">

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Attachment modal -->
<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>

<!--View Only Vehicle Attachment Modal -->
<div class="example-modal">
    <div id="DVattachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="DVAttachDoc">
            </div>
        </div>
    </div>
</div>

<!--Only Alert Note Modal -->
<div class="example-modal">
    <div id="AlertNoteModal" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="OnlyAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Alert/Note Modal -->
<div class="example-modal">
    <div id="addnotemodel" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="AlertAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                        <div class="form-group hidden" id="AddAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button class="btn btn-success" type="button" id="btnAddNarr">Add Narration</button>
                        <button class="btn btn-info hidden" type="button" id="btnNarrList">Show List</button>
                        <button class="btn btn-success hidden" type="button" id="btnNarrSave">Save</button>
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Print Option -->
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @*@Html.Partial("ReportPrintOptions")*@
            </div>
        </div>
    </div>
</div>

<!--Direct Loading Consignment Modal -->
<div class="modal fade" id="LoadConsignent" style="width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: auto;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-2">
                        <h4 class="modal-title">
                            <b>Load Consignment</b>
                        </h4>
                    </div>
                    <div class="col-md-8" style="float: right;">

                        <div class="col-md-3" style="float: right;">
                            <input type="text" id="DirectSearch" class="form-control" placeholder="Search Here" />
                        </div>
                        <div class="col-md-1" style="float: right;width:auto;">
                            <label class=" bold control-label" style="margin-top: 5px;"> Search</label>
                        </div>
                        <div class="col-md-2" style="float: right;">
                            <input type="text" id="DirectLR" tabindex="2" class="form-control" placeholder="LR NO">
                        </div>
                        <div class="col-md-1" style="width: auto;float: right;">
                            <label class=" bold control-label" style="margin-top: 5px;"> Select By</label>
                        </div>
                        @*<div class="col-md-3" style="float: right;">
                                @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @id = "GlobalLoadingBranch" })
                            </div>
                            <div class="col-md-1" style="width: auto;float: right;">
                                <label class=" bold control-label" style="margin-top: 5px;"> Branch :</label>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                    <table id="Loadinglist" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                    <div id="Loadpager" style="height:32px;width:100%;"></div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-1" style="font-weight: bold;text-align:center;color: red;">Total -:</div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">No. Of LR :<label id="mLoadTotalLR" style="padding-left: 15px;font-weight: bold;color: red;">0</label></div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">Quantity :<label id="mLoadTotalQty" style="padding-left: 15px;font-weight: bold;color: red;">0</label></div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">Weight :<label id="mTotalWeight" style="padding-left: 15px;font-weight: bold;color: red;">0</label><label style="padding-left: 15px;font-weight: bold;color: red;">Kgs</label></div>
                    <div class="col-sm-offset-2 col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Rejected LR :</label>
                        <svg width="20" height="20">
                            <title>Rejected LR</title>
                            <rect width="20" height="20" style="fill:#bf6860;stroke-width:3;stroke:rgb(0,0,0)" />
                        </svg>
                    </div>
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Authorise LR:</label>
                        <svg width="20" height="20">
                            <title>Un-Authorise LR</title>
                            <rect width="20" height="20" style="fill:#5079d4;stroke-width:3;stroke:rgb(0,0,0)" />
                        </svg>
                    </div>
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Selected LR:</label>
                        <svg width="20" height="20">
                            <title>Selected LR</title>
                            <rect width="20" height="20" style="fill:#cb9ecb;stroke-width:3;stroke:rgb(0,0,0)" />
                        </svg>
                    </div>

                </div>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnLoadConsignment">Submit</button>
            </div>
        </div>
    </div>
</div>


@Html.HiddenFor(x => x.Parentkey)
@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.AvailablePayload, new { @id = "hdnAvlBal" })
@Html.HiddenFor(x => x.FMNO, new { @ID = "Document1" })
<input type="hidden" id="CheckActivity" />
<input type="hidden" id="DeleteUnloadLr" />
<input type="hidden" id="StopActivityFromAlert" />



