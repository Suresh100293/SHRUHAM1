@model ALT_ERP3.Areas.Logistics.Models.BroadCastVM
@using Common;
@{
    ViewBag.Title = "BroadCast Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>


<style>


    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }


    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: white;
        color: red;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .display {
        display: block;
    }

    .toggle {
        border-radius: 15px !important;
        width: 100% !important;
    }
</style>
<style>
    .PlaneDiv {
        white-space: nowrap;
        background-color: #4B4A4A;
        height: 35px;
        font-size: 15px !important;
        /**/
    }

    .spanBlink {
        background-color: #4B4A4A;
        font-size: 15px !important;
        height: 35px;
        /*font-family: Tahoma;
        font-weight: bold;
        color: #f90e90fa;*/
        animation: blink 2s linear infinite;
    }

    @@keyframes blink {
        0% {
            opacity: 0;
        }

        10% {
            opacity: .1;
        }

        25% {
            opacity: .25;
        }

        50% {
            opacity: .5;
        }

        75% {
            opacity: .75;
        }

        100% {
            opacity: 1;
        }
    }

    .marquee {
        white-space: nowrap;
        background-color: #4B4A4A;
        height: 35px;
        font-size: 15px;
        /**/
    }

        .marquee label {
            display: inline-block;
            /*padding-left: 100%;*/
            transform: translateX(100%);
            /*animation: marquee 12s linear infinite;*/
            animation: scroll-left 20s linear infinite;
            font-size: 15px !important;
        }
    /* Move it (define the animation) */
    @@-moz-keyframes scroll-left {
        0% {
            -moz-transform: translateX(100%);
        }

        100% {
            -moz-transform: translateX(-150%);
        }
    }

    @@-webkit-keyframes scroll-left {
        0% {
            -webkit-transform: translateX(100%);
        }

        100% {
            -webkit-transform: translateX(-150%);
        }
    }

    @@keyframes scroll-left {
        0% {
            -moz-transform: translateX(100%); /* Browser bug fix */
            -webkit-transform: translateX(100%); /* Browser bug fix */
            transform: translateX(100%);
        }

        100% {
            -moz-transform: translateX(-150%); /* Browser bug fix */
            -webkit-transform: translateX(-150%); /* Browser bug fix */
            transform: translateX(-150%);
        }
    }
    /* Make it move */
    @@keyframes marquee {
        0% {
            transform: translate(0, 0);
        }

        25% {
            transform: translate(-25%, 0);
        }

        50% {
            transform: translate(-50%, 0);
        }

        75% {
            transform: translate(-75%, 0);
        }

        100% {
            transform: translate(-100%, 0);
        }
    }

    .bold {
        font-weight: bold;
    }
</style>



<script type="text/javascript">
    var Bling = true;
    $(document).ready(function ()
    {
        GetMyFavorites('@Model.ViewDataId');

        LoadFontFamily();


        $('#StartDate,#EndDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });
        if ('@Model.DocNo' == "99999")
        {
            $("#StartDate").prop("disabled", true);
            $("#StartTime").prop("disabled", true);
            $("#EndDate").prop("disabled", true);
            $("#EndTime").prop("disabled", true);
        }
        if ('@Model.Mode' == "Delete" || '@Model.Mode' == "View")
        {
            $('.form-group :input').prop("disabled", true);
        }

        if ('@Model.Mode' != "Add")
        {
            if ('@Model.Color' == "Red")
            {
                $("#Red").prop("checked", true);
            }
            else if ('@Model.Color' == "Purple")
            {
                $("#Purple").prop("checked", true);
            }
            else if ('@Model.Color' == "Green")
            {
                $("#Green").prop("checked", true);
            }
            else if ('@Model.Color' == "White")
            {
                $("#White").prop("checked", true);
            }
        }

        $("#AnimToogle").change(function () {
            debugger;
            if (this.checked) {
                Bling = false;
            }
            else {
                Bling = true;
            }
        });
        $("#btnSeeAnimation").click(function ()
        {
            var Color = $("input[name='TextColor']:checked").val();
            var Bold = $("#Bold").is(":checked");


            //if ($("#Blink").is(":checked") == false && $("#Scroll").is(":checked") == false)
            //{
            //    $("#ScrollDiv").addClass("hidden");
            //    $("#BlingDiv").addClass("hidden");
            //    $("#ComboAnimation").addClass("hidden");
            //    alert("Please Select Animation Type...!");
            //    return;
            //}

            if ($("#Narr").val() == "" || $("#Narr").val() == null)
            {
                $("#ScrollDiv").addClass("hidden");
                $("#BlingDiv").addClass("hidden");
                $("#ComboAnimation").addClass("hidden");
                $("#EmptyDiv").addClass("hidden");
                alert("Please Enter Message...!");
                return;
            }

            if ($("#Blink").is(":checked") && $("#Scroll").is(":checked"))
            {
                $("#BlingDiv").addClass("hidden");
                $("#ScrollDiv").addClass("hidden");
                $("#EmptyDiv").addClass("hidden");
                $("#ComboAnimation").removeClass("hidden");

                $("#ComboText").text($("#Narr").val());
                $('#ComboText').css("font-family", $("#FontFamily").val());
                if (Bold)
                {
                    $("#ComboText").addClass("bold");
                }
                else
                {
                    $("#ComboText").removeClass("bold");
                }
                $("#ComboText").css({ color: Color });
            }
            else if ($("#Blink").is(":checked"))
            {
                $("#BlingDiv").removeClass("hidden");
                $("#ScrollDiv").addClass("hidden");
                $("#ComboAnimation").addClass("hidden");
                $("#EmptyDiv").addClass("hidden");

                $("#AnimationText").text($("#Narr").val());
                $('#AnimationText').css("font-family", $("#FontFamily").val());
                $('#AnimationText').css("text-align", "center");

                if (Bold)
                {
                    $("#AnimationText").addClass("bold");
                }
                else {
                    $("#AnimationText").removeClass("bold");
                }
                $("#AnimationText").css({ color: Color });
            }
            else if ($("#Scroll").is(":checked"))
            {
                $("#BlingDiv").addClass("hidden");
                $("#ScrollDiv").removeClass("hidden");
                $("#ComboAnimation").addClass("hidden");
                $("#EmptyDiv").addClass("hidden");

                $("#ScrollText").text($("#Narr").val());
                $('#ScrollText').css("font-family", $("#FontFamily").val());
                if (Bold) {
                    $("#ScrollText").addClass("bold");
                }
                else {
                    $("#ScrollText").removeClass("bold");
                }
                $("#ScrollText").css({ color: Color });
            }
            else
            {
                $("#BlingDiv").addClass("hidden");
                $("#ScrollDiv").addClass("hidden");
                $("#ComboAnimation").addClass("hidden");
                $("#EmptyDiv").removeClass("hidden");

                $("#PlainText").text($("#Narr").val());
                $('#PlainText').css("font-family", $("#FontFamily").val());
                $('#PlainText').css("text-align", "center");
                if (Bold) {
                    $("#PlainText").addClass("bold");
                }
                else {
                    $("#PlainText").removeClass("bold");
                }
                $("#PlainText").css({ color: Color });
            }
        });
        $("#btnResetAnimation").click(function ()
        {
            $("#ScrollDiv").addClass("hidden");
            $("#BlingDiv").addClass("hidden");
            $("#ComboAnimation").addClass("hidden");
        });


        $('#Submit').click(function (event) {
                event.preventDefault();
                if ('@Model.Mode' == "Delete") {

                    var result = confirm("Are you sure you want to Delete  ?");
                    if (result) {
                        SaveBroadCast();
                    }
                }
                else
                {
                    SaveBroadCast();
                }
            });
    });

    function SaveBroadCast()
    {

        if ('@Model.Document' != "99999")
        {
            if ($("#StartDate").val() == '' || $("#StartDate").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('StartDate Required..');
                return;
            }
            if ($("#StartTime").val() == '' || $("#StartTime").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('StartTime Required..');
                return;
            }
            if ($("#EndDate").val() == '' || $("#EndDate").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('EndDate Required..');
                return;
            }
            if ($("#EndTime").val() == '' || $("#EndTime").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('EndTime Required..');
                return;
            }
        }

        if ($("#FontFamily").val() == '' || $("#FontFamily").val() == null)
        {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('FontFamily Required..');
            return;
        }
        //if ($("#Blink").is(":checked") == false && $("#Scroll").is(":checked") == false)
        //{
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Animation Required..');
        //    return;
        //}
        if ($("#Narr").val() == '' || $("#Narr").val() == null) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Message Required..');
            return;
        }
        var url = "";
        if ('@Model.Mode' == "Delete")
        {
            url = '@Url.Action("DeleteStateMaster")';
        }
        else
        {
            url = '@Url.Action("SaveData")';
        }

        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["StartDate"] = $("#StartDate").val();
        ModelData["StartTime"] = $("#StartTime").val();
        ModelData["EndDate"] = $("#EndDate").val();
        ModelData["EndTime"] = $("#EndTime").val();
        ModelData["FontFamily"] = $("#FontFamily").val();
        ModelData["Blink"] = $("#Blink").is(":checked");
        ModelData["Scroll"] = $("#Scroll").is(":checked");
        ModelData["Bold"] = $("#Bold").is(":checked");
        ModelData["Color"] = $("input[name='TextColor']:checked").val();
        ModelData["Narr"] = $("#Narr").val();
        ModelData["Active"] = $("#Active").is(":checked");
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';

        var DTO = { mModel: ModelData };

        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                if (data.Status == 'Success') {

                    $('.spinner').hide();
                    window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                    $("#ErrorMessage").hide();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }

    function LoadFontFamily()
    {
         var url = '@Url.Action("GetFontFamily")'
        $('#FontFamily').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FontFamily', text: '@Model.FontFamily' };
                callback(data);
            },

            formatResult: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    }
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="FreightMemo" role="form" style="margin-top:50px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none;"></div>
            <fieldset class=" col-sm-12" style="margin-top: 0px;">
                <legend>@Model.Header</legend>
                @*<div class="legend2" style="font-size: 14px;padding:6px 20px 6px 20px;width:fit-content;float:right;margin-right:5%;">Set Alert Note</div>*@
                <div class="panel panel-default" style="margin-bottom: 0px !important;">
                    <div class="panel-body " style="padding-left: 20px;padding: 1px !important;">
                        <div class="form-group">
                            <label class=" bold   col-sm-1 control-label" style="">Doc No:</label>
                            <div class="col-sm-1">
                                @Html.TextBoxFor(x => x.DocNo, new { @class = "form-control", @style = "width:100%;font-weight:bold;", @Value = Model.DocNo, @disabled = "disabled" })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">From Date:</label>
                            <div class="col-sm-1">
                                @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control", @style = "width:100%;font-weight:bold;", @Value = Model.StartDate })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">From Time:</label>
                            <div class="col-sm-1" style="width:auto;">
                                @Html.TextBoxFor(x => x.StartTime, new { @class = "form-control", @type = "time", @style = "width:100%;font-weight:bold;", @Value = Model.StartTime })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">End Date:</label>
                            <div class="col-sm-1">
                                @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control", @style = "width:100%;font-weight:bold;", @Value = Model.EndDate })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">End Time:</label>
                            <div class="col-sm-1" style="width:auto;">
                                @Html.TextBoxFor(x => x.EndTime, new { @class = "form-control", @type = "time", @style = "width:100%;font-weight:bold;", @Value = Model.EndTime })
                            </div>
                            <div class="col-sm-1">
                                <label class=" bold   col-sm-5 control-label" style="">Active:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Active, new { @class = "form-control", @style = "height:20px;width:25px;", @Value = Model.Blink })
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <label class=" bold   col-sm-1 control-label" style="">Font Family:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.FontFamily, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.FontFamily })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">Animation:</label>
                            @*<div class="col-sm-1">
                                    <input type="checkbox" data-toggle="toggle" id="AnimToogle" data-onstyle="info" data-offstyle="warning" data-on="Scroll" data-off="Bling" style="width: 100%!important;height: 34px;">
                                </div>*@
                            <div class="col-sm-3" style="display: flex;width:auto;">
                                @Html.CheckBoxFor(x => x.Blink, new { @class = "form-control", @style = "height:20px;width:25px;", @Value = Model.Blink })<label class=" bold control-label"> Blink</label>
                                @Html.CheckBoxFor(x => x.Scroll, new { @class = "form-control", @style = "height:20px;width:25px;", @Value = Model.Scroll })<label class=" bold control-label"> Scroll</label>
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">Bold:</label>
                            <div class="col-sm-1">
                                @Html.CheckBoxFor(x => x.Bold, new { @class = "form-control", @style = "height:20px;width:20px;", @Value = Model.Bold })
                            </div>
                            <label class=" bold   col-sm-1 control-label" style="">Color:</label>
                            <div class="col-sm-3" style="display: flex;margin-left: -15px;width:auto;">
                                <input type="radio" class="form-control" name="TextColor" id="White" value="White" style="height:20px;width:35px;" /><label class=" bold control-label"> White</label>
                                <input type="radio" class="form-control" name="TextColor" id="Red" value="Red" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Red</label>
                                <input type="radio" class="form-control" name="TextColor" id="Purple" value="Purple" style="height:20px;width:35px;" /><label class=" bold control-label"> Purple</label>
                                <input type="radio" class="form-control" name="TextColor" id="Green" value="Green" style="height:20px;width:35px;" /><label class=" bold control-label"> Green</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class=" bold  col-sm-1 control-label">Message :</label>
                            <div class="col-sm-7">
                                @Html.TextAreaFor(x => x.Narr, new { @class = "form-control", @Value = Model.Narr, @rows = "1", @maxlength = 300 })
                            </div>
                            <button class="btn btn-warning" style="font-size: 13px;padding:5px 12px;" id="btnSeeAnimation" data-toggle="tooltip" data-placement="top" title="Test Animation How To Work IT."><i class="glyphicon glyphicon-eye-open"></i></button>
                            <button class="btn btn-danger" style="font-size: 13px;padding:5px 12px;" id="btnResetAnimation" data-toggle="tooltip" data-placement="top" title="Stop Animation"><i class="glyphicon glyphicon-refresh"></i></button>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-1 col-sm-7 hidden" id="BlingDiv">
                                <label class="col-sm-12 control-label spanBlink" id="AnimationText"></label>
                            </div>
                            <div class="col-sm-offset-1 col-sm-7  hidden" id="ScrollDiv">
                                <div class="col-sm-12 marquee" style="overflow: hidden;padding-left: 0px!important;">
                                    <label class="col-sm-12 control-label" id="ScrollText">fdasfafasfasf</label>
                                </div>
                            </div>
                            <div class="col-sm-offset-1 col-sm-7  hidden" id="ComboAnimation">
                                <div class="col-sm-12 marquee spanBlink" style="overflow: hidden;padding-left: 0px!important;">
                                    <label class="col-sm-12 control-label" id="ComboText">fdasfafasfasf</label>
                                </div>
                            </div>
                            <div class="col-sm-offset-1 col-sm-7 hidden" id="EmptyDiv">
                                <label class="col-sm-12 control-label PlaneDiv" id="PlainText"></label>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>

    </div>
</section>


<footer class="footer-section" style="height:45px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">

        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            @if (Model.Mode != "View")
            {
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:5px;font-size:9pt; width:unset;">
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="SubmitPrint" data-toggle="tooltip" data-placement="top" title="Save & Print"><i class="glyphicon glyphicon-floppy-saved">&nbsp;&nbsp;&nbsp;<i class="glyphicon glyphicon-print"></i><br />Save & Print</i></button>
                </div>
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
                    @if (Model.Mode == "Add" || Model.Mode == "Edit")
                    {
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save"><i class="glyphicon glyphicon-floppy-saved"><br />Save</i></button>
                    }
                    else
                    {
                        <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save"><i class="glyphicon glyphicon-trash"><br />Delete</i></button>
                    }
                </div>
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
                    @*<button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" data-toggle="modal" title="Attachment"><i class="glyphicon glyphicon-paperclip"><br />Attachment</i></button>*@
                </div>
            }

        </div>
    </div>
</footer>
@Html.HiddenFor(x => x.Document)


