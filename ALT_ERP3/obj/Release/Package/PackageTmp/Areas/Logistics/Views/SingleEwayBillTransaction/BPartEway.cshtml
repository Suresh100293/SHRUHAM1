@model ALT_ERP3.Areas.Logistics.Models.EwayBillVM
@using Common;
@{
    ViewBag.Title = "LRSetupVM";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#EWB_DocDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });

        loadTRNModeBP();
        loadReasonCodeBP();
        LoadVehicleEWBBP();
        LoadFromPlaceBP();
        LoadConsignorStateBP();

        $("#rdbtnVehicle").change(function () {
            if (this.checked) {
                $(".MasterVehicle").addClass("hidden");
                $(".ManualVehicle").removeClass("hidden");
            }
            else {
                $(".MasterVehicle").removeClass("hidden");
                $(".ManualVehicle").addClass("hidden");
            }

        });
        $("#EWB_Branch").change(function () {
            var url = '@Url.Action("FetBranchState")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { Branch: $("#EWB_Branch").val() },
                success: function (result) {
                    $('#EWB_ConsignorState').select2('data', { id: result.StateCode, text: result.StateName });
                }
            });
        });

        $("#btnGenBPart").click(function (event) {
            event.preventDefault();
            if ($("#EWB_DocDate").val() == '' || $("#EWB_DocDate").val() == null) {
                alert('Doc Date is required...!');
                return;
            }
            if ($("#EWB_EwayNo").val() == '' || $("#EWB_EwayNo").val() == null) {
                alert('EwayBill No is required...!');
                return;
            }
            if ($("#EWB_EWBDocument").val() == '' || $("#EWB_EWBDocument").val() == null) {
                alert('EWB Document is required...!');
                return;
            }

            if ($("#EWB_TRNMode").val() == '' || $("#EWB_TRNMode").val() == null) {
                alert('Transaction Mode is required...!');
                return;
            }
            if ($("#EWB_ReasonCode").val() == '' || $("#EWB_ReasonCode").val() == null) {
                alert('Reason Code is required...!');
                return;
            }
            if ($("#rdbtnVehicle").is(':checked')) {
                if ($("#EWB_VehicleNoTxt").val() == '' || $("#EWB_VehicleNoTxt").val() == null) {
                    alert('VehicleNo is required...!');
                    return;
                }
            }
            else {
                if ($("#EWB_VehicleNo").val() == '' || $("#EWB_VehicleNo").val() == null) {
                    alert('VehicleNo is required...!');
                    return;
                }
            }

            if ($("#EWB_Branch").val() == '' || $("#EWB_Branch").val() == null) {
                alert('Place is required...!');
                return;
            }
             if ($("#EWB_ConsignorState").val() == '' || $("#EWB_ConsignorState").val() == null) {
                alert('State is required...!');
                return;
            }

            var url = '@Url.Action("GenerateBpartEWayBill")';
            var ModelData = {};
            ModelData["Document"] = $("#ConsignmentKey").val();
            ModelData["SearchEway"] = $("#BPartSearchEway").val();
            ModelData["DocDate"] = $("#EWB_DocDate").val();
            ModelData["EWB_EwayNo"] = $("#EWB_EwayNo").val();
            ModelData["EWBDocument"] = $("#EWB_EWBDocument").val();

            ModelData["EWB_TRNMode"] = $("#EWB_TRNMode").val();
            ModelData["EWB_ReasonCode"] = $("#EWB_ReasonCode").val();

            if ($("#rdbtnVehicle").is(':checked')) {
                ModelData["EWB_VehicleNo"] = $("#EWB_VehicleNoTxt").val();
            } else {
                ModelData["EWB_VehicleNo"] = $("#EWB_VehicleNo").val();
            }


            ModelData["EWB_Branch"] = $("#EWB_Branch").val();
            ModelData["EWB_ConsignorState"] = $("#EWB_ConsignorState").val();

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    if (data.Status == 'Success')
                    {
                        alert(data.errormsg);
                        location.reload();
                    }
                    else
                    {
                        alert(data.errormsg);
                    }
                },
            });
        });

    });
    function loadTRNModeBP() {
        event.preventDefault();
        var url = '@Url.Action("GetTrasactMode")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: {  },
            success: function (result) {
                $("#EWB_TRNMode").empty();
                $.each(result, function (i, item) {
                    $("#EWB_TRNMode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#EWB_TRNMode').val('@Model.EWB_TRNMode').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function loadReasonCodeBP() {
        event.preventDefault();
        var url = '@Url.Action("GetReasonCode")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: {  },
            success: function (result) {
                $("#EWB_ReasonCode").empty();
                $.each(result, function (i, item) {
                    $("#EWB_ReasonCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#EWB_ReasonCode').val('@Model.EWB_ReasonCode').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function LoadVehicleEWBBP() {

        var url = '@Url.Action("GetVehicle")'
        $('#EWB_VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.EWB_VehicleNo', text: '@Model.EWB_VehicleName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadFromPlaceBP() {

        var url = '@Url.Action("FromPlace")'
        $('#EWB_Branch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.EWB_Branch', text: '@Model.EWB_BranchName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadConsignorStateBP() {

        var url = '@Url.Action("LoadState")'
        $('#EWB_ConsignorState').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.EWB_ConsignorState', text: '@Model.EWB_ConsignorStateName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>
<div class="col-sm-12">
    <hr style="margin-top:5px!important;margin-bottom:8px!important;border:1px solid #ad2783" />
    <div class="col-sm-12" style="padding:0px!important;">
        <div class="col-sm-6" style="padding:0px!important;">
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">Doc Date:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.DocDate, new { @class = "form-control", @style = "width:100%;", @Value = Model.DocDate, @Name = "EWB_DocDate", @Id = "EWB_DocDate" })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">EwayBill No:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.EWB_EwayNo, new { @class = "form-control", @style = "width:100%;", @Value = Model.EWB_EwayNo, @Name = "EWB_EwayNo", @Id = "EWB_EwayNo" })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">EWB Document:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.EWBDocument, new { @class = "form-control", @style = "width:100%;", @Value = Model.EWBDocument, @Name = "EWB_EWBDocument", @Id = "EWB_EWBDocument" })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">TRN Mode:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.EWB_TRNMode, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "EWB_TRNMode", @Id = "EWB_TRNMode" })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">Reson Code:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.EWB_ReasonCode, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "EWB_ReasonCode", @Id = "EWB_ReasonCode" })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">Manual Vehi:</label>
                <div class="col-sm-1" style="">
                    <input type="checkbox" title="Allow To Enter Manual VehicleNO" style="width:20px;height:20px;" id="rdbtnVehicle" />
                </div>
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">Vehicle No:<span style="color:red;">*</span></label>
                <div class="col-sm-4 MasterVehicle">
                    @Html.TextBoxFor(x => x.EWB_VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.EWB_VehicleNo })
                </div>
                <div class="col-sm-4 ManualVehicle hidden">
                    @Html.TextBoxFor(x => x.EWB_VehicleNoTxt, new { @class = "form-control", @style = "width:100%;", @Value = Model.EWB_VehicleNoTxt })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">Place:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.EWB_Branch, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.EWB_Branch })
                </div>
            </div>
            <div class="col-sm-12" style="padding-bottom: 5px!important;">
                <label class="col-sm-2 control-label" style="color:black;font-weight:bold;">State:<span style="color:red;">*</span></label>
                <div class="col-sm-4">
                    @Html.TextBoxFor(x => x.EWB_ConsignorState, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.EWB_ConsignorState })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <label class="col-sm-12" style="text-align: center;color:blue;">Vehicle History</label>
            <div class="col-sm-12">
                @if (Model.VehiclListHistoryDetails != null)
                {
                    <table class="zui-table" style="width:100%;">
                        <thead>
                            <tr>
                                <th>Mode</th>
                                <th>VehicleNo</th>
                                <th>From</th>
                                <th>Entered Date</th>
                                <th>Entered By</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.VehiclListHistoryDetails)
                            {
                                <tr>
                                    <td>@item.transMode</td>
                                    <td>@item.vehicleNo</td>
                                    <td>@item.fromPlace</td>
                                    <td>@item.enteredDate</td>
                                    <td>@item.userGSTINTransin</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
    
    <div class="col-sm-12" style="padding-bottom: 5px!important;">
        <div class="col-sm-2">
            <button class="btn btn-success" style="color:black;font-size: 13px;padding:3px 12px;" id="btnGenBPart" title="Camera">Generate B-Part</button>
        </div>

    </div>




</div>

