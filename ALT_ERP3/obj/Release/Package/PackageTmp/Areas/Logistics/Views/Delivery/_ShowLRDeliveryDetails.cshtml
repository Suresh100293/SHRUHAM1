@model ALT_ERP3.Areas.Logistics.Models.DeliveryVM
@using Common;
@{
    ViewBag.Title = "Delivery Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<style>
    .Unauthorise {
        background-color: #5079d4 !important;
        color: white;
    }

    .rejected {
        background-color: #bf6860 !important;
        color: white;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Lrno,#DeliveryNo").constrain({ allow: { regex: "[0-9]" } });
        //$("#Lrno").focus();
        

        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();
        $('#PODDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });
        $('#DeliveryDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        if ('@Model.Mode' == "Add")
        {
            debugger;
            if ('@Model.OtherBranchLr' == "True")
            {
                var result = confirm("This Lr Destination Does Not Match With Current Branch...\n OR Other Branch Stock Also Selected.......\n R u Sure To Delivery ?");
                if (!result)
                {
                   // window.location.reload();
                    LrDetailsLoad();
                }
            }
        }
        else
        {
            $('#LrComboListbtn').prop("disabled", true);
        }
        if ('@Model.DelGenerate' != "True") {
            $("#DeliveryNo").removeAttr("disabled");
        }
        $("#Lrno").blur(function () {
            debugger;
            if (parseInt($("#Lrno").val()) > 0) {
                GridReload2();
                $("#SearchLRComboList").modal("show");
            }
        });


        //tabledata
        $('#tabledata  > tbody  > tr').each(function () {
            debugger;
            if ($(this).attr("name") == "N") {
                $(this).addClass('Unauthorise');
            }
            else if ($(this).attr("name") == "R") {
                $(this).addClass('rejected');
            }
        });

        $("#btnPODAddDoc").click(function (event) {
            debugger;
            event.preventDefault();
            if ($("#Lrno").val() == null || $("#Lrno").val() == "") {
                alert("Please Get Consignment First...!");
                return;
            }

            debugger;
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = 'Edit';
            ModelData["Srl"] = $("#Parentkey").val();
            ModelData["Type"] = "LR000";
            ModelData["RefType"] = 'POD Received';

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });

        $(".btndelete").click(function ()
        {
            var Row = $(this).closest('tr');
            var Edit = Row.find(".DeleteRow").text();
            if (Edit == "True") {
                alert("Cannot Delete This Row...!");
            } else {
                $(this).closest('tr').remove();
            }
        });

        $('#Yes').click(function () {
            if (this.checked)
            {
                $("#btnPODAddDoc").prop("disabled", false);
                $("#PODDate").prop("disabled", false);
                $("#PODTime").prop("disabled", false);
                $("#PODRemark").prop("disabled", false);
            }
        });
        $('#No').click(function () {
            if (this.checked) {
                $("#btnPODAddDoc").prop("disabled", true);
                $("#PODDate").prop("disabled", true);
                $("#PODTime").prop("disabled", true);
                $("#PODRemark").prop("disabled", true);
            }
        });


        @*if ('@Model.Mode' != 'Add') {
            $("#DeliveryDate,#PODDate").datepicker("setDate", '@Model.Date');
        }*@

        $('#DeliveryNo').blur(function () {
            var url = '@Url.Action("CheckDeliveryNO")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { DeliveryNO: $("#DeliveryNo").val(), DocumentNO: '@Model.Document' },
                success: function (result) {
                    if (result.Message == "T") {
                        DeliverNO = true;
                    } else {
                        DeliverNO = false;

                        $("#ErrorMessage1").show();
                        $("#ErrorMessage1").text('DeliveryNO Exist Please CHange Delivery No.');
                        return;

                    }
                }
            });
        });
        //LoadVehicleNo();
        $(".txtfDelQty").constrain({ allow: { regex: "[0-9]" } });
        //$(".txtfDelQty").blur(function () {
        //    var TotalQty = $("#LRQty").val();
        //    var DeliverQty = $("#DeliverQty").val();
        //    var TotalWeight = $("#LRWeight").val();
        //    var DeliverWeight = 0;
        //    if (parseInt(TotalQty) >= parseInt(DeliverQty)) {
        //        if (parseInt(TotalQty) == parseInt(DeliverQty)) {
        //            $("#DeliverQty").val(TotalQty)
        //            $("#DeliverWeight").val(TotalWeight)
        //        } else {
        //            DeliverWeight = Math.round((parseFloat(DeliverQty) * parseFloat(TotalWeight)) / parseFloat(TotalQty));
        //            $("#DeliverWeight").val(DeliverWeight)
        //        }
        //    } else {
        //        alert("You Cannot Deliver Greater Than Lr Quantity.......!");
        //        $("#DeliverQty").val(TotalQty)
        //        $("#DeliverWeight").val(TotalWeight)
        //    }
        //    $("#BillQty").val(DeliverQty)
        //});
        $('input[type=radio][name=DeliveryStatus]').change(function () {

            var Remark = this.value;
            var ID = this.id;
            if (ID == "Short") {
                $("#ShortQty").prop("disabled", false);
            } else {
                $("#ShortQty").prop("disabled", true);
                $("#ShortQty").val("0");
            }
            if (ID != "OK") {
                $("#lblDamageMessage").removeClass("hidden");
            } else {
                $("#lblDamageMessage").addClass("hidden");
            }


            $("#DeliveryRemark").val(Remark);
        });
    });
    function LoadVehicleNo() {
        var url = '@Url.Action("VehicleNo")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNo' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function DeLQty(value) {
        var Row = $("#" + value);
        var Qty = Row.find(".TotQty").text();
        var LoadQty = Row.find(".txtfDelQty").val();
        var Weight = Row.find(".TotWeight").text();
        if (parseFloat(Qty) < parseFloat(LoadQty)) {
            Row.find(".txtDelWeight").val(Row.find(".TotWeight").text());
            alert("Delivery Qty Not Greater Than Qty OF Lr.....!");
            Row.find(".txtfDelQty").val(Qty);
        } else {
            var CalculateWeight = parseFloat(LoadQty) / parseFloat(Qty) * parseFloat(Weight);
            if (parseInt(CalculateWeight) >= parseInt(Weight)) {
                Row.find(".txtDelWeight").val(Math.round(Weight));
            } else {
                Row.find(".txtDelWeight").val(Math.round(CalculateWeight));
            }

        }
    }
</script>
<div id="ErrorMessage1" name="ErrorMessage1" class="alert alert-danger" style="display: none"></div>
<div class="col-sm-6" style="margin-bottom:30px;">
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Delivery No:</label>
        <div class="col-sm-4 ">
            @if (Model.DeliverySetup.DeliveryGenerate == true || Model.DeliverySetup.DeliveryBoth == true)
            {
                @Html.TextBoxFor(x => x.DeliveryNo, new { @class = "form-control", @style = "width:100%;", @Value = Model.DeliveryNo, @disabled = "disabled" })
            }
            else
            {
                @Html.TextBoxFor(x => x.DeliveryNo, new { @class = "form-control", @style = "width:100%;", @Value = Model.DeliveryNo })
            }
        </div>
        <label class=" bold   col-sm-2  control-label">LR No:</label>
        <div class="col-sm-4 " style="display: flex;">
            @Html.TextBoxFor(x => x.Lrno, new { @class = "form-control", @maxlength = "8", @style = "width:100%;", @Value = Model.Lrno })
            <button class="btn btn-primary" style="font-size: 12px;padding:2px 9px;" id="LrComboListbtn" data-toggle="modal" data-target="#LRComboList"><i class="glyphicon glyphicon-eye-open"></i></button>
        </div>


    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Time:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.Time, new { @class = "form-control", @type = "time", @style = "width:100%;", @Value = Model.Time, @disabled = "disabled" })
        </div>
        <label class=" bold   col-sm-2  control-label" style="margin-left: 0px;">Date:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.Date, new { @class = "form-control", @style = "width:100%;", @Value = Model.Date, @disabled = "disabled" })
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Consigner:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.ConsignerName, new { @class = "form-control", @style = "width:100%;", @Value = Model.ConsignerName, @readonly = "readonly" })
        </div>
        <label class=" bold   col-sm-2  control-label">Consignee:</label>
        <div class="col-sm-4 " style="">
            @Html.TextBoxFor(x => x.ConsigneeName, new { @class = "form-control", @style = "width:100%;", @Value = Model.ConsigneeName, @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">From:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.FromName, new { @class = "form-control", @style = "width:100%;", @Value = Model.FromName, @readonly = "readonly" })
        </div>
        <label class=" bold   col-sm-2  control-label">To:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.ToName, new { @class = "form-control", @style = "width:100%;", @Value = Model.ToName, @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Lr Qty:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.LRQty, new { @class = "form-control", @style = "width:100%;", @Value = Model.LRQty, @readonly = "readonly" })
        </div>
        <label class=" bold   col-sm-2  control-label">LR Weight:</label>
        <div class="col-sm-4 " style="">
            @Html.TextBoxFor(x => x.LRWeight, new { @class = "form-control", @style = "width:100%;", @Value = Model.LRWeight, @readonly = "readonly" })
        </div>
    </div>
    <hr style="border: 1px solid;" />
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Deliver Date:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.DeliveryDate, new { @class = "form-control", @style = "width:100%;background-color:#64bd62;", @Value = Model.DocDate.ToString("dd/MM/yyyy") })
        </div>
        <label class=" bold   col-sm-2  control-label">Deliver Time:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.DeliveryTime, new { @class = "form-control", @type = "time", @style = "width:100%;", @Value = Model.DeliveryTime })
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Short Qty:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.ShortQty, new { @class = "form-control", @style = "width:100%;", @Value = Model.ShortQty, @disabled = "disabled" })
        </div>
        <label class=" bold   col-sm-2  control-label">Vehicle No:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.VehicleNo, new { @class = "form-control", @style = "width:100%;", @Value = Model.VehicleNo, @maxlenght = "25" })
        </div>
    </div>
    <div class="form-group">

        <label class=" bold   col-sm-2  control-label">Goods Receiver Name:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.PersonName, new { @class = "form-control", @style = "width:100%;", @Value = Model.PersonName })
        </div>
        <label class=" bold   col-sm-2  control-label">Contact No:</label>
        <div class="col-sm-4 ">
            @Html.TextBoxFor(x => x.MobileNO, new { @class = "form-control", @maxlength = "10", @style = "width:100%;", @Value = Model.MobileNO })
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2 control-label">Status:</label>
        <div class="col-sm-8" style="display: flex;">
            <input type="radio" class="form-control" name="DeliveryStatus" id="OK" value="OK" style="height:20px;width:35px;" checked /><label class=" bold control-label"> OK</label>
            <input type="radio" class="form-control" name="DeliveryStatus" id="PCK" value="Package Damage" style="height:20px;width:35px;" /><label class=" bold control-label"> Package Damage</label>
            <input type="radio" class="form-control" name="DeliveryStatus" id="MaterialD" value="Material Damage" style="height:20px;width:35px;" /><label class=" bold control-label"> Material Damage</label>
            <input type="radio" class="form-control" name="DeliveryStatus" id="Short" value="Short" style="height:20px;width:35px;" /><label class=" bold control-label"> Short</label>
        </div>
    </div>
    <div class="form-group">
        <label class=" bold   col-sm-2  control-label">Delivery-Remark:</label>
        <div class="col-sm-10 ">
            @Html.TextAreaFor(x => x.DeliveryRemark, new { @class = "form-control", @Value = Model.DeliveryRemark, @rows = "2", @maxlength = "150" })
        </div>
        <label id="lblDamageMessage" class=" bold col-sm-offset-2   col-sm-10  control-label hidden" style="color:red;">Please Attach/Upload POD In Case Material Damage/Shortage.</label>
    </div>

    <hr style="border: 1px solid;" />
    @if (Model.Mode == "Add")
    {
        if (Model.POD == "No")
        {
            <div class="form-group">
                <div class="col-sm-3">
                    <button class="btn btn-info" disabled style="font-size: 13px;padding:3px 12px;" id="btnPODAddDoc" title="Attachment">POD-Attachment</button>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-sm-3">
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnPODAddDoc" title="Attachment">POD-Attachment</button>
                </div>
            </div>
        }
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">POD No:</label>
            <div class="col-sm-4 ">
                @Html.TextBoxFor(x => x.PODNo, new { @class = "form-control", @style = "width:100%;", @Value = Model.PODNo, @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label">POD:</label>
            <div class="col-sm-4" style="display: flex;">
                @if (Model.POD == "No")
                {
                    <input type="radio" class="form-control" name="POD" id="Yes" value="Yes" style="height:20px;width:35px;" disabled /><label class=" bold control-label"> Yes</label>
                    <input type="radio" class="form-control" name="POD" id="No" value="No" style="height:20px;width:35px;" disabled checked /><label class=" bold control-label"> No</label>
                }
                else
                {
                    <input type="radio" class="form-control" name="POD" id="Yes" value="Yes" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Yes</label>
                    <input type="radio" class="form-control" name="POD" id="No" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                }
            </div>
        </div>
        <div class="form-group">
            @if (Model.POD == "No")
            {
                <label class=" bold   col-sm-2  control-label">POD Date:</label>
                <div class="col-sm-4 ">
                    @Html.TextBoxFor(x => x.PODDate, new { @class = "form-control", @style = "width:100%;background-color:#64bd62;", @Value = Model.PODDate, @disabled = "disabled" })
                </div>
                <label class=" bold   col-sm-2  control-label">POD Time:</label>
                <div class="col-sm-4 ">
                    @Html.TextBoxFor(x => x.PODTime, new { @class = "form-control", @type = "time", @style = "width:100%;", @Value = Model.PODTime, @disabled = "disabled" })
                </div>
            }
            else
            {
                <label class=" bold   col-sm-2  control-label">POD Date:</label>
                <div class="col-sm-4 ">
                    @Html.TextBoxFor(x => x.PODDate, new { @class = "form-control", @style = "width:100%;background-color:#64bd62;", @Value = Model.PODDate })
                </div>
                <label class=" bold   col-sm-2  control-label">POD Time:</label>
                <div class="col-sm-4 ">
                    @Html.TextBoxFor(x => x.PODTime, new { @class = "form-control", @type = "time", @style = "width:100%;", @Value = Model.PODTime })
                </div>
            }
        </div>
        <div class="form-group">
            @if (Model.POD == "No")
            {
                <label class=" bold   col-sm-2  control-label">POD-Remark:</label>
                <div class="col-sm-10 ">
                    @Html.TextAreaFor(x => x.PODRemark, new { @class = "form-control", @Value = Model.PODRemark, @rows = "2", @maxlength = "150", @disabled = "disabled" })
                </div>
            }
            else
            {
                <label class=" bold   col-sm-2  control-label">POD-Remark:</label>
                <div class="col-sm-10 ">
                    @Html.TextAreaFor(x => x.PODRemark, new { @class = "form-control", @Value = Model.PODRemark, @rows = "2", @maxlength = "150" })
                </div>
            }
        </div>
    }

</div>

<div class=" col-sm-6  ">
    <div style="border: 2px solid #d3d3d3;min-height:370px;max-height:370px;">
        <div class="form-group ">
            <div class=" col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                <label class="col-sm-12 control-label" style="width:auto;color:black;">Rejected Stock :</label>
                <svg width="20" height="20" style="margin-top:3px;">
                    <title>Rejected LR</title>
                    <rect width="20" height="20" style="fill:#bf6860;stroke-width:3;stroke:rgb(0,0,0)" />
                </svg>
            </div>
            <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Authorise Stock:</label>
                <svg width="20" height="20" style="margin-top:3px;">
                    <title>Un-Authorise LR</title>
                    <rect width="20" height="20" style="fill:#5079d4;stroke-width:3;stroke:rgb(0,0,0)" />
                </svg>
            </div>
            <div class="col-md-7" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;padding-right: 0px;padding-left: 0px;">
                <label class="col-sm-12 control-label bold" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Delivery List</label>
            </div>
        </div>
        @{
            <div style="min-height:335px;max-height:335px;overflow-y: auto;">
                <table id="tabledata" class="zui-table" style="width:100%;">
                    <thead>
                        <tr role="row" style="font-family:Tahoma;font-size:9pt;width:100%">
                            @if (Model.Mode == "Edit")
                            {
                                <th style="width:5%">Delete</th>
                            }
                            <th style="width:15%">Branch</th>
                            <th style="width:12%">Type</th>
                            <th style="width:9%">Bal Qty</th>
                            <th style="width:11%">Bal Weight</th>
                            <th>Del Qty</th>
                            <th>Del Weight</th>
                            <th class="hidden">Reference</th>
                            <th class="hidden">Flag</th>
                        </tr>
                    </thead>

                    <tbody style="">
                        @if (Model.DelRetions != null)
                        {
                            foreach (var item in Model.DelRetions.ToList())
                            {
                                <tr role="row" style="font-family:Tahoma;font-size:9pt;" id="@item.ParentKey.ToString()" name="@item.Authorise">
                                    @if (Model.Mode == "Edit")
                                    {
                                        <td><center><button class="btn btn-danger btndelete" style="font-size:13px;padding:3px 13px;"><i class="glyphicon glyphicon-trash" style="font-size:1.2em;"></i></button></center></td>
                                    }
                                    <td style="width:1%">@item.StkBranch</td>
                                    <td style="width:1%">@item.Type</td>
                                    <td class="TotQty" style="width:1%">@item.DelBalQty</td>
                                    <td class="TotWeight" style="width:1%;text-align:right">@item.DelBalWeight</td>
                                    @if (item.BlockDelivery)
                                    {
                                        <td style="width:1%"><input type="text" alt="Delivery Qty" value="@item.DelQty" onblur="DeLQty('@item.ParentKey.ToString()');" class="txtfDelQty form-control" style="text-align:right;width:131px;background-color:#64bd62;" disabled /></td>
                                    }
                                    else
                                    {
                                        <td style="width:1%"><input type="text" alt="Delivery Qty" value="@item.DelQty" onblur="DeLQty('@item.ParentKey.ToString()');" class="txtfDelQty form-control" style="text-align:right;width:80px;background-color:#64bd62;" /></td>
                                    }
                                    <td style="width:1%;text-align:right"><input type="text" alt="Delivery Weight" value="@item.DelWeight" class="txtDelWeight form-control" style="text-align:right;width:80px;" disabled /></td>
                                    <td class="hidden" style="width:1%">@item.ParentKey</td>
                                    <td class="hidden DeleteRow">@item.BlockDelivery</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<input type="hidden" id="PreviousDelivery" />
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })