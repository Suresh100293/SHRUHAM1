@model ALT_ERP3.Areas.Logistics.Models.VMALTTransaction
@using Common;
@{
    ViewBag.Title = "Country Master";
    Layout = null;
}
<style>
    .MyPanelHeading {
        background-color: #b9fb87 !important;
        border-color: #DDDDDD !important;
        color: #2b29db !important;
        padding: 5px 10px !important;
        border-radius: 15px !important;
        font-weight: bold !important;
    }

    .MyPanelBody {
        border: 1px solid #85cf9f !important;
        border-radius: 15px 15px 0px 0px !important;
    }

    .subHead {
        width: 200px !important;
        padding: 2px !important;
        color: brown !important;
        font-weight: bold !important;
        font-size: 15px !important;
        margin-right: 5px !important;
        text-decoration: underline !important;
    }

    

    .marginRightC {
        margin-right: 15px !important;
    }
    .marginRightL {
        margin-right: 3px !important;
    }

    .marginLeft {
        margin-left: 10px !important;
    }

    .marginbottom {
        margin-bottom: 5px !important;
    }

    .marginLeft20 {
        margin-left: 20px !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $("#VAARArrival,#VADSDispatch").constrain({ allow: { regex: "[0-9:]" } });

        //Collapse and Expand Effect
        {
            $("#CD").click(function () {
                $("#CDBody").slideToggle("slow");
            });
            $("#LC").click(function () {
                $("#LCBody").slideToggle("slow");
            });
            $("#FM").click(function () {
                $("#FMBody").slideToggle("slow");
            });
            $("#VA").click(function () {
                $("#VABody").slideToggle("slow");
            });
            $("#DL").click(function () {
                $("#DLBody").slideToggle("slow");
            });
            $("#POD").click(function () {
                $("#PODBody").slideToggle("slow");
            });
            $("#BS").click(function () {
                $("#BSBody").slideToggle("slow");
            });
            $("#DA").click(function () {
                $("#DABody").slideToggle("slow");
            });
            $("#AB").click(function () {
                $("#ABBody").slideToggle("slow");
            });
            $("#INV").click(function () {
                $("#INVBody").slideToggle("slow");
            });
            $("#CB").click(function () {
                $("#CBBody").slideToggle("slow");
            });
            $("#CBJ").click(function () {
                $("#CBJBody").slideToggle("slow");
            });
            $("#CP").click(function () {
                $("#CPBody").slideToggle("slow");
            });
            $("#CPP").click(function () {
                $("#CPPBody").slideToggle("slow");
            });
            $("#BR").click(function () {
                $("#BRBody").slideToggle("slow");
            });
            $("#TR").click(function () {
                $("#TRBody").slideToggle("slow");
            });
            $("#DEX").click(function () {
                $("#DEXBody").slideToggle("slow");
            });
            $("#CDBody,#LCBody,#FMBody,#VABody,#DLBody,#PODBody,#BSBody,#DABody,#ABBody,#INVBody,#CBBody,#CBJBody,#CPBody,#CPPBody,#BRBody,#TRBody,#DEXBody").slideToggle("slow");
            $("#chkExpand").change(function () {
                $("#CDBody,#LCBody,#FMBody,#VABody,#DLBody,#PODBody,#BSBody,#DABody,#ABBody,#INVBody,#CBBody,#CBJBody,#CPBody,#CPPBody,#BRBody,#TRBody,#DEXBody").slideToggle("slow");
            });
        }

        if ('@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.ArrivalDays'=='') {
            $("#VAARArrival").val("00:00");
        }
        if ('@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.DispatchDays'=='') {
            $("#VADSDispatch").val("00:00");
        }

        //-------------------------Consignment Users-----------------------------------------
        $('#CDBDU').val('');
        var CommonValue = "";
        if ('@Model.consignmentNotification.trnBackDaysConsignment.User' != "") {
            $.each('@Model.consignmentNotification.trnBackDaysConsignment.User'.split(','), function (idx, val) {
                    $(".CDBDUL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnForwardDaysConsignment.User' != "") {
            $.each('@Model.consignmentNotification.trnForwardDaysConsignment.User'.split(','), function (idx, val) {
                $(".CDFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDeclareValueConsignment.User' != "") {
            $.each('@Model.consignmentNotification.trnDeclareValueConsignment.User'.split(','), function (idx, val) {
                $(".CDDVUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDVU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDescriptionConsignment.User' != "") {
            $.each('@Model.consignmentNotification.trnDescriptionConsignment.User'.split(','), function (idx, val) {
                $(".CDDSUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDSU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDeclareValueEwaybillConsignment.User' != "") {
            $.each('@Model.consignmentNotification.trnDeclareValueEwaybillConsignment.User'.split(','), function (idx, val) {
                $(".CDDVEUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDVEU').val(CommonValue);
        }
        $(".CDBDUL").change(function () {
                $('#CDBDU').val('');
                var selected = "";
                $(".CDBDUL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDBDU').val(selected);
                return false;
            });
        $(".CDFDUL").change(function () {
                $('#CDFDU').val('');
                var selected = "";
                $(".CDFDUL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDFDU').val(selected);
                return false;
            });
        $(".CDDVUL").change(function () {
                $('#CDDVU').val('');
                var selected = "";
                $(".CDDVUL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDVU').val(selected);
                return false;
            });
        $(".CDDSUL").change(function () {
                $('#CDDSU').val('');
                var selected = "";
                $(".CDDSUL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDSU').val(selected);
                return false;
            });
        $(".CDDVEUL").change(function () {
                $('#CDDVEU').val('');
                var selected = "";
                $(".CDDVEUL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDVEU').val(selected);
                return false;
            });
        $('.CDBDUL,.CDFDUL,.CDDVUL,.CDDSUL,.CDDVEUL').multiselect({
                includeSelectAllOption: true,
                enableFiltering: true,
                enableCaseInsensitiveFiltering: true,
                filterPlaceholder: 'Search for something...',
                buttonWidth: '150',
                numberDisplayed: 1,
                nonSelectedText: 'Select Users',
        });

        //-------------------------Consignment Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.consignmentNotification.trnBackDaysConsignment.Branch' != "") {
            $.each('@Model.consignmentNotification.trnBackDaysConsignment.Branch'.split(','), function (idx, val) {
                    $(".CDBDBranchL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnForwardDaysConsignment.Branch' != "") {
            $.each('@Model.consignmentNotification.trnForwardDaysConsignment.Branch'.split(','), function (idx, val) {
                    $(".CDFDBranchL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDeclareValueConsignment.Branch' != "") {
            $.each('@Model.consignmentNotification.trnDeclareValueConsignment.Branch'.split(','), function (idx, val) {
                    $(".CDDVBranchL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDVBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDescriptionConsignment.Branch' != "") {
            $.each('@Model.consignmentNotification.trnDescriptionConsignment.Branch'.split(','), function (idx, val) {
                    $(".CDDSBranchL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDSBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Branch' != "") {
            $.each('@Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Branch'.split(','), function (idx, val) {
                    $(".CDDVEBranchL option[value='" + val + "']").attr("selected", true);
                    CommonValue += "" + val + ",";
                });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDVEBranch').val(CommonValue);
        }
        $(".CDBDBranchL").change(function () {
                $('#CDBDBranch').val('');
                var selected = "";
                $(".CDBDBranchL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDBDBranch').val(selected);
                return false;
            });
        $(".CDFDBranchL").change(function () {
                $('#CDFDBranch').val('');
                var selected = "";
                $(".CDFDBranchL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDFDBranch').val(selected);
                return false;
            });
        $(".CDDVBranchL").change(function () {
                $('#CDDVBranch').val('');
                var selected = "";
                $(".CDDVBranchL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDVBranch').val(selected);
                return false;
            });
        $(".CDDSBranchL").change(function () {
                $('#CDDSBranch').val('');
                var selected = "";
                $(".CDDSBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDSBranch').val(selected);
                return false;
            });
        $(".CDDVEBranchL").change(function () {
                $('#CDDVEBranch').val('');
                var selected = "";
                $(".CDDVEBranchL :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#CDDVEBranch').val(selected);
                return false;
            });
        $('.CDBDBranchL,.CDFDBranchL,.CDDVBranchL,.CDDSBranchL,.CDDVEBranchL').multiselect({
                includeSelectAllOption: true,
                enableFiltering: true,
                enableCaseInsensitiveFiltering: true,
                filterPlaceholder: 'Search for something...',
                buttonWidth: '150',
                numberDisplayed: 1,
                nonSelectedText: 'Select Branch',
            });

        //-------------------------Consignment Description-----------------------------------------
        CommonValue = "";
        if ('@Model.consignmentNotification.trnDescriptionConsignment.MDescription' != "") {
            $.each('@Model.consignmentNotification.trnDescriptionConsignment.MDescription'.split(','), function (idx, val) {
                $(".CDDSDescriptionL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CDDSDescription').val(CommonValue);
        }
        $(".CDDSDescriptionL").change(function () {
            $('#CDDSDescription').val('');
            var selected = "";
            $(".CDDSDescriptionL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CDDSDescription').val(selected);
            return false;
        });
        $('.CDDSDescriptionL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Description',
        });

        //-------------------------Lorry Challan Users-----------------------------------------
        CommonValue = "";
        if ('@Model.lorryChallanNotification.trnBackDaysLorryChallan.User' != "") {
            $.each('@Model.lorryChallanNotification.trnBackDaysLorryChallan.User'.split(','), function (idx, val) {
                $(".LCBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#LCBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.lorryChallanNotification.trnForwardDaysLorryChallan.User' != "") {
            $.each('@Model.lorryChallanNotification.trnForwardDaysLorryChallan.User'.split(','), function (idx, val) {
                $(".LCFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#LCFDU').val(CommonValue);
        }
        $(".LCBDUL").change(function () {
            $('#LCBDU').val('');
            var selected = "";
            $(".LCBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#LCBDU').val(selected);
            return false;
        });
        $(".LCFDUL").change(function () {
            $('#LCFDU').val('');
            var selected = "";
            $(".LCFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#LCFDU').val(selected);
            return false;
        });
        $('.LCBDUL,.LCFDUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Lorry Challan Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.lorryChallanNotification.trnBackDaysLorryChallan.Branch' != "") {
            $.each('@Model.lorryChallanNotification.trnBackDaysLorryChallan.Branch'.split(','), function (idx, val) {
                $(".LCBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#LCBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.lorryChallanNotification.trnForwardDaysLorryChallan.Branch' != "") {
            $.each('@Model.lorryChallanNotification.trnForwardDaysLorryChallan.Branch'.split(','), function (idx, val) {
                $(".LCFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#LCFDBranch').val(CommonValue);
        }
        $(".LCBDBranchL").change(function () {
            $('#LCBDBranch').val('');
            var selected = "";
            $(".LCBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#LCBDBranch').val(selected);
            return false;
        });
        $(".LCFDBranchL").change(function () {
            $('#LCFDBranch').val('');
            var selected = "";
            $(".LCFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#LCFDBranch').val(selected);
            return false;
        });
        $('.LCBDBranchL,.LCFDBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });
        ////-------------------------Freight Memo Users-----------------------------------------
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnBackDaysFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnBackDaysFreightMemo.User'.split(','), function (idx, val) {
                $(".FMBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnForwardDaysFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnForwardDaysFreightMemo.User'.split(','), function (idx, val) {
                $(".FMFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnDriverLicExpFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnDriverLicExpFreightMemo.User'.split(','), function (idx, val) {
                $(".FMDLUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMDLU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnDocAmtFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnDocAmtFreightMemo.User'.split(','), function (idx, val) {
                $(".FMDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnBrokerFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnBrokerFreightMemo.User'.split(','), function (idx, val) {
                $(".FMBRUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMBRU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnVehicleFreightMemo.User' != "") {
            $.each('@Model.freightMemoNotification.trnVehicleFreightMemo.User'.split(','), function (idx, val) {
                $(".FMVLUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMVLU').val(CommonValue);
        }
        $(".FMBDUL").change(function () {
            $('#FMBDU').val('');
            var selected = "";
            $(".FMBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMBDU').val(selected);
            return false;
        });
        $(".FMFDUL").change(function () {
            $('#FMFDU').val('');
            var selected = "";
            $(".FMFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMFDU').val(selected);
            return false;
        });
        $(".FMDLUL").change(function () {
            $('#FMDLU').val('');
            var selected = "";
            $(".FMDLUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMDLU').val(selected);
            return false;
        });
        $(".FMDAUL").change(function () {
            $('#FMDAU').val('');
            var selected = "";
            $(".FMDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMDAU').val(selected);
            return false;
        });
        $(".FMBRUL").change(function () {
            $('#FMBRU').val('');
            var selected = "";
            $(".FMBRUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMBRU').val(selected);
            return false;
        });
        $(".FMVLUL").change(function () {
            $('#FMVLU').val('');
            var selected = "";
            $(".FMVLUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMVLU').val(selected);
            return false;
        });
        $('.FMBDUL,.FMFDUL,.FMDLUL,.FMDAUL,.FMBRUL,.FMVLUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        ////-------------------------Freight Memo Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnBackDaysFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnBackDaysFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnForwardDaysFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnForwardDaysFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnDriverLicExpFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnDriverLicExpFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMDLBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMDLBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnDocAmtFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnDocAmtFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnBrokerFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnBrokerFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMBRBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMBRBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnVehicleFreightMemo.Branch' != "") {
            $.each('@Model.freightMemoNotification.trnVehicleFreightMemo.Branch'.split(','), function (idx, val) {
                $(".FMVLBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMVLBranch').val(CommonValue);
        }
        $(".FMBDBranchL").change(function () {
            $('#FMBDBranch').val('');
            var selected = "";
            $(".FMBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMBDBranch').val(selected);
            return false;
        });
        $(".FMFDBranchL").change(function () {
            $('#FMFDBranch').val('');
            var selected = "";
            $(".FMFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMFDBranch').val(selected);
            return false;
        });
        $(".FMDLBranchL").change(function () {
            $('#FMDLBranch').val('');
            var selected = "";
            $(".FMDLBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMDLBranch').val(selected);
            return false;
        });
        $(".FMDABranchL").change(function () {
            $('#FMDABranch').val('');
            var selected = "";
            $(".FMDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMDABranch').val(selected);
            return false;
        });
        $(".FMBRBranchL").change(function () {
            $('#FMBRBranch').val('');
            var selected = "";
            $(".FMBRBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMBRBranch').val(selected);
            return false;
        });
        $(".FMVLBranchL").change(function () {
            $('#FMVLBranch').val('');
            var selected = "";
            $(".FMVLBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMVLBranch').val(selected);
            return false;
        });
        $('.FMBDBranchL,.FMFDBranchL,.FMDLBranchL,.FMDABranchL,.FMBRBranchL,.FMVLBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Freight Memo Broker-----------------------------------------
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnBrokerFreightMemo.Broker' != "") {
            $.each('@Model.freightMemoNotification.trnBrokerFreightMemo.Broker'.split(','), function (idx, val) {
                $(".FMBRBrokerL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMBRBroker').val(CommonValue);
        }
        $(".FMBRBrokerL").change(function () {
            $('#FMBRBroker').val('');
            var selected = "";
            $(".FMBRBrokerL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMBRBroker').val(selected);
            return false;
        });
        $('.FMBRBrokerL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Broker',
        });

        //-------------------------Freight Memo Vehicle-----------------------------------------
        CommonValue = "";
        if ('@Model.freightMemoNotification.trnVehicleFreightMemo.Vehicle' != "") {
            $.each('@Model.freightMemoNotification.trnVehicleFreightMemo.Vehicle'.split(','), function (idx, val) {
                $(".FMVLVehiclesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMVLVehicles').val(CommonValue);
        }
        $(".FMVLVehiclesL").change(function () {
            $('#FMVLVehicles').val('');
            var selected = "";
            $(".FMVLVehiclesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMVLVehicles').val(selected);
            return false;
        });
        $('.FMVLVehiclesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Vehicle',
        });
        ////-------------------------Vehicle Activity Users-----------------------------------------
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.User' != "") {
            $.each('@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.User'.split(','), function (idx, val) {
                $(".VAARUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAARU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.User' != "") {
            $.each('@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.User'.split(','), function (idx, val) {
                $(".VADSUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VADSU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnOverloadVehicleActivity.User' != "") {
            $.each('@Model.vehicleActivityNotification.trnOverloadVehicleActivity.User'.split(','), function (idx, val) {
                $(".VAOLUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAOLU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnClearVehicleActivity.User' != "") {
            $.each('@Model.vehicleActivityNotification.trnClearVehicleActivity.User'.split(','), function (idx, val) {
                $(".VACLUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VACLU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnUnloadVehicleActivity.User' != "") {
            $.each('@Model.vehicleActivityNotification.trnUnloadVehicleActivity.User'.split(','), function (idx, val) {
                $(".VAUNUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAUNU').val(CommonValue);
        }
        $(".VAARUL").change(function () {
            $('#VAARU').val('');
            var selected = "";
            $(".VAARUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAARU').val(selected);
            return false;
        });
        $(".VADSUL").change(function () {
            $('#VADSU').val('');
            var selected = "";
            $(".VADSUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VADSU').val(selected);
            return false;
        });
        $(".VAOLUL").change(function () {
            $('#VAOLU').val('');
            var selected = "";
            $(".VAOLUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAOLU').val(selected);
            return false;
        });
        $(".VACLUL").change(function () {
            $('#VACLU').val('');
            var selected = "";
            $(".VACLUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VACLU').val(selected);
            return false;
        });
        $(".VAUNUL").change(function () {
            $('#VAUNU').val('');
            var selected = "";
            $(".VAUNUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAUNU').val(selected);
            return false;
        });
        $('.VAARUL,.VADSUL,.VAOLUL,.VACLUL,.VAUNUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        ////-------------------------Vehicle Activity Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Branch' != "") {
            $.each('@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Branch'.split(','), function (idx, val) {
                $(".VAARBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAARBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Branch' != "") {
            $.each('@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Branch'.split(','), function (idx, val) {
                $(".VADSBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VADSBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnOverloadVehicleActivity.Branch' != "") {
            $.each('@Model.vehicleActivityNotification.trnOverloadVehicleActivity.Branch'.split(','), function (idx, val) {
                $(".VAOLBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAOLBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnClearVehicleActivity.Branch' != "") {
            $.each('@Model.vehicleActivityNotification.trnClearVehicleActivity.Branch'.split(','), function (idx, val) {
                $(".VACLBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VACLBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.vehicleActivityNotification.trnUnloadVehicleActivity.Branch' != "") {
            $.each('@Model.vehicleActivityNotification.trnUnloadVehicleActivity.Branch'.split(','), function (idx, val) {
                $(".VAUNBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#VAUNBranch').val(CommonValue);
        }
        $(".VAARBranchL").change(function () {
            $('#VAARBranch').val('');
            var selected = "";
            $(".VAARBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAARBranch').val(selected);
            return false;
        });
        $(".VADSBranchL").change(function () {
            $('#VADSBranch').val('');
            var selected = "";
            $(".VADSBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VADSBranch').val(selected);
            return false;
        });
        $(".VAOLBranchL").change(function () {
            $('#VAOLBranch').val('');
            var selected = "";
            $(".VAOLBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAOLBranch').val(selected);
            return false;
        });
        $(".VACLBranchL").change(function () {
            $('#VACLBranch').val('');
            var selected = "";
            $(".VACLBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VACLBranch').val(selected);
            return false;
        });
        $(".VAUNBranchL").change(function () {
            $('#VAUNBranch').val('');
            var selected = "";
            $(".VAUNBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#VAUNBranch').val(selected);
            return false;
        });
        $('.VAARBranchL,.VADSBranchL,.VAOLBranchL,.VACLBranchL,.VAUNBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Delivery Users-----------------------------------------
        CommonValue = "";
        if ('@Model.deliveryNotification.trnStatusDelivery.User' != "") {
            $.each('@Model.deliveryNotification.trnStatusDelivery.User'.split(','), function (idx, val) {
                $(".DLSTUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DLSTU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.deliveryNotification.trnAnotherBranchDelivery.User' != "") {
            $.each('@Model.deliveryNotification.trnAnotherBranchDelivery.User'.split(','), function (idx, val) {
                $(".DLBRUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DLBRU').val(CommonValue);
        }
        $(".DLSTUL").change(function () {
            $('#DLSTU').val('');
            var selected = "";
            $(".DLSTUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DLSTU').val(selected);
            return false;
        });
        $(".DLBRUL").change(function () {
            $('#DLBRU').val('');
            var selected = "";
            $(".DLBRUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DLBRU').val(selected);
            return false;
        });
        $('.DLSTUL,.DLBRUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Delivery Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.deliveryNotification.trnStatusDelivery.Branch' != "") {
            $.each('@Model.deliveryNotification.trnStatusDelivery.Branch'.split(','), function (idx, val) {
                $(".DLSTBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DLSTBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.deliveryNotification.trnAnotherBranchDelivery.Branch' != "") {
            $.each('@Model.deliveryNotification.trnAnotherBranchDelivery.Branch'.split(','), function (idx, val) {
                $(".DLBRBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DLBRBranch').val(CommonValue);
        }
        $(".DLSTBranchL").change(function () {
            $('#DLSTBranch').val('');
            var selected = "";
            $(".DLSTBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DLSTBranch').val(selected);
            return false;
        });
        $(".DLBRBranchL").change(function () {
            $('#DLBRBranch').val('');
            var selected = "";
            $(".DLBRBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DLBRBranch').val(selected);
            return false;
        });
        $('.DLSTBranchL,.DLBRBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Delivery Status-----------------------------------------
        CommonValue = "";
        if ('@Model.deliveryNotification.trnStatusDelivery.Status' != "") {
            $.each('@Model.deliveryNotification.trnStatusDelivery.Status'.split(','), function (idx, val) {
                $(".DLSTStatusL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DLSTStatus').val(CommonValue);
        }
        $(".DLSTStatusL").change(function () {
            $('#DLSTStatus').val('');
            var selected = "";
            $(".DLSTStatusL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DLSTStatus').val(selected);
            return false;
        });
        $('.DLSTStatusL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Status',
        });

        //-------------------------POD Users-----------------------------------------
        CommonValue = "";
        if ('@Model.pODNotification.trnBackDaysPOD.User' != "") {
            $.each('@Model.pODNotification.trnBackDaysPOD.User'.split(','), function (idx, val) {
                $(".PODBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnForwardDaysPOD.User' != "") {
            $.each('@Model.pODNotification.trnForwardDaysPOD.User'.split(','), function (idx, val) {
                $(".PODFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnReceivedDaysPOD.User' != "") {
            $.each('@Model.pODNotification.trnReceivedDaysPOD.User'.split(','), function (idx, val) {
                $(".PODRCUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODRCU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnSendDaysPOD.User' != "") {
            $.each('@Model.pODNotification.trnSendDaysPOD.User'.split(','), function (idx, val) {
                $(".PODSDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODSDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnSelectNoDeliveryPOD.User' != "") {
            $.each('@Model.pODNotification.trnSelectNoDeliveryPOD.User'.split(','), function (idx, val) {
                $(".PODNDLUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODNDLU').val(CommonValue);
        }
        $(".PODBDUL").change(function () {
            $('#PODBDU').val('');
            var selected = "";
            $(".PODBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODBDU').val(selected);
            return false;
        });
        $(".PODFDUL").change(function () {
            $('#PODFDU').val('');
            var selected = "";
            $(".PODFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODFDU').val(selected);
            return false;
        });
        $(".PODRCUL").change(function () {
            $('#PODRCU').val('');
            var selected = "";
            $(".PODRCUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODRCU').val(selected);
            return false;
        });
        $(".PODSDUL").change(function () {
            $('#PODSDU').val('');
            var selected = "";
            $(".PODSDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODSDU').val(selected);
            return false;
        });
        $(".PODNDLUL").change(function () {
            $('#PODNDLU').val('');
            var selected = "";
            $(".PODNDLUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODNDLU').val(selected);
            return false;
        });
        $('.PODBDUL,.PODFDUL,.PODRCUL,.PODSDUL,.PODNDLUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------POD Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.pODNotification.trnBackDaysPOD.Branch' != "") {
            $.each('@Model.pODNotification.trnBackDaysPOD.Branch'.split(','), function (idx, val) {
                $(".PODBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnForwardDaysPOD.Branch' != "") {
            $.each('@Model.pODNotification.trnForwardDaysPOD.Branch'.split(','), function (idx, val) {
                $(".PODFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnReceivedDaysPOD.Branch' != "") {
            $.each('@Model.pODNotification.trnReceivedDaysPOD.Branch'.split(','), function (idx, val) {
                $(".PODRCBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODRCBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnSendDaysPOD.Branch' != "") {
            $.each('@Model.pODNotification.trnSendDaysPOD.Branch'.split(','), function (idx, val) {
                $(".PODSDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODSDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.pODNotification.trnSelectNoDeliveryPOD.Branch' != "") {
            $.each('@Model.pODNotification.trnSelectNoDeliveryPOD.Branch'.split(','), function (idx, val) {
                $(".PODNDLBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PODNDLBranch').val(CommonValue);
        }
        $(".PODBDBranchL").change(function () {
            $('#PODBDBranch').val('');
            var selected = "";
            $(".PODBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODBDBranch').val(selected);
            return false;
        });
        $(".PODFDBranchL").change(function () {
            $('#PODFDBranch').val('');
            var selected = "";
            $(".PODFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODFDBranch').val(selected);
            return false;
        });
        $(".PODRCBranchL").change(function () {
            $('#PODRCBranch').val('');
            var selected = "";
            $(".PODRCBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODRCBranch').val(selected);
            return false;
        });
        $(".PODSDBranchL").change(function () {
            $('#PODSDBranch').val('');
            var selected = "";
            $(".PODSDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODSDBranch').val(selected);
            return false;
        });
        $(".PODNDLBranchL").change(function () {
            $('#PODNDLBranch').val('');
            var selected = "";
            $(".PODNDLBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PODNDLBranch').val(selected);
            return false;
        });
        $('.PODBDBranchL,.PODFDBranchL,.PODRCBranchL,.PODSDBranchL,.PODNDLBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Bill Submission Users-----------------------------------------
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnBackDaysBillSubmission.User' != "") {
            $.each('@Model.billSubmissionNotification.trnBackDaysBillSubmission.User'.split(','), function (idx, val) {
                $(".BSBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnForwardDaysBillSubmission.User' != "") {
            $.each('@Model.billSubmissionNotification.trnForwardDaysBillSubmission.User'.split(','), function (idx, val) {
                $(".BSFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnLateDaysBillSubmission.User' != "") {
            $.each('@Model.billSubmissionNotification.trnLateDaysBillSubmission.User'.split(','), function (idx, val) {
                $(".BSLSUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSLSU').val(CommonValue);
        }
        $(".BSBDUL").change(function () {
            $('#BSBDU').val('');
            var selected = "";
            $(".BSBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSBDU').val(selected);
            return false;
        });
        $(".BSFDUL").change(function () {
            $('#BSFDU').val('');
            var selected = "";
            $(".BSFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSFDU').val(selected);
            return false;
        });
        $(".BSLSUL").change(function () {
            $('#BSLSU').val('');
            var selected = "";
            $(".BSLSUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSLSU').val(selected);
            return false;
        });
        $('.BSBDUL,.BSFDUL,.BSLSUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Bill Submission Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnBackDaysBillSubmission.Branch' != "") {
            $.each('@Model.billSubmissionNotification.trnBackDaysBillSubmission.Branch'.split(','), function (idx, val) {
                $(".BSBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnForwardDaysBillSubmission.Branch' != "") {
            $.each('@Model.billSubmissionNotification.trnForwardDaysBillSubmission.Branch'.split(','), function (idx, val) {
                $(".BSFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billSubmissionNotification.trnLateDaysBillSubmission.Branch' != "") {
            $.each('@Model.billSubmissionNotification.trnLateDaysBillSubmission.Branch'.split(','), function (idx, val) {
                $(".BSLSBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BSLSBranch').val(CommonValue);
        }
        $(".BSBDBranchL").change(function () {
            $('#BSBDBranch').val('');
            var selected = "";
            $(".BSBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSBDBranch').val(selected);
            return false;
        });
        $(".BSFDBranchL").change(function () {
            $('#BSFDBranch').val('');
            var selected = "";
            $(".BSFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSFDBranch').val(selected);
            return false;
        });
        $(".BSLSBranchL").change(function () {
            $('#BSLSBranch').val('');
            var selected = "";
            $(".BSLSBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BSLSBranch').val(selected);
            return false;
        });
        $('.BSBDBranchL,.BSFDBranchL,.BSLSBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Doc Authentication Users-----------------------------------------
        CommonValue = "";
        if ('@Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.User' != "") {
            $.each('@Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.User'.split(','), function (idx, val) {
                $(".DAAUTHUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DAAUTHU').val(CommonValue);
        }
        $(".DAAUTHUL").change(function () {
            $('#DAAUTHU').val('');
            var selected = "";
            $(".DAAUTHUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DAAUTHU').val(selected);
            return false;
        });
        $('.DAAUTHUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Doc Authentication Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Branch' != "") {
            $.each('@Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Branch'.split(','), function (idx, val) {
                $(".DAAUTHBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#DAAUTHBranch').val(CommonValue);
        }
        $(".DAAUTHBranchL").change(function () {
            $('#DAAUTHBranch').val('');
            var selected = "";
            $(".DAAUTHBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#DAAUTHBranch').val(selected);
            return false;
        });
        $('.DAAUTHBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Advance Balance Users-----------------------------------------
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.User' != "") {
            $.each('@Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.User'.split(','), function (idx, val) {
                $(".FMPBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.User' != "") {
            $.each('@Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.User'.split(','), function (idx, val) {
                $(".FMPFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.User' != "") {
            $.each('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.User'.split(','), function (idx, val) {
                $(".FMPEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.User' != "") {
            $.each('@Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.User'.split(','), function (idx, val) {
                $(".FMPCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPCEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.User' != "") {
            $.each('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.User'.split(','), function (idx, val) {
                $(".FMPCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPCDEXU').val(CommonValue);
        }
        $(".FMPBDUL").change(function () {
            $('#FMPBDU').val('');
            var selected = "";
            $(".FMPBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPBDU').val(selected);
            return false;
        });
        $(".FMPFDUL").change(function () {
            $('#FMPFDU').val('');
            var selected = "";
            $(".FMPFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPFDU').val(selected);
            return false;
        });
        $(".FMPEXUL").change(function () {
            $('#FMPEXU').val('');
            var selected = "";
            $(".FMPEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPEXU').val(selected);
            return false;
        });
        $(".FMPCEXUL").change(function () {
            $('#FMPCEXU').val('');
            var selected = "";
            $(".FMPCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPCEXU').val(selected);
            return false;
        });
        $(".FMPCDEXUL").change(function () {
            $('#FMPCDEXU').val('');
            var selected = "";
            $(".FMPCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPCDEXU').val(selected);
            return false;
        });
        $('.FMPBDUL,.FMPFDUL,.FMPEXUL,.FMPCEXUL,.FMPCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Advance Balance Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Branch' != "") {
            $.each('@Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Branch'.split(','), function (idx, val) {
                $(".FMPBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Branch' != "") {
            $.each('@Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Branch'.split(','), function (idx, val) {
                $(".FMPFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Branch' != "") {
            $.each('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Branch'.split(','), function (idx, val) {
                $(".FMPEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Branch' != "") {
            $.each('@Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Branch'.split(','), function (idx, val) {
                $(".FMPCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPCEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Branch' != "") {
            $.each('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Branch'.split(','), function (idx, val) {
                $(".FMPCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPCDEXBranch').val(CommonValue);
        }
        $(".FMPBDBranchL").change(function () {
            $('#FMPBDBranch').val('');
            var selected = "";
            $(".FMPBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPBDBranch').val(selected);
            return false;
        });
        $(".FMPFDBranchL").change(function () {
            $('#FMPFDBranch').val('');
            var selected = "";
            $(".FMPFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPFDBranch').val(selected);
            return false;
        });
        $(".FMPEXBranchL").change(function () {
            $('#FMPEXBranch').val('');
            var selected = "";
            $(".FMPEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPEXBranch').val(selected);
            return false;
        });
        $(".FMPCEXBranchL").change(function () {
            $('#FMPCEXBranch').val('');
            var selected = "";
            $(".FMPCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPCEXBranch').val(selected);
            return false;
        });
        $(".FMPCDEXBranchL").change(function () {
            $('#FMPCDEXBranch').val('');
            var selected = "";
            $(".FMPCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPCDEXBranch').val(selected);
            return false;
        });
        $('.FMPBDBranchL,.FMPFDBranchL,.FMPEXBranchL,.FMPCEXBranchL,.FMPCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Advance Balance Expenses AC-----------------------------------------
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Expense' != "") {
            $.each('@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Expense'.split(','), function (idx, val) {
                $(".FMPEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPEXExpenses').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Expense' != "") {
            $.each('@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Expense'.split(','), function (idx, val) {
                $(".FMPCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#FMPCDEXExpenses').val(CommonValue);
        }
        $(".FMPEXExpensesL").change(function () {
            $('#FMPEXExpenses').val('');
            var selected = "";
            $(".FMPEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPEXExpenses').val(selected);
            return false;
        });
        $(".FMPCDEXExpensesL").change(function () {
            $('#FMPCDEXExpenses').val('');
            var selected = "";
            $(".FMPCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#FMPCDEXExpenses').val(selected);
            return false;
        });
        $('.FMPEXExpensesL,.FMPCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });

        //-------------------------Invoice Users-----------------------------------------
        CommonValue = "";
        if ('@Model.billNotification.trnBackDaysBill.User' != "") {
            $.each('@Model.billNotification.trnBackDaysBill.User'.split(','), function (idx, val) {
                $(".INVBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnForwardDaysBill.User' != "") {
            $.each('@Model.billNotification.trnForwardDaysBill.User'.split(','), function (idx, val) {
                $(".INVFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnDocAmountBill.User' != "") {
            $.each('@Model.billNotification.trnDocAmountBill.User'.split(','), function (idx, val) {
                $(".INVDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnZeroAmountBill.User' != "") {
            $.each('@Model.billNotification.trnZeroAmountBill.User'.split(','), function (idx, val) {
                $(".INVZAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVZAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnOtherPartyBill.User' != "") {
            $.each('@Model.billNotification.trnOtherPartyBill.User'.split(','), function (idx, val) {
                $(".INVOPUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVOPU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnConsignmentBill.User' != "") {
            $.each('@Model.billNotification.trnConsignmentBill.User'.split(','), function (idx, val) {
                $(".INVCDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnPartyBill.User' != "") {
            $.each('@Model.billNotification.trnPartyBill.User'.split(','), function (idx, val) {
                $(".INVPTUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVPTU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnDoubleExpBill.User' != "") {
            $.each('@Model.billNotification.trnDoubleExpBill.User'.split(','), function (idx, val) {
                $(".INVCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnParticularDoubleExpBill.User' != "") {
            $.each('@Model.billNotification.trnParticularDoubleExpBill.User'.split(','), function (idx, val) {
                $(".INVCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCDEXU').val(CommonValue);
        }
        $(".INVBDUL").change(function () {
            $('#INVBDU').val('');
            var selected = "";
            $(".INVBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVBDU').val(selected);
            return false;
        });
        $(".INVFDUL").change(function () {
            $('#INVFDU').val('');
            var selected = "";
            $(".INVFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVFDU').val(selected);
            return false;
        });
        $(".INVDAUL").change(function () {
            $('#INVDAU').val('');
            var selected = "";
            $(".INVDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVDAU').val(selected);
            return false;
        });
        $(".INVZAUL").change(function () {
            $('#INVZAU').val('');
            var selected = "";
            $(".INVZAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVZAU').val(selected);
            return false;
        });
        $(".INVOPUL").change(function () {
            $('#INVOPU').val('');
            var selected = "";
            $(".INVOPUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVOPU').val(selected);
            return false;
        });
        $(".INVCDUL").change(function () {
            $('#INVCDU').val('');
            var selected = "";
            $(".INVCDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCDU').val(selected);
            return false;
        });
        $(".INVPTUL").change(function () {
            $('#INVPTU').val('');
            var selected = "";
            $(".INVPTUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVPTU').val(selected);
            return false;
        });
        $(".INVCEXUL").change(function () {
            $('#INVCEXU').val('');
            var selected = "";
            $(".INVCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCEXU').val(selected);
            return false;
        });
        $(".INVCDEXUL").change(function () {
            $('#INVCDEXU').val('');
            var selected = "";
            $(".INVCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCDEXU').val(selected);
            return false;
        });
        $('.INVBDUL,.INVFDUL,.INVDAUL,.INVZAUL,.INVOPUL,.INVCDUL,.INVPTUL,.INVCEXUL,.INVCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Invoice Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.billNotification.trnBackDaysBill.Branch' != "") {
            $.each('@Model.billNotification.trnBackDaysBill.Branch'.split(','), function (idx, val) {
                $(".INVBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnForwardDaysBill.Branch' != "") {
            $.each('@Model.billNotification.trnForwardDaysBill.Branch'.split(','), function (idx, val) {
                $(".INVFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnDocAmountBill.Branch' != "") {
            $.each('@Model.billNotification.trnDocAmountBill.Branch'.split(','), function (idx, val) {
                $(".INVDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnZeroAmountBill.Branch' != "") {
            $.each('@Model.billNotification.trnZeroAmountBill.Branch'.split(','), function (idx, val) {
                $(".INVZABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVZABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnOtherPartyBill.Branch' != "") {
            $.each('@Model.billNotification.trnOtherPartyBill.Branch'.split(','), function (idx, val) {
                $(".INVOPBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVOPBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnConsignmentBill.Branch' != "") {
            $.each('@Model.billNotification.trnConsignmentBill.Branch'.split(','), function (idx, val) {
                $(".INVCDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnPartyBill.Branch' != "") {
            $.each('@Model.billNotification.trnPartyBill.Branch'.split(','), function (idx, val) {
                $(".INVPTBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVPTBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnDoubleExpBill.Branch' != "") {
            $.each('@Model.billNotification.trnDoubleExpBill.Branch'.split(','), function (idx, val) {
                $(".INVCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.billNotification.trnParticularDoubleExpBill.Branch' != "") {
            $.each('@Model.billNotification.trnParticularDoubleExpBill.Branch'.split(','), function (idx, val) {
                $(".INVCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCDEXBranch').val(CommonValue);
        }
        $(".INVBDBranchL").change(function () {
            $('#INVBDBranch').val('');
            var selected = "";
            $(".INVBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVBDBranch').val(selected);
            return false;
        });
        $(".INVFDBranchL").change(function () {
            $('#INVFDBranch').val('');
            var selected = "";
            $(".INVFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVFDBranch').val(selected);
            return false;
        });
        $(".INVDABranchL").change(function () {
            $('#INVDABranch').val('');
            var selected = "";
            $(".INVDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVDABranch').val(selected);
            return false;
        });
        $(".INVZABranchL").change(function () {
            $('#INVZABranch').val('');
            var selected = "";
            $(".INVZABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVZABranch').val(selected);
            return false;
        });
        $(".INVOPBranchL").change(function () {
            $('#INVOPBranch').val('');
            var selected = "";
            $(".INVOPBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVOPBranch').val(selected);
            return false;
        });
        $(".INVCDBranchL").change(function () {
            $('#INVCDBranch').val('');
            var selected = "";
            $(".INVCDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCDBranch').val(selected);
            return false;
        });
        $(".INVPTBranchL").change(function () {
            $('#INVPTBranch').val('');
            var selected = "";
            $(".INVPTBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVPTBranch').val(selected);
            return false;
        });
        $(".INVCEXBranchL").change(function () {
            $('#INVCEXBranch').val('');
            var selected = "";
            $(".INVCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCEXBranch').val(selected);
            return false;
        });
        $(".INVCDEXBranchL").change(function () {
            $('#INVCDEXBranch').val('');
            var selected = "";
            $(".INVCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCDEXBranch').val(selected);
            return false;
        });
        $('.INVBDBranchL,.INVFDBranchL,.INVDABranchL,.INVZABranchL,.INVOPBranchL,.INVCDBranchL,.INVPTBranchL,.INVCEXBranchL,.INVCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Invoice Double Expense-----------------------------------------
        CommonValue = "";
        if ('@Model.billNotification.trnParticularDoubleExpBill.Expense' != "") {
            $.each('@Model.billNotification.trnParticularDoubleExpBill.Expense'.split(','), function (idx, val) {
                $(".INVCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVCDEXExpenses').val(CommonValue);
        }
        $(".INVCDEXExpensesL").change(function () {
            $('#INVCDEXExpenses').val('');
            var selected = "";
            $(".INVCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVCDEXExpenses').val(selected);
            return false;
        });
        $('.INVCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });
        //-------------------------Invoice Party-----------------------------------------
        CommonValue = "";
        if ('@Model.billNotification.trnPartyBill.Party' != "") {
            $.each('@Model.billNotification.trnPartyBill.Party'.split(','), function (idx, val) {
                $(".INVPTPartyL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#INVPTParty').val(CommonValue);
        }
        $(".INVPTPartyL").change(function () {
            $('#INVPTParty').val('');
            var selected = "";
            $(".INVPTPartyL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#INVPTParty').val(selected);
            return false;
        });
        $('.INVPTPartyL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Party',
        });

        //-------------------------Cash Bank Transaction Users-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnBackDaysCashBank.User' != "") {
            $.each('@Model.cashBankPaymentNotification.trnBackDaysCashBank.User'.split(','), function (idx, val) {
                $(".CPOBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnForwardDaysCashBank.User' != "") {
            $.each('@Model.cashBankPaymentNotification.trnForwardDaysCashBank.User'.split(','), function (idx, val) {
                $(".CPOFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnDocAmountCashBank.User' != "") {
            $.each('@Model.cashBankPaymentNotification.trnDocAmountCashBank.User'.split(','), function (idx, val) {
                $(".CPODAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPODAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnDoubleExpCashBank.User' != "") {
            $.each('@Model.cashBankPaymentNotification.trnDoubleExpCashBank.User'.split(','), function (idx, val) {
                $(".CPOCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOCEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.User' != "") {
            $.each('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.User'.split(','), function (idx, val) {
                $(".CPOCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOCDEXU').val(CommonValue);
        }
        $(".CPOBDUL").change(function () {
            $('#CPOBDU').val('');
            var selected = "";
            $(".CPOBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOBDU').val(selected);
            return false;
        });
        $(".CPOFDUL").change(function () {
            $('#CPOFDU').val('');
            var selected = "";
            $(".CPOFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOFDU').val(selected);
            return false;
        });
        $(".CPODAUL").change(function () {
            $('#CPODAU').val('');
            var selected = "";
            $(".CPODAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPODAU').val(selected);
            return false;
        });
        $(".CPOCEXUL").change(function () {
            $('#CPOCEXU').val('');
            var selected = "";
            $(".CPOCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOCEXU').val(selected);
            return false;
        });
        $(".CPOCDEXUL").change(function () {
            $('#CPOCDEXU').val('');
            var selected = "";
            $(".CPOCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOCDEXU').val(selected);
            return false;
        });
        $('.CPOBDUL,.CPOFDUL,.CPODAUL,.CPOCEXUL,.CPOCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Cash Bank Transaction Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnBackDaysCashBank.Branch' != "") {
            $.each('@Model.cashBankPaymentNotification.trnBackDaysCashBank.Branch'.split(','), function (idx, val) {
                $(".CPOBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnForwardDaysCashBank.Branch' != "") {
            $.each('@Model.cashBankPaymentNotification.trnForwardDaysCashBank.Branch'.split(','), function (idx, val) {
                $(".CPOFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnDocAmountCashBank.Branch' != "") {
            $.each('@Model.cashBankPaymentNotification.trnDocAmountCashBank.Branch'.split(','), function (idx, val) {
                $(".CPODABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPODABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnDoubleExpCashBank.Branch' != "") {
            $.each('@Model.cashBankPaymentNotification.trnDoubleExpCashBank.Branch'.split(','), function (idx, val) {
                $(".CPOCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOCEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Branch' != "") {
            $.each('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Branch'.split(','), function (idx, val) {
                $(".CPOCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOCDEXBranch').val(CommonValue);
        }
        $(".CPOBDBranchL").change(function () {
            $('#CPOBDBranch').val('');
            var selected = "";
            $(".CPOBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOBDBranch').val(selected);
            return false;
        });
        $(".CPOFDBranchL").change(function () {
            $('#CPOFDBranch').val('');
            var selected = "";
            $(".CPOFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOFDBranch').val(selected);
            return false;
        });
        $(".CPODABranchL").change(function () {
            $('#CPODABranch').val('');
            var selected = "";
            $(".CPODABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPODABranch').val(selected);
            return false;
        });
        $(".CPOCEXBranchL").change(function () {
            $('#CPOCEXBranch').val('');
            var selected = "";
            $(".CPOCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOCEXBranch').val(selected);
            return false;
        });
        $(".CPOCDEXBranchL").change(function () {
            $('#CPOCDEXBranch').val('');
            var selected = "";
            $(".CPOCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOCDEXBranch').val(selected);
            return false;
        });
        $('.CPOBDBranchL,.CPOFDBranchL,.CPODABranchL,.CPOCEXBranchL,.CPOCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Cash Bank Transaction Double Expense-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Expense' != "") {
            $.each('@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Expense'.split(','), function (idx, val) {
                $(".CPOCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#CPOCDEXExpenses').val(CommonValue);
        }
        $(".CPOCDEXExpensesL").change(function () {
            $('#CPOCDEXExpenses').val('');
            var selected = "";
            $(".CPOCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#CPOCDEXExpenses').val(selected);
            return false;
        });
        $('.CPOCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });

        //-------------------------Cash Bank Transaction (JV) Users-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.User' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.User'.split(','), function (idx, val) {
                $(".COTBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.User' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.User'.split(','), function (idx, val) {
                $(".COTFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.User' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.User'.split(','), function (idx, val) {
                $(".COTDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.User' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.User'.split(','), function (idx, val) {
                $(".COTCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTCEXU').val(CommonValue);
        }CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.User' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.User'.split(','), function (idx, val) {
                $(".COTCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTCDEXU').val(CommonValue);
        }
        $(".COTBDUL").change(function () {
            $('#COTBDU').val('');
            var selected = "";
            $(".COTBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTBDU').val(selected);
            return false;
        });
        $(".COTFDUL").change(function () {
            $('#COTFDU').val('');
            var selected = "";
            $(".COTFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTFDU').val(selected);
            return false;
        });
        $(".COTDAUL").change(function () {
            $('#COTDAU').val('');
            var selected = "";
            $(".COTDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTDAU').val(selected);
            return false;
        });
        $(".COTCEXUL").change(function () {
            $('#COTCEXU').val('');
            var selected = "";
            $(".COTCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTCEXU').val(selected);
            return false;
        });
        $(".COTCDEXUL").change(function () {
            $('#COTCDEXU').val('');
            var selected = "";
            $(".COTCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTCDEXU').val(selected);
            return false;
        });
        $('.COTBDUL,.COTFDUL,.COTDAUL,.COTCEXUL,.COTCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Cash Bank Transaction (JV) Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Branch' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Branch'.split(','), function (idx, val) {
                $(".COTBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Branch' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Branch'.split(','), function (idx, val) {
                $(".COTFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Branch' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Branch'.split(','), function (idx, val) {
                $(".COTDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Branch' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Branch'.split(','), function (idx, val) {
                $(".COTCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTCEXBranch').val(CommonValue);
        }CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Branch' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Branch'.split(','), function (idx, val) {
                $(".COTCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTCDEXBranch').val(CommonValue);
        }
        $(".COTBDBranchL").change(function () {
            $('#COTBDBranch').val('');
            var selected = "";
            $(".COTBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTBDBranch').val(selected);
            return false;
        });
        $(".COTFDBranchL").change(function () {
            $('#COTFDBranch').val('');
            var selected = "";
            $(".COTFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTFDBranch').val(selected);
            return false;
        });
        $(".COTDABranchL").change(function () {
            $('#COTDABranch').val('');
            var selected = "";
            $(".COTDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTDABranch').val(selected);
            return false;
        });
        $(".COTCEXBranchL").change(function () {
            $('#COTCEXBranch').val('');
            var selected = "";
            $(".COTCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTCEXBranch').val(selected);
            return false;
        });
        $(".COTCDEXBranchL").change(function () {
            $('#COTCDEXBranch').val('');
            var selected = "";
            $(".COTCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTCDEXBranch').val(selected);
            return false;
        });
        $('.COTBDBranchL,.COTFDBranchL,.COTDABranchL,.COTCEXBranchL,.COTCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Cash Bank Transaction (JV) Double Expense-----------------------------------------
        CommonValue = "";
        if ('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Expense' != "") {
            $.each('@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Expense'.split(','), function (idx, val) {
                $(".COTCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#COTCDEXExpenses').val(CommonValue);
        }
        $(".COTCDEXExpensesL").change(function () {
            $('#COTCDEXExpenses').val('');
            var selected = "";
            $(".COTCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#COTCDEXExpenses').val(selected);
            return false;
        });
        $('.COTCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });

        //-------------------------Credit Purchase Users-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnBackDaysCreditPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnBackDaysCreditPurchase.User'.split(','), function (idx, val) {
                $(".PURBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.User'.split(','), function (idx, val) {
                $(".PURFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnDocAmountCreditPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnDocAmountCreditPurchase.User'.split(','), function (idx, val) {
                $(".PURDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnVendorCreditPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnVendorCreditPurchase.User'.split(','), function (idx, val) {
                $(".PURVRUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURVRU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnDoubleExpPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnDoubleExpPurchase.User'.split(','), function (idx, val) {
                $(".PURCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURCEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.User' != "") {
            $.each('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.User'.split(','), function (idx, val) {
                $(".PURCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURCDEXU').val(CommonValue);
        }
        $(".PURBDUL").change(function () {
            $('#PURBDU').val('');
            var selected = "";
            $(".PURBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURBDU').val(selected);
            return false;
        });
        $(".PURFDUL").change(function () {
            $('#PURFDU').val('');
            var selected = "";
            $(".PURFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURFDU').val(selected);
            return false;
        });
        $(".PURDAUL").change(function () {
            $('#PURDAU').val('');
            var selected = "";
            $(".PURDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURDAU').val(selected);
            return false;
        });
        $(".PURVRUL").change(function () {
            $('#PURVRU').val('');
            var selected = "";
            $(".PURVRUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURVRU').val(selected);
            return false;
        });
        $(".PURCEXUL").change(function () {
            $('#PURCEXU').val('');
            var selected = "";
            $(".PURCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURCEXU').val(selected);
            return false;
        });
        $(".PURCDEXUL").change(function () {
            $('#PURCDEXU').val('');
            var selected = "";
            $(".PURCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURCDEXU').val(selected);
            return false;
        });
        $('.PURBDUL,.PURFDUL,.PURDAUL,.PURVRUL,.PURCEXUL,.PURCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Credit Purchase Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Branch'.split(','), function (idx, val) {
                $(".PURBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Branch'.split(','), function (idx, val) {
                $(".PURFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Branch'.split(','), function (idx, val) {
                $(".PURDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnVendorCreditPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnVendorCreditPurchase.Branch'.split(','), function (idx, val) {
                $(".PURVRBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURVRBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnDoubleExpPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnDoubleExpPurchase.Branch'.split(','), function (idx, val) {
                $(".PURCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURCEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Branch' != "") {
            $.each('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Branch'.split(','), function (idx, val) {
                $(".PURCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURCDEXBranch').val(CommonValue);
        }
        $(".PURBDBranchL").change(function () {
            $('#PURBDBranch').val('');
            var selected = "";
            $(".PURBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURBDBranch').val(selected);
            return false;
        });
        $(".PURFDBranchL").change(function () {
            $('#PURFDBranch').val('');
            var selected = "";
            $(".PURFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURFDBranch').val(selected);
            return false;
        });
        $(".PURDABranchL").change(function () {
            $('#PURDABranch').val('');
            var selected = "";
            $(".PURDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURDABranch').val(selected);
            return false;
        });
        $(".PURVRBranchL").change(function () {
            $('#PURVRBranch').val('');
            var selected = "";
            $(".PURVRBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURVRBranch').val(selected);
            return false;
        });
        $(".PURCEXBranchL").change(function () {
            $('#PURCEXBranch').val('');
            var selected = "";
            $(".PURCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURCEXBranch').val(selected);
            return false;
        });
        $(".PURCDEXBranchL").change(function () {
            $('#PURCDEXBranch').val('');
            var selected = "";
            $(".PURCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURCDEXBranch').val(selected);
            return false;
        });
        $('.PURBDBranchL,.PURFDBranchL,.PURDABranchL,.PURVRBranchL,.PURCEXBranchL,.PURCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Credit Purchase Double Expenses-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Expense' != "") {
            $.each('@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Expense'.split(','), function (idx, val) {
                $(".PURCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURCDEXExpenses').val(CommonValue);
        }
        $(".PURCDEXExpensesL").change(function () {
            $('#PURCDEXExpenses').val('');
            var selected = "";
            $(".PURCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURCDEXExpenses').val(selected);
            return false;
        });
        $('.PURCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });

        //-------------------------Credit Purchase Vendor-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPurchaseNotification.trnVendorCreditPurchase.Vendor' != "") {
            $.each('@Model.creditPurchaseNotification.trnVendorCreditPurchase.Vendor'.split(','), function (idx, val) {
                $(".PURVRVendorL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PURVRVendor').val(CommonValue);
        }
        $(".PURVRVendorL").change(function () {
            $('#PURVRVendor').val('');
            var selected = "";
            $(".PURVRVendorL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PURVRVendor').val(selected);
            return false;
        });
        $('.PURVRVendorL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Vendor',
        });

        //-------------------------Creditor Payment Users-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnBackDaysCreditPayment.User' != "") {
            $.each('@Model.creditPaymentNotification.trnBackDaysCreditPayment.User'.split(','), function (idx, val) {
                $(".BPMBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnForwardDaysCreditPayment.User' != "") {
            $.each('@Model.creditPaymentNotification.trnForwardDaysCreditPayment.User'.split(','), function (idx, val) {
                $(".BPMFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnDocAmountCreditPayment.User' != "") {
            $.each('@Model.creditPaymentNotification.trnDocAmountCreditPayment.User'.split(','), function (idx, val) {
                $(".BPMDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnVendorCreditPayment.User' != "") {
            $.each('@Model.creditPaymentNotification.trnVendorCreditPayment.User'.split(','), function (idx, val) {
                $(".BPMVRUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMVRU').val(CommonValue);
        }
        $(".BPMBDUL").change(function () {
            $('#BPMBDU').val('');
            var selected = "";
            $(".BPMBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMBDU').val(selected);
            return false;
        });
        $(".BPMFDUL").change(function () {
            $('#BPMFDU').val('');
            var selected = "";
            $(".BPMFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMFDU').val(selected);
            return false;
        });
        $(".BPMDAUL").change(function () {
            $('#BPMDAU').val('');
            var selected = "";
            $(".BPMDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMDAU').val(selected);
            return false;
        });
        $(".BPMVRUL").change(function () {
            $('#BPMVRU').val('');
            var selected = "";
            $(".BPMVRUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMVRU').val(selected);
            return false;
        });
        $('.BPMBDUL,.BPMFDUL,.BPMDAUL,.BPMVRUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Creditor Payment Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnBackDaysCreditPayment.Branch' != "") {
            $.each('@Model.creditPaymentNotification.trnBackDaysCreditPayment.Branch'.split(','), function (idx, val) {
                $(".BPMBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnForwardDaysCreditPayment.Branch' != "") {
            $.each('@Model.creditPaymentNotification.trnForwardDaysCreditPayment.Branch'.split(','), function (idx, val) {
                $(".BPMFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnDocAmountCreditPayment.Branch' != "") {
            $.each('@Model.creditPaymentNotification.trnDocAmountCreditPayment.Branch'.split(','), function (idx, val) {
                $(".BPMDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnVendorCreditPayment.Branch' != "") {
            $.each('@Model.creditPaymentNotification.trnVendorCreditPayment.Branch'.split(','), function (idx, val) {
                $(".BPMVRBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMVRBranch').val(CommonValue);
        }
        $(".BPMBDBranchL").change(function () {
            $('#BPMBDBranch').val('');
            var selected = "";
            $(".BPMBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMBDBranch').val(selected);
            return false;
        });
        $(".BPMFDBranchL").change(function () {
            $('#BPMFDBranch').val('');
            var selected = "";
            $(".BPMFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMFDBranch').val(selected);
            return false;
        });
        $(".BPMDABranchL").change(function () {
            $('#BPMDABranch').val('');
            var selected = "";
            $(".BPMDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMDABranch').val(selected);
            return false;
        });
        $(".BPMVRBranchL").change(function () {
            $('#BPMVRBranch').val('');
            var selected = "";
            $(".BPMVRBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMVRBranch').val(selected);
            return false;
        });
        $('.BPMBDBranchL,.BPMFDBranchL,.BPMDABranchL,.BPMVRBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Creditor Payment Vendor-----------------------------------------
        CommonValue = "";
        if ('@Model.creditPaymentNotification.trnVendorCreditPayment.Vendor' != "") {
            $.each('@Model.creditPaymentNotification.trnVendorCreditPayment.Vendor'.split(','), function (idx, val) {
                $(".BPMVRVendorL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BPMVRVendor').val(CommonValue);
        }
        $(".BPMVRVendorL").change(function () {
            $('#BPMVRVendor').val('');
            var selected = "";
            $(".BPMVRVendorL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BPMVRVendor').val(selected);
            return false;
        });

        $('.BPMVRVendorL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Vendor',
        });

        //-------------------------Bank Receipt Users-----------------------------------------
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnBackDaysBankReceipt.User' != "") {
            $.each('@Model.bankReceiptNotification.trnBackDaysBankReceipt.User'.split(','), function (idx, val) {
                $(".BRCBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnForwardDaysBankReceipt.User' != "") {
            $.each('@Model.bankReceiptNotification.trnForwardDaysBankReceipt.User'.split(','), function (idx, val) {
                $(".BRCFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnDocAmountBankReceipt.User' != "") {
            $.each('@Model.bankReceiptNotification.trnDocAmountBankReceipt.User'.split(','), function (idx, val) {
                $(".BRCDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnPendingAdjustBankReceipt.User' != "") {
            $.each('@Model.bankReceiptNotification.trnPendingAdjustBankReceipt.User'.split(','), function (idx, val) {
                $(".BRCUAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCUAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.User' != "") {
            $.each('@Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.User'.split(','), function (idx, val) {
                $(".BRCFRUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCFRU').val(CommonValue);
        }
        $(".BRCBDUL").change(function () {
            $('#BRCBDU').val('');
            var selected = "";
            $(".BRCBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCBDU').val(selected);
            return false;
        });
        $(".BRCFDUL").change(function () {
            $('#BRCFDU').val('');
            var selected = "";
            $(".BRCFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCFDU').val(selected);
            return false;
        });
        $(".BRCDAUL").change(function () {
            $('#BRCDAU').val('');
            var selected = "";
            $(".BRCDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCDAU').val(selected);
            return false;
        });
        $(".BRCUAUL").change(function () {
            $('#BRCUAU').val('');
            var selected = "";
            $(".BRCUAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCUAU').val(selected);
            return false;
        });
        $(".BRCFRUL").change(function () {
            $('#BRCFRU').val('');
            var selected = "";
            $(".BRCFRUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCFRU').val(selected);
            return false;
        });
        $('.BRCBDUL,.BRCFDUL,.BRCDAUL,.BRCUAUL,.BRCFRUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Bank Receipt Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnBackDaysBankReceipt.Branch' != "") {
            $.each('@Model.bankReceiptNotification.trnBackDaysBankReceipt.Branch'.split(','), function (idx, val) {
                $(".BRCBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnForwardDaysBankReceipt.Branch' != "") {
            $.each('@Model.bankReceiptNotification.trnForwardDaysBankReceipt.Branch'.split(','), function (idx, val) {
                $(".BRCFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnDocAmountBankReceipt.Branch' != "") {
            $.each('@Model.bankReceiptNotification.trnDocAmountBankReceipt.Branch'.split(','), function (idx, val) {
                $(".BRCDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Branch' != "") {
            $.each('@Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Branch'.split(','), function (idx, val) {
                $(".BRCUABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCUABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Branch' != "") {
            $.each('@Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Branch'.split(','), function (idx, val) {
                $(".BRCFRBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#BRCFRBranch').val(CommonValue);
        }
        $(".BRCBDBranchL").change(function () {
            $('#BRCBDBranch').val('');
            var selected = "";
            $(".BRCBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCBDBranch').val(selected);
            return false;
        });
        $(".BRCFDBranchL").change(function () {
            $('#BRCFDBranch').val('');
            var selected = "";
            $(".BRCFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCFDBranch').val(selected);
            return false;
        });
        $(".BRCDABranchL").change(function () {
            $('#BRCDABranch').val('');
            var selected = "";
            $(".BRCDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCDABranch').val(selected);
            return false;
        });
        $(".BRCUABranchL").change(function () {
            $('#BRCUABranch').val('');
            var selected = "";
            $(".BRCUABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCUABranch').val(selected);
            return false;
        });
        $(".BRCFRBranchL").change(function () {
            $('#BRCFRBranch').val('');
            var selected = "";
            $(".BRCFRBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#BRCFRBranch').val(selected);
            return false;
        });
        $('.BRCBDBranchL,.BRCFDBranchL,.BRCDABranchL,.BRCUABranchL,.BRCFRBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });

        //-------------------------Trip Sheet Users-----------------------------------------
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnBackDaysTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnBackDaysTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPBDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPBDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnForwardDaysTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnForwardDaysTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPFDUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPFDU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnDocAmountTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnDocAmountTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPDAUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPDAU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnEtraExpTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnEtraExpTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPEEUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPEEU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnFmDateRangeTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnFmDateRangeTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPFMUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPFMU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnADVDateRangeTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnADVDateRangeTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPADVUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPADVU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnCCDateRangeTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnCCDateRangeTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPCCUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCCU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnDoubleExpTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnDoubleExpTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPCEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCEXU').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.User' != "") {
            $.each('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.User'.split(','), function (idx, val) {
                $(".TRIPCDEXUL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCDEXU').val(CommonValue);
        }
        $(".TRIPBDUL").change(function () {
            $('#TRIPBDU').val('');
            var selected = "";
            $(".TRIPBDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPBDU').val(selected);
            return false;
        });
        $(".TRIPFDUL").change(function () {
            $('#TRIPFDU').val('');
            var selected = "";
            $(".TRIPFDUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPFDU').val(selected);
            return false;
        });
        $(".TRIPDAUL").change(function () {
            $('#TRIPDAU').val('');
            var selected = "";
            $(".TRIPDAUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPDAU').val(selected);
            return false;
        });
        $(".TRIPEEUL").change(function () {
            $('#TRIPEEU').val('');
            var selected = "";
            $(".TRIPEEUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPEEU').val(selected);
            return false;
        });
        $(".TRIPFMUL").change(function () {
            $('#TRIPFMU').val('');
            var selected = "";
            $(".TRIPFMUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPFMU').val(selected);
            return false;
        });
        $(".TRIPADVUL").change(function () {
            $('#TRIPADVU').val('');
            var selected = "";
            $(".TRIPADVUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPADVU').val(selected);
            return false;
        });
        $(".TRIPCCUL").change(function () {
            $('#TRIPCCU').val('');
            var selected = "";
            $(".TRIPCCUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCCU').val(selected);
            return false;
        });
        $(".TRIPCEXUL").change(function () {
            $('#TRIPCEXU').val('');
            var selected = "";
            $(".TRIPCEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCEXU').val(selected);
            return false;
        });
        $(".TRIPCDEXUL").change(function () {
            $('#TRIPCDEXU').val('');
            var selected = "";
            $(".TRIPCDEXUL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCDEXU').val(selected);
            return false;
        });
        $('.TRIPBDUL,.TRIPFDUL,.TRIPDAUL,.TRIPEEUL,.TRIPFMUL,.TRIPADVUL,.TRIPCCUL,.TRIPCEXUL,.TRIPCDEXUL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Trip Sheet Branch-----------------------------------------
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnBackDaysTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnBackDaysTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPBDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPBDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnForwardDaysTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnForwardDaysTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPFDBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPFDBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnDocAmountTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnDocAmountTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPDABranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPDABranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnEtraExpTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnEtraExpTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPEEBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPEEBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnFmDateRangeTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnFmDateRangeTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPFMBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPFMBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnADVDateRangeTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnADVDateRangeTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPADVBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPADVBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnCCDateRangeTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnCCDateRangeTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPCCBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCCBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnDoubleExpTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnDoubleExpTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPCEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCEXBranch').val(CommonValue);
        }
        CommonValue = "";
        if ('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Branch' != "") {
            $.each('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Branch'.split(','), function (idx, val) {
                $(".TRIPCDEXBranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCDEXBranch').val(CommonValue);
        }
        $(".TRIPBDBranchL").change(function () {
            $('#TRIPBDBranch').val('');
            var selected = "";
            $(".TRIPBDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPBDBranch').val(selected);
            return false;
        });
        $(".TRIPFDBranchL").change(function () {
            $('#TRIPFDBranch').val('');
            var selected = "";
            $(".TRIPFDBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPFDBranch').val(selected);
            return false;
        });
        $(".TRIPDABranchL").change(function () {
            $('#TRIPDABranch').val('');
            var selected = "";
            $(".TRIPDABranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPDABranch').val(selected);
            return false;
        });
        $(".TRIPEEBranchL").change(function () {
            $('#TRIPEEBranch').val('');
            var selected = "";
            $(".TRIPEEBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPEEBranch').val(selected);
            return false;
        });
        $(".TRIPFMBranchL").change(function () {
            $('#TRIPFMBranch').val('');
            var selected = "";
            $(".TRIPFMBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPFMBranch').val(selected);
            return false;
        });
        $(".TRIPADVBranchL").change(function () {
            $('#TRIPADVBranch').val('');
            var selected = "";
            $(".TRIPADVBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPADVBranch').val(selected);
            return false;
        });
        $(".TRIPCCBranchL").change(function () {
            $('#TRIPCCBranch').val('');
            var selected = "";
            $(".TRIPCCBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCCBranch').val(selected);
            return false;
        });
        $(".TRIPCEXBranchL").change(function () {
            $('#TRIPCEXBranch').val('');
            var selected = "";
            $(".TRIPCEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCEXBranch').val(selected);
            return false;
        });
        $(".TRIPCDEXBranchL").change(function () {
            $('#TRIPCDEXBranch').val('');
            var selected = "";
            $(".TRIPCDEXBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCDEXBranch').val(selected);
            return false;
        });
        $('.TRIPBDBranchL,.TRIPFDBranchL,.TRIPDABranchL,.TRIPEEBranchL,.TRIPFMBranchL,.TRIPADVBranchL,.TRIPCCBranchL,.TRIPCEXBranchL,.TRIPCDEXBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Users',
        });

        //-------------------------Trip Sheet Double Expense-----------------------------------------
       CommonValue = "";
        if ('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Expense' != "") {
            $.each('@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Expense'.split(','), function (idx, val) {
                $(".TRIPCDEXExpensesL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#TRIPCDEXExpenses').val(CommonValue);
        }
        $(".TRIPCDEXExpensesL").change(function () {
            $('#TRIPCDEXExpenses').val('');
            var selected = "";
            $(".TRIPCDEXExpensesL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#TRIPCDEXExpenses').val(selected);
            return false;
        });
        $('.TRIPCDEXExpensesL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '150',
            numberDisplayed: 1,
            nonSelectedText: 'Select Expenses',
        });



        $("#VAARArrival,#VADSDispatch").keyup(function () {
            debugger;
            var OriginalContent = $(this).val();
            var Value = colon(OriginalContent);
            $(this).val(Value);
        });
        $("#VAARArrival,#VADSDispatch").blur(function (e) {
            var OriginalContent = $(this).val();
            if ($(this).val() == "" || $(this).val() == "0") {
                $(this).val("00:00");
            } else {
                var Value = $(this).val();
                if (Value.length > 2) {
                    var length = Value.length;
                    if (length == 3) {
                        Value += "00";
                    }
                    else if (length == 4) {
                        Value += "0";
                    }
                    else {
                        Value = Value.substring(0, 5);
                    }
                }
                var ssnRE = new RegExp('([01]?[0-9]|2[0-3]):[0-5][0-9]');
                if (!ssnRE.test(Value)) {
                    alert('Invalid Plese Enter Proper Format Eg.HH:MM');
                    $(this).val("00:00");
                } else {
                    $(this).val(Value);
                }
            }
        });

        $('#Submit').click(function (event) {
            event.preventDefault();
            debugger;
            var url = '@Url.Action("SaveData")';
            var ModelData = {};

            if ($("#CDBDN").is(":checked") == true || $("#CDBDE").is(":checked") == true)
            {
                if ($("#CDBDU").val() == null || $("#CDBDU").val() == "") {
                    alert('Please Select Consignment Back Days Users...!');
                    return;
                }
            };
            if ($("#CDFDN").is(":checked") == true || $("#CDFDE").is(":checked") == true) {
                if ($("#CDFDU").val() == null || $("#CDFDU").val() == "") {
                    alert('Please Select Consignment Forward Days Users...!');
                    return;
                }
            };
            if ($("#CDDVN").is(":checked") == true || $("#CDDVE").is(":checked") == true) {
                if ($("#CDDVU").val() == null || $("#CDDVU").val() == "") {
                    alert('Please Select Consignment Declare Value Users...!');
                    return;
                }
                if ($("#CDDVDeclareVal").val() == null || $("#CDDVDeclareVal").val() == "" || $("#CDDVDeclareVal").val() == "0" ) {
                    alert('Please Enter Consignment Declare Value...!');
                    return;
                }
            };
            if ($("#CDDSN").is(":checked") == true || $("#CDDSE").is(":checked") == true) {
                if ($("#CDDSU").val() == null || $("#CDDSU").val() == "") {
                    alert('Please Select Consignment Description Users...!');
                    return;
                }
                if ($("#CDDSDescription").val() == null || $("#CDDSDescription").val() == "") {
                    alert('Please Select Consignment Description...!');
                    return;
                }
            };
            if ($("#CDDVEN").is(":checked") == true || $("#CDDVEE").is(":checked") == true ) {

                if ($("#CDDVEU").val() == null || $("#CDDVEU").val() == "") {
                    alert('Please Select Consignment Eway Bill Users...!');
                    return;
                }
                if ($("#CDDVEDeclareVal").val() == null || $("#CDDVEDeclareVal").val() == "" || $("#CDDVEDeclareVal").val() == "0") {
                    alert('Please Enter Consignment Eway Bill Declare Value...!');
                    return;
                }
            };
            if ($("#LCBDN").is(":checked") == true || $("#LCBDE").is(":checked") == true) {
                if ($("#LCBDU").val() == null || $("#LCBDU").val() == "") {
                    alert('Please Select Lorry Challan Back Days Users...!');
                    return;
                }
            };
            if ($("#LCFDN").is(":checked") == true || $("#LCFDE").is(":checked") == true) {
                if ($("#LCFDU").val() == null || $("#LCFDU").val() == "") {
                    alert('Please Select Lorry Challan Forward Days Users...!');
                    return;
                }
            };
            if ($("#FMBDN").is(":checked") == true || $("#FMBDE").is(":checked") == true) {
                if ($("#FMBDU").val() == null || $("#FMBDU").val() == "") {
                    alert('Please Select Freight Memo Back Days Users...!');
                    return;
                }
            };
            if ($("#FMFDN").is(":checked") == true || $("#FMFDE").is(":checked") == true) {
                if ($("#FMFDU").val() == null || $("#FMFDU").val() == "") {
                    alert('Please Select Freight Memo Forward Days Users...!');
                    return;
                }
            };
            if ($("#FMDLN").is(":checked") == true || $("#FMDLE").is(":checked") == true) {
                if ($("#FMDLU").val() == null || $("#FMDLU").val() == "") {
                    alert('Please Select Freight Memo Driver Lic Users...!');
                    return;
                }
            };
            if ($("#FMDAN").is(":checked") == true || $("#FMDAE").is(":checked") == true) {
                if ($("#FMDAU").val() == null || $("#FMDAU").val() == "") {
                    alert('Please Select Freight Memo Doc Amount Users...!');
                    return;
                }
                if ($("#FMDADocAmt").val() == null || $("#FMDADocAmt").val() == "" || $("#FMDADocAmt").val() == "0") {
                    alert('Please Enter Freight Memo Doc Amount...!');
                    return;
                }
            };
            if ($("#FMBRN").is(":checked") == true || $("#FMBRE").is(":checked") == true) {
                if ($("#FMBRU").val() == null || $("#FMBRU").val() == "") {
                    alert('Please Select Freight Memo Broker Users...!');
                    return;
                }
                if ($("#FMBRBroker").val() == null || $("#FMBRBroker").val() == "") {
                    alert('Please Select Freight Memo Broker...!');
                    return;
                }
            };
            if ($("#FMVLN").is(":checked") == true || $("#FMVLE").is(":checked") == true) {
                if ($("#FMVLU").val() == null || $("#FMVLU").val() == "") {
                    alert('Please Select Freight Memo Vehicle Users...!');
                    return;
                }
                if ($("#FMVLVehicles").val() == null || $("#FMVLVehicles").val() == "") {
                    alert('Please Select Freight Memo Vehicle...!');
                    return;
                }
            };
            if ($("#VAARN").is(":checked") == true || $("#VAARE").is(":checked") == true) {
                if ($("#VAARU").val() == null || $("#VAARU").val() == "") {
                    alert('Please Select Vehicle Activity Arrival Users...!');
                    return;
                }
            };
            if ($("#VADSN").is(":checked") == true || $("#VADSE").is(":checked") == true) {
                if ($("#VADSU").val() == null || $("#VADSU").val() == "") {
                    alert('Please Select Vehicle Activity Dispatch Users...!');
                    return;
                }
            };
            if ($("#VAOLN").is(":checked") == true || $("#VAOLE").is(":checked") == true) {
                if ($("#VAOLU").val() == null || $("#VAOLU").val() == "") {
                    alert('Please Select Vehicle Activity Over-Load Users...!');
                    return;
                }
                if ($("#VAOLOvelloadKG").val() == null || $("#VAOLOvelloadKG").val() == "" || $("#VAOLOvelloadKG").val() == "0" ) {
                    alert('Please Enter Vehicle Activity Over-Load (KGs)...!');
                    return;
                }
            };
            if ($("#VACLN").is(":checked") == true || $("#VACLE").is(":checked") == true) {
                if ($("#VACLU").val() == null || $("#VACLU").val() == "") {
                    alert('Please Select Vehicle Activity Clear(Unload) Users...!');
                    return;
                }
            };
            if ($("#VAUNN").is(":checked") == true || $("#VAUNE").is(":checked") == true) {
                if ($("#VAUNU").val() == null || $("#VAUNU").val() == "") {
                    alert('Please Select Vehicle Activity Unload(Branch) Users...!');
                    return;
                }
            };
            if ($("#DLSTN").is(":checked") == true || $("#DLSTE").is(":checked") == true) {
                if ($("#DLSTU").val() == null || $("#DLSTU").val() == "") {
                    alert('Please Select Delivery Status Users...!');
                    return;
                }
                if ($("#DLSTStatus").val() == null || $("#DLSTStatus").val() == "") {
                    alert('Please Select Delivery Status...!');
                    return;
                }
            };
            if ($("#DLBRN").is(":checked") == true || $("#DLBRE").is(":checked") == true) {
                if ($("#DLBRU").val() == null || $("#DLBRU").val() == "") {
                    alert('Please Select Delivery Branch(Delivery) Users...!');
                    return;
                }
            };
            if ($("#PODBDN").is(":checked") == true || $("#PODBDE").is(":checked") == true) {
                if ($("#PODBDU").val() == null || $("#PODBDU").val() == "") {
                    alert('Please Select POD Back Days Users...!');
                    return;
                }
            };
            if ($("#PODFDN").is(":checked") == true || $("#PODFDE").is(":checked") == true) {
                if ($("#PODFDU").val() == null || $("#PODFDU").val() == "") {
                    alert('Please Select POD Forward Days Users...!');
                    return;
                }
            };
            if ($("#PODRCN").is(":checked") == true || $("#PODRCE").is(":checked") == true) {
                if ($("#PODRCU").val() == null || $("#PODRCU").val() == "") {
                    alert('Please Select POD Received Days Users...!');
                    return;
                }
            };
            if ($("#PODSDN").is(":checked") == true || $("#PODSDE").is(":checked") == true) {
                if ($("#PODSDU").val() == null || $("#PODSDU").val() == "") {
                    alert('Please Select POD Send Days Users...!');
                    return;
                }
            };
            if ($("#PODNDLN").is(":checked") == true || $("#PODNDLE").is(":checked") == true) {
                if ($("#PODNDLU").val() == null || $("#PODNDLU").val() == "") {
                    alert('Please Select POD NO-Delivery Users...!');
                    return;
                }
            };
            if ($("#BSBDN").is(":checked") == true || $("#BSBDE").is(":checked") == true) {
                if ($("#BSBDU").val() == null || $("#BSBDU").val() == "") {
                    alert('Please Select Bill Submission Back Days Users...!');
                    return;
                }
            };
            if ($("#BSFDN").is(":checked") == true || $("#BSFDE").is(":checked") == true) {
                if ($("#BSFDU").val() == null || $("#BSFDU").val() == "") {
                    alert('Please Select Bill Submission Forward Days Users...!');
                    return;
                }
            };
            if ($("#BSLSN").is(":checked") == true || $("#BSLSE").is(":checked") == true) {
                if ($("#BSLSU").val() == null || $("#BSLSU").val() == "") {
                    alert('Please Select Bill Late Submission Users...!');
                    return;
                }
            };
            if ($("#DAAUTHN").is(":checked") == true || $("#DAAUTHE").is(":checked") == true) {
                if ($("#DAAUTHU").val() == null || $("#DAAUTHU").val() == "") {
                    alert('Please Select Doc Authentication Users...!');
                    return;
                }
            };
            if ($("#FMPBDN").is(":checked") == true || $("#FMPBDE").is(":checked") == true) {
                if ($("#FMPBDU").val() == null || $("#FMPBDU").val() == "") {
                    alert('Please Select Advance Balance Payment Back Days Users...!');
                    return;
                }
            };
            if ($("#FMPFDN").is(":checked") == true || $("#FMPFDE").is(":checked") == true) {
                if ($("#FMPFDU").val() == null || $("#FMPFDU").val() == "") {
                    alert('Please Select Advance Balance Payment Forward Days Users...!');
                    return;
                }
            };
            if ($("#FMPEXN").is(":checked") == true || $("#FMPEXE").is(":checked") == true) {
                if ($("#FMPEXU").val() == null || $("#FMPEXU").val() == "") {
                    alert('Please Select Advance Balance Payment Expenses Users...!');
                    return;
                }
                if ($("#FMPEXExpenses").val() == null || $("#FMPEXExpenses").val() == "") {
                    alert('Please Select Advance Balance Payment Particular Charges...!');
                    return;
                }
            };
            if ($("#FMPCEXN").is(":checked") == true || $("#FMPCEXE").is(":checked") == true) {
                if ($("#FMPCEXU").val() == null || $("#FMPCEXU").val() == "") {
                    alert('Please Select Advance Balance Payment Double Exp Users...!');
                    return;
                }
            };
            if ($("#FMPCDEXN").is(":checked") == true || $("#FMPCDEXE").is(":checked") == true) {
                if ($("#FMPCDEXU").val() == null || $("#FMPCDEXU").val() == "") {
                    alert('Please Select Advance Balance Payment On Particular Expense Users...!');
                    return;
                }
                if ($("#FMPCDEXExpenses").val() == null || $("#FMPCDEXExpenses").val() == "") {
                    alert('Please Select Advance Balance Payment On Particular Expense...!');
                    return;
                }
            };
            if ($("#INVBDN").is(":checked") == true || $("#INVBDE").is(":checked") == true) {
                if ($("#INVBDU").val() == null || $("#INVBDU").val() == "") {
                    alert('Please Select Invoice Back Days Users...!');
                    return;
                }
            };
            if ($("#INVFDN").is(":checked") == true || $("#INVFDE").is(":checked") == true) {
                if ($("#INVFDU").val() == null || $("#INVFDU").val() == "") {
                    alert('Please Select Invoice Forward Days Users...!');
                    return;
                }
            };
            if ($("#INVDAN").is(":checked") == true || $("#INVDAE").is(":checked") == true) {
                if ($("#INVDAU").val() == null || $("#INVDAU").val() == "") {
                    alert('Please Select Invoice Doc Amount Users...!');
                    return;
                }
                if ($("#INVDADocAmt").val() == null || $("#INVDADocAmt").val() == "" || $("#INVDADocAmt").val() == "0" ) {
                    alert('Please Enter Invoice Doc Amount...!');
                    return;
                }
            };
            if ($("#INVZAN").is(":checked") == true || $("#INVZAE").is(":checked") == true) {
                if ($("#INVZAU").val() == null || $("#INVZAU").val() == "") {
                    alert('Please Select Invoice Zero Amount Users...!');
                    return;
                }
            };
            if ($("#INVOPN").is(":checked") == true || $("#INVOPE").is(":checked") == true) {
                if ($("#INVOPU").val() == null || $("#INVOPU").val() == "") {
                    alert('Please Select Invoice Other Party Users...!');
                    return;
                }
            };
            if ($("#INVCDN").is(":checked") == true || $("#INVCDE").is(":checked") == true) {
                if ($("#INVCDU").val() == null || $("#INVCDU").val() == "") {
                    alert('Please Select Invoice Consignment Users...!');
                    return;
                }
            };
            if ($("#INVPTN").is(":checked") == true || $("#INVPTE").is(":checked") == true) {
                if ($("#INVPTU").val() == null || $("#INVPTU").val() == "") {
                    alert('Please Select Invoice Party Users...!');
                    return;
                }
                if ($("#INVPTParty").val() == null || $("#INVPTParty").val() == "") {
                    alert('Please Select Invoice Party...!');
                    return;
                }
            };
            if ($("#INVCEXN").is(":checked") == true || $("#INVCEXE").is(":checked") == true) {
                if ($("#INVCEXU").val() == null || $("#INVCEXU").val() == "") {
                    alert('Please Select Invoice Double Exp Users...!');
                    return;
                }
            };
            if ($("#INVCDEXN").is(":checked") == true || $("#INVCDEXE").is(":checked") == true) {
                if ($("#INVCDEXU").val() == null || $("#INVCDEXU").val() == "") {
                    alert('Please Select Invoice On Particular Expense Users...!');
                    return;
                }
                if ($("#INVCDEXExpenses").val() == null || $("#INVCDEXExpenses").val() == "") {
                    alert('Please Select Invoice On Particular Expense...!');
                    return;
                }
            };
            if ($("#CPOBDN").is(":checked") == true || $("#CPOBDE").is(":checked") == true) {
                if ($("#CPOBDU").val() == null || $("#CPOBDU").val() == "") {
                    alert('Please Select Cash Bank Payment Back Days Users...!');
                    return;
                }
            };
            if ($("#CPOFDN").is(":checked") == true || $("#CPOFDE").is(":checked") == true) {
                if ($("#CPOFDU").val() == null || $("#CPOFDU").val() == "") {
                    alert('Please Select Cash Bank Payment Forward Days Users...!');
                    return;
                }
            };
            if ($("#CPODAN").is(":checked") == true || $("#CPODAE").is(":checked") == true) {
                if ($("#CPODAU").val() == null || $("#CPODAU").val() == "") {
                    alert('Please Select Cash Bank Payment Doc Amount Users...!');
                    return;
                }
                if ($("#CPODADocAmt").val() == null || $("#CPODADocAmt").val() == "" || $("#CPODADocAmt").val() == "0" ) {
                    alert('Please Enter Cash Bank Payment Doc Amount...!');
                    return;
                }
            };
            if ($("#CPOCEXN").is(":checked") == true || $("#CPOCEXE").is(":checked") == true) {
                if ($("#CPOCEXU").val() == null || $("#CPOCEXU").val() == "") {
                    alert('Please Select Cash Bank Payment Double Exp Users...!');
                    return;
                }
            };
            if ($("#CPOCDEXN").is(":checked") == true || $("#CPOCDEXE").is(":checked") == true) {
                if ($("#CPOCDEXU").val() == null || $("#CPOCDEXU").val() == "") {
                    alert('Please Select Cash Bank Payment On Particular Expense Users...!');
                    return;
                }
                if ($("#CPOCDEXExpenses").val() == null || $("#CPOCDEXExpenses").val() == "") {
                    alert('Please Select Cash Bank Payment On Particular Expense...!');
                    return;
                }
            };
            if ($("#COTBDN").is(":checked") == true || $("#COTBDE").is(":checked") == true) {
                if ($("#COTBDU").val() == null || $("#COTBDU").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) Back Days Users...!');
                    return;
                }
            };
            if ($("#COTFDN").is(":checked") == true || $("#COTFDE").is(":checked") == true) {
                if ($("#COTFDU").val() == null || $("#COTFDU").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) Back Days Users...!');
                    return;
                }
            };
            if ($("#COTDAN").is(":checked") == true || $("#COTDAE").is(":checked") == true) {
                if ($("#COTDAU").val() == null || $("#COTDAU").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) Doc Amount Users...!');
                    return;
                }
                if ($("#COTDADocAmt").val() == null || $("#COTDADocAmt").val() == "" || $("#COTDADocAmt").val() == "0") {
                    alert('Please Enter Cash Bank Payment(JV) Doc Amount...!');
                    return;
                }
            };
            if ($("#COTCEXN").is(":checked") == true || $("#COTCEXE").is(":checked") == true) {
                if ($("#COTCEXU").val() == null || $("#COTCEXU").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) Double Exp Users...!');
                    return;
                }
            };
            if ($("#COTCDEXN").is(":checked") == true || $("#COTCDEXE").is(":checked") == true) {
                if ($("#COTCDEXU").val() == null || $("#COTCDEXU").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) On Particular Expense Users...!');
                    return;
                }
                if ($("#COTCDEXExpenses").val() == null || $("#COTCDEXExpenses").val() == "") {
                    alert('Please Select Cash Bank Payment(JV) On Particular Expense...!');
                    return;
                }
            };
            if ($("#PURBDN").is(":checked") == true || $("#PURBDE").is(":checked") == true) {
                if ($("#PURBDU").val() == null || $("#PURBDU").val() == "") {
                    alert('Please Select Credit Purchase Back Days Users...!');
                    return;
                }
            };
            if ($("#PURFDN").is(":checked") == true || $("#PURFDE").is(":checked") == true) {
                if ($("#PURFDU").val() == null || $("#PURFDU").val() == "") {
                    alert('Please Select Credit Purchase Forward Days Users...!');
                    return;
                }
            };
            if ($("#PURDAN").is(":checked") == true || $("#PURDAE").is(":checked") == true) {
                if ($("#PURDAU").val() == null || $("#PURDAU").val() == "") {
                    alert('Please Select Credit Purchase Doc Amount Users...!');
                    return;
                }
                if ($("#PURDADocAmt").val() == null || $("#PURDADocAmt").val() == "" || $("#PURDADocAmt").val() == "0" ) {
                    alert('Please Enter Credit Purchase Doc Amount...!');
                    return;
                }
            };
            if ($("#PURVRN").is(":checked") == true || $("#PURVRE").is(":checked") == true) {
                if ($("#PURVRU").val() == null || $("#PURVRU").val() == "") {
                    alert('Please Select Credit Purchase Vendor Users...!');
                    return;
                }
                if ($("#PURVRVendor").val() == null || $("#PURVRVendor").val() == "") {
                    alert('Please Select Credit Purchase Vendor...!');
                    return;
                }
            };
            if ($("#PURCEXN").is(":checked") == true || $("#PURCEXE").is(":checked") == true) {
                if ($("#PURCEXU").val() == null || $("#PURCEXU").val() == "") {
                    alert('Please Select Credit Purchase Double Exp Users...!');
                    return;
                }
            };
            if ($("#PURCDEXN").is(":checked") == true || $("#PURCDEXE").is(":checked") == true) {
                if ($("#PURCDEXU").val() == null || $("#PURCDEXU").val() == "") {
                    alert('Please Select Credit Purchase On Particular Expense Users...!');
                    return;
                }
                if ($("#PURCDEXExpenses").val() == null || $("#PURCDEXExpenses").val() == "") {
                    alert('Please Select Credit Purchase On Particular Expense...!');
                    return;
                }
            };
            if ($("#BPMBDN").is(":checked") == true || $("#BPMBDE").is(":checked") == true) {
                if ($("#BPMBDU").val() == null || $("#BPMBDU").val() == "") {
                    alert('Please Select Creditor Payment Back Days Users...!');
                    return;
                }
            };
            if ($("#BPMFDN").is(":checked") == true || $("#BPMFDE").is(":checked") == true) {
                if ($("#BPMFDU").val() == null || $("#BPMFDU").val() == "") {
                    alert('Please Select Creditor Payment Forward Days Users...!');
                    return;
                }
            };
            if ($("#BPMDAN").is(":checked") == true || $("#BPMDAE").is(":checked") == true) {
                if ($("#BPMDAU").val() == null || $("#BPMDAU").val() == "") {
                    alert('Please Select Creditor Payment Doc Amount Users...!');
                    return;
                }
                if ($("#BPMDADocAmt").val() == null || $("#BPMDADocAmt").val() == "" || $("#BPMDADocAmt").val() == "0" ) {
                    alert('Please Enter Creditor Payment Doc Amount...!');
                    return;
                }
            };
            if ($("#BPMVRN").is(":checked") == true || $("#BPMVRE").is(":checked") == true) {
                if ($("#BPMVRU").val() == null || $("#BPMVRU").val() == "") {
                    alert('Please Select Creditor Payment Vendor Users...!');
                    return;
                }
                if ($("#BPMVRVendor").val() == null || $("#BPMVRVendor").val() == "") {
                    alert('Please Select Creditor Payment Vendor...!');
                    return;
                }
            };
            if ($("#BRCBDN").is(":checked") == true || $("#BRCBDE").is(":checked") == true) {
                if ($("#BRCBDU").val() == null || $("#BRCBDU").val() == "") {
                    alert('Please Select Bank Receipt Back Days Users...!');
                    return;
                }
            };
            if ($("#BRCFDN").is(":checked") == true || $("#BRCFDE").is(":checked") == true) {
                if ($("#BRCFDU").val() == null || $("#BRCFDU").val() == "") {
                    alert('Please Select Bank Receipt Forward Days Users...!');
                    return;
                }
            };
            if ($("#BRCDAN").is(":checked") == true || $("#BRCDAE").is(":checked") == true) {
                if ($("#BRCDAU").val() == null || $("#BRCDAU").val() == "") {
                    alert('Please Select Bank Receipt Doc Amount Users...!');
                    return;
                }
                if ($("#BRCDADocAmt").val() == null || $("#BRCDADocAmt").val() == "" || $("#BRCDADocAmt").val() == "0" ) {
                    alert('Please Enter Bank Receipt Doc Amount...!');
                    return;
                }
            };
            if ($("#BRCUAN").is(":checked") == true || $("#BRCUAE").is(":checked") == true) {
                if ($("#BRCUAU").val() == null || $("#BRCUAU").val() == "") {
                    alert('Please Select Bank Receipt UnAdjust Users...!');
                    return;
                }
            };
            if ($("#BRCFRN").is(":checked") == true || $("#BRCFRE").is(":checked") == true) {
                if ($("#BRCFRU").val() == null || $("#BRCFRU").val() == "") {
                    alert('Please Select Bank Receipt Freight Rebate Users...!');
                    return;
                }
                if ($("#BRCFRFreightRebate").val() == null || $("#BRCFRFreightRebate").val() == "" || $("#BRCFRFreightRebate").val() == "0" ) {
                    alert('Please Enter Bank Receipt Freight Rebate Amount...!');
                    return;
                }
            };
            if ($("#TRIPBDN").is(":checked") == true || $("#TRIPBDE").is(":checked") == true) {
                if ($("#TRIPBDU").val() == null || $("#TRIPBDU").val() == "") {
                    alert('Please Select Trip Sheet Back Days Users...!');
                    return;
                }
            };
            if ($("#TRIPFDN").is(":checked") == true || $("#TRIPFDE").is(":checked") == true) {
                if ($("#TRIPFDU").val() == null || $("#TRIPFDU").val() == "") {
                    alert('Please Select Trip Sheet Forward Days Users...!');
                    return;
                }
            };
            if ($("#TRIPDAN").is(":checked") == true || $("#TRIPDAE").is(":checked") == true) {
                if ($("#TRIPDAU").val() == null || $("#TRIPDAU").val() == "") {
                    alert('Please Select Trip Sheet Doc Amount Users...!');
                    return;
                }
                if ($("#TRIPDADocAmt").val() == null || $("#TRIPDADocAmt").val() == "" || $("#TRIPDADocAmt").val() == "0" ) {
                    alert('Please Enter Trip Sheet Doc Amount...!');
                    return;
                }
            };
            if ($("#TRIPEEN").is(":checked") == true || $("#TRIPEEE").is(":checked") == true) {
                if ($("#TRIPEEU").val() == null || $("#TRIPEEU").val() == "") {
                    alert('Please Select Trip Sheet Extra Exp Users...!');
                    return;
                }
                if ($("#TRIPEEExtraExpAmt").val() == null || $("#TRIPEEExtraExpAmt").val() == "" || $("#TRIPEEExtraExpAmt").val() == "0" ) {
                    alert('Please Enter Trip Sheet Extra Exp...!');
                    return;
                }
            };
            if ($("#TRIPFMN").is(":checked") == true || $("#TRIPFME").is(":checked") == true) {
                if ($("#TRIPFMU").val() == null || $("#TRIPFMU").val() == "") {
                    alert('Please Select Trip Sheet Freight Memo Users...!');
                    return;
                }
            };
            if ($("#TRIPADVN").is(":checked") == true || $("#TRIPADVE").is(":checked") == true) {
                if ($("#TRIPADVU").val() == null || $("#TRIPADVU").val() == "") {
                    alert('Please Select Trip Sheet Advance Users...!');
                    return;
                }
            };
            if ($("#TRIPCCN").is(":checked") == true || $("#TRIPCCE").is(":checked") == true) {
                if ($("#TRIPCCU").val() == null || $("#TRIPCCU").val() == "") {
                    alert('Please Select Trip Sheet Cost Center Users...!');
                    return;
                }
            };
            if ($("#TRIPCEXN").is(":checked") == true || $("#TRIPCEXE").is(":checked") == true) {
                if ($("#TRIPCEXU").val() == null || $("#TRIPCEXU").val() == "") {
                    alert('Please Select Trip Sheet Double Exp Users...!');
                    return;
                }
            };
            if ($("#TRIPCDEXN").is(":checked") == true || $("#TRIPCDEXE").is(":checked") == true) {
                if ($("#TRIPCDEXU").val() == null || $("#TRIPCDEXU").val() == "") {
                    alert('Please Select Trip Sheet On Particular Expense Users...!');
                    return;
                }
                if ($("#TRIPCDEXExpenses").val() == null || $("#TRIPCDEXExpenses").val() == "") {
                    alert('Please Select Trip Sheet On Particular Expense...!');
                    return;
                }
            };

            //Consignment
            {
                var consignmentNotification = {};
                var trnBackDaysConsignment = {
                    Nofitication: $("#CDBDN").is(":checked"),
                    Email: $("#CDBDE").is(":checked"),
                    Priority: $("#CDBDP").is(":checked"),
                    EnteredBy: $("#CDBDSelf").is(":checked"),
                    User: $("#CDBDU").val(),
                    Branch: $("#CDBDBranch").val(),
                    BackDays: $("#CDBDDays").val(),
                };
                var trnForwardDaysConsignment = {
                    Nofitication: $("#CDFDN").is(":checked"),
                    Email: $("#CDFDE").is(":checked"),
                    Priority: $("#CDFDP").is(":checked"),
                    EnteredBy: $("#CDFDSelf").is(":checked"),
                    User: $("#CDFDU").val(),
                    Branch: $("#CDFDBranch").val(),
                    ForwardDays: $("#CDFDDays").val(),
                };
                var trnDeclareValueConsignment = {
                    Nofitication: $("#CDDVN").is(":checked"),
                    Email: $("#CDDVE").is(":checked"),
                    Priority: $("#CDDVE").is(":checked"),
                    EnteredBy: $("#CDDVSelf").is(":checked"),
                    User: $("#CDDVU").val(),
                    Branch: $("#CDDVBranch").val(),
                    DeclareValue: $("#CDDVDeclareVal").val(),
                };
                var trnDescriptionConsignment = {
                    Nofitication: $("#CDDSN").is(":checked"),
                    Email: $("#CDDSE").is(":checked"),
                    Priority: $("#CDDSP").is(":checked"),
                    EnteredBy: $("#CDDSSelf").is(":checked"),
                    User: $("#CDDSU").val(),
                    Branch: $("#CDDSBranch").val(),
                    MDescription: $("#CDDSDescription").val(),
                };
                var trnDeclareValueEwaybillConsignment = {
                    Nofitication: $("#CDDVEN").is(":checked"),
                    Email: $("#CDDVEE").is(":checked"),
                    Priority: $("#CDDVEP").is(":checked"),
                    EnteredBy: $("#CDDVESelf").is(":checked"),
                    User: $("#CDDVEU").val(),
                    Branch: $("#CDDVEBranch").val(),
                    DeclareValue: $("#CDDVEDeclareVal").val(),
                };
                consignmentNotification["trnBackDaysConsignment"] = trnBackDaysConsignment;
                consignmentNotification["trnForwardDaysConsignment"] = trnForwardDaysConsignment;
                consignmentNotification["trnDeclareValueConsignment"] = trnDeclareValueConsignment;
                consignmentNotification["trnDescriptionConsignment"] = trnDescriptionConsignment;
                consignmentNotification["trnDeclareValueEwaybillConsignment"] = trnDeclareValueEwaybillConsignment;
                ModelData["consignmentNotification"] = consignmentNotification;
            }
            //Lorry Challan
            {
                var lorryChallanNotification = {};
                var trnBackDaysLorryChallan = {
                    Nofitication: $("#LCBDN").is(":checked"),
                    Email: $("#LCBDE").is(":checked"),
                    Priority: $("#LCBDP").is(":checked"),
                    EnteredBy: $("#LCBDSelf").is(":checked"),
                    User: $("#LCBDU").val(),
                    Branch: $("#LCBDBranch").val(),
                    BackDays: $("#LCBDDays").val(),
                };
                var trnForwardDaysLorryChallan = {
                    Nofitication: $("#LCFDN").is(":checked"),
                    Email: $("#LCFDE").is(":checked"),
                    Priority: $("#LCFDP").is(":checked"),
                    EnteredBy: $("#LCFDSelf").is(":checked"),
                    User: $("#LCFDU").val(),
                    Branch: $("#LCFDBranch").val(),
                    ForwardDays: $("#LCFDDays").val(),
                };
                lorryChallanNotification["trnBackDaysLorryChallan"] = trnBackDaysLorryChallan;
                lorryChallanNotification["trnForwardDaysLorryChallan"] = trnForwardDaysLorryChallan;
                ModelData["lorryChallanNotification"] = lorryChallanNotification;
            }
            //Freight Memo
            {
                var freightMemoNotification = {};
                var trnBackDaysFreightMemo = {
                    Nofitication: $("#FMBDN").is(":checked"),
                    Email: $("#FMBDE").is(":checked"),
                    Priority: $("#FMBDP").is(":checked"),
                    EnteredBy: $("#FMBDSelf").is(":checked"),
                    User: $("#FMBDU").val(),
                    Branch: $("#FMBDBranch").val(),
                    BackDays: $("#FMBDDays").val(),
                };
                var trnForwardDaysFreightMemo = {
                    Nofitication: $("#FMFDN").is(":checked"),
                    Email: $("#FMFDE").is(":checked"),
                    Priority: $("#FMFDP").is(":checked"),
                    EnteredBy: $("#FMFDSelf").is(":checked"),
                    User: $("#FMFDU").val(),
                    Branch: $("#FMFDBranch").val(),
                    ForwardDays: $("#FMFDDays").val(),
                };
                var trnDriverLicExpFreightMemo = {
                    Nofitication: $("#FMDLN").is(":checked"),
                    Email: $("#FMDLE").is(":checked"),
                    Priority: $("#FMDLP").is(":checked"),
                    EnteredBy: $("#FMDLSelf").is(":checked"),
                    User: $("#FMDLU").val(),
                    Branch: $("#FMDLBranch").val(),
                };
                var trnDocAmtFreightMemo = {
                    Nofitication: $("#FMDAN").is(":checked"),
                    Email: $("#FMDAE").is(":checked"),
                    Priority: $("#FMDAP").is(":checked"),
                    EnteredBy: $("#FMDASelf").is(":checked"),
                    User: $("#FMDAU").val(),
                    Branch: $("#FMDABranch").val(),
                    DocAmount: $("#FMDADocAmt").val(),
                };
                var trnBrokerFreightMemo = {
                    Nofitication: $("#FMBRN").is(":checked"),
                    Email: $("#FMBRE").is(":checked"),
                    Priority: $("#FMBRP").is(":checked"),
                    EnteredBy: $("#FMBRSelf").is(":checked"),
                    User: $("#FMBRU").val(),
                    Branch: $("#FMBRBranch").val(),
                    Broker: $("#FMBRBroker").val(),
                };
                var trnVehicleFreightMemo = {
                    Nofitication: $("#FMVLN").is(":checked"),
                    Email: $("#FMVLE").is(":checked"),
                    Priority: $("#FMVLP").is(":checked"),
                    EnteredBy: $("#FMVLSelf").is(":checked"),
                    User: $("#FMVLU").val(),
                    Branch: $("#FMVLBranch").val(),
                    Vehicle: $("#FMVLVehicles").val(),
                };
                freightMemoNotification["trnBackDaysFreightMemo"] = trnBackDaysFreightMemo;
                freightMemoNotification["trnForwardDaysFreightMemo"] = trnForwardDaysFreightMemo;
                freightMemoNotification["trnDriverLicExpFreightMemo"] = trnDriverLicExpFreightMemo;
                freightMemoNotification["trnDocAmtFreightMemo"] = trnDocAmtFreightMemo;
                freightMemoNotification["trnBrokerFreightMemo"] = trnBrokerFreightMemo;
                freightMemoNotification["trnVehicleFreightMemo"] = trnVehicleFreightMemo;
                ModelData["freightMemoNotification"] = freightMemoNotification;
            }
            //VEHICLE ACTIVITY
            {
                var vehicleActivityNotification = {};
                var trnArrivalDaysVehicleActivity = {
                    Nofitication: $("#VAARN").is(":checked"),
                    Email: $("#VAARE").is(":checked"),
                    Priority: $("#VAARP").is(":checked"),
                    EnteredBy: $("#VAARSelf").is(":checked"),
                    User: $("#VAARU").val(),
                    Branch: $("#VAARBranch").val(),
                    ArrivalDays: $("#VAARArrival").val(),
                };
                var trnDispatchDaysVehicleActivity = {
                    Nofitication: $("#VADSN").is(":checked"),
                    Email: $("#VADSE").is(":checked"),
                    Priority: $("#VADSP").is(":checked"),
                    EnteredBy: $("#VADSSelf").is(":checked"),
                    User: $("#VADSU").val(),
                    Branch: $("#VADSBranch").val(),
                    DispatchDays: $("#VADSDispatch").val(),
                };
                var trnOverloadVehicleActivity = {
                    Nofitication: $("#VAOLN").is(":checked"),
                    Email: $("#VAOLE").is(":checked"),
                    Priority: $("#VAOLP").is(":checked"),
                    EnteredBy: $("#VAOLSelf").is(":checked"),
                    User: $("#VAOLU").val(),
                    Branch: $("#VAOLBranch").val(),
                    OverloadinKg: $("#VAOLOvelloadKG").val(),
                };
                var trnClearVehicleActivity = {
                    Nofitication: $("#VACLN").is(":checked"),
                    Email: $("#VACLE").is(":checked"),
                    Priority: $("#VACLP").is(":checked"),
                    EnteredBy: $("#VACLSelf").is(":checked"),
                    User: $("#VACLU").val(),
                    Branch: $("#VACLBranch").val(),
                };
                var trnUnloadVehicleActivity = {
                    Nofitication: $("#VAUNN").is(":checked"),
                    Email: $("#VAUNE").is(":checked"),
                    Priority: $("#VAUNP").is(":checked"),
                    EnteredBy: $("#VAUNSelf").is(":checked"),
                    User: $("#VAUNU").val(),
                    Branch: $("#VAUNBranch").val(),
                };
                vehicleActivityNotification["trnArrivalDaysVehicleActivity"] = trnArrivalDaysVehicleActivity;
                vehicleActivityNotification["trnDispatchDaysVehicleActivity"] = trnDispatchDaysVehicleActivity;
                vehicleActivityNotification["trnOverloadVehicleActivity"] = trnOverloadVehicleActivity;
                vehicleActivityNotification["trnClearVehicleActivity"] = trnClearVehicleActivity;
                vehicleActivityNotification["trnUnloadVehicleActivity"] = trnUnloadVehicleActivity;
                ModelData["vehicleActivityNotification"] = vehicleActivityNotification;
            }
            //Delivery
            {
                var deliveryNotification = {};
                var trnStatusDelivery = {
                    Nofitication: $("#DLSTN").is(":checked"),
                    Email: $("#DLSTE").is(":checked"),
                    Priority: $("#DLSTP").is(":checked"),
                    EnteredBy: $("#DLSTSelf").is(":checked"),
                    User: $("#DLSTU").val(),
                    Branch: $("#DLSTBranch").val(),
                    Status: $("#DLSTStatus").val(),
                };
                var trnAnotherBranchDelivery = {
                    Nofitication: $("#DLBRN").is(":checked"),
                    Email: $("#DLBRE").is(":checked"),
                    Priority: $("#DLBRP").is(":checked"),
                    EnteredBy: $("#DLBRSelf").is(":checked"),
                    User: $("#DLBRU").val(),
                    Branch: $("#DLBRBranch").val(),
                };
                deliveryNotification["trnStatusDelivery"] = trnStatusDelivery;
                deliveryNotification["trnAnotherBranchDelivery"] = trnAnotherBranchDelivery;
                ModelData["deliveryNotification"] = deliveryNotification;
            }
            //POD
            {
                var pODNotification = {};
                var trnBackDaysPOD = {
                    Nofitication: $("#PODBDN").is(":checked"),
                    Email: $("#PODBDE").is(":checked"),
                    Priority: $("#PODBDP").is(":checked"),
                    EnteredBy: $("#PODBDSelf").is(":checked"),
                    User: $("#PODBDU").val(),
                    Branch: $("#PODBDBranch").val(),
                    BackDays: $("#PODBDDays").val(),
                };
                var trnForwardDaysPOD = {
                    Nofitication: $("#PODFDN").is(":checked"),
                    Email: $("#PODFDE").is(":checked"),
                    Priority: $("#PODFDP").is(":checked"),
                    EnteredBy: $("#PODFDSelf").is(":checked"),
                    User: $("#PODFDU").val(),
                    Branch: $("#PODFDBranch").val(),
                    ForwardDays: $("#PODFDDays").val(),
                };
                var trnReceivedDaysPOD = {
                    Nofitication: $("#PODRCN").is(":checked"),
                    Email: $("#PODRCE").is(":checked"),
                    Priority: $("#PODRCP").is(":checked"),
                    EnteredBy: $("#PODRCSelf").is(":checked"),
                    User: $("#PODRCU").val(),
                    Branch: $("#PODRCBranch").val(),
                    ReceivedDays: $("#PODRCDays").val(),
                };
                var trnSendDaysPOD = {
                    Nofitication: $("#PODSDN").is(":checked"),
                    Email: $("#PODSDE").is(":checked"),
                    Priority: $("#PODSDP").is(":checked"),
                    EnteredBy: $("#PODSDSelf").is(":checked"),
                    User: $("#PODSDU").val(),
                    Branch: $("#PODSDBranch").val(),
                    SendDays: $("#PODSDDays").val(),
                };
                var trnSelectNoDeliveryPOD = {
                    Nofitication: $("#PODNDLN").is(":checked"),
                    Email: $("#PODNDLE").is(":checked"),
                    Priority: $("#PODNDLP").is(":checked"),
                    EnteredBy: $("#PODNDLSelf").is(":checked"),
                    User: $("#PODNDLU").val(),
                    Branch: $("#PODNDLBranch").val(),
                };
                pODNotification["trnBackDaysPOD"] = trnBackDaysPOD;
                pODNotification["trnForwardDaysPOD"] = trnForwardDaysPOD;
                pODNotification["trnReceivedDaysPOD"] = trnReceivedDaysPOD;
                pODNotification["trnSendDaysPOD"] = trnSendDaysPOD;
                pODNotification["trnSelectNoDeliveryPOD"] = trnSelectNoDeliveryPOD;
                ModelData["pODNotification"] = pODNotification;
            }
            //Bill Submission
            {
                var billSubmissionNotification = {};
                var trnBackDaysBillSubmission = {
                    Nofitication: $("#BSBDN").is(":checked"),
                    Email: $("#BSBDE").is(":checked"),
                    Priority: $("#BSBDP").is(":checked"),
                    EnteredBy: $("#BSBDSelf").is(":checked"),
                    User: $("#BSBDU").val(),
                    Branch: $("#BSBDBranch").val(),
                    BackDays: $("#BSBDDays").val(),
                };
                var trnForwardDaysBillSubmission = {
                    Nofitication: $("#BSFDN").is(":checked"),
                    Email: $("#BSFDE").is(":checked"),
                    Priority: $("#BSFDP").is(":checked"),
                    EnteredBy: $("#BSFDSelf").is(":checked"),
                    User: $("#BSFDU").val(),
                    Branch: $("#BSFDBranch").val(),
                    ForwardDays: $("#BSFDDays").val(),
                };
                var trnLateDaysBillSubmission = {
                    Nofitication: $("#BSLSN").is(":checked"),
                    Email: $("#BSLSE").is(":checked"),
                    Priority: $("#BSLSP").is(":checked"),
                    EnteredBy: $("#BSLSSelf").is(":checked"),
                    User: $("#BSLSU").val(),
                    Branch: $("#BSLSBranch").val(),
                    LateDays: $("#BSLSDays").val(),
                };
                billSubmissionNotification["trnBackDaysBillSubmission"] = trnBackDaysBillSubmission;
                billSubmissionNotification["trnForwardDaysBillSubmission"] = trnForwardDaysBillSubmission;
                billSubmissionNotification["trnLateDaysBillSubmission"] = trnLateDaysBillSubmission;
                ModelData["billSubmissionNotification"] = billSubmissionNotification;
            }
            //Doc Authentication
            {
                var docAuthenticateNotification = {};
                var trnAuthenticateDaysDocAuthenticate = {
                    Nofitication: $("#DAAUTHN").is(":checked"),
                    Email: $("#DAAUTHE").is(":checked"),
                    Priority: $("#DAAUTHP").is(":checked"),
                    EnteredBy: $("#DAAUTHSelf").is(":checked"),
                    User: $("#DAAUTHU").val(),
                    Branch: $("#DAAUTHBranch").val(),
                    AuthDays: $("#DAAUTHDays").val(),
                };
                docAuthenticateNotification["trnAuthenticateDaysDocAuthenticate"] = trnAuthenticateDaysDocAuthenticate;
                ModelData["docAuthenticateNotification"] = docAuthenticateNotification;
            }
            //Advance-Balance Payment(FMP)
            {
                var advBalPaymentNotification = {};
                var trnBackDaysAdvBalPayment = {
                    Nofitication: $("#FMPBDN").is(":checked"),
                    Email: $("#FMPBDE").is(":checked"),
                    Priority: $("#FMPBDP").is(":checked"),
                    EnteredBy: $("#FMPBDSelf").is(":checked"),
                    User: $("#FMPBDU").val(),
                    Branch: $("#FMPBDBranch").val(),
                    BackDays: $("#FMPBDDays").val(),
                };
                var trnForwardDaysAdvBalPayment = {
                    Nofitication: $("#FMPFDN").is(":checked"),
                    Email: $("#FMPFDE").is(":checked"),
                    Priority: $("#FMPFDP").is(":checked"),
                    EnteredBy: $("#FMPFDSelf").is(":checked"),
                    User: $("#FMPFDU").val(),
                    Branch: $("#FMPFDBranch").val(),
                    ForwardDays: $("#FMPFDDays").val(),
                };
                var trnExpensesAdvBalPayment = {
                    Nofitication: $("#FMPEXN").is(":checked"),
                    Email: $("#FMPEXE").is(":checked"),
                    Priority: $("#FMPEXP").is(":checked"),
                    EnteredBy: $("#FMPEXSelf").is(":checked"),
                    User: $("#FMPEXU").val(),
                    Branch: $("#FMPEXBranch").val(),
                    Expense: $("#FMPEXExpenses").val(),
                };
                var trnDoubleExpAdvBalPayment = {
                    Nofitication: $("#FMPCEXN").is(":checked"),
                    Email: $("#FMPCEXE").is(":checked"),
                    Priority: $("#FMPCEXP").is(":checked"),
                    EnteredBy: $("#FMPCEXSelf").is(":checked"),
                    User: $("#FMPCEXU").val(),
                    Branch: $("#FMPCEXBranch").val(),
                };
                var trnParticularDoubleExpAdvBalPayment = {
                    Nofitication: $("#FMPCDEXN").is(":checked"),
                    Email: $("#FMPCDEXE").is(":checked"),
                    Priority: $("#FMPCDEXP").is(":checked"),
                    EnteredBy: $("#FMPCDEXSelf").is(":checked"),
                    User: $("#FMPCDEXU").val(),
                    Branch: $("#FMPCDEXBranch").val(),
                    Expense: $("#FMPCDEXExpenses").val(),
                };
                advBalPaymentNotification["trnBackDaysAdvBalPayment"] = trnBackDaysAdvBalPayment;
                advBalPaymentNotification["trnForwardDaysAdvBalPayment"] = trnForwardDaysAdvBalPayment;
                advBalPaymentNotification["trnExpensesAdvBalPayment"] = trnExpensesAdvBalPayment;
                advBalPaymentNotification["trnDoubleExpAdvBalPayment"] = trnDoubleExpAdvBalPayment;
                advBalPaymentNotification["trnParticularDoubleExpAdvBalPayment"] = trnParticularDoubleExpAdvBalPayment;
                ModelData["advBalPaymentNotification"] = advBalPaymentNotification;
            }
            //Invoice(SLR/SLW/CMM)
            {
                var billNotification = {};
                var trnBackDaysBill = {
                    Nofitication: $("#INVBDN").is(":checked"),
                    Email: $("#INVBDE").is(":checked"),
                    Priority: $("#INVBDP").is(":checked"),
                    EnteredBy: $("#INVBDSelf").is(":checked"),
                    User: $("#INVBDU").val(),
                    Branch: $("#INVBDBranch").val(),
                    BackDays: $("#INVBDDays").val(),
                };
                var trnForwardDaysBill = {
                    Nofitication: $("#INVFDN").is(":checked"),
                    Email: $("#INVFDE").is(":checked"),
                    Priority: $("#INVFDP").is(":checked"),
                    EnteredBy: $("#INVFDSelf").is(":checked"),
                    User: $("#INVFDU").val(),
                    Branch: $("#INVFDBranch").val(),
                    ForwardDays: $("#INVFDDays").val(),
                };
                var trnDocAmountBill = {
                    Nofitication: $("#INVDAN").is(":checked"),
                    Email: $("#INVDAE").is(":checked"),
                    Priority: $("#INVDAP").is(":checked"),
                    EnteredBy: $("#INVDASelf").is(":checked"),
                    User: $("#INVDAU").val(),
                    Branch: $("#INVDABranch").val(),
                    DocAmount: $("#INVDADocAmt").val(),
                };
                var trnZeroAmountBill = {
                    Nofitication: $("#INVZAN").is(":checked"),
                    Email: $("#INVZAE").is(":checked"),
                    Priority: $("#INVZAP").is(":checked"),
                    EnteredBy: $("#INVZASelf").is(":checked"),
                    User: $("#INVZAU").val(),
                    Branch: $("#INVZABranch").val(),
                };
                var trnOtherPartyBill = {
                    Nofitication: $("#INVOPN").is(":checked"),
                    Email: $("#INVOPE").is(":checked"),
                    Priority: $("#INVOPP").is(":checked"),
                    EnteredBy: $("#INVOPSelf").is(":checked"),
                    User: $("#INVOPU").val(),
                    Branch: $("#INVOPBranch").val(),
                };
                var trnConsignmentBill = {
                    Nofitication: $("#INVCDN").is(":checked"),
                    Email: $("#INVCDE").is(":checked"),
                    Priority: $("#INVCDP").is(":checked"),
                    EnteredBy: $("#INVCDSelf").is(":checked"),
                    User: $("#INVCDU").val(),
                    Branch: $("#INVCDBranch").val(),
                    Days: $("#INVCDDays").val(),
                };
                var trnPartyBill = {
                    Nofitication: $("#INVPTN").is(":checked"),
                    Email: $("#INVPTE").is(":checked"),
                    Priority: $("#INVPTP").is(":checked"),
                    EnteredBy: $("#INVPTSelf").is(":checked"),
                    User: $("#INVPTU").val(),
                    Branch: $("#INVPTBranch").val(),
                    Party: $("#INVPTParty").val(),
                };
                var trnDoubleExpBill = {
                    Nofitication: $("#INVCEXN").is(":checked"),
                    Email: $("#INVCEXE").is(":checked"),
                    Priority: $("#INVCEXP").is(":checked"),
                    EnteredBy: $("#INVCEXSelf").is(":checked"),
                    User: $("#INVCEXU").val(),
                    Branch: $("#INVCEXBranch").val(),
                };
                var trnParticularDoubleExpBill = {
                    Nofitication: $("#INVCDEXN").is(":checked"),
                    Email: $("#INVCDEXE").is(":checked"),
                    Priority: $("#INVCDEXP").is(":checked"),
                    EnteredBy: $("#INVCDEXSelf").is(":checked"),
                    User: $("#INVCDEXU").val(),
                    Branch: $("#INVCDEXBranch").val(),
                    Expense: $("#INVCDEXExpenses").val(),
                };
                billNotification["trnBackDaysBill"] = trnBackDaysBill;
                billNotification["trnForwardDaysBill"] = trnForwardDaysBill;
                billNotification["trnDocAmountBill"] = trnDocAmountBill;
                billNotification["trnZeroAmountBill"] = trnZeroAmountBill;
                billNotification["trnOtherPartyBill"] = trnOtherPartyBill;
                billNotification["trnConsignmentBill"] = trnConsignmentBill;
                billNotification["trnPartyBill"] = trnPartyBill;
                billNotification["trnDoubleExpBill"] = trnDoubleExpBill;
                billNotification["trnParticularDoubleExpBill"] = trnParticularDoubleExpBill;
                ModelData["billNotification"] = billNotification;
            }
            //Cash Bank Payment(CPO)
            {
                var cashBankPaymentNotification = {};
                var trnBackDaysCashBank = {
                    Nofitication: $("#CPOBDN").is(":checked"),
                    Email: $("#CPOBDE").is(":checked"),
                    Priority: $("#CPOBDP").is(":checked"),
                    EnteredBy: $("#CPOBDSelf").is(":checked"),
                    User: $("#CPOBDU").val(),
                    Branch: $("#CPOBDBranch").val(),
                    BackDays: $("#CPOBDDays").val(),
                };
                var trnForwardDaysCashBank = {
                    Nofitication: $("#CPOFDN").is(":checked"),
                    Email: $("#CPOFDE").is(":checked"),
                    Priority: $("#CPOFDP").is(":checked"),
                    EnteredBy: $("#CPOFDSelf").is(":checked"),
                    User: $("#CPOFDU").val(),
                    Branch: $("#CPOFDBranch").val(),
                    ForwardDays: $("#CPOFDDays").val(),
                };
                var trnDocAmountCashBank = {
                    Nofitication: $("#CPODAN").is(":checked"),
                    Email: $("#CPODAE").is(":checked"),
                    Priority: $("#CPODAP").is(":checked"),
                    EnteredBy: $("#CPODASelf").is(":checked"),
                    User: $("#CPODAU").val(),
                    Branch: $("#CPODABranch").val(),
                    DocAmount: $("#CPODADocAmt").val(),
                };
                var trnDoubleExpCashBank = {
                    Nofitication: $("#CPOCEXN").is(":checked"),
                    Email: $("#CPOCEXE").is(":checked"),
                    Priority: $("#CPOCEXP").is(":checked"),
                    EnteredBy: $("#CPOCEXSelf").is(":checked"),
                    User: $("#CPOCEXU").val(),
                    Branch: $("#CPOCEXBranch").val(),
                };
                var trnParticularDoubleExpCashBank = {
                    Nofitication: $("#CPOCDEXN").is(":checked"),
                    Email: $("#CPOCDEXE").is(":checked"),
                    Priority: $("#CPOCDEXP").is(":checked"),
                    EnteredBy: $("#CPOCDEXSelf").is(":checked"),
                    User: $("#CPOCDEXU").val(),
                    Branch: $("#CPOCDEXBranch").val(),
                    Expense: $("#CPOCDEXExpenses").val(),
                };
                cashBankPaymentNotification["trnBackDaysCashBank"] = trnBackDaysCashBank;
                cashBankPaymentNotification["trnForwardDaysCashBank"] = trnForwardDaysCashBank;
                cashBankPaymentNotification["trnDocAmountCashBank"] = trnDocAmountCashBank;
                cashBankPaymentNotification["trnDoubleExpCashBank"] = trnDoubleExpCashBank;
                cashBankPaymentNotification["trnParticularDoubleExpCashBank"] = trnParticularDoubleExpCashBank;
                ModelData["cashBankPaymentNotification"] = cashBankPaymentNotification;
            }
            //Cash Bank Payment JV(COT)
            {
                var cashBankJVPaymentNotification = {};
                var trnBackDaysCashBankJV = {
                    Nofitication: $("#COTBDN").is(":checked"),
                    Email: $("#COTBDE").is(":checked"),
                    Priority: $("#COTBDP").is(":checked"),
                    EnteredBy: $("#COTBDSelf").is(":checked"),
                    User: $("#COTBDU").val(),
                    Branch: $("#COTBDBranch").val(),
                    BackDays: $("#COTBDDays").val(),
                };
                var trnForwardDaysCashBankJV = {
                    Nofitication: $("#COTFDN").is(":checked"),
                    Email: $("#COTFDE").is(":checked"),
                    Priority: $("#COTFDP").is(":checked"),
                    EnteredBy: $("#COTFDSelf").is(":checked"),
                    User: $("#COTFDU").val(),
                    Branch: $("#COTFDBranch").val(),
                    ForwardDays: $("#COTFDDays").val(),
                };
                var trnDocAmountCashBankJV = {
                    Nofitication: $("#COTDAN").is(":checked"),
                    Email: $("#COTDAE").is(":checked"),
                    Priority: $("#COTDAP").is(":checked"),
                    EnteredBy: $("#COTDASelf").is(":checked"),
                    User: $("#COTDAU").val(),
                    Branch: $("#COTDABranch").val(),
                    DocAmount: $("#COTDADocAmt").val(),
                };
                var trnDoubleExpCashBankJV = {
                    Nofitication: $("#COTCEXN").is(":checked"),
                    Email: $("#COTCEXE").is(":checked"),
                    Priority: $("#COTCEXP").is(":checked"),
                    EnteredBy: $("#COTCEXSelf").is(":checked"),
                    User: $("#COTCEXU").val(),
                    Branch: $("#COTCEXBranch").val(),
                };
                var trnParticularDoubleExpCashBankJV = {
                    Nofitication: $("#COTCDEXN").is(":checked"),
                    Email: $("#COTCDEXE").is(":checked"),
                    Priority: $("#COTCDEXP").is(":checked"),
                    EnteredBy: $("#COTCDEXSelf").is(":checked"),
                    User: $("#COTCDEXU").val(),
                    Branch: $("#COTCDEXBranch").val(),
                    Expense: $("#COTCDEXExpenses").val(),
                };
                cashBankJVPaymentNotification["trnBackDaysCashBankJV"] = trnBackDaysCashBankJV;
                cashBankJVPaymentNotification["trnForwardDaysCashBankJV"] = trnForwardDaysCashBankJV;
                cashBankJVPaymentNotification["trnDocAmountCashBankJV"] = trnDocAmountCashBankJV;
                cashBankJVPaymentNotification["trnDoubleExpCashBankJV"] = trnDoubleExpCashBankJV;
                cashBankJVPaymentNotification["trnParticularDoubleExpCashBankJV"] = trnParticularDoubleExpCashBankJV;
                ModelData["cashBankJVPaymentNotification"] = cashBankJVPaymentNotification;
            }
            //Credit Purchase(PUR)
            {
                var creditPurchaseNotification = {};
                var trnBackDaysCreditPurchase = {
                    Nofitication: $("#PURBDN").is(":checked"),
                    Email: $("#PURBDE").is(":checked"),
                    Priority: $("#PURBDP").is(":checked"),
                    EnteredBy: $("#PURBDSelf").is(":checked"),
                    User: $("#PURBDU").val(),
                    Branch: $("#PURBDBranch").val(),
                    BackDays: $("#PURBDDays").val(),
                };
                var trnForwardDaysCreditPurchase = {
                    Nofitication: $("#PURFDN").is(":checked"),
                    Email: $("#PURFDE").is(":checked"),
                    Priority: $("#PURFDP").is(":checked"),
                    EnteredBy: $("#PURFDSelf").is(":checked"),
                    User: $("#PURFDU").val(),
                    Branch: $("#PURFDBranch").val(),
                    ForwardDays: $("#PURFDDays").val(),
                };
                var trnDocAmountCreditPurchase = {
                    Nofitication: $("#PURDAN").is(":checked"),
                    Email: $("#PURDAE").is(":checked"),
                    Priority: $("#PURDAP").is(":checked"),
                    EnteredBy: $("#PURDASelf").is(":checked"),
                    User: $("#PURDAU").val(),
                    Branch: $("#PURDABranch").val(),
                    DocAmount: $("#PURDADocAmt").val(),
                };
                var trnVendorCreditPurchase = {
                    Nofitication: $("#PURVRN").is(":checked"),
                    Email: $("#PURVRE").is(":checked"),
                    Priority: $("#PURVRP").is(":checked"),
                    EnteredBy: $("#PURVRSelf").is(":checked"),
                    User: $("#PURVRU").val(),
                    Branch: $("#PURVRBranch").val(),
                    Vendor: $("#PURVRVendor").val(),
                };
                var trnDoubleExpPurchase = {
                    Nofitication: $("#PURCEXN").is(":checked"),
                    Email: $("#PURCEXE").is(":checked"),
                    Priority: $("#PURCEXP").is(":checked"),
                    EnteredBy: $("#PURCEXSelf").is(":checked"),
                    User: $("#PURCEXU").val(),
                    Branch: $("#PURCEXBranch").val(),
                };
                var trnParticularDoubleExpPurchase = {
                    Nofitication: $("#PURCDEXN").is(":checked"),
                    Email: $("#PURCDEXE").is(":checked"),
                    Priority: $("#PURCDEXP").is(":checked"),
                    EnteredBy: $("#PURCDEXSelf").is(":checked"),
                    User: $("#PURCDEXU").val(),
                    Branch: $("#PURCDEXBranch").val(),
                    Expense: $("#PURCDEXExpenses").val(),
                };
                creditPurchaseNotification["trnBackDaysCreditPurchase"] = trnBackDaysCreditPurchase;
                creditPurchaseNotification["trnForwardDaysCreditPurchase"] = trnForwardDaysCreditPurchase;
                creditPurchaseNotification["trnDocAmountCreditPurchase"] = trnDocAmountCreditPurchase;
                creditPurchaseNotification["trnVendorCreditPurchase"] = trnVendorCreditPurchase;
                creditPurchaseNotification["trnDoubleExpPurchase"] = trnDoubleExpPurchase;
                creditPurchaseNotification["trnParticularDoubleExpPurchase"] = trnParticularDoubleExpPurchase;
                ModelData["creditPurchaseNotification"] = creditPurchaseNotification;
            }
            //Creditor Payment(BPM)
            {
                var creditPaymentNotification = {};
                var trnBackDaysCreditPayment = {
                    Nofitication: $("#BPMBDN").is(":checked"),
                    Email: $("#BPMBDE").is(":checked"),
                    Priority: $("#BPMBDP").is(":checked"),
                    EnteredBy: $("#BPMBDSelf").is(":checked"),
                    User: $("#BPMBDU").val(),
                    Branch: $("#BPMBDBranch").val(),
                    BackDays: $("#BPMBDDays").val(),
                };
                var trnForwardDaysCreditPayment = {
                    Nofitication: $("#BPMFDN").is(":checked"),
                    Email: $("#BPMFDE").is(":checked"),
                    Priority: $("#BPMFDP").is(":checked"),
                    EnteredBy: $("#BPMFDSelf").is(":checked"),
                    User: $("#BPMFDU").val(),
                    Branch: $("#BPMFDBranch").val(),
                    ForwardDays: $("#BPMFDDays").val(),
                };
                var trnDocAmountCreditPayment = {
                    Nofitication: $("#BPMDAN").is(":checked"),
                    Email: $("#BPMDAE").is(":checked"),
                    Priority: $("#BPMDAP").is(":checked"),
                    EnteredBy: $("#BPMDASelf").is(":checked"),
                    User: $("#BPMDAU").val(),
                    Branch: $("#BPMDABranch").val(),
                    DocAmount: $("#BPMDADocAmt").val(),
                };
                var trnVendorCreditPayment = {
                    Nofitication: $("#BPMVRN").is(":checked"),
                    Email: $("#BPMVRE").is(":checked"),
                    Priority: $("#BPMVRP").is(":checked"),
                    EnteredBy: $("#BPMVRSelf").is(":checked"),
                    User: $("#BPMVRU").val(),
                    Branch: $("#BPMVRBranch").val(),
                    Vendor: $("#BPMVRVendor").val(),
                };
                creditPaymentNotification["trnBackDaysCreditPayment"] = trnBackDaysCreditPayment;
                creditPaymentNotification["trnForwardDaysCreditPayment"] = trnForwardDaysCreditPayment;
                creditPaymentNotification["trnDocAmountCreditPayment"] = trnDocAmountCreditPayment;
                creditPaymentNotification["trnVendorCreditPayment"] = trnVendorCreditPayment;
                ModelData["creditPaymentNotification"] = creditPaymentNotification;
            }
            //Bank Receipt(BRC)
            {
                var bankReceiptNotification = {};
                var trnBackDaysBankReceipt = {
                    Nofitication: $("#BRCBDN").is(":checked"),
                    Email: $("#BRCBDE").is(":checked"),
                    Priority: $("#BRCBDP").is(":checked"),
                    EnteredBy: $("#BRCBDSelf").is(":checked"),
                    User: $("#BRCBDU").val(),
                    Branch: $("#BRCBDBranch").val(),
                    BackDays: $("#BRCBDDays").val(),
                };
                var trnForwardDaysBankReceipt = {
                    Nofitication: $("#BRCFDN").is(":checked"),
                    Email: $("#BRCFDE").is(":checked"),
                    Priority: $("#BRCFDP").is(":checked"),
                    EnteredBy: $("#BRCFDSelf").is(":checked"),
                    User: $("#BRCFDU").val(),
                    Branch: $("#BRCFDBranch").val(),
                    ForwardDays: $("#BRCFDDays").val(),
                };
                var trnDocAmountBankReceipt = {
                    Nofitication: $("#BRCDAN").is(":checked"),
                    Email: $("#BRCDAE").is(":checked"),
                    Priority: $("#BRCDAP").is(":checked"),
                    EnteredBy: $("#BRCDASelf").is(":checked"),
                    User: $("#BRCDAU").val(),
                    Branch: $("#BRCDABranch").val(),
                    DocAmount: $("#BRCDADocAmt").val(),
                };
                var trnPendingAdjustBankReceipt = {
                    Nofitication: $("#BRCUAN").is(":checked"),
                    Email: $("#BRCUAE").is(":checked"),
                    Priority: $("#BRCUAP").is(":checked"),
                    EnteredBy: $("#BRCUASelf").is(":checked"),
                    User: $("#BRCUAU").val(),
                    Branch: $("#BRCUABranch").val(),
                };
                var trnFreightRebateAmountBankReceipt = {
                    Nofitication: $("#BRCFRN").is(":checked"),
                    Email: $("#BRCFRE").is(":checked"),
                    Priority: $("#BRCFRP").is(":checked"),
                    EnteredBy: $("#BRCFRSelf").is(":checked"),
                    User: $("#BRCFRU").val(),
                    Branch: $("#BRCFRBranch").val(),
                    FreightRebateAmount: $("#BRCFRFreightRebate").val(),
                };
                bankReceiptNotification["trnBackDaysBankReceipt"] = trnBackDaysBankReceipt;
                bankReceiptNotification["trnForwardDaysBankReceipt"] = trnForwardDaysBankReceipt;
                bankReceiptNotification["trnDocAmountBankReceipt"] = trnDocAmountBankReceipt;
                bankReceiptNotification["trnPendingAdjustBankReceipt"] = trnPendingAdjustBankReceipt;
                bankReceiptNotification["trnFreightRebateAmountBankReceipt"] = trnFreightRebateAmountBankReceipt;
                ModelData["bankReceiptNotification"] = bankReceiptNotification;
            }
            //Trip Sheet
            {
                var tripSheetNotification = {};
                var trnBackDaysTripSheet = {
                    Nofitication: $("#TRIPBDN").is(":checked"),
                    Email: $("#TRIPBDE").is(":checked"),
                    Priority: $("#TRIPBDP").is(":checked"),
                    EnteredBy: $("#TRIPBDSelf").is(":checked"),
                    User: $("#TRIPBDU").val(),
                    Branch: $("#TRIPBDBranch").val(),
                    BackDays: $("#TRIPBDDays").val(),
                };
                var trnForwardDaysTripSheet = {
                    Nofitication: $("#TRIPFDN").is(":checked"),
                    Email: $("#TRIPFDE").is(":checked"),
                    Priority: $("#TRIPFDP").is(":checked"),
                    EnteredBy: $("#TRIPFDSelf").is(":checked"),
                    User: $("#TRIPFDU").val(),
                    Branch: $("#TRIPFDBranch").val(),
                    ForwardDays: $("#TRIPFDDays").val(),
                };
                var trnDocAmountTripSheet = {
                    Nofitication: $("#TRIPDAN").is(":checked"),
                    Email: $("#TRIPDAE").is(":checked"),
                    Priority: $("#TRIPDAP").is(":checked"),
                    EnteredBy: $("#TRIPDASelf").is(":checked"),
                    User: $("#TRIPDAU").val(),
                    Branch: $("#TRIPDABranch").val(),
                    DocAmount: $("#TRIPDADocAmt").val(),
                };
                var trnEtraExpTripSheet = {
                    Nofitication: $("#TRIPEEN").is(":checked"),
                    Email: $("#TRIPEEE").is(":checked"),
                    Priority: $("#TRIPEEP").is(":checked"),
                    EnteredBy: $("#TRIPEESelf").is(":checked"),
                    User: $("#TRIPEEU").val(),
                    Branch: $("#TRIPEEBranch").val(),
                    ExtraExp: $("#TRIPEEExtraExpAmt").val(),
                };
                var trnFmDateRangeTripSheet = {
                    Nofitication: $("#TRIPFMN").is(":checked"),
                    Email: $("#TRIPFME").is(":checked"),
                    Priority: $("#TRIPFMP").is(":checked"),
                    EnteredBy: $("#TRIPFMSelf").is(":checked"),
                    User: $("#TRIPFMU").val(),
                    Branch: $("#TRIPFMBranch").val(),
                };
                var trnADVDateRangeTripSheet = {
                    Nofitication: $("#TRIPADVN").is(":checked"),
                    Email: $("#TRIPADVE").is(":checked"),
                    Priority: $("#TRIPADVP").is(":checked"),
                    EnteredBy: $("#TRIPADVSelf").is(":checked"),
                    User: $("#TRIPADVU").val(),
                    Branch: $("#TRIPADVBranch").val(),
                };
                var trnCCDateRangeTripSheet = {
                    Nofitication: $("#TRIPCCN").is(":checked"),
                    Email: $("#TRIPCCE").is(":checked"),
                    Priority: $("#TRIPCCP").is(":checked"),
                    EnteredBy: $("#TRIPCCSelf").is(":checked"),
                    User: $("#TRIPCCU").val(),
                    Branch: $("#TRIPCCBranch").val(),
                };
                var trnDoubleExpTripSheet = {
                    Nofitication: $("#TRIPCEXN").is(":checked"),
                    Email: $("#TRIPCEXE").is(":checked"),
                    Priority: $("#TRIPCEXP").is(":checked"),
                    EnteredBy: $("#TRIPCEXSelf").is(":checked"),
                    User: $("#TRIPCEXU").val(),
                    Branch: $("#TRIPCEXBranch").val(),
                };
                var trnParticularDoubleExpTripSheet = {
                    Nofitication: $("#TRIPCDEXN").is(":checked"),
                    Email: $("#TRIPCDEXE").is(":checked"),
                    Priority: $("#TRIPCDEXP").is(":checked"),
                    EnteredBy: $("#TRIPCDEXSelf").is(":checked"),
                    User: $("#TRIPCDEXU").val(),
                    Branch: $("#TRIPCDEXBranch").val(),
                    Expense: $("#TRIPCDEXExpenses").val(),
                };
                tripSheetNotification["trnBackDaysTripSheet"] = trnBackDaysTripSheet;
                tripSheetNotification["trnForwardDaysTripSheet"] = trnForwardDaysTripSheet;
                tripSheetNotification["trnDocAmountTripSheet"] = trnDocAmountTripSheet;
                tripSheetNotification["trnEtraExpTripSheet"] = trnEtraExpTripSheet;
                tripSheetNotification["trnFmDateRangeTripSheet"] = trnFmDateRangeTripSheet;
                tripSheetNotification["trnADVDateRangeTripSheet"] = trnADVDateRangeTripSheet;
                tripSheetNotification["trnCCDateRangeTripSheet"] = trnCCDateRangeTripSheet;
                tripSheetNotification["trnDoubleExpTripSheet"] = trnDoubleExpTripSheet;
                tripSheetNotification["trnParticularDoubleExpTripSheet"] = trnParticularDoubleExpTripSheet;
                ModelData["tripSheetNotification"] = tripSheetNotification;
            }

            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };

            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/DashBoard/ControlPanel";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });


    });
</script>

<header class="header fixed-top" id="infofooter" style="position:fixed;background-color:lightgray;padding:5px;width:100%;margin-top:0%;height:41px;">
    <div class="fixhead">
        <div class="col-md-2" style="padding-left:unset;padding:1px;">
            <b class="CodeSt">@Model.Header</b>
        </div>

        <label class="control-label col-sm-1 CodeSt" style="color: black;font-weight: normal;font-size: 16px;width: auto;margin-top: 1px;">Expand :</label>
        <input type="checkbox" id="chkExpand" style="height:25px;width:25px;margin: 0px;" />


        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>
    </div>
</header>

<section class="panel">
    <div class="panel-body" style="margin-top:33px;padding-left:0px;padding-right:5px;overflow-x:hidden;">
        <div id="ReportDetails" class="form-horizontal" role="form" style="margin-top:5px; padding-left:10px;">
            @*Lorry Receipt Details*@
            <div class="panel panel-default">
                <div class="panel-heading MyPanelHeading" id="CD">Consignment</div>
                <div class="panel-body MyPanelBody" id="CDBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.consignmentNotification.trnBackDaysConsignment.Description">Back Days</label>
                                @*<button type="button" class="btn btn-primary marginRightC" title="@Model.consignmentNotification.trnBackDaysConsignment.Description" style="border-radius: 20px;padding: 0px 5px;">
            <span class="glyphicon glyphicon-question-sign"></span>
        </button>*@
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.Nofitication, new { @id = "CDBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnBackDaysConsignment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.Email, new { @id = "CDBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnBackDaysConsignment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.Priority, new { @id = "CDBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnBackDaysConsignment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.EnteredBy, new { @id = "CDBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnBackDaysConsignment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.UserL, Model.Users, new { @class = "CDBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.BranchL, Model.Branches, new { @class = "CDBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.consignmentNotification.trnBackDaysConsignment.BackDays, new { @id = "CDBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.consignmentNotification.trnBackDaysConsignment.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.consignmentNotification.trnForwardDaysConsignment.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.Nofitication, new { @id = "CDFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnForwardDaysConsignment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.Email, new { @id = "CDFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnForwardDaysConsignment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.Priority, new { @id = "CDFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnForwardDaysConsignment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.EnteredBy, new { @id = "CDFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnForwardDaysConsignment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.UserL, Model.Users, new { @class = "CDFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.BranchL, Model.Branches, new { @class = "CDFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.consignmentNotification.trnForwardDaysConsignment.ForwardDays, new { @id = "CDFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.consignmentNotification.trnForwardDaysConsignment.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.consignmentNotification.trnDeclareValueConsignment.Description">Declare Value</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.Nofitication, new { @id = "CDDVN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueConsignment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.Email, new { @id = "CDDVE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueConsignment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.Priority, new { @id = "CDDVP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueConsignment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.EnteredBy, new { @id = "CDDVSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueConsignment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.UserL, Model.Users, new { @class = "CDDVUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.BranchL, Model.Branches, new { @class = "CDDVBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To Declare Value and Send Notification.">Declare Value : </label>
                                @Html.TextBoxFor(x => x.consignmentNotification.trnDeclareValueConsignment.DeclareValue, new { @id = "CDDVDeclareVal", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.consignmentNotification.trnDeclareValueConsignment.DeclareValue.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.consignmentNotification.trnDescriptionConsignment.Description">Description</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.Nofitication, new { @id = "CDDSN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDescriptionConsignment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.Email, new { @id = "CDDSE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDescriptionConsignment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.Priority, new { @id = "CDDSP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDescriptionConsignment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.EnteredBy, new { @id = "CDDSSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDescriptionConsignment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.UserL, Model.Users, new { @class = "CDDSUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.BranchL, Model.Branches, new { @class = "CDDSBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Description : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDescriptionConsignment.MDescriptionL, Model.Descriptions, new { @class = "CDDSDescriptionL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Description">Eway Bill</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.Nofitication, new { @id = "CDDVEN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.Email, new { @id = "CDDVEE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.Priority, new { @id = "CDDVEP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueEwaybillConsignment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.EnteredBy, new { @id = "CDDVESelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.consignmentNotification.trnDeclareValueEwaybillConsignment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.UserL, Model.Users, new { @class = "CDDVEUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.BranchL, Model.Branches, new { @class = "CDDVEBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To Declare Value and Send Notification.">Declare Value : </label>
                                @Html.TextBoxFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.DeclareValue, new { @id = "CDDVEDeclareVal", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.consignmentNotification.trnDeclareValueEwaybillConsignment.DeclareValue.ToString("F2") })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="LC">Lorry Challan</div>
                <div class="panel-body MyPanelBody" id="LCBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.lorryChallanNotification.trnBackDaysLorryChallan.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.Nofitication, new { @id = "LCBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnBackDaysLorryChallan.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.Email, new { @id = "LCBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnBackDaysLorryChallan.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.Priority, new { @id = "LCBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnBackDaysLorryChallan.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.EnteredBy, new { @id = "LCBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnBackDaysLorryChallan.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.UserL, Model.Users, new { @class = "LCBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.BranchL, Model.Branches, new { @class = "LCBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.BackDays, new { @id = "LCBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.lorryChallanNotification.trnBackDaysLorryChallan.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.lorryChallanNotification.trnForwardDaysLorryChallan.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.Nofitication, new { @id = "LCFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnForwardDaysLorryChallan.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.Email, new { @id = "LCFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnForwardDaysLorryChallan.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.Priority, new { @id = "LCFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnForwardDaysLorryChallan.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.EnteredBy, new { @id = "LCFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.lorryChallanNotification.trnForwardDaysLorryChallan.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.UserL, Model.Users, new { @class = "LCFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.BranchL, Model.Branches, new { @class = "LCFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.ForwardDays, new { @id = "LCFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.lorryChallanNotification.trnForwardDaysLorryChallan.ForwardDays })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="FM">Freight Memo</div>
                <div class="panel-body MyPanelBody" id="FMBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnBackDaysFreightMemo.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.Nofitication, new { @id = "FMBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBackDaysFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.Email, new { @id = "FMBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBackDaysFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.Priority, new { @id = "FMBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBackDaysFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.EnteredBy, new { @id = "FMBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBackDaysFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.UserL, Model.Users, new { @class = "FMBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.BranchL, Model.Branches, new { @class = "FMBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.BackDays, new { @id = "FMBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.freightMemoNotification.trnBackDaysFreightMemo.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnForwardDaysFreightMemo.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.Nofitication, new { @id = "FMFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnForwardDaysFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.Email, new { @id = "FMFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnForwardDaysFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.Priority, new { @id = "FMFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnForwardDaysFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.EnteredBy, new { @id = "FMFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnForwardDaysFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.UserL, Model.Users, new { @class = "FMFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.BranchL, Model.Branches, new { @class = "FMFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.ForwardDays, new { @id = "FMFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.freightMemoNotification.trnForwardDaysFreightMemo.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnDriverLicExpFreightMemo.Description">Driver Lic</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.Nofitication, new { @id = "FMDLN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDriverLicExpFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.Email, new { @id = "FMDLE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDriverLicExpFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.Priority, new { @id = "FMDLP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDriverLicExpFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.EnteredBy, new { @id = "FMDLSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDriverLicExpFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.UserL, Model.Users, new { @class = "FMDLUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.BranchL, Model.Branches, new { @class = "FMDLBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnDocAmtFreightMemo.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.Nofitication, new { @id = "FMDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDocAmtFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.Email, new { @id = "FMDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDocAmtFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.Priority, new { @id = "FMDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDocAmtFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.EnteredBy, new { @id = "FMDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnDocAmtFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.UserL, Model.Users, new { @class = "FMDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.BranchL, Model.Branches, new { @class = "FMDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To Freight and Then Send Notification.">Freight Amount : </label>
                                @Html.TextBoxFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.DocAmount, new { @id = "FMDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.freightMemoNotification.trnDocAmtFreightMemo.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnBrokerFreightMemo.Description">Broker</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.Nofitication, new { @id = "FMBRN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBrokerFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.Email, new { @id = "FMBRE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBrokerFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.Priority, new { @id = "FMBRP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBrokerFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.EnteredBy, new { @id = "FMBRSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnBrokerFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.UserL, Model.Users, new { @class = "FMBRUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.BranchL, Model.Branches, new { @class = "FMBRBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Broker : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnBrokerFreightMemo.BrokerL, Model.Brokers, new { @class = "FMBRBrokerL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.freightMemoNotification.trnVehicleFreightMemo.Description">Vehicle</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.Nofitication, new { @id = "FMVLN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnVehicleFreightMemo.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.Email, new { @id = "FMVLE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnVehicleFreightMemo.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.Priority, new { @id = "FMVLP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnVehicleFreightMemo.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.EnteredBy, new { @id = "FMVLSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.freightMemoNotification.trnVehicleFreightMemo.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.UserL, Model.Users, new { @class = "FMVLUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.BranchL, Model.Branches, new { @class = "FMVLBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Vehicle : </label>
                                @Html.ListBoxFor(x => x.freightMemoNotification.trnVehicleFreightMemo.VehicleL, Model.Vehicles, new { @class = "FMVLVehiclesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="VA">Vehicle Activity</div>
                <div class="panel-body MyPanelBody" id="VABody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Description">Arrival</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Nofitication, new { @id = "VAARN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Email, new { @id = "VAARE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Priority, new { @id = "VAARP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.EnteredBy, new { @id = "VAARSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.UserL, Model.Users, new { @class = "VAARUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.BranchL, Model.Branches, new { @class = "VAARBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Arrival (HH:MM) : </label>
                                @Html.TextBoxFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.ArrivalDays, new { @id = "VAARArrival", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.vehicleActivityNotification.trnArrivalDaysVehicleActivity.ArrivalDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Description">Dispatch</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Nofitication, new { @id = "VADSN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Email, new { @id = "VADSE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Priority, new { @id = "VADSP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.EnteredBy, new { @id = "VADSSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.UserL, Model.Users, new { @class = "VADSUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.BranchL, Model.Branches, new { @class = "VADSBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Dispatch (HH:MM) : </label>
                                @Html.TextBoxFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.DispatchDays, new { @id = "VADSDispatch", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.vehicleActivityNotification.trnDispatchDaysVehicleActivity.DispatchDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.vehicleActivityNotification.trnOverloadVehicleActivity.Description">Over-Load</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.Nofitication, new { @id = "VAOLN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnOverloadVehicleActivity.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.Email, new { @id = "VAOLE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnOverloadVehicleActivity.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.Priority, new { @id = "VAOLP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnOverloadVehicleActivity.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.EnteredBy, new { @id = "VAOLSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnOverloadVehicleActivity.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.UserL, Model.Users, new { @class = "VAOLUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.BranchL, Model.Branches, new { @class = "VAOLBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Over-Load (KGs) : </label>
                                @Html.TextBoxFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.OverloadinKg, new { @id = "VAOLOvelloadKG", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.vehicleActivityNotification.trnOverloadVehicleActivity.OverloadinKg })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.vehicleActivityNotification.trnClearVehicleActivity.Description">Clear(Unload)</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.Nofitication, new { @id = "VACLN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnClearVehicleActivity.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.Email, new { @id = "VACLE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnClearVehicleActivity.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.Priority, new { @id = "VACLP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnClearVehicleActivity.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.EnteredBy, new { @id = "VACLSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnClearVehicleActivity.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.UserL, Model.Users, new { @class = "VACLUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.BranchL, Model.Branches, new { @class = "VACLBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.vehicleActivityNotification.trnUnloadVehicleActivity.Description">Unload(Branch)</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.Nofitication, new { @id = "VAUNN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnUnloadVehicleActivity.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.Email, new { @id = "VAUNE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnUnloadVehicleActivity.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.Priority, new { @id = "VAUNP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnUnloadVehicleActivity.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.EnteredBy, new { @id = "VAUNSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.vehicleActivityNotification.trnUnloadVehicleActivity.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.UserL, Model.Users, new { @class = "VAUNUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.BranchL, Model.Branches, new { @class = "VAUNBranchL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="DL">Delivery</div>
                <div class="panel-body MyPanelBody" id="DLBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.deliveryNotification.trnStatusDelivery.Description">Delivery Status</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnStatusDelivery.Nofitication, new { @id = "DLSTN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnStatusDelivery.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnStatusDelivery.Email, new { @id = "DLSTE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnStatusDelivery.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnStatusDelivery.Priority, new { @id = "DLSTP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnStatusDelivery.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnStatusDelivery.EnteredBy, new { @id = "DLSTSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnStatusDelivery.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.deliveryNotification.trnStatusDelivery.UserL, Model.Users, new { @class = "DLSTUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.deliveryNotification.trnStatusDelivery.BranchL, Model.Branches, new { @class = "DLSTBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Status : </label>
                                @Html.ListBoxFor(x => x.deliveryNotification.trnStatusDelivery.StatusL, Model.Statuss, new { @class = "DLSTStatusL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.deliveryNotification.trnAnotherBranchDelivery.Description">Branch(Delivery)</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.Nofitication, new { @id = "DLBRN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnAnotherBranchDelivery.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.Email, new { @id = "DLBRE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnAnotherBranchDelivery.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.Priority, new { @id = "DLBRP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnAnotherBranchDelivery.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.EnteredBy, new { @id = "DLBRSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.deliveryNotification.trnAnotherBranchDelivery.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.UserL, Model.Users, new { @class = "DLBRUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.deliveryNotification.trnAnotherBranchDelivery.BranchL, Model.Branches, new { @class = "DLBRBranchL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="POD">POD</div>
                <div class="panel-body MyPanelBody" id="PODBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.pODNotification.trnBackDaysPOD.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnBackDaysPOD.Nofitication, new { @id = "PODBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnBackDaysPOD.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnBackDaysPOD.Email, new { @id = "PODBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnBackDaysPOD.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnBackDaysPOD.Priority, new { @id = "PODBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnBackDaysPOD.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnBackDaysPOD.EnteredBy, new { @id = "PODBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnBackDaysPOD.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnBackDaysPOD.UserL, Model.Users, new { @class = "PODBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnBackDaysPOD.BranchL, Model.Branches, new { @class = "PODBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.pODNotification.trnBackDaysPOD.BackDays, new { @id = "PODBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.pODNotification.trnBackDaysPOD.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.pODNotification.trnForwardDaysPOD.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnForwardDaysPOD.Nofitication, new { @id = "PODFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnForwardDaysPOD.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnForwardDaysPOD.Email, new { @id = "PODFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnForwardDaysPOD.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnForwardDaysPOD.Priority, new { @id = "PODFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnForwardDaysPOD.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnForwardDaysPOD.EnteredBy, new { @id = "PODFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnForwardDaysPOD.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnForwardDaysPOD.UserL, Model.Users, new { @class = "PODFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnForwardDaysPOD.BranchL, Model.Branches, new { @class = "PODFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.pODNotification.trnForwardDaysPOD.ForwardDays, new { @id = "PODFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.pODNotification.trnForwardDaysPOD.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.pODNotification.trnReceivedDaysPOD.Description">Received Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnReceivedDaysPOD.Nofitication, new { @id = "PODRCN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnReceivedDaysPOD.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnReceivedDaysPOD.Email, new { @id = "PODRCE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnReceivedDaysPOD.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnReceivedDaysPOD.Priority, new { @id = "PODRCP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnReceivedDaysPOD.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnReceivedDaysPOD.EnteredBy, new { @id = "PODRCSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnReceivedDaysPOD.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnReceivedDaysPOD.UserL, Model.Users, new { @class = "PODRCUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnReceivedDaysPOD.BranchL, Model.Branches, new { @class = "PODRCBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.pODNotification.trnReceivedDaysPOD.ReceivedDays, new { @id = "PODRCDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.pODNotification.trnReceivedDaysPOD.ReceivedDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.pODNotification.trnSendDaysPOD.Description">Send Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSendDaysPOD.Nofitication, new { @id = "PODSDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSendDaysPOD.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSendDaysPOD.Email, new { @id = "PODSDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSendDaysPOD.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSendDaysPOD.Priority, new { @id = "PODSDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSendDaysPOD.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSendDaysPOD.EnteredBy, new { @id = "PODSDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSendDaysPOD.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnSendDaysPOD.UserL, Model.Users, new { @class = "PODSDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnSendDaysPOD.BranchL, Model.Branches, new { @class = "PODSDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.pODNotification.trnSendDaysPOD.SendDays, new { @id = "PODSDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.pODNotification.trnSendDaysPOD.SendDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.pODNotification.trnSelectNoDeliveryPOD.Description">NO-Delivery</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.Nofitication, new { @id = "PODNDLN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSelectNoDeliveryPOD.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.Email, new { @id = "PODNDLE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSelectNoDeliveryPOD.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.Priority, new { @id = "PODNDLP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSelectNoDeliveryPOD.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.EnteredBy, new { @id = "PODNDLSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.pODNotification.trnSelectNoDeliveryPOD.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.UserL, Model.Users, new { @class = "PODNDLUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.pODNotification.trnSelectNoDeliveryPOD.BranchL, Model.Branches, new { @class = "PODNDLBranchL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="BS">Bill Submission</div>
                <div class="panel-body MyPanelBody" id="BSBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billSubmissionNotification.trnBackDaysBillSubmission.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.Nofitication, new { @id = "BSBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnBackDaysBillSubmission.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.Email, new { @id = "BSBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnBackDaysBillSubmission.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.Priority, new { @id = "BSBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnBackDaysBillSubmission.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.EnteredBy, new { @id = "BSBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnBackDaysBillSubmission.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.UserL, Model.Users, new { @class = "BSBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.BranchL, Model.Branches, new { @class = "BSBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.BackDays, new { @id = "BSBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billSubmissionNotification.trnBackDaysBillSubmission.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billSubmissionNotification.trnForwardDaysBillSubmission.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.Nofitication, new { @id = "BSFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnForwardDaysBillSubmission.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.Email, new { @id = "BSFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnForwardDaysBillSubmission.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.Priority, new { @id = "BSFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnForwardDaysBillSubmission.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.EnteredBy, new { @id = "BSFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnForwardDaysBillSubmission.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.UserL, Model.Users, new { @class = "BSFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.BranchL, Model.Branches, new { @class = "BSFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.ForwardDays, new { @id = "BSFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billSubmissionNotification.trnForwardDaysBillSubmission.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billSubmissionNotification.trnLateDaysBillSubmission.Description">Late Submission</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.Nofitication, new { @id = "BSLSN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnLateDaysBillSubmission.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.Email, new { @id = "BSLSE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnLateDaysBillSubmission.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.Priority, new { @id = "BSLSP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnLateDaysBillSubmission.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.EnteredBy, new { @id = "BSLSSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billSubmissionNotification.trnLateDaysBillSubmission.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.UserL, Model.Users, new { @class = "BSLSUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.BranchL, Model.Branches, new { @class = "BSLSBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.LateDays, new { @id = "BSLSDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billSubmissionNotification.trnLateDaysBillSubmission.LateDays })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="DA">Doc Authentication</div>
                <div class="panel-body MyPanelBody" id="DABody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Description">Late Authorise</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Nofitication, new { @id = "DAAUTHN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Email, new { @id = "DAAUTHE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Priority, new { @id = "DAAUTHP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.EnteredBy, new { @id = "DAAUTHSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.UserL, Model.Users, new { @class = "DAAUTHUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.BranchL, Model.Branches, new { @class = "DAAUTHBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.AuthDays, new { @id = "DAAUTHDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.AuthDays })
                            </div>
                        </div>
                    </div>
                </div>

                <br />
                <div class="panel-heading MyPanelHeading" id="AB">Advance Balance Payment</div>
                <div class="panel-body MyPanelBody" id="ABBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.Nofitication, new { @id = "FMPBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.Email, new { @id = "FMPBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.Priority, new { @id = "FMPBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.EnteredBy, new { @id = "FMPBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.UserL, Model.Users, new { @class = "FMPBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.BranchL, Model.Branches, new { @class = "FMPBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.BackDays, new { @id = "FMPBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.advBalPaymentNotification.trnBackDaysAdvBalPayment.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Nofitication, new { @id = "FMPFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Email, new { @id = "FMPFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Priority, new { @id = "FMPFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.EnteredBy, new { @id = "FMPFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.UserL, Model.Users, new { @class = "FMPFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.BranchL, Model.Branches, new { @class = "FMPFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.ForwardDays, new { @id = "FMPFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.advBalPaymentNotification.trnForwardDaysAdvBalPayment.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Description">Particular Charges</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.Nofitication, new { @id = "FMPEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.Email, new { @id = "FMPEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.Priority, new { @id = "FMPEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnExpensesAdvBalPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.EnteredBy, new { @id = "FMPEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnExpensesAdvBalPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.UserL, Model.Users, new { @class = "FMPEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.BranchL, Model.Branches, new { @class = "FMPEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Charges : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.ExpenseL, Model.ABExpenses, new { @class = "FMPEXExpensesL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Nofitication, new { @id = "FMPCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Email, new { @id = "FMPCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Priority, new { @id = "FMPCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.EnteredBy, new { @id = "FMPCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnDoubleExpAdvBalPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.UserL, Model.Users, new { @class = "FMPCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.BranchL, Model.Branches, new { @class = "FMPCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Nofitication, new { @id = "FMPCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Email, new { @id = "FMPCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Priority, new { @id = "FMPCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.EnteredBy, new { @id = "FMPCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.UserL, Model.Users, new { @class = "FMPCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.BranchL, Model.Branches, new { @class = "FMPCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.ExpenseL, Model.LRExpenses, new { @class = "FMPCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="INV">Invoice</div>
                <div class="panel-body MyPanelBody" id="INVBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnBackDaysBill.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnBackDaysBill.Nofitication, new { @id = "INVBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnBackDaysBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnBackDaysBill.Email, new { @id = "INVBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnBackDaysBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnBackDaysBill.Priority, new { @id = "INVBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnBackDaysBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnBackDaysBill.EnteredBy, new { @id = "INVBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnBackDaysBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnBackDaysBill.UserL, Model.Users, new { @class = "INVBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnBackDaysBill.BranchL, Model.Branches, new { @class = "INVBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billNotification.trnBackDaysBill.BackDays, new { @id = "INVBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billNotification.trnBackDaysBill.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnForwardDaysBill.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnForwardDaysBill.Nofitication, new { @id = "INVFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnForwardDaysBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnForwardDaysBill.Email, new { @id = "INVFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnForwardDaysBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnForwardDaysBill.Priority, new { @id = "INVFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnForwardDaysBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnForwardDaysBill.EnteredBy, new { @id = "INVFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnForwardDaysBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnForwardDaysBill.UserL, Model.Users, new { @class = "INVFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnForwardDaysBill.BranchL, Model.Branches, new { @class = "INVFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billNotification.trnForwardDaysBill.ForwardDays, new { @id = "INVFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billNotification.trnForwardDaysBill.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnDocAmountBill.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDocAmountBill.Nofitication, new { @id = "INVDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDocAmountBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDocAmountBill.Email, new { @id = "INVDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDocAmountBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDocAmountBill.Priority, new { @id = "INVDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDocAmountBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDocAmountBill.EnteredBy, new { @id = "INVDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDocAmountBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnDocAmountBill.UserL, Model.Users, new { @class = "INVDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnDocAmountBill.BranchL, Model.Branches, new { @class = "INVDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.billNotification.trnDocAmountBill.DocAmount, new { @id = "INVDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billNotification.trnDocAmountBill.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnZeroAmountBill.Description">Zero Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnZeroAmountBill.Nofitication, new { @id = "INVZAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnZeroAmountBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnZeroAmountBill.Email, new { @id = "INVZAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnZeroAmountBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnZeroAmountBill.Priority, new { @id = "INVZAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnZeroAmountBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnZeroAmountBill.EnteredBy, new { @id = "INVZASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnZeroAmountBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnZeroAmountBill.UserL, Model.Users, new { @class = "INVZAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnZeroAmountBill.BranchL, Model.Branches, new { @class = "INVZABranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnOtherPartyBill.Description">Other Party</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnOtherPartyBill.Nofitication, new { @id = "INVOPN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnOtherPartyBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnOtherPartyBill.Email, new { @id = "INVOPE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnOtherPartyBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnOtherPartyBill.Priority, new { @id = "INVOPP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnOtherPartyBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnOtherPartyBill.EnteredBy, new { @id = "INVOPSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnOtherPartyBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnOtherPartyBill.UserL, Model.Users, new { @class = "INVOPUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnOtherPartyBill.BranchL, Model.Branches, new { @class = "INVOPBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnConsignmentBill.Description">Consignment</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnConsignmentBill.Nofitication, new { @id = "INVCDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnConsignmentBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnConsignmentBill.Email, new { @id = "INVCDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnConsignmentBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnConsignmentBill.Priority, new { @id = "INVCDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnConsignmentBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnConsignmentBill.EnteredBy, new { @id = "INVCDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnConsignmentBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnConsignmentBill.UserL, Model.Users, new { @class = "INVCDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnConsignmentBill.BranchL, Model.Branches, new { @class = "INVCDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.billNotification.trnConsignmentBill.Days, new { @id = "INVCDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.billNotification.trnConsignmentBill.Days })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnPartyBill.Description">Customer</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnPartyBill.Nofitication, new { @id = "INVPTN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnPartyBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnPartyBill.Email, new { @id = "INVPTE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnPartyBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnPartyBill.Priority, new { @id = "INVPTP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnPartyBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnPartyBill.EnteredBy, new { @id = "INVPTSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnPartyBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnPartyBill.UserL, Model.Users, new { @class = "INVPTUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnPartyBill.BranchL, Model.Branches, new { @class = "INVPTBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Party : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnPartyBill.PartyL, Model.Parties, new { @class = "INVPTPartyL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnDoubleExpBill.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDoubleExpBill.Nofitication, new { @id = "INVCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDoubleExpBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDoubleExpBill.Email, new { @id = "INVCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDoubleExpBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDoubleExpBill.Priority, new { @id = "INVCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDoubleExpBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnDoubleExpBill.EnteredBy, new { @id = "INVCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnDoubleExpBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnDoubleExpBill.UserL, Model.Users, new { @class = "INVCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnDoubleExpBill.BranchL, Model.Branches, new { @class = "INVCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.billNotification.trnParticularDoubleExpBill.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnParticularDoubleExpBill.Nofitication, new { @id = "INVCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnParticularDoubleExpBill.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnParticularDoubleExpBill.Email, new { @id = "INVCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnParticularDoubleExpBill.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnParticularDoubleExpBill.Priority, new { @id = "INVCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnParticularDoubleExpBill.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.billNotification.trnParticularDoubleExpBill.EnteredBy, new { @id = "INVCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.billNotification.trnParticularDoubleExpBill.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnParticularDoubleExpBill.UserL, Model.Users, new { @class = "INVCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnParticularDoubleExpBill.BranchL, Model.Branches, new { @class = "INVCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.billNotification.trnParticularDoubleExpBill.ExpenseL, Model.LRExpenses, new { @class = "INVCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="CB">Cash Bank Payment</div>
                <div class="panel-body MyPanelBody" id="CBBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankPaymentNotification.trnBackDaysCashBank.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.Nofitication, new { @id = "CPOBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnBackDaysCashBank.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.Email, new { @id = "CPOBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnBackDaysCashBank.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.Priority, new { @id = "CPOBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnBackDaysCashBank.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.EnteredBy, new { @id = "CPOBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnBackDaysCashBank.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.UserL, Model.Users, new { @class = "CPOBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.BranchL, Model.Branches, new { @class = "CPOBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.BackDays, new { @id = "CPOBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankPaymentNotification.trnBackDaysCashBank.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankPaymentNotification.trnForwardDaysCashBank.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.Nofitication, new { @id = "CPOFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnForwardDaysCashBank.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.Email, new { @id = "CPOFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnForwardDaysCashBank.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.Priority, new { @id = "CPOFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnForwardDaysCashBank.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.EnteredBy, new { @id = "CPOFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnForwardDaysCashBank.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.UserL, Model.Users, new { @class = "CPOFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.BranchL, Model.Branches, new { @class = "CPOFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.ForwardDays, new { @id = "CPOFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankPaymentNotification.trnForwardDaysCashBank.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankPaymentNotification.trnDocAmountCashBank.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.Nofitication, new { @id = "CPODAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDocAmountCashBank.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.Email, new { @id = "CPODAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDocAmountCashBank.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.Priority, new { @id = "CPODAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDocAmountCashBank.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.EnteredBy, new { @id = "CPODASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDocAmountCashBank.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.UserL, Model.Users, new { @class = "CPODAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.BranchL, Model.Branches, new { @class = "CPODABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.DocAmount, new { @id = "CPODADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankPaymentNotification.trnDocAmountCashBank.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankPaymentNotification.trnDoubleExpCashBank.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.Nofitication, new { @id = "CPOCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDoubleExpCashBank.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.Email, new { @id = "CPOCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDoubleExpCashBank.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.Priority, new { @id = "CPOCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDoubleExpCashBank.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.EnteredBy, new { @id = "CPOCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnDoubleExpCashBank.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.UserL, Model.Users, new { @class = "CPOCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.BranchL, Model.Branches, new { @class = "CPOCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Nofitication, new { @id = "CPOCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Email, new { @id = "CPOCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Priority, new { @id = "CPOCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.EnteredBy, new { @id = "CPOCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankPaymentNotification.trnParticularDoubleExpCashBank.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.UserL, Model.Users, new { @class = "CPOCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.BranchL, Model.Branches, new { @class = "CPOCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.ExpenseL, Model.LRExpenses, new { @class = "CPOCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="CBJ">Cash Bank Payment (JV)</div>
                <div class="panel-body MyPanelBody" id="CBJBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Nofitication, new { @id = "COTBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Email, new { @id = "COTBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Priority, new { @id = "COTBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.EnteredBy, new { @id = "COTBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.UserL, Model.Users, new { @class = "COTBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.BranchL, Model.Branches, new { @class = "COTBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.BackDays, new { @id = "COTBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankJVPaymentNotification.trnBackDaysCashBankJV.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Nofitication, new { @id = "COTFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Email, new { @id = "COTFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Priority, new { @id = "COTFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.EnteredBy, new { @id = "COTFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.UserL, Model.Users, new { @class = "COTFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.BranchL, Model.Branches, new { @class = "COTFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.ForwardDays, new { @id = "COTFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Nofitication, new { @id = "COTDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Email, new { @id = "COTDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Priority, new { @id = "COTDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.EnteredBy, new { @id = "COTDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.UserL, Model.Users, new { @class = "COTDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.BranchL, Model.Branches, new { @class = "COTDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.DocAmount, new { @id = "COTDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.cashBankJVPaymentNotification.trnDocAmountCashBankJV.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Nofitication, new { @id = "COTCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Email, new { @id = "COTCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Priority, new { @id = "COTCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.EnteredBy, new { @id = "COTCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.UserL, Model.Users, new { @class = "COTCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.BranchL, Model.Branches, new { @class = "COTCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Nofitication, new { @id = "COTCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Email, new { @id = "COTCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Priority, new { @id = "COTCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.EnteredBy, new { @id = "COTCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.UserL, Model.Users, new { @class = "COTCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.BranchL, Model.Branches, new { @class = "COTCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.ExpenseL, Model.LRExpenses, new { @class = "COTCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="CP">Credit Purchase</div>
                <div class="panel-body MyPanelBody" id="CPBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.Nofitication, new { @id = "PURBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.Email, new { @id = "PURBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.Priority, new { @id = "PURBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnBackDaysCreditPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.EnteredBy, new { @id = "PURBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnBackDaysCreditPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.UserL, Model.Users, new { @class = "PURBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.BranchL, Model.Branches, new { @class = "PURBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.BackDays, new { @id = "PURBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPurchaseNotification.trnBackDaysCreditPurchase.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.Nofitication, new { @id = "PURFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.Email, new { @id = "PURFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.Priority, new { @id = "PURFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.EnteredBy, new { @id = "PURFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.UserL, Model.Users, new { @class = "PURFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.BranchL, Model.Branches, new { @class = "PURFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.ForwardDays, new { @id = "PURFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPurchaseNotification.trnForwardDaysCreditPurchase.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.Nofitication, new { @id = "PURDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.Email, new { @id = "PURDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.Priority, new { @id = "PURDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDocAmountCreditPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.EnteredBy, new { @id = "PURDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDocAmountCreditPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.UserL, Model.Users, new { @class = "PURDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.BranchL, Model.Branches, new { @class = "PURDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.DocAmount, new { @id = "PURDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPurchaseNotification.trnDocAmountCreditPurchase.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnVendorCreditPurchase.Description">Vendor</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.Nofitication, new { @id = "PURVRN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnVendorCreditPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.Email, new { @id = "PURVRE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnVendorCreditPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.Priority, new { @id = "PURVRP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnVendorCreditPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.EnteredBy, new { @id = "PURVRSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnVendorCreditPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.UserL, Model.Users, new { @class = "PURVRUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.BranchL, Model.Branches, new { @class = "PURVRBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Vendor : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.VendorL, Model.Vendors, new { @class = "PURVRVendorL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnDoubleExpPurchase.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.Nofitication, new { @id = "PURCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDoubleExpPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.Email, new { @id = "PURCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDoubleExpPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.Priority, new { @id = "PURCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDoubleExpPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.EnteredBy, new { @id = "PURCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnDoubleExpPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.UserL, Model.Users, new { @class = "PURCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.BranchL, Model.Branches, new { @class = "PURCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.Nofitication, new { @id = "PURCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.Email, new { @id = "PURCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.Priority, new { @id = "PURCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.EnteredBy, new { @id = "PURCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPurchaseNotification.trnParticularDoubleExpPurchase.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.UserL, Model.Users, new { @class = "PURCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.BranchL, Model.Branches, new { @class = "PURCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.ExpenseL, Model.LRExpenses, new { @class = "PURCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="CPP">Creditor Payment</div>
                <div class="panel-body MyPanelBody" id="CPPBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPaymentNotification.trnBackDaysCreditPayment.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.Nofitication, new { @id = "BPMBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnBackDaysCreditPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.Email, new { @id = "BPMBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnBackDaysCreditPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.Priority, new { @id = "BPMBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnBackDaysCreditPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.EnteredBy, new { @id = "BPMBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnBackDaysCreditPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.UserL, Model.Users, new { @class = "BPMBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.BranchL, Model.Branches, new { @class = "BPMBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.BackDays, new { @id = "BPMBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPaymentNotification.trnBackDaysCreditPayment.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPaymentNotification.trnForwardDaysCreditPayment.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.Nofitication, new { @id = "BPMFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnForwardDaysCreditPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.Email, new { @id = "BPMFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnForwardDaysCreditPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.Priority, new { @id = "BPMFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnForwardDaysCreditPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.EnteredBy, new { @id = "BPMFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnForwardDaysCreditPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.UserL, Model.Users, new { @class = "BPMFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.BranchL, Model.Branches, new { @class = "BPMFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.ForwardDays, new { @id = "BPMFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPaymentNotification.trnForwardDaysCreditPayment.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPaymentNotification.trnDocAmountCreditPayment.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.Nofitication, new { @id = "BPMDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnDocAmountCreditPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.Email, new { @id = "BPMDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnDocAmountCreditPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.Priority, new { @id = "BPMDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnDocAmountCreditPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.EnteredBy, new { @id = "BPMDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnDocAmountCreditPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.UserL, Model.Users, new { @class = "BPMDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.BranchL, Model.Branches, new { @class = "BPMDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.DocAmount, new { @id = "BPMDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.creditPaymentNotification.trnDocAmountCreditPayment.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.creditPaymentNotification.trnVendorCreditPayment.Description">Vendor</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.Nofitication, new { @id = "BPMVRN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnVendorCreditPayment.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.Email, new { @id = "BPMVRE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnVendorCreditPayment.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.Priority, new { @id = "BPMVRP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnVendorCreditPayment.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.EnteredBy, new { @id = "BPMVRSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.creditPaymentNotification.trnVendorCreditPayment.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.UserL, Model.Users, new { @class = "BPMVRUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.BranchL, Model.Branches, new { @class = "BPMVRBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Vendor : </label>
                                @Html.ListBoxFor(x => x.creditPaymentNotification.trnVendorCreditPayment.VendorL, Model.Vendors, new { @class = "BPMVRVendorL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="BR">Bank Receiprt</div>
                <div class="panel-body MyPanelBody" id="BRBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.bankReceiptNotification.trnBackDaysBankReceipt.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.Nofitication, new { @id = "BRCBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnBackDaysBankReceipt.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.Email, new { @id = "BRCBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnBackDaysBankReceipt.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.Priority, new { @id = "BRCBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnBackDaysBankReceipt.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.EnteredBy, new { @id = "BRCBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnBackDaysBankReceipt.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.UserL, Model.Users, new { @class = "BRCBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.BranchL, Model.Branches, new { @class = "BRCBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.BackDays, new { @id = "BRCBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.bankReceiptNotification.trnBackDaysBankReceipt.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.bankReceiptNotification.trnForwardDaysBankReceipt.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.Nofitication, new { @id = "BRCFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnForwardDaysBankReceipt.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.Email, new { @id = "BRCFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnForwardDaysBankReceipt.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.Priority, new { @id = "BRCFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnForwardDaysBankReceipt.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.EnteredBy, new { @id = "BRCFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnForwardDaysBankReceipt.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.UserL, Model.Users, new { @class = "BRCFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.BranchL, Model.Branches, new { @class = "BRCFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.ForwardDays, new { @id = "BRCFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.bankReceiptNotification.trnForwardDaysBankReceipt.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.bankReceiptNotification.trnDocAmountBankReceipt.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.Nofitication, new { @id = "BRCDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnDocAmountBankReceipt.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.Email, new { @id = "BRCDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnDocAmountBankReceipt.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.Priority, new { @id = "BRCDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnDocAmountBankReceipt.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.EnteredBy, new { @id = "BRCDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnDocAmountBankReceipt.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.UserL, Model.Users, new { @class = "BRCDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.BranchL, Model.Branches, new { @class = "BRCDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.DocAmount, new { @id = "BRCDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.bankReceiptNotification.trnDocAmountBankReceipt.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Description">UnAdjust</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.Nofitication, new { @id = "BRCUAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.Email, new { @id = "BRCUAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.Priority, new { @id = "BRCUAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnPendingAdjustBankReceipt.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.EnteredBy, new { @id = "BRCUASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnPendingAdjustBankReceipt.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.UserL, Model.Users, new { @class = "BRCUAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.BranchL, Model.Branches, new { @class = "BRCUABranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Description">Freight Rebate</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Nofitication, new { @id = "BRCFRN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Email, new { @id = "BRCFRE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Priority, new { @id = "BRCFRP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.EnteredBy, new { @id = "BRCFRSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.UserL, Model.Users, new { @class = "BRCFRUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.BranchL, Model.Branches, new { @class = "BRCFRBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Amount : </label>
                                @Html.TextBoxFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.FreightRebateAmount, new { @id = "BRCFRFreightRebate", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.bankReceiptNotification.trnFreightRebateAmountBankReceipt.FreightRebateAmount.ToString("F2") })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="panel-heading MyPanelHeading" id="TR">Trip Sheet</div>
                <div class="panel-body MyPanelBody" id="TRBody">
                    <div class="form-group">
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnBackDaysTripSheet.Description">Back Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.Nofitication, new { @id = "TRIPBDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnBackDaysTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.Email, new { @id = "TRIPBDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnBackDaysTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.Priority, new { @id = "TRIPBDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnBackDaysTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.EnteredBy, new { @id = "TRIPBDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnBackDaysTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.UserL, Model.Users, new { @class = "TRIPBDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.BranchL, Model.Branches, new { @class = "TRIPBDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.tripSheetNotification.trnBackDaysTripSheet.BackDays, new { @id = "TRIPBDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.tripSheetNotification.trnBackDaysTripSheet.BackDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnForwardDaysTripSheet.Description">Forward Days</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.Nofitication, new { @id = "TRIPFDN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnForwardDaysTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.Email, new { @id = "TRIPFDE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnForwardDaysTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.Priority, new { @id = "TRIPFDP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnForwardDaysTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.EnteredBy, new { @id = "TRIPFDSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnForwardDaysTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.UserL, Model.Users, new { @class = "TRIPFDUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.BranchL, Model.Branches, new { @class = "TRIPFDBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Compared To No Of Days and Send Notification.">Days : </label>
                                @Html.TextBoxFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.ForwardDays, new { @id = "TRIPFDDays", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.tripSheetNotification.trnForwardDaysTripSheet.ForwardDays })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnDocAmountTripSheet.Description">Doc Amount</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.Nofitication, new { @id = "TRIPDAN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDocAmountTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.Email, new { @id = "TRIPDAE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDocAmountTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.Priority, new { @id = "TRIPDAP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDocAmountTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.EnteredBy, new { @id = "TRIPDASelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDocAmountTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.UserL, Model.Users, new { @class = "TRIPDAUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.BranchL, Model.Branches, new { @class = "TRIPDABranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Doc Amount : </label>
                                @Html.TextBoxFor(x => x.tripSheetNotification.trnDocAmountTripSheet.DocAmount, new { @id = "TRIPDADocAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.tripSheetNotification.trnDocAmountTripSheet.DocAmount.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnEtraExpTripSheet.Description">Extra Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.Nofitication, new { @id = "TRIPEEN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnEtraExpTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.Email, new { @id = "TRIPEEE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnEtraExpTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.Priority, new { @id = "TRIPEEP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnEtraExpTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.EnteredBy, new { @id = "TRIPEESelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnEtraExpTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.UserL, Model.Users, new { @class = "TRIPEEUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.BranchL, Model.Branches, new { @class = "TRIPEEBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="">Extra Exp : </label>
                                @Html.TextBoxFor(x => x.tripSheetNotification.trnEtraExpTripSheet.ExtraExp, new { @id = "TRIPEEExtraExpAmt", @class = "form-control marginRightC", @style = "width:100px;text-align:right;", @Value = Model.tripSheetNotification.trnEtraExpTripSheet.ExtraExp.ToString("F2") })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnFmDateRangeTripSheet.Description">Freight Memo</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.Nofitication, new { @id = "TRIPFMN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnFmDateRangeTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.Email, new { @id = "TRIPFME", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnFmDateRangeTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.Priority, new { @id = "TRIPFMP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnFmDateRangeTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.EnteredBy, new { @id = "TRIPFMSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnFmDateRangeTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.UserL, Model.Users, new { @class = "TRIPFMUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.BranchL, Model.Branches, new { @class = "TRIPFMBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnADVDateRangeTripSheet.Description">Advance</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.Nofitication, new { @id = "TRIPADVN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnADVDateRangeTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.Email, new { @id = "TRIPADVE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnADVDateRangeTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.Priority, new { @id = "TRIPADVP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnADVDateRangeTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.EnteredBy, new { @id = "TRIPADVSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnADVDateRangeTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.UserL, Model.Users, new { @class = "TRIPADVUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.BranchL, Model.Branches, new { @class = "TRIPADVBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnCCDateRangeTripSheet.Description">Cost Center</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.Nofitication, new { @id = "TRIPCCN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnCCDateRangeTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.Email, new { @id = "TRIPCCE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnCCDateRangeTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.Priority, new { @id = "TRIPCCP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnCCDateRangeTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.EnteredBy, new { @id = "TRIPCCSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnCCDateRangeTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.UserL, Model.Users, new { @class = "TRIPCCUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.BranchL, Model.Branches, new { @class = "TRIPCCBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnDoubleExpTripSheet.Description">Double Exp</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.Nofitication, new { @id = "TRIPCEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDoubleExpTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.Email, new { @id = "TRIPCEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDoubleExpTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.Priority, new { @id = "TRIPCEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDoubleExpTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.EnteredBy, new { @id = "TRIPCEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnDoubleExpTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.UserL, Model.Users, new { @class = "TRIPCEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.BranchL, Model.Branches, new { @class = "TRIPCEXBranchL marginRightC" })
                            </div>
                        </div>
                        <div class="col-sm-12 marginbottom">
                            <div class="col-sm-12" style="display:flex;">
                                <label class="control-label subHead" title="@Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Description">On Particular Expense</label>
                                <label class="control-label marginRightL" title="Allow To Send Notification.">Notification : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.Nofitication, new { @id = "TRIPCDEXN", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Nofitication, @title = "Allow To Send Notification." })
                                <label class="control-label marginRightL" title="Allow To Send Notification On Email.">Email : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.Email, new { @id = "TRIPCDEXE", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Email, @title = "Allow To Send Notification On Email." })
                                <label class="control-label marginRightL" title="Set Notification As Priority.">Priority : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.Priority, new { @id = "TRIPCDEXP", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnParticularDoubleExpTripSheet.Priority, @title = "Set Notification As Priority." })
                                <label class="control-label marginRightL" title="Set Notification Created Person As Well.">Self : </label>
                                @Html.CheckBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.EnteredBy, new { @id = "TRIPCDEXSelf", @class = "checkbox marginRightC", @style = "width:20px;", @Value = Model.tripSheetNotification.trnParticularDoubleExpTripSheet.EnteredBy, @title = "Set Notification Created Person As Well." })
                                <label class="control-label marginRightL marginLeft20" title="Send Notification To selected Users.">User : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.UserL, Model.Users, new { @class = "TRIPCDEXUL marginRightC" })
                                <label class="control-label marginLeft marginRightL" title="Notification Allow Only selected Branch.">Branch : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.BranchL, Model.Branches, new { @class = "TRIPCDEXBranchL marginRightC" })
                                <label class="control-label marginLeft marginRightL">Expenses : </label>
                                @Html.ListBoxFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.ExpenseL, Model.LRExpenses, new { @class = "TRIPCDEXExpensesL marginRightC" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
            </div>
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            @*<button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>*@
        </div>
        <div class="col-sm-3" style="text-align:center; margin-top:5px;color:white;font-family:Helvetica;font-size:9pt;padding-top:0px;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4" style="padding-right: 20px;">
            <div class="pull-right">
                <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                <a href="~/DashBoard/ControlPanel" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

@Html.HiddenFor(x => x.consignmentNotification.trnBackDaysConsignment.User, new { @id = "CDBDU" })
@Html.HiddenFor(x => x.consignmentNotification.trnBackDaysConsignment.Branch, new { @id = "CDBDBranch" })
@Html.HiddenFor(x => x.consignmentNotification.trnForwardDaysConsignment.User, new { @id = "CDFDU" })
@Html.HiddenFor(x => x.consignmentNotification.trnForwardDaysConsignment.Branch, new { @id = "CDFDBranch" })
@Html.HiddenFor(x => x.consignmentNotification.trnDeclareValueConsignment.User, new { @id = "CDDVU" })
@Html.HiddenFor(x => x.consignmentNotification.trnDeclareValueConsignment.Branch, new { @id = "CDDVBranch" })
@Html.HiddenFor(x => x.consignmentNotification.trnDescriptionConsignment.User, new { @id = "CDDSU" })
@Html.HiddenFor(x => x.consignmentNotification.trnDescriptionConsignment.Branch, new { @id = "CDDSBranch" })
@Html.HiddenFor(x => x.consignmentNotification.trnDescriptionConsignment.MDescription, new { @id = "CDDSDescription" })
@Html.HiddenFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.User, new { @id = "CDDVEU" })
@Html.HiddenFor(x => x.consignmentNotification.trnDeclareValueEwaybillConsignment.Branch, new { @id = "CDDVEBranch" })

@Html.HiddenFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.User, new { @id = "LCBDU" })
@Html.HiddenFor(x => x.lorryChallanNotification.trnBackDaysLorryChallan.Branch, new { @id = "LCBDBranch" })
@Html.HiddenFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.User, new { @id = "LCFDU" })
@Html.HiddenFor(x => x.lorryChallanNotification.trnForwardDaysLorryChallan.Branch, new { @id = "LCFDBranch" })

@Html.HiddenFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.User, new { @id = "FMBDU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnBackDaysFreightMemo.Branch, new { @id = "FMBDBranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.User, new { @id = "FMFDU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnForwardDaysFreightMemo.Branch, new { @id = "FMFDBranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.User, new { @id = "FMDLU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnDriverLicExpFreightMemo.Branch, new { @id = "FMDLBranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.User, new { @id = "FMDAU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnDocAmtFreightMemo.Branch, new { @id = "FMDABranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnBrokerFreightMemo.User, new { @id = "FMBRU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnBrokerFreightMemo.Branch, new { @id = "FMBRBranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnBrokerFreightMemo.Broker, new { @id = "FMBRBroker" })
@Html.HiddenFor(x => x.freightMemoNotification.trnVehicleFreightMemo.User, new { @id = "FMVLU" })
@Html.HiddenFor(x => x.freightMemoNotification.trnVehicleFreightMemo.Branch, new { @id = "FMVLBranch" })
@Html.HiddenFor(x => x.freightMemoNotification.trnVehicleFreightMemo.Vehicle, new { @id = "FMVLVehicles" })

@Html.HiddenFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.User, new { @id = "VAARU" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnArrivalDaysVehicleActivity.Branch, new { @id = "VAARBranch" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.User, new { @id = "VADSU" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnDispatchDaysVehicleActivity.Branch, new { @id = "VADSBranch" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.User, new { @id = "VAOLU" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnOverloadVehicleActivity.Branch, new { @id = "VAOLBranch" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.User, new { @id = "VACLU" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnClearVehicleActivity.Branch, new { @id = "VACLBranch" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.User, new { @id = "VAUNU" })
@Html.HiddenFor(x => x.vehicleActivityNotification.trnUnloadVehicleActivity.Branch, new { @id = "VAUNBranch" })

@Html.HiddenFor(x => x.deliveryNotification.trnStatusDelivery.User, new { @id = "DLSTU" })
@Html.HiddenFor(x => x.deliveryNotification.trnStatusDelivery.Branch, new { @id = "DLSTBranch" })
@Html.HiddenFor(x => x.deliveryNotification.trnStatusDelivery.Status, new { @id = "DLSTStatus" })
@Html.HiddenFor(x => x.deliveryNotification.trnAnotherBranchDelivery.User, new { @id = "DLBRU" })
@Html.HiddenFor(x => x.deliveryNotification.trnAnotherBranchDelivery.Branch, new { @id = "DLBRBranch" })

@Html.HiddenFor(x => x.pODNotification.trnBackDaysPOD.User, new { @id = "PODBDU" })
@Html.HiddenFor(x => x.pODNotification.trnBackDaysPOD.Branch, new { @id = "PODBDBranch" })
@Html.HiddenFor(x => x.pODNotification.trnForwardDaysPOD.User, new { @id = "PODFDU" })
@Html.HiddenFor(x => x.pODNotification.trnForwardDaysPOD.Branch, new { @id = "PODFDBranch" })
@Html.HiddenFor(x => x.pODNotification.trnReceivedDaysPOD.User, new { @id = "PODRCU" })
@Html.HiddenFor(x => x.pODNotification.trnReceivedDaysPOD.Branch, new { @id = "PODRCBranch" })
@Html.HiddenFor(x => x.pODNotification.trnSendDaysPOD.User, new { @id = "PODSDU" })
@Html.HiddenFor(x => x.pODNotification.trnSendDaysPOD.Branch, new { @id = "PODSDBranch" })
@Html.HiddenFor(x => x.pODNotification.trnSelectNoDeliveryPOD.User, new { @id = "PODNDLU" })
@Html.HiddenFor(x => x.pODNotification.trnSelectNoDeliveryPOD.Branch, new { @id = "PODNDLBranch" })

@Html.HiddenFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.User, new { @id = "BSBDU" })
@Html.HiddenFor(x => x.billSubmissionNotification.trnBackDaysBillSubmission.Branch, new { @id = "BSBDBranch" })
@Html.HiddenFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.User, new { @id = "BSFDU" })
@Html.HiddenFor(x => x.billSubmissionNotification.trnForwardDaysBillSubmission.Branch, new { @id = "BSFDBranch" })
@Html.HiddenFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.User, new { @id = "BSLSU" })
@Html.HiddenFor(x => x.billSubmissionNotification.trnLateDaysBillSubmission.Branch, new { @id = "BSLSBranch" })

@Html.HiddenFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.User, new { @id = "DAAUTHU" })
@Html.HiddenFor(x => x.docAuthenticateNotification.trnAuthenticateDaysDocAuthenticate.Branch, new { @id = "DAAUTHBranch" })

@Html.HiddenFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.User, new { @id = "FMPBDU" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnBackDaysAdvBalPayment.Branch, new { @id = "FMPBDBranch" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.User, new { @id = "FMPFDU" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnForwardDaysAdvBalPayment.Branch, new { @id = "FMPFDBranch" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.User, new { @id = "FMPEXU" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.Branch, new { @id = "FMPEXBranch" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnExpensesAdvBalPayment.Expense, new { @id = "FMPEXExpenses" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.User, new { @id = "FMPCEXU" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnDoubleExpAdvBalPayment.Branch, new { @id = "FMPCEXBranch" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.User, new { @id = "FMPCDEXU" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Branch, new { @id = "FMPCDEXBranch" })
@Html.HiddenFor(x => x.advBalPaymentNotification.trnParticularDoubleExpAdvBalPayment.Expense, new { @id = "FMPCDEXExpenses" })


@Html.HiddenFor(x => x.billNotification.trnBackDaysBill.User, new { @id = "INVBDU" })
@Html.HiddenFor(x => x.billNotification.trnBackDaysBill.Branch, new { @id = "INVBDBranch" })
@Html.HiddenFor(x => x.billNotification.trnForwardDaysBill.User, new { @id = "INVFDU" })
@Html.HiddenFor(x => x.billNotification.trnForwardDaysBill.Branch, new { @id = "INVFDBranch" })
@Html.HiddenFor(x => x.billNotification.trnDocAmountBill.User, new { @id = "INVDAU" })
@Html.HiddenFor(x => x.billNotification.trnDocAmountBill.Branch, new { @id = "INVDABranch" })
@Html.HiddenFor(x => x.billNotification.trnZeroAmountBill.User, new { @id = "INVZAU" })
@Html.HiddenFor(x => x.billNotification.trnZeroAmountBill.Branch, new { @id = "INVZABranch" })
@Html.HiddenFor(x => x.billNotification.trnOtherPartyBill.User, new { @id = "INVOPU" })
@Html.HiddenFor(x => x.billNotification.trnOtherPartyBill.Branch, new { @id = "INVOPBranch" })
@Html.HiddenFor(x => x.billNotification.trnConsignmentBill.User, new { @id = "INVCDU" })
@Html.HiddenFor(x => x.billNotification.trnConsignmentBill.Branch, new { @id = "INVCDBranch" })
@Html.HiddenFor(x => x.billNotification.trnPartyBill.User, new { @id = "INVPTU" })
@Html.HiddenFor(x => x.billNotification.trnPartyBill.Branch, new { @id = "INVPTBranch" })
@Html.HiddenFor(x => x.billNotification.trnPartyBill.Party, new { @id = "INVPTParty" })
@Html.HiddenFor(x => x.billNotification.trnDoubleExpBill.User, new { @id = "INVCEXU" })
@Html.HiddenFor(x => x.billNotification.trnDoubleExpBill.Branch, new { @id = "INVCEXBranch" })
@Html.HiddenFor(x => x.billNotification.trnParticularDoubleExpBill.User, new { @id = "INVCDEXU" })
@Html.HiddenFor(x => x.billNotification.trnParticularDoubleExpBill.Branch, new { @id = "INVCDEXBranch" })
@Html.HiddenFor(x => x.billNotification.trnParticularDoubleExpBill.Expense, new { @id = "INVCDEXExpenses" })

@Html.HiddenFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.User, new { @id = "CPOBDU" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnBackDaysCashBank.Branch, new { @id = "CPOBDBranch" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.User, new { @id = "CPOFDU" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnForwardDaysCashBank.Branch, new { @id = "CPOFDBranch" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.User, new { @id = "CPODAU" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnDocAmountCashBank.Branch, new { @id = "CPODABranch" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.User, new { @id = "CPOCEXU" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnDoubleExpCashBank.Branch, new { @id = "CPOCEXBranch" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.User, new { @id = "CPOCDEXU" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Branch, new { @id = "CPOCDEXBranch" })
@Html.HiddenFor(x => x.cashBankPaymentNotification.trnParticularDoubleExpCashBank.Expense, new { @id = "CPOCDEXExpenses" })

@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.User, new { @id = "COTBDU" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnBackDaysCashBankJV.Branch, new { @id = "COTBDBranch" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.User, new { @id = "COTFDU" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnForwardDaysCashBankJV.Branch, new { @id = "COTFDBranch" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.User, new { @id = "COTDAU" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnDocAmountCashBankJV.Branch, new { @id = "COTDABranch" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.User, new { @id = "COTCEXU" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnDoubleExpCashBankJV.Branch, new { @id = "COTCEXBranch" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.User, new { @id = "COTCDEXU" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Branch, new { @id = "COTCDEXBranch" })
@Html.HiddenFor(x => x.cashBankJVPaymentNotification.trnParticularDoubleExpCashBankJV.Expense, new { @id = "COTCDEXExpenses" })

@Html.HiddenFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.User, new { @id = "PURBDU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnBackDaysCreditPurchase.Branch, new { @id = "PURBDBranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.User, new { @id = "PURFDU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnForwardDaysCreditPurchase.Branch, new { @id = "PURFDBranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.User, new { @id = "PURDAU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnDocAmountCreditPurchase.Branch, new { @id = "PURDABranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.User, new { @id = "PURVRU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.Branch, new { @id = "PURVRBranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnVendorCreditPurchase.Vendor, new { @id = "PURVRVendor" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.User, new { @id = "PURCEXU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnDoubleExpPurchase.Branch, new { @id = "PURCEXBranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.User, new { @id = "PURCDEXU" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.Branch, new { @id = "PURCDEXBranch" })
@Html.HiddenFor(x => x.creditPurchaseNotification.trnParticularDoubleExpPurchase.Expense, new { @id = "PURCDEXExpenses" })

@Html.HiddenFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.User, new { @id = "BPMBDU" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnBackDaysCreditPayment.Branch, new { @id = "BPMBDBranch" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.User, new { @id = "BPMFDU" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnForwardDaysCreditPayment.Branch, new { @id = "BPMFDBranch" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.User, new { @id = "BPMDAU" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnDocAmountCreditPayment.Branch, new { @id = "BPMDABranch" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnVendorCreditPayment.User, new { @id = "BPMVRU" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnVendorCreditPayment.Branch, new { @id = "BPMVRBranch" })
@Html.HiddenFor(x => x.creditPaymentNotification.trnVendorCreditPayment.Vendor, new { @id = "BPMVRVendor" })

@Html.HiddenFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.User, new { @id = "BRCBDU" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnBackDaysBankReceipt.Branch, new { @id = "BRCBDBranch" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.User, new { @id = "BRCFDU" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnForwardDaysBankReceipt.Branch, new { @id = "BRCFDBranch" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.User, new { @id = "BRCDAU" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnDocAmountBankReceipt.Branch, new { @id = "BRCDABranch" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.User, new { @id = "BRCUAU" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnPendingAdjustBankReceipt.Branch, new { @id = "BRCUABranch" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.User, new { @id = "BRCFRU" })
@Html.HiddenFor(x => x.bankReceiptNotification.trnFreightRebateAmountBankReceipt.Branch, new { @id = "BRCFRBranch" })

@Html.HiddenFor(x => x.tripSheetNotification.trnBackDaysTripSheet.User, new { @id = "TRIPBDU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnBackDaysTripSheet.Branch, new { @id = "TRIPBDBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.User, new { @id = "TRIPFDU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnForwardDaysTripSheet.Branch, new { @id = "TRIPFDBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnDocAmountTripSheet.User, new { @id = "TRIPDAU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnDocAmountTripSheet.Branch, new { @id = "TRIPDABranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnEtraExpTripSheet.User, new { @id = "TRIPEEU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnEtraExpTripSheet.Branch, new { @id = "TRIPEEBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.User, new { @id = "TRIPFMU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnFmDateRangeTripSheet.Branch, new { @id = "TRIPFMBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.User, new { @id = "TRIPADVU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnADVDateRangeTripSheet.Branch, new { @id = "TRIPADVBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.User, new { @id = "TRIPCCU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnCCDateRangeTripSheet.Branch, new { @id = "TRIPCCBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.User, new { @id = "TRIPCEXU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnDoubleExpTripSheet.Branch, new { @id = "TRIPCEXBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.User, new { @id = "TRIPCDEXU" })
@Html.HiddenFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.Branch, new { @id = "TRIPCDEXBranch" })
@Html.HiddenFor(x => x.tripSheetNotification.trnParticularDoubleExpTripSheet.Expense, new { @id = "TRIPCDEXExpenses" })

