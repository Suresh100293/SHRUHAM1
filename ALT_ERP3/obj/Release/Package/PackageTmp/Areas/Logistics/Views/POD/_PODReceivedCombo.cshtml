@model ALT_ERP3.Areas.Logistics.Models.PODReceivedVM
@using Common;
@{
    /**/

    ViewBag.Title = "Delivery Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<style>
    legend {
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    .SearchRow {
        background-color: coral;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {

        $('#PODDate1').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });
        LoadBranch();
        $('#lstAll').click(function (event)
        {
            event.preventDefault();
            var ModelData = {};
            ModelData["ComingFromBranchPOD"] = $('#ComingFromBranchPOD').val();

            if ($('#ComingFromBranchPOD').val() == "" || $('#ComingFromBranchPOD').val() == null) {
                alert("Please Select From Branch...");
                return;
            }
            GridReloadBranch();
            
            @*var url = '@Url.Action("ReceivedPodPendingList")';
            var DTO = { mModel: ModelData };
            $.ajax({

                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function ()
                {
                    $('.spinner').show();
                },
                success: function (data)
                {
                    debugger;
                    var LoadDownLoadFiles = $("#ShowLRList");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#GetLRLIst').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                },
            });*@
        });
        $("#DeselectAll").click(function ()
        {
            var CheckBox = $("#DeselectAll").prop("checked");
            if (CheckBox) {
                $(".PODBranchDebitGrid").prop('checked', true);
                $(".PODNarr").prop("disabled", false);
            } else {
                $(".PODBranchDebitGrid").prop('checked', false);
                $(".PODNarr").prop("disabled", true);
            }

        });

        // Search all columns
        $('#Search').keyup(function () {
            var value = $(this).val();
            $("#examplePOdPending > tbody > tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $('#SearchLrnoForPodReceived').blur(function (event) {
            if ($('#SearchLrnoForPodReceived').val() != "" && $('#SearchLrnoForPodReceived').val() != null)
            {
                var ModelData = {};
                ModelData["Lrno"] = $("#SearchLrnoForPodReceived").val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("FetchDocumentList")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == "ValidError") {
                            $("#SearchLrnoForPodReceived").val("");
                            alert(data.Message);
                            return;
                        }
                        else if (data.Status == "Processed") {
                            GetPODInGrid(data.Message);
                            $("#MainLR").val($('#Lrno').val());
                        }
                        else
                        {
                            var AttachDoc = $("#consignmentmodels");
                            AttachDoc.html('');
                            AttachDoc.html(data.Html);
                            $('#ConsignmentModels').modal('show');
                        }
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });
        $('#btnGetLc').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            var myTableArray = [];
            $("#examplePOdPending > tbody  > tr").each(function ()
            {
                var CheckBox = $(this).find('.PODBranchDebitGrid').prop("checked");
                if (CheckBox)
                {
                    var myDets =
                    {
                        PODRefTablekey: $(this).find('td:eq(4)').text(),
                        Authorise: $(this).find('td:eq(5)').text(),
                        PODNO: $(this).find('td:eq(7)').text(),
                        Lrno: $(this).find('td:eq(8)').text(),
                        RecePODRemark: $(this).find(".PODNarr").val(),
                        LRDate: $(this).find('td:eq(10)').text(),
                        LRTime: $(this).find('td:eq(11)').text(),
                        ConsignerName: $(this).find('td:eq(12)').text(),
                        ConsigneeName: $(this).find('td:eq(13)').text(),
                        FromName: $(this).find('td:eq(14)').text(),
                        ToName: $(this).find('td:eq(15)').text(),
                        Remark: $(this).find('td:eq(16)').text(),
                        LRRefTablekey: $(this).find('td:eq(17)').text(),
                    }
                    myTableArray.push(myDets);
                }
            });
            ModelData["PODPendingReceiveList"] = myTableArray;
            var url = '@Url.Action("GridViewPOD")';

            var check = $('#examplePOdPending').find('input[type=checkbox]:checked').length;
            if (check > 0)
            {
                $("#GetLRLIst").modal("hide");
                var DTO = { mModel: ModelData };
                $.ajax({

                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles1 = $("#PendingPOdList");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles1.html('');
                        LoadDownLoadFiles1.html(data.Html);
                        $("#txtSearchLr").val("");
                    },
                });
            }
            else
            {
                alert("Atleast One POD Required...");
            }
        });
        $("#TglPODB").click(function () {
            $("#PODPanelB").slideToggle("slow");
        });
    });
    function GetPODInGrid(value) {
        var ModelData = {};
        ModelData["SearchLrnoForPodReceived"] = value;
        var url = '@Url.Action("SearchLRNOInBranch")';
        var DTO = { mModel: ModelData };
        $.ajax({

            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var LoadDownLoadFiles1 = $("#PendingPOdList");
                $("#ErrorMessage").hide();
                $('.spinner').hide();
                LoadDownLoadFiles1.html('');
                LoadDownLoadFiles1.html(data.Html);
                $("#SearchLrnoForPodReceived").val("");
            },
        });
    }
    function filterGrid(value) {

    }

    function GridReloadBranch()
    {
        $('#examplePOdPending').jqGrid('clearGridData');
        $("#examplePOdPending").jqGrid("GridUnload");
        $('#examplePOdPending').trigger('reloadGrid');

        $('#GetLRLIst').modal('show');

        $("#Search").val("");
        $("#SelectLR").val("");

        
        //$("#Search").focus();

        var ColName, Coldata;
        var lPath = window.location.pathname;
        var arrPath = lPath.split("/");
        var code = $("#btncode").val();
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?id=PendingLRForPODBranch';
        var sUrlpath = '@Url.Action("GetPODBranchReceivedGridData")?ViewDataId=PendingLRForPODBranch&Age1=' + $('#ComingFromBranchPOD').val();
        var ModelData = {};
        ModelData["ViewDataId"] = "CurrentBranchStock";
        ModelData["searchString"] = $('#txtDataSearch1').val();
        $('#txtDataSearch1').val("");
        var DTO = { Model: ModelData };
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });
        function CreateGridData() {
            $('#examplePOdPending').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#examplePOdPendingpager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,2000],
                height:350,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                //scroll: false,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                scrollrows: true,
                onSelectRow: function (id, status, e) {
                    $('.spinner').hide();
                },
                ondblClickRow: function (id) {
                    var myGrid = $('#examplePOdPending');
                    var cellVal = myGrid.jqGrid('getCell', id, 'Authorise');
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function ()
                {
                    var ids = jQuery("#examplePOdPending").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++)
                    {
                        var rowId = ids[i];
                        //loop through grid rows
                        var Auth = jQuery("#examplePOdPending").getCell(rowId, "Authorise");
                        if (Auth == "A")
                        {
                        }
                        else if (Auth == "N")
                        {
                            jQuery("#examplePOdPending").jqGrid('setRowData', ids[i], false, { background: 'rgb(80 121 212)' });
                        }
                        else if (Auth == "R")
                        {
                            jQuery("#examplePOdPending").jqGrid('setRowData', ids[i], false, { background: 'rgb(191 104 96)' });
                        }
                        var beChecked = "<input type ='checkbox' id='" + rowId + "' value='" + jQuery("#list").getCell(rowId, "PODRefTablekey") + "' onclick='PODBranchJQGridCheckbox();'  class='PODBranchDebitGrid' name='PODBranchDebitGrid'  style='height: 22px;width: 19px;' />";
                        var Narr = "<textarea class='PODNarr' onblur='NarrBlur();' name='w3review' rows='2' cols='30' disabled></textarea>";
                        jQuery("#examplePOdPending").jqGrid('setRowData', rowId, { 'Select': beChecked,"New Narr": Narr });
                    }

                    $("#Search")[0].focus();
                },
            });
            jQuery("#examplePOdPending").jqGrid('navGrid', "#examplePOdPendingpager",
            { edit: false, add: false, del: false, print:false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#examplePOdPending").jqGrid("setFrozenColumns");
        };
        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            //$('#GetLRLIst').modal('show');
        };
        $("#Search")[0].focus();
    }
    function NarrBlur() {
        $("#Search")[0].focus();
    }
    function PODBranchJQGridCheckbox() {
        $('#examplePOdPending tbody tr').each(function () {
            debugger;
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='PODBranchDebitGrid']").is(':checked');
            var Auth = Row.find('td:eq(5)').text();
            if (Auth == "A00") {
                if (CheckBox) {
                    Row.find(".PODNarr").prop("disabled", false);
                }
                else {
                    Row.find(".PODNarr").prop("disabled", true);
                }
            }
            else if (Auth == "N") {
                alert("This Is Un-Authorised POD So U Cant Select IT...");
                Row.find("input[class='PODBranchDebitGrid']").prop("checked", false);
            }
            else if (Auth == "R") {
                alert("This Is Reject POD So U Cant Select IT...");
                Row.find("input[class='PODBranchDebitGrid']").prop("checked", false);
            }
        });
        //var check = $('#examplePOdPending').find("input[class='PODBranchDebitGrid']:checked").length;
        //if (check == 0) {
        //    $("#DeselectAll").prop('checked', false);
        //} else {
        //    $("#DeselectAll").prop('checked', true);
        //}
    }
    function LoadBranch() {
        var url = '@Url.Action("BranchList")'
        $('#ComingFromBranchPOD').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.ComingFromBranchPOD', text: '@Model.ComingFromBranchPODN' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>
<div class="col-sm-12">
    <fieldset class=" col-md-12" style="margin-bottom: 5px;">
        <legend id="TglPODB">POD Received</legend>

        <div class="panel panel-default" id="PODPanelB" style="margin-bottom: 0px !important;">
            <div class="panel-body ">
                <div class="form-group">
                    <label class=" bold   col-sm-1  control-label">POD No:</label>
                    <div class="col-sm-1 ">
                        @Html.TextBoxFor(x => x.BranchPODNO, new { @class = "form-control", @style = "width:100%;", @Value = Model.BranchPODNO, @disabled = "disabled" })
                    </div>
                    <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;">POD Date:</label>
                    <div class="col-sm-1 ">
                        @Html.TextBoxFor(x => x.PODDate, new { @class = "form-control", @id = "PODDate1", @style = "width:100%;", @Value = Model.PODDate })
                    </div>
                    <label class=" bold   col-sm-1  control-label">POD Time:</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.PODTime, new { @class = "form-control", @id = "PODTime1", @type = "time", @style = "width:100%;", @Value = Model.PODTime })
                    </div>
                </div>
                <div class="form-group">
                    <label class=" bold   col-sm-1  control-label" style="">From:</label>
                    <div class="col-sm-3" id="">
                        @Html.TextBoxFor(x => x.ComingFromBranchPOD, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.ComingFromBranchPOD })
                    </div>
                    <div class="col-sm-1">
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="lstAll">Add Pod</button>
                    </div>
                    @if (Model.GlobalSearch == true)
                    {
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.SearchLrnoForPodReceived, new { @placeholder = "Search Consignment NO", @class = "form-control", @style = "width:100%;", @Value = Model.SearchLrnoForPodReceived })
                        </div>
                    }
                </div>
                <div class="form-group" id="PendingPOdList" style="max-height:300px;min-height:300px;overflow:auto;">
                    @Html.Partial("_PendingPODReceiveList", Model)
                </div>
            </div>
        </div>
    </fieldset>
</div>


<div class="modal fade" id="GetLRLIst" style="width: 100%;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: auto;margin: auto;margin-top: 4%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-2">
                        <h4 class="modal-title">
                            <b>Add POD</b>
                        </h4>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-3">
                            <label class=" bold control-label" style="margin-top: 5px;">select All :</label>
                        </div>
                        <div class="col-md-1">
                            <input type="checkbox" tabindex="1" id="DeselectAll" style="height:20px;width:20px;" />
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="col-md-2">
                            @*<label class=" bold control-label" style="margin-top: 5px;"> Select By</label>*@
                        </div>
                        <div class="col-md-3">
                            @*<input type="text" id="SelectPOD" tabindex="2" class="form-control" placeholder="POD NO" />*@
                        </div>
                        <div class="col-md-2">
                            <label class=" bold control-label" style="margin-top: 5px;"> Search</label>
                        </div>
                        <div class="col-md-5">
                            <input type="text" id="Search" class="form-control" placeholder="Search Here" />
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                @*<div class="grid" id="FormatTable">
                        <div class="form-group col-sm-12" id="ShowLRList" style="overflow: auto;width: 100%;display: block;min-height:450px;max-height:450px;">
                        </div>
                    </div>*@
                <div id="divLedgerTable1" style="height:440px;overflow: auto;">
                    @*@Html.Partial("PodPendingListPartialView", Model.CurrentBranch)*@
                    <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                        <table id="examplePOdPending" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                        <div id="examplePOdPendingpager" style="height:32px;width:100%;"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Rejected POD :</label>
                        <svg width="20" height="20">
                            <title>Rejected POD</title>
                            <rect width="20" height="20" style="fill:#bf6860;stroke-width:3;stroke:rgb(0,0,0)" />
                        </svg>
                    </div>
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Authorise POD:</label>
                        <svg width="20" height="20">
                            <title>Un-Authorise POD</title>
                            <rect width="20" height="20" style="fill:#5079d4;stroke-width:3;stroke:rgb(0,0,0)" />
                        </svg>
                    </div>

                </div>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnGetLc">Submit</button>
            </div>
        </div>
    </div>
</div>
