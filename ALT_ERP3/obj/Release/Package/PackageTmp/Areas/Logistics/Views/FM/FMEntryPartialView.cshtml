@model ALT_ERP3.Areas.Logistics.Models.FMVM
@using Common;
@{
    ViewBag.Title = "FM Master";
    Layout = null;
}
<script src="@Url.Content(" ~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content(" ~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>

<style>

    .driverAdv {
        color: #37a9b5 !important;
    }


    .circle {
        width: 38px;
        height: 84px;
        position: relative;
    }

    .SearchRow {
        background-color: coral;
    }

    .icon {
        position: absolute;
        top: 39%;
        left: 33%;
        transform: translate(-50%, -50%);
        width: 10px;
        height: 10px;
        display: block;
    }

    /*.multiselect {
        width: 205px !important;
        text-align: left !important;
    }*/

    /*.multiselect .dropdown-toggle .btn btn-default .disabled:hover{
        background-color:aqua !important;
    }*/
    .btn-group > .multiselect:hover {
        color: red !important;
    }

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    .GLR {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        /*margin-top: -40px;*/
    }

    .PickLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        /*margin-top: -40px;*/
        padding: 5px 20px 5px 20px;
    }

    .TransLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        /*margin-top: -40px;*/
        padding: 5px 20px 5px 20px;
    }

    .AllLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        /*margin-top: -40px;*/
        padding: 5px 30px 5px 30px;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        /*margin-top: -36px;*/
        height: 33px;
    }

    .legend3 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        /*margin-top: -36px;*/
        height: 33px;
        padding: 5px 20px 5px 20px;
    }

    .legend5 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        /*margin-top: -40px;*/
        padding: 5px 30px 5px 30px;
    }


    .toggle {
        border-radius: 15px !important;
        /*margin-top: -35px !important;*/
    }

        .toggle.btn {
            min-width: 77px !important;
            min-height: 34px;
        }

    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>

<script type="text/javascript">
    var value = 0;
    var Generate = true;
    var PrintLR = "";

    $(document).ready(function () {
        $('#ArrivalDate,#LicenceExpDate,#DispatchDate').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
        });
        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();
        $('#FM_Date').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        $('#attachdoc,#DVattachdoc,#AlertNoteModal,#addnotemodel').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#attachdoc,#DVattachdoc,#AlertNoteModal,#addnotemodel").modal("hide");

        if ('@Model.Mode' == "Edit" || '@Model.Mode' == "View") {
            FreightAlertNoteMaster();
        }

        $(".FreightMomoSaveBtns").show();
        $(".FreightMomoRouteSaveBtns").hide();
        $("#TDSAmt").constrain({ allow: { regex: "[0-9]" } });
        $("#KM,#ContactNo").constrain({ allow: { regex: "[0-9]" } });
        $("#DieselAmt").constrain({ allow: { regex: "[0-9.]" } });
        $("#DieselLtr").constrain({ allow: { regex: "[0-9]" } });
        GetMyFavorites('@Model.ViewDataId');

        if ('@Model.FMSetup.FMGenerate' == "True" || '@Model.FMSetup.FMBoth' == "True") {
            Generate = true;
        }
        else {
            Generate = false;
        }

        if ('@Model.AllowToChangeDriverCharges' == "True" || '@Model.AllowToChangeDriverCharges' == "True")
        {
            $("#TripFreight,#TripAdvance").prop("disabled", false);
        }
        else
        {
            $("#TripFreight,#TripAdvance").prop("disabled", true);
        }
        if ('@Model.AllowToChangeVehicleCharges' == "True" || '@Model.AllowToChangeVehicleCharges' == "True")
        {
            $("#Freight,#Advance").prop("disabled", false);
        }
        else
        {
            $("#Freight,#Advance").prop("disabled", true);
        }

        if ('@Model.FMGenerate' == "M") {
            $('#FBothCHK').bootstrapToggle('on');
            $("#FMNO").removeAttr("disabled");
            Generate = false;
        }

        if ('@Model.Mode' != "Add") {
            if ('@Model.VehicleGroup' == "100001") {
                $("#lblChareheHead").text("Other Expenses");
            }
            else {
                $("#lblChareheHead").text("Other Advance To Driver");
            }

            if ('@Model.MaintainDriAc' == "True") {
                $("#lblChareheHead").text("Other Advance To Driver");
            }
            else {
                $("#lblChareheHead").text("Other Expenses");
            }
        }
        if ('@Model.VehicleGroup' == "100001") {

            $("#HireDriverDiv").show();
            $("#OwnAttachDriverDiv").hide();
        }
        else {
            $("#OwnAttachDriverDiv").show();
            $("#HireDriverDiv").hide();

        }

        if ('@Model.MaintainDriAc' == "True") {
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                tds.find(".txtfvalue").val(0);
            });
            $("#MaintainDriverAc").val("T");
            //$("#lblAdvance").html("Driver Advance");
            //$("#lblAdvance").addClass("driverAdv");
            $("#lblAdvanceEcp").html("Own Driver Adv.");
            $("#sample-table-1  :input").prop("disabled", true);
        }
        else {
            $("#MaintainDriverAc").val("F");
            //$("#lblAdvance").html("Advance");
            //$("#lblAdvance").removeClass("driverAdv");
            $("#lblAdvanceEcp").html("Advance Expense");
            $("#sample-table-1  :input").prop("disabled", false);
        }


        if ('@Model.AllowToChangeTDS' == "True") {
            $("#TDSAmt").prop("disabled", false);
            $("#AllowToChangeTDS").prop("disabled", false);
        }
        else {
            $("#TDSAmt").prop("disabled", true);
            $("#AllowToChangeTDS").prop("disabled", true);
        }
        if ('@Model.CatchFreight' == "True") {
            $("#CatchFreight").val("T");
        } else {
            $("#CatchFreight").val("F");
        }
        if ('@Model.Mode' == "Edit") {
            FreightAdvanceCalculation();
            if ('@Model.CheckMode' == "True" || '@Model.CheckMode' == "true") {
                alert('@Model.Message')
                $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
            }
        }

        $("#AllowToChangeTDS").change(function () {
            if (this.checked) {
                $("#TDSAmt").prop("disabled", false);
            }
            else {
                $("#TDSAmt").val("0.00");
                $("#TDSAmt").prop("disabled", true);
            }
        });

        $("#TDSAmt").blur(function () {
            FreightAdvanceCalculation();
        });

        $('#sample-table-1 tbody tr').each(function () {

            var tds = $(this).find('td');
            var Bal = parseFloat($("#NewBal").val());
            Bal += parseFloat(tds.find(".txtfvalue").val());
            $("#NewBal").val(Bal.toFixed(2));
        });

        $("#AutoNo").val('@Model.FMNO');
        LoadVehicleGroupStatus();
        LoadVehicle("");
        LoadBroker();
        LoadFrom();
        ComboDestination();
        LoadTo();
        LoadVehicleGroup();
        ShowRouteDest();
        LoadPayableAt();
        AddButtonValidation();
        LoadDriverCode();

        if ('@Model.Mode' == "Add") {
            if ('@Model.FMSetup.GenerateSchedule' == "True") {
                $('#ScheduleRequired').prop('disabled', true);
                $('#ScheduleRequired').prop('checked', true);
                $('#ChkArrivalSchedule').prop('checked', false);
                $("#ChkArrivalSchedule").prop("disabled", false);
                $('#ChkDispatchSchedule').prop('checked', true);
                $("#ChkDispatchSchedule").prop("disabled", false);
                $("#DispatchDate").prop("disabled", false);
                $("#DispatchTime").prop("disabled", false);
                $("#DispatchKM").prop("disabled", false);
            }
            $("#ArrivalRemark").prop("disabled", false);
        }
        else {
            if ('@Model.FMSetup.GenerateSchedule' == "True") {
                $('#ScheduleRequired').prop('disabled', true);
            }
            $("#ChkArrivalSchedule").prop("disabled", true);
            $("#ChkDispatchSchedule").prop("disabled", true);
        }

        if ('@Model.Mode' != "Add") {
            if ('@Model.ArrivalDate' != "") {
                $('#ChkArrivalSchedule').prop('checked', true);
                $("#ArrivalDate").prop("disabled", false);
                $("#ArrivalTime").prop("disabled", false);
                $("#ArrivalKM").prop("disabled", false);
            } else {
                $("#ChkArrivalSchedule").prop("disabled", false);
                $("#ArrivalDate").prop("disabled", true);
                $("#ArrivalTime").prop("disabled", true);
                $("#ArrivalKM").prop("disabled", true);
            }
            if ('@Model.DispatchDate' != "") {
                $('#ChkDispatchSchedule').prop('checked', true);
                $("#ChkDispatchSchedule").prop("disabled", false);
                $("#DispatchDate").prop("disabled", false);
                $("#DispatchTime").prop("disabled", false);
                $("#DispatchKM").prop("disabled", false);
            } else {
                $("#ChkDispatchSchedule").prop("disabled", false);
                $("#DispatchDate").prop("disabled", true);
                $("#DispatchTime").prop("disabled", true);
                $("#DispatchKM").prop("disabled", true);
            }
        }

        if ('@Model.Mode' == "Delete" || '@Model.Mode' == "View") {
            $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
        }

        if ('@Model.Mode' == "Edit" || '@Model.Mode' == "Delete") {
            $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
            if ('@Model.BlockFM' == "True") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").html('@Model.BlockFMMessage');
                $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
                $('#AddDest,#From,#To').prop("disabled", true);
                $('#RouteSubmit,#btnAddtoTable').prop("disabled", false);
            }
        }
        if ('@Model.Mode' == "Edit" || '@Model.Mode' == "Delete") {
            if ('@Model.LockAuthorise' == "True" || '@Model.CheckMode' == "True") {
                $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
                var Message = $("#ErrorMessage").text();
                if ('@Model.LockAuthorise' == "True") {
                    Message += "<br>Document Lock In @Model.Mode Mode As Per The Authentication Rule...";
                }
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message);

            }
            if ('@Model.CheckMode' == "True")
            {
                var Message1 = $("#ErrorMessage").text();
                Message1 += "<br>@Model.Message";
                $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
                $('#RouteSubmit,#btnAddtoTable').prop("disabled", false);
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message1);
            }
        }
        if ('@Model.PeriodLock' == "True") {
            var Message = $("#ErrorMessage").text() + "<br>This Document Lock By Author....!";
            $("#ErrorMessage").show();
            $("#ErrorMessage").html(Message);
            $('#FBothCHK,#FMDraftList,#btnRecentFM').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
            $('.btn').prop("disabled", true);

        }

        $(".tablinks").prop("disabled", false);
        $('#btnViewScheduleCalculator,#btnAddNote,#btnAddDoc,#btnPrintOnly,#btnDocDiff,#FMDetails,#btnViewRoute,#ShowFreightCharges,#ShowAdvanceCharges,#TripShowFreightCharges,#TripShowAdvanceCharges,#btnViewSchedule').prop("disabled", false);
        $('#changebranch :input').prop("disabled", false);
        $('#changeperiod :input').prop("disabled", false);
        $('#addnotemodel :input').prop("disabled", false);
        $('#attachdoc :input').prop("disabled", false);
        $('#DVattachdoc :input').prop("disabled", false);
        $('#printpostmodel :input').prop("disabled", false);
        $('#FMDiffModal :input').prop("disabled", false);
        $('#FMDetailsModal :input').prop("disabled", false);
        $('#GETDestMODAL :input').prop("disabled", false);
        $('#FmChargesModal :input').prop("disabled", false);
        $('#TripFmChargesModal :input').prop("disabled", false);
        $('#ScheduleModal :input').prop("disabled", false);
        $('#ScheduleCalculatorModal :input').prop("disabled", false);

        $("#DriverCode").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetDriverTickler")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { Driver: $("#DriverCode").val() },
                success: function (result) {
                    if (result.HireBlackList == true) {
                        $("#hdnBlackListDriver").val("T");
                    } else {
                        $("#hdnBlackListDriver").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true || result.DriverNofitication == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#DriverSpclRMK").html(result.HireSpclRemark);
                            $("#DriverSpclRemarkDiv").show();
                        }
                        else {
                            $("#DriverSpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#DriverBlackLStRMK").html(result.HireBlackListRemark);
                            $("#DriverBlackListRemarkDiv").show();
                        }
                        else {
                            $("#DriverBlackListRemarkDiv").hide();
                        }

                        if (result.DriverNofitication == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#DriverNofiticationMegRMK").html(result.DriverNofiticationMeg);
                            $("#DriverNofiticationMegDiv").show();
                        }
                        else {
                            $("#DriverNofiticationMegDiv").hide();
                        }


                        $('#DriverTicklerModal').modal('show');
                    }
                }
            });

        });

        $("#VehicleGroup").change(function (event) {
            ClearDependingData();
            AddButtonValidation();
            LoadVehicle($("#VehicleGroup").val());

            if ($("#VehicleGroup").val() == "100001") {
                $("#lblChareheHead").text("Other Expenses");
            }
            else {
                $("#lblChareheHead").text("Other Advance To Driver");
            }

        });
        $("#From,#To,#DestCombo").change(function (event) {
            CatFreightAdvance();
        });
        $("#Broker").change(function (event) {
            var url = '@Url.Action("FetchBrokerTDS")';
            var ModelData = {};
            ModelData["Broker"] = $("#Broker").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $("#TDSRate").val(result.TDSRate);
                    FreightAdvanceCalculation();
                }
            });
        })

        $("#ArrivalKM,#DispatchKM").constrain({ allow: { regex: "[0-9]" } });
        $(".txtfvalue,#Freight,#Advance").constrain({ allow: { regex: "[0-9.]" } });
        $('#ScheduleRequired').change(function () {
            if (this.checked) {

                $("#ChkDispatchSchedule").prop("checked", true);
                $("#ChkArrivalSchedule").prop("disabled", false);
                $("#ChkDispatchSchedule").prop("disabled", false);
                $("#ArrivalDate").prop("disabled", true);
                $("#DispatchDate").val($("#FM_Date").val());
                $("#DispatchTime").val($("#FM_Time").val());
                $("#DispatchDate").prop("disabled", false);

                $("#ArrivalTime").prop("disabled", true);
                $("#DispatchTime").prop("disabled", false);
                $("#ArrivalKM").prop("disabled", true);
                $("#DispatchKM").prop("disabled", false);
                $("#ArrivalRemark").prop("disabled", false);
            }
            else {
                $("#ChkDispatchSchedule").prop("checked", false);
                $("#ChkArrivalSchedule").prop("checked", false);
                $("#ChkDispatchSchedule").prop("disabled", true);
                $("#ChkArrivalSchedule").prop("disabled", true);

                //$("#ArrivalDate").val("");
                $("#ArrivalDate").prop("disabled", true);
                //$("#DispatchDate").val("");
                $("#DispatchDate").prop("disabled", true);
                //$("#ArrivalTime").val("");
                $("#ArrivalTime").prop("disabled", true);
                //$("#DispatchTime").val("");
                $("#DispatchTime").prop("disabled", true);
                $("#ArrivalKM").prop("disabled", true);
                $("#DispatchKM").prop("disabled", true);
                $("#ArrivalRemark").prop("disabled", false);
            }
        });

        $('#ChkDispatchSchedule').change(function () {
            if (this.checked) {
                $("#DispatchDate").prop("disabled", false);
                $("#DispatchDate").val($("#FM_Date").val());
                $("#DispatchTime").val($("#FM_Time").val());
                $("#DispatchTime").prop("disabled", false);
                $("#DispatchKM").prop("disabled", false);
                $("#ArrivalRemark").prop("disabled", false);
            }
            else {
               // $("#DispatchDate").val("");
                $("#DispatchDate").prop("disabled", true);
               // $("#DispatchTime").val("");
                $("#DispatchTime").prop("disabled", true);
                $("#DispatchKM").prop("disabled", true);
                $("#ArrivalRemark").prop("disabled", false);
            }
        });
        $('#ChkArrivalSchedule').change(function () {
            if (this.checked) {
                $("#ArrivalDate").prop("disabled", false);
                $("#ArrivalDate").val($("#FM_Date").val());
                $("#ArrivalTime").val($("#FM_Time").val());
                $("#ArrivalTime").prop("disabled", false);
                $("#ArrivalKM").prop("disabled", false);
                $("#ArrivalRemark").prop("disabled", false);
            }
            else {
                //$("#ArrivalDate").val("");
                $("#ArrivalDate").prop("disabled", true);
                //$("#ArrivalTime").val("");
                $("#ArrivalTime").prop("disabled", true);
                $("#ArrivalKM").prop("disabled", true);
                $("#ArrivalRemark").prop("disabled", false);
            }
        });
        $("#FBothCHK").change(function () {
            if (this.checked) {
                $("#FMNO").removeAttr("disabled");
                Generate = false;
            }
            else {
                Generate = true;
                $("#FMNO").attr("disabled", "disabled");
                $("#FMNO").val($("#AutoNo").val());
            }
        });

        $("#btnAddDoc").click(function (event) {
            event.preventDefault();
            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#Document").val();
            ModelData["Type"] = "FM000";
            ModelData["RefType"] = "@Model.Header";

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });
        $("#btnViewVehicleAttachment").click(function (event) {
            event.preventDefault();
            var url = '/Logistics/Attachment/GetAllAttachmentsOnlyView';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#VehicleNo").val();
            ModelData["Type"] = "Vehic";
            ModelData["HideDelete"] = true;

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#DVAttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $("#btnCamera").hide();
                    $('#DVattachdoc').modal('show');
                },
            });
        });
        $("#btnViewDriverAttachment").click(function (event) {
            event.preventDefault();
            var url = '/Logistics/Attachment/GetAllAttachmentsOnlyView';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#DriverCode").val();
            ModelData["Type"] = "Drive";
            ModelData["HideDelete"] = true;

            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#DVAttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $("#btnCamera").hide();
                    $('#DVattachdoc').modal('show');
                },
            });
        });
        $(".txtfvalue").blur(function () {
            var ID = this.id;

            if (this.value == "" || this.value == null) {
                $("#" + ID).val("0");
            }

            var SumCharge = 0;
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                SumCharge += parseFloat(tds.find(".txtfvalue").val());
            });

            $("#NewBal").val(SumCharge.toFixed(2));
            $("#TotExp").val((SumCharge + parseFloat($("#Freight").val()) + parseFloat($("#TripFreight").val())).toFixed(2));
            $("#TotAdvExp").val((SumCharge + parseFloat($("#Advance").val()) + parseFloat($("#TripAdvance").val())).toFixed(2));

        });
        $("#Freight,#TripFreight").blur(function () {

            $("#ErrorMessage").hide();

            if ($("#Freight").val() == "" || $("#Freight").val() == null) {
                $("#Freight").val("0");
            }

            FreightAdvanceCalculation();
        });
        $("#Advance,#TripAdvance").blur(function () {
            $("#ErrorMessage").hide();
            if ($("#Advance").val() == "" || $("#Advance").val() == null) {
                $("#Advance").val("0");
            }
            FreightAdvanceCalculation();

        });

        $("#FMNO").blur(function () {
            var url = '@Url.Action("CheckManual")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { No: $("#FMNO").val(), document: $("#Document").val() },
                success: function (result) {
                    if (result.Message == "T") {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text(result.Msg);
                        return;
                    }
                }
            });
        });

        $('#btnRecentFM').click(function (event) {
            event.preventDefault();
            if (Generate) {
                window.location.href = "/Logistics/FM/Index?FMGenerate=A&TableName=&MainType=&Mode=Add&getRecentFM=true&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=&optioncode=FM";
            }
            else {
                window.location.href = "/Logistics/FM/Index?FMGenerate=M&TableName=&MainType=&Mode=Add&getRecentFM=true&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=&optioncode=FM";
            }
        });

        $("#VehicleNo").change(function (event) {
            LoadVehicleGrpStatus($("#VehicleNo").val());
        })

        $('#AddDest').click(function (event) {
            event.preventDefault();
            $("#DestCombo").prop("disabled", false);
        });

        $('#btnDelete').click(function (event) {
            event.preventDefault();
            var result = confirm("Are you sure you want to delete?");
            if (result) {
                if ('@Model.Header' == "FMMaster_Draft") {

                    var url = '@Url.Action("SaveDraftData")';
                    var ModelData = {};
                    ModelData["Document"] = $("#Document").val();
                    ModelData["Mode"] = '@Model.Mode';
                    ModelData["Header"] = '@Model.Header';
                    var DTO = { mModel: ModelData };
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify(DTO),
                        cache: false,
                        url: url,
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function () {
                            $('.spinner').show();
                        },
                        success: function (data) {

                            if (data.Status == 'Success') {
                                $('.spinner').hide();
                                window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                                $("#ErrorMessage").hide();
                            }
                            else {
                                $('.spinner').hide();
                                alert(data.Message);
                            }
                        },
                    });
                }
                else {
                    var url = '@Url.Action("SaveData")';
                    var ModelData = {};
                    ModelData["Document"] = $("#Document").val();
                    ModelData["Mode"] = '@Model.Mode';
                    ModelData["Header"] = '@Model.Header';
                    var DTO = { mModel: ModelData };
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify(DTO),
                        cache: false,
                        url: url,
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function () {
                            $('.spinner').show();
                        },
                        success: function (data) {
                            if (data.Status == 'Success') {
                                $('.spinner').hide();
                                window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                                $("#ErrorMessage").hide();
                            }
                            else {
                                $('.spinner').hide();
                                alert(data.Message);
                            }
                        },
                    });
                }
            }
            else {
                $('.spinner').hide();
                window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                $("#ErrorMessage").hide();
            }
        });
        $('#btnPrintOnly').click(function (event) {
            event.preventDefault();
            PrintLR = "OnlyPrint";
            $('#printpostmodel').modal('show');
        });
        $('#btnPrint').click(function (event) {
            PrintLR = "SavePrint";
            CheckDate();
        });

        $('#RouteSubmit').click(function (event) {
            var url = '@Url.Action("UpDateFMRouteData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["FMNO"] = $("#FMNO").val();
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        if ('@Model.Mode' != "Add") {
                            window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        }
                        else {
                            window.location.href = "/Logistics/FM/Index?TableName=&MainType=&Mode=Add&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=L&optioncode=FM";
                        }
                        $("#ErrorMessage").hide();
                    }
                    else if (data.Status == "CancelError") {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });

        $('#Submit').click(function (event) {
            debugger;
            event.preventDefault();
            if ('@Model.Mode' == "Delete") {
                var result = confirm("Are you sure you want to Delete This FM ?");
                if (result) {
                    SaveFM();
                }
            }
            else {
                //GetLedgerPosting();
                CheckDate();
            }
        });

        $('#FMDetails').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("FmActivity")';
            var DTO = { Fmno: $("#Document").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#WorkDetails");
                    $('.spinner').hide();
                    $('#FMDetailsModal').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                },
            });
        });
        $('#ShowFreightCharges').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("ShowCharges")';
            var DTO = { Freight: true };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#FMChargesDiv");
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $('.spinner').hide();
                    $('#FmChargesModal').modal('show');
                },
            });
        });
        $('#ShowAdvanceCharges').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("ShowCharges")';
            var DTO = { Freight: false };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#FMChargesDiv");
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $('.spinner').hide();
                    $('#FmChargesModal').modal('show');
                },
            });
        });
        $('#TripShowFreightCharges').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("TripShowCharges")';
            var DTO = { Freight: true };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#TripFMChargesDiv");
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $('.spinner').hide();
                    $('#TripFmChargesModal').modal('show');
                },
            });
        });
        $('#TripShowAdvanceCharges').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("TripShowCharges")';
            var DTO = { Freight: false };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#TripFMChargesDiv");
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $('.spinner').hide();
                    $('#TripFmChargesModal').modal('show');
                },
            });
        });
        $('#ShowFreightCharges,#TripShowFreightCharges').prop("disabled", false);
        $('#btnViewRoute').prop("disabled", false);
        $('#ShowAdvanceCharges,#TripShowAdvanceCharges').prop("disabled", false);
        $('#btnViewSchedule').prop("disabled", false);
        $("#btnAddNote").click(function (e) {
            e.preventDefault();
            $("#OnlyAlertNoteDiv").html('');
            var url = '/Logistics/AlertNote/ShoWAlertNoteList';
            var myTableArray = [];
            myTableArray.push($('#Document').val());
            var DTO = { Type: "FM000", TypeCode: myTableArray, DocTpe: "FM000" };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();

                    debugger;
                    var AttachDoc = $("#AlertAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#addnotemodel').modal('show');
                    $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");


                },
            });
        });
        $("#btnAddNarr").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").addClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").removeClass("hidden");
            var url = '/Logistics/AlertNote/PartialView';
            var ModelData = {};
            ModelData["AType"] = "FM000";
            ModelData["DocReceived"] = $("#FMNO").val();
            ModelData["DocumentKey"] = $("#Document").val();
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    debugger;
                    var AttachDoc = $("#AddAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                },
            });
        });
        $("#btnNarrList").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
        });
        $('#btnNarrSave').click(function (event) {
            event.preventDefault();
            debugger;
            if ($("#AType").val() == null || $("#AType").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Type is required..');
                return;
            }
            if ($("#CommonRemark").val() == null || $("#CommonRemark").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Remark is required..');
                return;
            }
            var AlertRefType = [];
            debugger;
            $('#ALerttbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');
                if ($(this).find(".chkfvalue").prop("checked") == true || $(this).find(".chkfvalueStop").prop("checked")) {
                    var myDets =
                    {
                        Code: tds.eq(1).text(),
                        select: $(this).find(".chkfvalue").prop("checked"),
                        stop: $(this).find(".chkfvalueStop").prop("checked"),
                    }
                    AlertRefType.push(myDets);
                }
            });
            var url = '/Logistics/AlertNote/SaveDataGetList';
            var ModelData = {};
            ModelData["AType"] = $("#AType").val();
            ModelData["TypeCode"] = $("#TypeCode").val();
            ModelData["RefersType"] = AlertRefType;
            ModelData["Remark"] = $("#CommonRemark").val();
            ModelData["Bling"] = $("#Bling").is(":checked");
            ModelData["PartyNarr"] = $("#PartyNarr").is(":checked");
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message);
                    } else {
                        var LoadDownLoadFiles = $("#AlertAlertNoteDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                    }
                },
            });
        });

    });
    function FreightAdvanceCalculation() {
        var SumCharge = 0;
        var TdsAmt = 0;
        debugger;
        if (parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))
        {
            debugger;
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                SumCharge += parseFloat(tds.find(".txtfvalue").val());
            });
            $("#TotExp").val(parseFloat($("#Freight").val()) + parseFloat($("#TripFreight").val()));
            $("#TotAdvExp").val((SumCharge + parseFloat($("#Advance").val()) + parseFloat($("#TripAdvance").val())).toFixed(2));
            if ($("#MaintainDriverAc").val() == "T")
            {
                if ($("#CutTDS").is(":checked")) {
                    var tdsAmt = parseFloat($('#TotExp').val()) * parseFloat($('#TDSRate').val() / 100);
                    TdsAmt = tdsAmt.toFixed(2);
                }
                else {
                    TdsAmt = 0;
                }
                $("#TDSAmt").val(TdsAmt);
                $("#Balance").val(0);
            }
            else
            {
                if ($("#CutTDS").is(":checked")) {
                    var tdsAmt = parseFloat($('#TotExp').val()) * parseFloat($('#TDSRate').val() / 100);
                    TdsAmt = tdsAmt.toFixed(2);
                }
                else {
                    TdsAmt = 0;
                }
                $("#TDSAmt").val(TdsAmt);
                var Bal = (parseFloat($("#Freight").val()) + parseFloat($("#TripFreight").val())) - (parseFloat($("#TripAdvance").val()) + parseFloat($("#Advance").val()) + parseFloat($("#TDSAmt").val()));
                if ($("#MaintainDriverAc").val() == "T") {
                    $("#Balance").val(0);
                }
                else {
                    $("#Balance").val(Bal.toFixed(2));
                }
            }
        }
        else
        {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Freight Not Less Than Advance.');
            return;
        }
        $('.spinner').hide();
    }
    function GetLedgerPosting() {

        if ($("#BlackListVehicle").val() == "T") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text($("#VehicleNo").val() + ' This Vehicle Activity Hold By Setup.. Please Change Vehicle....!');
            return;
        }

        if (!(Generate)) {
            if ($("#FMNO").val() == '0' || $("#FMNO").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('FMNO is required..');
                return;
            }
        }

        if ($("#FM_Date").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('FM_Date is required..');
            return;
        }

        if ($("#VehicleGroup").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Vehicle Status is required..');
            return;
        }

        if ($("#VehicleNo").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('VehicleNo is required..');
            return;
        }
        if ($("#Broker").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Broker is required..');
            return;
        }
        if ($("#VehicleGroup").val() != '100001') {
            if ($("#DriverCode").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Driver is required..');
                return;
            }
        }



        if ('@Model.FMSetup.KM' == "True") {
            if ($("#KM").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('KM is required..');
                return;
            }

        }

        if ($("#From").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('From is required..');
            return;
        }

        if ($("#To").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('To is required..');
            return;
        }

        if ($("#VehicleCategory").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Vehicle Category is required..');
            return;
        }

        if ($("#MaintainDriverAc").val() != "T") {
            if (!(parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PLease Check Freight And Advance..');
                return;
            }
        }

        if ('@Model.FMSetup.Payload' == "True") {
            if ($("#PayLoad").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PayLoad is required..');
                return;
            }
        }
        if ('@Model.FMSetup.DriverName' == "True") {
            if ($("#VehicleGroup").val() == '100001') {

                if ($("#DriverName").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('DriverName is required..');
                    return;
                }
            }
            else {
                if ($("#DriverCode").val() == '' || $("#DriverCode").val() == null) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Please Select Driver..');
                    return;
                }
            }
        }

        if ('@Model.FMSetup.LicenceNo' == "True") {
            if ($("#LicenceNo").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LicenceNo is required..');
                return;
            }
        }
        if ('@Model.FMSetup.LicenceExpDate' == "True") {
            if ($("#LicenceExpDate").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LicenceExpDate is required..');
                return;
            }
        }
        if ('@Model.FMSetup.ContactNo' == "True") {
            if ($("#ContactNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ContactNo is required..');
                return;
            }
        }
        if ($("#PayableAt").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('PayableAt is required..');
            return;
        }

        if ($("#MaintainDriverAc").val() != "T") {
            if (!(parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Freight Not Less Than Advance.');
                return;
            }
        }

        if ($("#ScheduleRequired").prop("checked") == true) {


            if ($("#ChkArrivalSchedule").prop("checked") == true) {

                if ($("#ArrivalDate").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalDate is required..');
                    return;
                }
                if ($("#ArrivalTime").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalTime is required..');
                    return;
                }
                if ($("#ArrivalKM").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalKM is required..');
                    return;
                }
            }
            if ($("#ChkDispatchSchedule").prop("checked") == true) {

                if ($("#DispatchDate").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('DispatchDate is required..');
                    return;
                }
                if ($("#DispatchTime").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('DispatchTime is required..');
                    return;
                }
                if ($("#DispatchKM").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('DispatchKM is required..');
                    return;
                }
            }

        }
        if (!(parseFloat($("#Balance").val()) >= 0)) {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Balance Should Be Greater Than Zero.... ');
            return;
        }






        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["FMNO"] = $("#FMNO").val();
        ModelData["FM_Time"] = $("#FM_Time").val();
        ModelData["FM_Date"] = $("#FM_Date").val();
        ModelData["VehicleGroup"] = $("#VehicleGroup").val();
        ModelData["VehicleNo"] = $("#VehicleNo").val();
        ModelData["Broker"] = $("#Broker").val();
        ModelData["KM"] = $("#KM").val();
        ModelData["From"] = $("#From").val();
        ModelData["To"] = $("#To").val();


        ModelData["ScheduleRequired"] = $("#ScheduleRequired").is(":checked");
        if ($("#ChkArrivalSchedule").is(":checked")) {
            ModelData["ArrivalDate"] = $("#ArrivalDate").val();
            ModelData["ArrivalTime"] = $("#ArrivalTime").val();
            ModelData["ArrivalKM"] = $("#ArrivalKM").val();
            ModelData["ArrivalRemark"] = $("#ArrivalRemark").val();
        }
        if ($("#ChkDispatchSchedule").is(":checked")) {
            ModelData["DispatchDate"] = $("#DispatchDate").val();
            ModelData["DispatchTime"] = $("#DispatchTime").val();
            ModelData["DispatchKM"] = $("#DispatchKM").val();
        }



        if (Generate) {
            ModelData["FMGenerate"] = "A";
        } else {
            ModelData["FMGenerate"] = "M";
        }

        var From = "", To = "", seq = "";
        $("#DestinationTable .RowData ").each(function () {
            var Row = $(this).closest("tr");
            var Sequence = $(this).find(".seqUenceRoute").val();

            seq = seq + Sequence + ",";
            From = From + Row.find(".FromCode").attr('id') + ",";
        });
        From = From.substring(0, (From.length - 1));
        seq = seq.substring(0, (seq.length - 1));
        ModelData["DestCombo"] = From;
        ModelData["DestCombo_Sequence"] = seq;

        var ChargeList = [];
        $('#sample-table-1 tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            ChargeList.push(myDets);
        });



        ModelData["Charges"] = ChargeList;
        ModelData["VehicleCategory"] = $("#VehicleCategory").val();
        ModelData["PayLoad"] = $("#PayLoad").val();
        ModelData["ReceiptNo"] = $("#ReceiptNo").val();
        ModelData["DriverName"] = $("#DriverName").val();
        ModelData["DriverCode"] = $("#DriverCode").val();
        ModelData["LicenceNo"] = $("#LicenceNo").val();
        ModelData["LicenceExpDate"] = $("#LicenceExpDate").val();
        ModelData["Owner"] = $("#Owner").val();
        ModelData["ChallanNo"] = $("#ChallanNo").val();
        ModelData["ContactNo"] = $("#ContactNo").val();
        ModelData["Freight"] = $("#Freight").val();
        ModelData["Advance"] = $("#Advance").val();
        ModelData["TripFreight"] = $("#TripFreight").val();
        ModelData["TripAdvance"] = $("#TripAdvance").val();
        ModelData["PayableAt"] = $("#PayableAt").val();
        ModelData["Remark"] = $("#Remark").val();
        //ModelData["SC_Date"] = $("#SC_Date").val();
        //ModelData["SC_Time"] = $("#SC_Time").val();
        //ModelData["SC_KM"] = $("#SC_KM").val();
        ModelData["Balance"] = $("#Balance").val();
        ModelData["TotAdvExp"] = $("#TotAdvExp").val();
        ModelData["TotExp"] = $("#TotExp").val();
        ModelData["TDSAmt"] = $("#TDSAmt").val();


        if ($("#All").prop("checked") == true) {
            ModelData["Dispach"] = true;
            ModelData["Delivery"] = true;
            ModelData["Billing"] = true;
            ModelData["All"] = true;
        } else {

            if ($("#Dispach").prop("checked") == true) {
                ModelData["Dispach"] = true;
            } else {
                ModelData["Dispach"] = false;
            }
            if ($("#Delivery").prop("checked") == true) {
                ModelData["Delivery"] = true;
            } else {
                ModelData["Delivery"] = false;
            }
            if ($("#Billing").prop("checked") == true) {
                ModelData["Billing"] = true;
            } else {
                ModelData["Billing"] = false;
            }
        }


        ModelData["LockRemark"] = $("#LockRemark").val();
        ModelData["Note"] = $("#Note").val();
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
        if ('@Model.Mode' == "Select") {
            ModelData["Mode"] = "Add";
        }
        ModelData["Draft_Name"] = $('#Draft_Name').val()

        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetPostingNew")';
        $.ajax({
            async: false,
            cache: false,
            url: url,
            data: JSON.stringify(DTO),
            type: "POST",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == "Success") {

                    if ('@Model.FMSetup.ShowLedgerPost' == "True") {


                        if ((data.TotDebit == 0) && (data.TotCredit == 0)) {
                            SaveFM();
                        } else {
                            $('#ledpostmodel').modal('show');
                            $('#ledpostingmodel').html(data.Html);
                        }
                    }
                    else {
                        $('#ledpostingmodel').html(data.Html);
                        SaveFM();
                    }


                }
                else if (data.Status == "CancelError") {
                    $('#ledpostingmodel').html(data.Html);
                    SaveFM();
                }
                else if (data.Status == "ValidError") {
                    alert(data.Message)
                }

            },
        });
    }
    function FMDraftList() {
        var url = '@Url.Action("FMDraft")';
        var ModelData = {};
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#FMDraft').html(data.Html);
                $("#LorryDraftmodal").modal("show");
            },
        });

    }
    function AddViaRoute() {
        var url = '@Url.Action("StoreAllDestination")';
        var DTO = { ViaRoute: $("#DestCombo").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var LoadDownLoadFiles = $("#GetDestView");
                //$('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
                $("#DestCombo").prop("disabled", true);
                ShowRouteDest();
                CatFreightAdvance();
                //$('.spinner').hide();
            },
        });
    }
    function AddButtonValidation() {
        var VehicleStatus = $("#VehicleGroup").val();
        if (VehicleStatus == "100001") {
            $("#HideHireBtn").hide();
            $("#ShowHireBtn").show();
            $("#Broker").prop("disabled", false);
            $("#VehicleCategory").prop("disabled", false);
            $("#DriverName").prop("disabled", false);
        }
        else {
            $("#HideHireBtn").show();
            $("#ShowHireBtn").hide();
            if ('@Model.FMSetup.ChgBroker' == "False") {
                $("#Broker").prop("disabled", true);
            }
            if ('@Model.FMSetup.ChgDriver' == "False") {
                $("#DriverName").prop("disabled", true);
            }
            $("#VehicleCategory").prop("disabled", true);
        }
    }
    function LoadVehicleGroupStatus() {
        var url = '@Url.Action("GetVehicleGroupStatus")'
        $('#VehicleGroup').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadDriverCode() {
        var url = '@Url.Action("GetDriver")'
        $('#DriverCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },


            initSelection: function (element, callback) {
                var data = { id: '@Model.DriverCode', text: '@Model.DriverNCombo' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    //LoadVehicleGroup
    {
        function LoadVehicleGroup() {

            var url = '@Url.Action("GetVehicleGroup")'
            $('#VehicleCategory').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term: term,
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id: item.Code
                                }
                            })
                        };
                    }
                },
                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleCategory', text: '@Model.VehicleCategory_Name' };
                    callback(data);
                },
                formatResult: function (exercise) {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                        "</div></span></div></div>";
                },
                formatSelection: function (exercise) {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                        "</div></span></div></div>";
                },
            })
        };

    }

    function LoadVehicle() {
        var url = '@Url.Action("GetVehicle")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        TruckStatus: $("#VehicleGroup").val(),
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNoName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })

    };
    function ClearDependingData() {
        if ($("#VehicleGroup").val() == "100001") {
            $("#DriverName").val("");
            $("#HireDriverDiv").show();
            $('#DriverCode').select2('data', { id: '', text: '' });
            $("#OwnAttachDriverDiv").hide();
        }
        else {
            $('#DriverCode').select2('data', { id: '', text: '' });
            $("#OwnAttachDriverDiv").show();
            $("#DriverName").val("");
            $("#HireDriverDiv").hide();
        }


        $('#VehicleNo').select2('data', { id: '', text: '' });
        $('#Broker').select2('data', { id: '', text: '' });
        $("#Broker").val('').trigger('change');
        $("#KM").val("");
        $('#VehicleCategory').select2('data', { id: '', text: '' });
        $("#DriverName").val("");
        $('#DriverCode').select2('data', { id: '', text: '' });
        $("#LicenceNo").val("");
        $("#LicenceExpDate").val("");
        $("#Owner").val("");
        $("#PayLoad").val("0");
    }
    function LoadVehicleGrpStatus(value) {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("FetChGrupStatus")';
        //BlackListVehicle
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { VehicleNo: value },
            success: function (result) {
                $("#Owner").val(result.OwnerName);
                $("#DriverName").val(result.DriverName);
                $("#LicenceNo").val(result.LicenNo);
                $("#ContactNo").val(result.DriverContact);
                $("#LicenceExpDate").val(result.LicenceExpDate);
                $("#PayLoad").val(result.Payload);
                $("#KM").val(result.KM);
                $("#MaintainDriverAc").val(result.MaintainDriverAc);
                if ($("#MaintainDriverAc").val() == "T") {
                    $("#lblChareheHead").text("Other Advance To Driver");
                }
                else {
                    $("#lblChareheHead").text("Other Expenses");
                }
                $("#CatchFreight").val(result.CatchFreight);
                if (result.MaintainDriverAc == "T") {
                    $("#lblAdvanceEcp").html("Own Driver Adv.");
                    //$("#lblAdvance").html("Driver Advance");
                    //$("#lblAdvance").addClass("driverAdv");
                    $("#sample-table-1  :input").prop("disabled", true);
                    $('#sample-table-1 tbody tr').each(function () {
                        var tds = $(this).find('td');
                        tds.find(".txtfvalue").val(0);
                    });
                }
                else {
                    $("#lblAdvanceEcp").html("Advance Expense");
                    //$("#lblAdvance").html("Advance");
                    //$("#lblAdvance").removeClass("driverAdv");
                    $("#sample-table-1  :input").prop("disabled", false);
                }



                $('#DriverCode').select2('data', { id: result.DriverCode, text: result.DriverNCombo });
                //$('#VehicleGroup').select2('data', { id: result.VehicleGroupStatusCode, text: result.VehicleGroupStatusName });
                $('#Broker').select2('data', { id: result.BroCode, text: result.BroNAme });
                $('#VehicleCategory').select2('data', { id: result.VehicleCategoryCode, text: result.VehicleCategoryName });
                $('#VehicleNo').select2('data', { id: result.VehicleNo, text: result.VehicleNoName });
                $('#VehicleGroup').select2('data', { id: result.VehicleGroupCode, text: result.VehicleGroupName });

                //alert(result.CutTDS)
                //alert(result.TDSRate)
                if (result.CutTDS == true) {
                    $('#CutTDS').prop('checked', true);
                    $("#TDSRate").val(result.TDSRate);
                }
                debugger;
                if (result.AllowToChange == true) {
                    $('#AllowToChangeTDS').prop('checked', true);
                    $("#TDSAmt").prop('disabled', false);
                    $("#AllowToChangeTDS").prop('disabled', false);
                } else {
                    $('#AllowToChangeTDS').prop('checked', false);
                    $("#TDSAmt").prop('disabled', true);
                    $("#AllowToChangeTDS").prop('disabled', true);
                }
                if (result.ChangeVehicleCharges == true) {
                    $("#Freight,#Advance").prop("disabled", false);
                } else {
                    $("#Freight,#Advance").prop("disabled", true);
                }
                if (result.ChangeDriverCharges == true) {
                    $("#TripFreight,#TripAdvance").prop("disabled", false);
                } else {
                    $("#TripFreight,#TripAdvance").prop("disabled", true);
                }

                if (result.VehiclePosting == true) {
                    $('#AllowToChangeVehicleCharges').prop('checked', true);
                } else {
                    $('#AllowToChangeVehicleCharges').prop('checked', false);
                }
                if (result.DriverPosting == true) {
                    $('#AllowToChangeDriverCharges').prop('checked', true);
                } else {
                    $('#AllowToChangeDriverCharges').prop('checked', false);
                }

                //CatFreightAdvance();
                if (result.HireBlackList == true) {
                    $("#BlackListVehicle").val("T");
                } else {
                    $("#BlackListVehicle").val("F");
                }
                if (result.HireBlackList == true || result.HireSpcl == true || result.Nofitication == true) {
                    SHowRemarkOfVehicles(result.HireSpcl, result.HireSpclRemark, result.HireBlackList, result.HireBlackListRemark, result.Nofitication, result.NofiticationMeg);
                }
                debugger;
                if (result.DriverHireBlackList == true) {
                    $("#hdnBlackListDriver").val("T");
                } else {
                    $("#hdnBlackListDriver").val("F");
                }
                if (result.DriverHireBlackList == true || result.DriverHireSpcl == true || result.DriverNofitication == true) {
                    //VehicleRemarkModal
                    if (result.DriverHireSpcl == true) {
                        //SpclRemarkDiv SpclRMK
                        $("#DriverSpclRMK").html(result.DriverSpclRemark);
                        $("#DriverSpclRemarkDiv").show();
                    }
                    else {
                        $("#DriverSpclRemarkDiv").hide();
                    }
                    if (result.DriverHireBlackList == true) {
                        //BlackListRemarkDiv BlackLStRMK
                        $("#DriverBlackLStRMK").html(result.DriverBlackListRemark);
                        $("#DriverBlackListRemarkDiv").show();
                    }
                    else {
                        $("#DriverBlackListRemarkDiv").hide();
                    }

                    if (result.DriverNofitication == true) {
                        //BlackListRemarkDiv BlackLStRMK
                        $("#DriverNofiticationMegRMK").html(result.DriverNofiticationMeg);
                        $("#DriverNofiticationMegDiv").show();
                    }
                    else {
                        $("#DriverNofiticationMegDiv").hide();
                    }


                    $('#DriverTicklerModal').modal('show');
                }
            }
        });
    }
    function SHowRemarkOfVehicles(SpclFlag, Spcl, BlackListFlag, BlackList, NotificationFlag, NotificationMeg) {
        //VehicleRemarkModal
        if (SpclFlag == true) {
            //SpclRemarkDiv SpclRMK
            $("#SpclRMK").html(Spcl);
            $("#SpclRemarkDiv").show();
        }
        else {
            $("#SpclRemarkDiv").hide();
        }

        if (BlackListFlag == true) {
            //BlackListRemarkDiv BlackLStRMK
            $("#BlackLStRMK").html(BlackList);
            $("#BlackListRemarkDiv").show();
        }
        else {
            $("#BlackListRemarkDiv").hide();
        }
        if (NotificationFlag == true) {
            //BlackListRemarkDiv BlackLStRMK
            $("#VehicleDueExpiredRMK").html(NotificationMeg);
            $("#VehicleDueExpiredDiv").show();
        }
        else {
            $("#VehicleDueExpiredDiv").hide();
        }


        $('#VehicleRemarkModal').modal('show');

    }
    function LoadFrom() {
        var url = '@Url.Action("From")'
        $('#From').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.From', text: '@Model.From_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#To').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.To', text: '@Model.To_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CatFreightAdvance();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function CHeckLrNoExistOrNot(tablename) {

        var url = '@Url.Action("CheckExistFM")';
        if (tablename == "FMMasterDraft") {
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { TableName: tablename, Colfield: "[DraftName]", Value: $('#Draft_Name').val(), SkipColumnName: "[FmNo]", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        //SaveDraftData();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Draft_Name Exist Please CHange Draft_Name.');
                        return;
                    }
                }
            });
        } else {

            CheckDate();

        }
    }
    function CheckDate() {
        var url = '@Url.Action("CheckFMDate")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { DocDate: $("#FM_Date").val(), DocTime: $("#FM_Time").val() },
            success: function (result) {
                if (result.Status == "T") {

                    if (Generate) {
                        CheckAuto();
                    } else {
                        CheckManual();
                    }
                } else {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Message);
                    return;
                }
            }
        });
    }
    function CheckManual() {
        var url = '@Url.Action("CheckManual")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { No: $("#FMNO").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    GetLedgerPosting();
                }
            }
        });
    }
    function CheckAuto() {
        var url = '@Url.Action("CheckAuto")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { No: $("#FMNO").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    GetLedgerPosting();
                }
            }
        });
    }

    function CatFreightAdvance() {

        //if ($("#FM_Date").val() == '')
        //{
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('FM_Date is required..');
        //    return;
        //}
        //if ($("#VehicleNo").val() == '') {

        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('VehicleNo is required..');
        //    return;
        //}
        //if ($("#VehicleCategory").val() == '') {

        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Vehicle Category is required..');
        //    return;
        //}




        var url = '@Url.Action("GetChargesOfFM")';

        var From = $("#From").val();
        var To = $("#To").val();
        var Vehicle = $("#VehicleNo").val();
        var FMDate = $("#FM_Date").val();
        var VehicleGroup = $("#VehicleCategory").val();
        var FMno = $("#FMNO").val();
        var Route = "";

        $("#DestinationTable > tbody  > tr").each(function () {
            var Row = $(this).closest('tr');
            var RouteVia = Row.find(".FromCode").attr('id');
            Route += RouteVia + ",";
        });

        Route = Route.substring(0, Route.length - 1);
        var Data = { FromBranch: From, RouteVia: Route, ToBranch: To, Vehicle: Vehicle, VehicleCategory: VehicleGroup, FMDate: FMDate, SFMno: FMno }
        $.ajax({
            //type: "POST",
            //dataType: "text",
            //data: { FromBranch: From, RouteVia: Route, ToBranch: To, Vehicle: Vehicle, VehicleCategory: VehicleGroup, FMDate: FMDate, SFMno: FMno },
            //cache: false,
            //url: url,
            //contentType: "application/json;charset=utf-8",
            //beforeSend: function () {
            //    $('.spinner').show();
            //},
            type: 'POST',
            url: url,
            data: Data,
            dataType: "text",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                var newJ = $.parseJSON(result);

                if (newJ.Status == "Success") {
                    debugger;

                    if (newJ.Freight != 0) {
                        $("#Freight").val(newJ.Freight);
                    } else {
                        $("#Freight").val("0.00");
                    }
                    if (newJ.Advance != 0) {
                        $("#Advance").val(newJ.Advance);
                    } else {
                        $("#Advance").val("0.00");
                    }

                    if (newJ.TripFreight != 0) {

                        $("#TripFreight").val(newJ.TripFreight);
                    } else {
                        $("#TripFreight").val("0.00");
                    }
                    if (newJ.TripAdvance != 0) {
                        $("#TripAdvance").val(newJ.TripAdvance);
                    } else {
                        $("#TripAdvance").val("0.00");
                    }



                    FreightAdvanceCalculation();

                    //$('.spinner').hide();
                    //var LoadDownLoadFiles = $("#FMChargesDiv");
                    //LoadDownLoadFiles.html('');
                    //LoadDownLoadFiles.html(result.Html);

                    //$('#FmChargesModal').modal('show');

                    //ShowFreightCharges
                }
                else {
                    $('.spinner').hide();
                    //$("#Freight").val(result.Freight);
                    //$("#Advance").val(result.Advance);
                    //alert("FMDate,VehicleNo And Vehicle Status Required Please Check It....");
                }

            }
        });
    }


    function SaveFM() {

        debugger;
        if ('@Model.Mode' == "Add" || '@Model.Mode' == "Edit" || '@Model.Mode' == "Select") {
            if ($("#BlackListVehicle").val() == "T") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text($("#VehicleNo").val() + ' This Vehicle Activity Hold By Setup.. Please Change Vehicle....!');
                return;
            }

            if ($("#hdnBlackListDriver").val() == "T") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text($('#DriverCode').select2('data').text + ' This Driver Activity Hold By Master.. Please Change Driver....!');
                return;
            }

            if (!(Generate)) {
                if ($("#FMNO").val() == '0' || $("#FMNO").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('FMNO is required..');
                    return;
                }
            }

            if ($("#FM_Date").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('FM_Date is required..');
                return;
            }

            if ($("#VehicleGroup").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle Status is required..');
                return;
            }

            if ($("#VehicleNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('VehicleNo is required..');
                return;
            }

            if ($("#Broker").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Broker is required..');
                return;
            }
            if ('@Model.FMSetup.KM' == "True") {
                if ($("#KM").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('KM is required..');
                    return;
                }
            }

            if ($("#From").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From is required..');
                return;
            }

            if ($("#To").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To is required..');
                return;
            }

            if ($("#VehicleCategory").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle Category is required..');
                return;
            }

            if ($("#MaintainDriverAc").val() != "T") {
                if (!(parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PLease Check Freight And Advance..');
                    return;
                }
            }

            if ('@Model.FMSetup.Payload' == "True") {
                if ($("#PayLoad").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PayLoad is required..');
                    return;
                }
            }
            if ('@Model.FMSetup.DriverName' == "True") {
                if ($("#VehicleGroup").val() == '100001') {

                    if ($("#DriverName").val() == '') {

                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DriverName is required..');
                        return;
                    }
                }
                else {
                    if ($("#DriverCode").val() == '' || $("#DriverCode").val() == null) {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Please Select Driver..');
                        return;
                    }
                }
            }

            if ('@Model.FMSetup.LicenceNo' == "True") {
                if ($("#LicenceNo").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('LicenceNo is required..');
                    return;
                }
            }
            if ('@Model.FMSetup.LicenceExpDate' == "True") {
                if ($("#LicenceExpDate").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('LicenceExpDate is required..');
                    return;
                }
            }
            if ('@Model.FMSetup.ContactNo' == "True") {
                if ($("#ContactNo").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ContactNo is required..');
                    return;
                }
            }
            if ($("#PayableAt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PayableAt is required..');
                return;
            }

            if ($("#MaintainDriverAc").val() != "T") {
                if (!(parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Freight Not Less Than Advance.');
                    return;
                }
            }

            if ($("#ScheduleRequired").prop("checked") == true) {

                if ($("#ChkArrivalSchedule").prop("checked") == true) {

                    if ($("#ArrivalDate").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('ArrivalDate is required..');
                        return;
                    }
                    if ($("#ArrivalTime").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('ArrivalTime is required..');
                        return;
                    }
                    if ($("#ArrivalKM").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('ArrivalKM is required..');
                        return;
                    }
                }
                if ($("#ChkDispatchSchedule").prop("checked") == true) {

                    if ($("#DispatchDate").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DispatchDate is required..');
                        return;
                    }
                    if ($("#DispatchTime").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DispatchTime is required..');
                        return;
                    }
                    if ($("#DispatchKM").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DispatchKM is required..');
                        return;
                    }
                }
            }
            if (parseFloat($("#Freight").val()) > 0) {
                if (!(parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val()))) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Freight Not Allow Less Than Advance Please Check It.....');
                    return;
                }
            }

        }

        var myLederArray = [];
        $('#LedgerPostgrid tbody').find('tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                tempId: tds.eq(0).text(),
                Code: tds.eq(1).text(),
                AccountName: tds.eq(2).text(),
                Debit: tds.eq(3).text(),
                Credit: tds.eq(4).text(),
                RefDoc: tds.eq(5).text(),
                TDSFlag: tds.eq(6).text(),
                Party: tds.eq(7).text(),
                RelatedTo: tds.eq(8).text(),
                Reference: tds.eq(9).text(),
                DelyCode: tds.eq(10).text(),
            }
            myLederArray.push(myDets);
        });
        var tdeb = 0;
        var tcred = 0;
        $('#LedgerPostgrid tfoot').find('tr').each(function () {
            var $tds = $(this).find('td');
            tdeb += parseFloat($tds.eq(3).text());
            tcred += parseFloat($tds.eq(4).text());

        });
        if (tdeb != tcred) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Credit and Debit doesnt Match cant Save....');
            return;
        }

        var url = '@Url.Action("SaveData")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["FMNO"] = $("#FMNO").val();
        ModelData["FM_Time"] = $("#FM_Time").val();
        ModelData["FM_Date"] = $("#FM_Date").val();
        ModelData["VehicleGroup"] = $("#VehicleGroup").val();
        ModelData["VehicleNo"] = $("#VehicleNo").val();
        ModelData["Broker"] = $("#Broker").val();
        ModelData["KM"] = $("#KM").val() == "" ? "0" : $("#KM").val();
        ModelData["From"] = $("#From").val();
        ModelData["To"] = $("#To").val();
        //ModelData["ScheduleRequired"] = $("#ScheduleRequired").prop("checked");
        ModelData["DieselAmt"] = $("#DieselAmt").val();
        ModelData["DieselLtr"] = $("#DieselLtr").val();
        ModelData["ScheduleRequired"] = $("#ScheduleRequired").is(":checked");
        if ($("#ChkArrivalSchedule").is(":checked")) {
            ModelData["ArrivalDate"] = $("#ArrivalDate").val();
            ModelData["ArrivalTime"] = $("#ArrivalTime").val();
            ModelData["ArrivalKM"] = $("#ArrivalKM").val();
            ModelData["ArrivalRemark"] = $("#ArrivalRemark").val();
        }
        if ($("#ChkDispatchSchedule").is(":checked")) {
            ModelData["DispatchDate"] = $("#DispatchDate").val();
            ModelData["DispatchTime"] = $("#DispatchTime").val();
            ModelData["DispatchKM"] = $("#DispatchKM").val();
        }
        if (Generate) {
            ModelData["FMGenerate"] = "A";
        } else {
            ModelData["FMGenerate"] = "M";
        }

        var From = "", To = "", seq = "";
        $("#DestinationTable .RowData ").each(function () {
            var Row = $(this).closest("tr");
            var Sequence = $(this).find(".seqUenceRoute").val();

            seq = seq + Sequence + ",";
            From = From + Row.find(".FromCode").attr('id') + ",";
        });
        From = From.substring(0, (From.length - 1));
        seq = seq.substring(0, (seq.length - 1));
        ModelData["DestCombo"] = From;
        ModelData["DestCombo_Sequence"] = seq;

        var ChargeList = [];
        $('#sample-table-1 tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            ChargeList.push(myDets);
        });

        ModelData["Charges"] = ChargeList;

        ModelData["VehicleCategory"] = $("#VehicleCategory").val();
        ModelData["PayLoad"] = $("#PayLoad").val() == "" ? "0" : $("#PayLoad").val();
        ModelData["ReceiptNo"] = $("#ReceiptNo").val();
        ModelData["DriverName"] = $("#DriverName").val();
        ModelData["DriverCode"] = $("#DriverCode").val();
        ModelData["LicenceNo"] = $("#LicenceNo").val();
        ModelData["LicenceExpDate"] = $("#LicenceExpDate").val();
        ModelData["Owner"] = $("#Owner").val();
        ModelData["ChallanNo"] = $("#ChallanNo").val();
        ModelData["ContactNo"] = $("#ContactNo").val();
        ModelData["Freight"] = $("#Freight").val();
        ModelData["Advance"] = $("#Advance").val();
        ModelData["TripFreight"] = $("#TripFreight").val();
        ModelData["TripAdvance"] = $("#TripAdvance").val();
        ModelData["PayableAt"] = $("#PayableAt").val();
        ModelData["Remark"] = $("#Remark").val();
        //ModelData["SC_Date"] = $("#SC_Date").val();
        //ModelData["SC_Time"] = $("#SC_Time").val();
        //ModelData["SC_KM"] = $("#SC_KM").val();
        ModelData["Balance"] = $("#Balance").val();
        ModelData["TotAdvExp"] = $("#TotAdvExp").val();
        ModelData["TotExp"] = $("#TotExp").val();
        ModelData["TDSAmt"] = $("#TDSAmt").val();


        if ($("#All").prop("checked") == true) {
            ModelData["Dispach"] = true;
            ModelData["Delivery"] = true;
            ModelData["Billing"] = true;
            ModelData["All"] = true;
        } else {

            if ($("#Dispach").prop("checked") == true) {
                ModelData["Dispach"] = true;
            } else {
                ModelData["Dispach"] = false;
            }
            if ($("#Delivery").prop("checked") == true) {
                ModelData["Delivery"] = true;
            } else {
                ModelData["Delivery"] = false;
            }
            if ($("#Billing").prop("checked") == true) {
                ModelData["Billing"] = true;
            } else {
                ModelData["Billing"] = false;
            }
        }


        ModelData["LockRemark"] = $("#LockRemark").val();
        ModelData["Note"] = $("#Note").val();
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
        if ('@Model.Mode' == "Select") {
            ModelData["Mode"] = "Add";
        }
        ModelData["Draft_Name"] = $('#Draft_Name').val()
        ModelData["LedgerPostList"] = myLederArray;
        ModelData["CutTDS"] = $("#CutTDS").is(":checked");
        ModelData["TDSRate"] = $("#TDSRate").val();

        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    $("#Document").val(data.SerialNo);

                    if ('@Model.Mode' == "Delete") {
                        alert("Document Delete Sucessully....! ....");
                    } else {
                        alert("Document Saved as " + data.SerialNo + "");
                    }
                    if (PrintLR == "SavePrint") {
                        $('.spinner').hide();
                        $('#printpostmodel').modal('show');
                    }
                    else {

                        if ('@Model.Mode' != "Add") {
                            window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";

                        } else {
                            @* window.location.href = "/Logistics/" + '@Model.Controller2' + "/Index?Type=@Model.Type&ChangeLog=Add&Mode=Add&ViewDataId=@Model.ViewDataId&Header=@Model.Header&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Controller2=@Model.Controller2" *@
                            window.location.href = "/Logistics/FM/Index?TableName=&MainType=&Mode=Add&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=L&optioncode=FM";

                        }
                    }
                    $("#ErrorMessage").hide();
                }
                else if (data.Status == "CancelError") {
                    $('.spinner').hide();
                    alert(data.Message);
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function PrintExecute() {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var mwhat = "";
        var mpaper = $("input[name=CurrName]:checked").val()                // paper size
        var mpageorient = $("input[name=ChequeNo]:checked").val();          // page orient (layout)
        var moutput = $("input[name=BillNumber]:checked").val();            // output
        var mtool = $("input[name=Sno]:checked").val();                     // report tool
        //var mmsg = $('#message').val();
        //mmsg=mmsg.replace("\n", "<br />");
        var memaildata = $('#repsubject').val() + "~" + $('#emailid').val() + "~" + $('#message').val();;
        // special loop for multiple parties
        var mstr = $('#hiddenvalues').val() + "~";
        // for reportcentreplus hiddenvalues is blank
        if (mstr == "~") {
            mstr = "$X$~";
        }
        //alert(mstr);
        var msel = mstr.split('~');
        var i;
        for (i = 0; i < msel.length; ++i) {
            if (msel[i] != '') {
                if (msel[i] = "$X$") {
                    msel[i] = "";
                }
                if ($('#EmailOnly').is(':checked')) {
                    if (moutput == "Pdf") {             // output
                        //window.open("/SendEmail/Index?Date=" + mDate + "&ViewDataId=" + $("#viewcode").val() + "&mpapersize=" + mpaper + "&mTo=" + $("#emailid").val(), '_blank');
                        //return;
                        if (mtool == "Crystal") {
                            mwhat = "ECRPDF";
                        } else {
                            mwhat = "EPDF";
                        }
                    }
                    if (moutput == "XLS") {          // output
                        mwhat = "EXLS";
                    }
                    if (moutput == "Word") {         // output
                        mwhat = "EWRD";
                    }
                }
                else {

                    if (mtool == "SSRS") {                  // reporttool
                        if (moutput == "Pdf") {          // output
                            if (mpageorient == "Portrait") {   // Layout
                                mwhat = "RPDF";
                            } else {
                                mwhat = "RPDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat = "RXLS";
                        }
                        if (moutput == "Word") {         // output
                            mwhat = "RWRD";
                        }
                        if (moutput == "VIEW") {         // Report viewer
                            //$("#hdnparastring") is defined in parent form (e.g. acledger, stock ledger, reportcentreplus etc.
                            var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#printformats").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            //var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#hdnformatname").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            window.open(murl, '_blank');
                            return;
                        }
                    }
                    if (mtool == "Crystal") {
                        mwhat = "CRPDF";
                    }
                    if (mtool == "Grid") {
                        if (moutput == "Pdf") {          // output
                            if (mpageorient == "Portrait") {   // Layout
                                mwhat = "PDF";
                            } else {
                                mwhat = "PDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat = "XLS";
                            if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }

                            @*if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }*@
                            sUrlpath = window.open(sUrlPath, '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&SelectContent=' + msel[i] + $("#hdnparastring").val(), '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val()+ '&SelectContent=' + $('#hiddenvalues').val(), '_blank');
                            return;
                        }
                    }
                } // emailonly
                if ($("#hdnisreportplus").val() == '!!!') {
                    var murl = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                } else {
                    var murl = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&LocationCode=' + $("#FMNO").val() + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                }
                @*if ($("#hdnisreportplus").val() == '!!!') {
                    var murl = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                } else {
                    var murl = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                }*@



                murl = window.open(murl, '_blank');

                if (PrintLR == "SavePrint") {
                    window.location.href = "/Logistics/FM/Index?TableName=&MainType=&Mode=Add&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=L&optioncode=FM";

                    @* window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";*@
                }

            }
        }
        if (mwhat.startsWith("E")) {
            alert("Email is Sent..Please Close the other Opened Blank tabs..");
        }
    };

    function ShowRouteDest() {
        var url = '@Url.Action("ShowListBox")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = {};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {

                var LoadDownLoadFiles = $("#ListBoxDiv");
                //$('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
                $(".listbox").prop('disabled', 'disabled');
            },
        });
    }
    function ComboDestination() {
        var url = '@Url.Action("AddDestination")'
        $('#DestCombo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DestCombo', text: '@Model.DestCombo_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                AddViaRoute();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };





    function LoadBroker() {

        var url = '@Url.Action("GetBroker")'
        $('#Broker').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker', text: '@Model.Broker_Name' };
                callback(data);
            },
            formatResult: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadPayableAt() {
        var url = '@Url.Action("PayableAt")'
        $('#PayableAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.PayableAt', text: '@Model.PayableAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function FreightAlertNoteMaster() {
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        myTableArray.push($("#Document").val());

        var DTO = { Type: "FM000", TypeCode: myTableArray, DocTpe: "FM000" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
            },
        });
    }
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            @if (Model.LedgerThrough)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="" id="FmDetailsPanel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " role="form" style="margin-top:4%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <div class="tab" style="margin-top: -15px;">
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="FreightMemoDesign">Basic Details</button>
                @if (Model.Mode != "Add")
                {
                    <button class="tablinks" onclick="openCity(event, 'divLedgerTable1')" id="ExtraInfo">Route Details</button>
                }
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')">Other Details</button>
            </div>
            <div id="divLedgerTable" style="min-height:450px;max-height:450px;position:absolute;width:98%;overflow-x:auto;" class="tabcontent">
                @if (Model.FMSetup.FMBoth)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (Model.FMSetup.FMGenerate)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }
                @if (Model.Mode == "Add")
                {
                    <button class="btn btn-info legend2" id="FMDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="FMDraftList();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                    <button class="btn btn-info legend2" id="btnRecentFM" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>
                }
                else
                {
                    <button class="btn btn-info legend2" disabled id="FMDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="FMDraftList();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                    <button class="btn btn-info legend2" disabled id="btnRecentFM" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>
                }
                <button class="btn btn-info legend2" id="FMDetails" style="font-size: 12px;padding:0px 20px 3px 20px;">Details</button>
                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-sm-9">
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">F.M No:<span style="color:red;">*</span></label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.FMNO, new { @class = "form-control", @maxlength = "9", @style = "width:100px;", @Value = Model.FMNO, @disabled = "disabled" })
                                </div>
                                <div class="col-sm-2">
                                    <label class=" bold   col-sm-3  control-label">Time:<span style="color:red;">*</span></label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.FM_Time, new { @class = "form-control", @type = "time", @style = "width:105px;", @Value = Model.FM_Time })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;">Date:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.FM_Date, new { @class = "form-control", @Value = Model.DocDate.ToString("dd/MM/yyyy") })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Vehicle Status:<span style="color:red;">*</span></label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleGroup, @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">VehicleNo:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 " style="padding-left: 0px;">
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="ShowHireBtn">
                                        <a href="~/Vehicles/HireVehicle/Index?TableName=VehicleMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Hire%20Vehicle%20Master&ViewDataId=HireVehicle&Controller2=HireVehicle&Module=Master&optiontype=M&optioncode=HireVehicleMaster" target="_blank" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle"><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="HideHireBtn">
                                        <a href="#" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle" disabled><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-6" style="padding-left:0px !important;padding-right:0px !important;">
                                        @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:123%;", @Value = Model.VehicleNo })
                                    </div>
                                    <div class="col-sm-3" style="padding-left:30px !important;padding-right:0px !important;">
                                        <button class="btn btn-success" id="btnViewVehicleAttachment" title="View Vehicle Attachments" style="font-size: 13px;padding:2px 12px;"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Broker:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 " style="">
                                    @if (Model.FMSetup.ChgBroker)
                                    {
                                        @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker, @disabled = "disabled" })
                                    }
                                </div>
                                <label class=" bold   col-sm-1  control-label">KM:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.KM, new { @class = "form-control", @maxlength = "9", @style = "width:110px;", @Value = Model.KM })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">From:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.From, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.From })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Add-Dest.:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="AddDest"><i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.DestCombo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DestCombo, @disabled = "disabled" })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Final-Dest:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.To, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.To })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Vehicle Cate.:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.VehicleCategory, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleCategory, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">View-Dest:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" id="btnViewRoute" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#GETDestMODAL"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;" id="ListBoxDiv">
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Receipt No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ReceiptNo, new { @class = "form-control", @maxlength = "10", @Value = Model.ReceiptNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Driver-Name:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-12 " id="HireDriverDiv">
                                        @if (Model.FMSetup.ChgDriver)
                                        {
                                            @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @maxlength = "30", @style = "width:100%;", @Value = Model.DriverName })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @maxlength = "30", @style = "width:100%;", @Value = Model.DriverName, @disabled = "disabled" })
                                        }
                                    </div>
                                    <div class="col-sm-12 " id="OwnAttachDriverDiv" style="padding: 0px;">
                                        <div class="col-sm-10" style="padding: 0px;margin: 0px;">
                                            @if (Model.FMSetup.ChgDriver)
                                            {
                                                @Html.TextBoxFor(x => x.DriverCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DriverCode })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => x.DriverCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DriverCode, @disabled = "disabled" })
                                            }
                                        </div>
                                        <div class="col-sm-2" style="padding-left:5px !important;padding-right:0px !important;">
                                            <button class="btn btn-success" id="btnViewDriverAttachment" title="View Driver Attachments" style="font-size: 13px;padding:2px 12px;"><i class="glyphicon glyphicon-eye-open"></i></button>
                                        </div>
                                    </div>

                                </div>
                                <label class=" bold   col-sm-1 control-label">Licence-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceNo, new { @class = "form-control", @maxlength = "25", @Value = Model.LicenceNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Lic.Exp-Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceExpDate, new { @class = "form-control", @Value = Model.LicenceExpDate })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Owner-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Owner, new { @class = "form-control", @maxlength = "50", @style = "width:100%;", @Value = Model.Owner })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Challan-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ChallanNo, new { @class = "form-control", @maxlength = "10", @Value = Model.ChallanNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Contact-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control", @maxlength = "10", @Value = Model.ContactNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">PayLoad:<span style="color:red;">*</span></label>
                                <div class="col-sm-2 " style="">
                                    @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @Value = Model.PayLoad })
                                </div>
                                <label class=" bold  col-sm-offset-5  col-sm-1  control-label">Payable-At:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.PayableAt, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.PayableAt })
                                </div>

                                <div class="hidden">
                                    <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width:auto;">Loaded :</label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.Loaded, new { @class = "form-control", @style = "", @Value = Model.Loaded, @readonly = "readonly" })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="margin-left: 0px;width: auto;">Available PayLoad:</label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.AvailablePayload, new { @class = "form-control", @style = "", @Value = Model.AvailablePayload, @readonly = "readonly" })
                                    </div>
                                    <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width: auto;">Over Load:</label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.OverLoadLoad, new { @class = "form-control", @style = "", @Value = Model.OverLoadLoad, @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Freight Charges:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.Freight, new { @class = "form-control", @style = "width:100%;", @Value = Model.Freight.ToString("0.00") })
                                    </div>
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" title="Freight Description" id="ShowFreightCharges"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" id="">Freight Advance:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.Advance, new { @class = "form-control", @style = "width:100%;", @Value = Model.Advance.ToString("0.00") })
                                    </div>
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" title="Advance Description" id="ShowAdvanceCharges"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-2  control-label" title="If Checkbox Checked Then Freight Charges Posting Created.">Vehicle Posting:</label>
                                <div class="col-sm-1 ">
                                    @Html.CheckBoxFor(x => x.AllowToChangeVehicleCharges, new { @class = "form-control", @style = "width: 21px;height: 21px; ", @disabled = "disabled", @Value = Model.AllowToChangeVehicleCharges })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label" title="Driver Trip Charges">Trip Charges:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.TripFreight, new { @class = "form-control", @style = "width:100%;", @Value = Model.TripFreight.ToString("0.00") })
                                    </div>
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" title="Trip Charges Description" id="TripShowFreightCharges"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" title="Driver Trip Advance">Trip Advance:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.TripAdvance, new { @class = "form-control", @style = "width:100%;", @Value = Model.TripAdvance.ToString("0.00") })
                                    </div>
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" title="Trip Advance Description" id="TripShowAdvanceCharges"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-2  control-label" title="If Checkbox Checked Then Driver Trip Charges Posting Created.">Driver Trip Posting:</label>
                                <div class="col-sm-1 ">
                                    @Html.CheckBoxFor(x => x.AllowToChangeDriverCharges, new { @class = "form-control", @style = "width: 21px;height: 21px; ", @disabled = "disabled", @Value = Model.AllowToChangeDriverCharges })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Remark:</label>
                                <div class="col-sm-11 ">
                                    @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.Remark })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Schedule:</label>
                                <div class="col-sm-1 ">
                                    @Html.CheckBoxFor(x => x.ScheduleRequired, new { @class = "form-control", @style = "width: 21px;height: 21px; ", @Value = Model.ScheduleRequired })
                                </div>
                                @if (Model.ScheduleRequired)
                                {
                                    <div class="col-sm-1 ">
                                        <input type="checkbox" id="ChkArrivalSchedule" class="form-control" style="height:21px;width:21px;" />
                                    </div>
                                    <div class="col-sm-9">

                                        <label class=" bold   col-sm-2  control-label" style="">Arrival Date:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Arrival Time:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Arrival KM:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM })
                                        </div>
                                    </div>


                                }
                                else
                                {
                                    <div class="col-sm-1">
                                        <input type="checkbox" id="ChkArrivalSchedule" class="form-control" style="height:21px;width:21px;" />
                                    </div>
                                    <div class="col-sm-9">
                                        <label class=" bold   col-sm-2  control-label" style="">Arrival Date:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate, @disabled = "disabled" })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Arrival Time:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime, @disabled = "disabled" })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Arrival KM:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM, @disabled = "disabled" })
                                        </div>
                                    </div>

                                }



                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label"></label>
                                <div class="col-sm-1 ">
                                </div>
                                @if (Model.ScheduleRequired)
                                {
                                    <div class="col-sm-1">
                                        <input type="checkbox" id="ChkDispatchSchedule" class="form-control" style="height:21px;width:21px;" />
                                    </div>
                                    <div class="col-sm-9">
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch Date:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchDate, new { @class = "form-control", @style = "", @Value = Model.DispatchDate })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch Time:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchTime, new { @class = "form-control", @type = "time", @Value = Model.DispatchTime })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch KM:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchKM, new { @class = "form-control", @type = "", @Value = Model.DispatchKM })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-sm-1">
                                        <input type="checkbox" id="ChkDispatchSchedule" class="form-control" style="height:21px;width:21px;" />
                                    </div>
                                    <div class="col-sm-9">
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch Date:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchDate, new { @class = "form-control", @style = "", @Value = Model.DispatchDate, @disabled = "disabled" })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch Time:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchTime, new { @class = "form-control", @type = "time", @Value = Model.DispatchTime, @disabled = "disabled" })
                                        </div>
                                        <label class=" bold   col-sm-2  control-label" style="">Dispatch KM:</label>
                                        <div class="col-sm-2 ">
                                            @Html.TextBoxFor(x => x.DispatchKM, new { @class = "form-control", @type = "", @Value = Model.DispatchKM, @disabled = "disabled" })
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>
                        <div class="col-sm-3">
                            <div style="border: 2px solid #d3d3d3;height:410px;">
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" id="lblChareheHead" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Other Advance To Driver</label>
                                </div>
                                <div class="form-group " style="padding:0px 0px 0px 35px;min-height: 180px;max-height:180px;overflow: auto;">
                                    <table id="sample-table-1" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            @if (Model.Charges != null)
                                            {
                                                foreach (var item in @Model.Charges.ToList())
                                                {
                                                    <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                        <td style="vertical-align:inherit;width:117px;">@item.Code</td>
                                                        <td hidden="hidden">@item.AddLess</td>
                                                        <td><input type="text" id="txtf_@item.Fld" alt="@item.Fld" value="@item.ColVal" class="txtfvalue form-control" style="text-align:right;width:131px;" /></td>
                                                        <td hidden="hidden">@item.ChgPostCode</td>
                                                        <td hidden="hidden">@item.Fld</td>
                                                    </tr>
                                                }

                                            }
                                        </tbody>
                                    </table>
                                    <table id="" class="zui-charge hidden">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Total</td>
                                                <td><input type="text" id="NewBal" disabled value="@Model.NewBal.ToString(" 0.00");" class="form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>

                                </div>
                                <div class="form-group " style="padding:0px 0px 0px 35px;height: auto;">
                                    <table id="" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;" id="lblAdvanceEcp">Advance Expense</td>
                                                <td><input type="text" id="TotAdvExp" disabled value="@Model.TotAdvExp.ToString(" 0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Total Expenses</label>
                                </div>
                                <div class="form-group " style="padding:0px 0px 0px 35px;height: auto;">
                                    <table id="" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Total Expense</td>
                                                <td><input type="text" id="TotExp" disabled value="@Model.TotExp.ToString(" 0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                            <tr hidden="hidden">
                                                <td>@Html.CheckBoxFor(x => x.CutTDS, new { @id = "CutTDS", @name = "CutTDS", @hidden = "hidden" })</td>
                                            </tr>
                                            <tr hidden="hidden">
                                                <td> @Html.TextBoxFor(x => x.TDSRate, new { @class = "form-control", @id = "TDSRate", @name = "TDSRate", @hidden = "hidden", @Value = @Model.TDSRate })</td>
                                            </tr>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">TDS Amount<i> @Html.CheckBoxFor(x => x.AllowToChangeTDS, new { @id = "AllowToChangeTDS", @name = "AllowToChangeTDS" })</i></td>
                                                <td><input type="text" id="TDSAmt" disabled value="@Model.TDSAmt" class="form-control" style="text-align:right;width:131px;" /></td>

                                            </tr>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Balance</td>
                                                <td><input type="text" id="Balance" disabled value="@Model.Balance.ToString(" 0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class=" bold   col-sm-1  control-label">Arrival Remark:</label>
                        <div class="col-sm-6 ">
                            @Html.TextAreaFor(x => x.ArrivalRemark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.ArrivalRemark })
                        </div>
                        <label class=" bold   col-sm-1  control-label">Schedule :</label>
                        <div class="col-sm-1 ">
                            <button class="btn btn-primary" id="btnViewSchedule" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleModal"><i class="glyphicon glyphicon-eye-open"></i></button>
                        </div>
                        <label class=" bold   col-sm-1  control-label">Route :</label>
                        <div class="col-sm-1 ">
                            <button class="btn btn-primary" id="btnViewScheduleCalculator" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleCalculatorModal"><i class="glyphicon glyphicon-eye-open"></i></button>
                        </div>
                    </div>
                </div>
            </div>
            <div id="divLedgerTable1" style="min-height:450px;max-height:450px;position:absolute;width:98%;overflow-x:auto;width: 98%;" class="tabcontent">
                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-sm-5">
                            @Html.Partial("ChangeRoueDetails", Model)
                        </div>
                    </div>
                </div>
            </div>
            <div id="divLedgerTable2" style="min-height:450px;max-height:450px;position:absolute;width:98%;overflow-x:auto;width: 98%;" class="tabcontent">
                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="form-group">
                            <div class="col-sm-8">
                                <label class=" bold   col-sm-2  control-label">Diesel (In Liter) :</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.DieselLtr, new { @class = "form-control", @Value = Model.DieselLtr, @maxlenght = "10" })
                                </div>
                                <label class=" bold   col-sm-2 control-label">Diesel Amount :</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.DieselAmt, new { @class = "form-control", @Value = Model.DieselAmt, @maxlenght = "10" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <script>
                function openCity(evt, cityName) {
                    $("#ErrorMessage1").hide();
                    var i, tabcontent, tablinks;
                    tabcontent = document.getElementsByClassName("tabcontent");
                    for (i = 0; i < tabcontent.length; i++) {

                        tabcontent[i].style.display = "none";
                    }
                    tablinks = document.getElementsByClassName("tablinks");
                    for (i = 0; i < tablinks.length; i++) {

                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                    }
                    document.getElementById(cityName).style.display = "block";
                    evt.currentTarget.className += " active";
                    debugger;
                    if (cityName == "divLedgerTable" || cityName == "divLedgerTable2") {
                        $(".FreightMomoSaveBtns").show();
                        $(".FreightMomoRouteSaveBtns").hide();
                    }
                    else {
                        $(".FreightMomoSaveBtns").hide();
                        $(".FreightMomoRouteSaveBtns").show();
                    }
                }
                document.getElementById("FreightMemoDesign").click();
            </script>
        </div>
    </div>
</section>

<footer class="footer-section" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-4">
            @*<button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>*@
            <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" title="Attachment">Attachment</button>
            <button class="btn btn-danger" id="btnDocDiff" style="font-size: 13px;padding:3px 12px;" data-toggle="modal" data-target="#FMDiffModal" title="Attachment">Difference</i></button>
        </div>
        <div class="col-sm-4" style="margin-top:0px;">
            <div class="col-sm-12" id="" style="overflow: hidden;padding-left: 0px!important;">
                <label class="col-sm-offset-4 col-sm-8 control-label" style="margin-top:5px;">ALT AIR-3.0, Shruham Software</label>
            </div>
        </div>
        <div class="col-sm-4" style="padding-right:20px;">
            <div class="pull-right">
                @if (Model.Mode != "Add")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                }
                @if (Model.Mode == "Edit" || Model.Mode == "Add")
                {
                    <button class="btn btn-info FreightMomoSaveBtns" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Save</button>
                    <div class="btn-group dropup FreightMomoSaveBtns">
                        <button type="button" style="font-size: 13px;padding:3px 12px;" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">SMS Print Email<span class="caret"></span></button>
                        <ul role="menu" class="dropdown-menu" style="border: 1px thin;box-shadow:3px 3px 15px 1px rgba(0,0,0,0.2) !important; background-color: whitesmoke; height: 120px; font-family: Tahoma; font-weight: bolder; color: darkgray; padding-left: 10px; padding-right: 10px; left:0px;">
                            <li><a id="btnPrint">Save &amp; Print</a></li>
                        </ul>
                    </div>
                    <button class="btn btn-info FreightMomoRouteSaveBtns" style="font-size: 13px;padding:3px 12px;" id="RouteSubmit" data-toggle="tooltip" data-placement="top" title="Save">Save Route</button>
                }
                @if (Model.Mode == "Delete")
                {
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Delete</button>
                }
                @if (Model.LedgerThrough)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>

<!--Attachment Modal -->
<div class="example-modal">
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>

<!--Attachment Modal -->
<div class="example-modal">
    <div id="DVattachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="DVAttachDoc">
            </div>
        </div>
    </div>
</div>
<!--FMDetails Modal -->
<div class="modal right fade" id="FMDetailsModal" style="margin-top: 30px;" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl">
        <div class="modal-content" style="width: 100%;">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <h4 class="modal-title"><b>FM Details</b></h4>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="WorkDetails" style="overflow: auto;width: 100%;display: block;min-height:500px;max-height:500px;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--All Destination Modal -->
<div class="modal fade" id="GETDestMODAL" style="overflow:scroll;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: fit-content;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-body">
                <div id="GetDestView">
                    @Html.Partial("_Get_Destination_List", Model)
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--LorryDraft Modal -->
<div class="example-modal">
    <div id="LorryDraftmodal" class="modal modal-default">
        <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 2%;">
            <div id="LorryDraftmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>FM Draft</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="margin-top: 0px;max-height:500px;min-height:500px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group col-sm-12" id="FMDraft">
                                        <hr />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Only Alert Note Modal -->
<div class="example-modal">
    <div id="AlertNoteModal" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="OnlyAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Alert/Note Modal -->
<div class="example-modal">
    <div id="addnotemodel" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="AlertAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                        <div class="form-group hidden" id="AddAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button class="btn btn-success" type="button" id="btnAddNarr">Add Narration</button>
                        <button class="btn btn-info hidden" type="button" id="btnNarrList">Show List</button>
                        <button class="btn btn-success hidden" type="button" id="btnNarrSave">Save</button>
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Schedule Information Modal -->
<div class="example-modal">
    <div id="ScheduleModal" class="modal modal-default" style="padding-top: 15px;">
        <div class="modal-dialog " style="width:100%;">
            <div style="overflow:auto;">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Schedule</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table ">
                                    <thead>
                                        <tr>
                                            <th style="width: 35px;">Branch</th>
                                            <th style="width: 120px;" colspan="1">Arrival Schedule</th>
                                            <th style="width: 120px;" colspan="1">Arrival Data</th>
                                            @*
                                                <th style="width: 120px;" colspan="1">Activity Time</th>*@
                                            <th style="width: 85px;" colspan="1">Reform</th>
                                            <th style="width: 120px;" colspan="1">Arrival Re-Schedule</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Schedule</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Data</th>
                                            @*
                                                <th style="width: 120px;" colspan="1">Ativity Time</th>*@
                                            <th style="width: 85px;" colspan="1">Reform</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Re-Schedule</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @{
                                            if (Model.ViewSchedule != null)
                                            {
                                                foreach (var item in Model.ViewSchedule)
                                                {
                                                    <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td>@item.Branch</td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ArrivalSchDate</td>
                                                                        <td>@item.ArrivalSchTime</td>
                                                                        <td>@item.ArrivalSchKm</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ArrivalDate</td>
                                                                        <td>@item.ArrivalTime</td>
                                                                        <td>@item.ArrivalKM</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>

                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td> @item.ArrivalLateTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>

                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ArrivalReSchDate</td>
                                                                        <td>@item.ArrivalReSchTime</td>
                                                                        <td>@item.ArrivalReSchKm</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.DispatchSchDate</td>
                                                                        <td>@item.DispatchSchTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.DispatchDate</td>
                                                                        <td>@item.DispatchTime</td>
                                                                        <td>@item.DispatchKM</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.DispatchLateTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>

                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.DispatchReSchDate</td>
                                                                        <td>@item.DispatchReSchTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>

                                                    </tr>
                                                }
                                            }
                                        }

                                        @*@{
                                            if (Model.ViewSchedule != null)
                                            {
                                            foreach (var item in Model.ViewSchedule)
                                            {
                                            <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                <td rowspan="2">@item.Branch</td>
                                                <td>
                                                    <table id="" class="zui-table editableTable" style="width:100%;">
                                                        <thead>
                                                            <tr>
                                                                <th colspan="3">Schedule</th>
                                                                <th colspan="3">ReSchedule</th>
                                                            </tr>
                                                            <tr>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                                <th>KM</th>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                                <th>KM</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@item.ArrivalSchDate</td>
                                                                <td>@item.ArrivalSchTime</td>
                                                                <td>@item.ArrivalSchKm</td>
                                                                <td>@item.ArrivalReSchDate</td>
                                                                <td>@item.ArrivalReSchTime</td>
                                                                <td>@item.ArrivalReSchKm</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </td>
                                                <td>
                                                    <table id="" class="zui-table editableTable" style="width:100%;">
                                                        <thead>
                                                            <tr>
                                                                <th colspan="2">Schedule</th>
                                                                <th colspan="2">ReSchedule</th>
                                                            </tr>
                                                            <tr>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@item.DispatchSchDate</td>
                                                                <td>@item.DispatchSchTime</td>
                                                                <td>@item.DispatchReSchDate</td>
                                                                <td>@item.DispatchReSchTime</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </td>
                                                <td>
                                                    <table id="" class="zui-table editableTable" style="width:100%;">
                                                        <thead>
                                                            <tr>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                                <th>KM</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@item.ArrivalDate</td>
                                                                <td>@item.ArrivalTime</td>
                                                                <td>@item.ArrivalKM</td>
                                                            </tr>

                                                        </tbody>
                                                    </table>
                                                </td>

                                                <td>
                                                    <table id="" class="zui-table editableTable" style="width:100%;">
                                                        <thead>
                                                            <tr>
                                                                <th>Date</th>
                                                                <th>Time</th>
                                                                <th>KM</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@item.DispatchDate</td>
                                                                <td>@item.DispatchTime</td>
                                                                <td>@item.DispatchKM</td>
                                                            </tr>

                                                        </tbody>
                                                    </table>

                                                </td>

                                            </tr>
                                            <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                <td colspan="6">

                                                    <table id="" class="zui-table editableTable" style="width:100%;">
                                                        <thead>
                                                            <tr>
                                                                <th style="width:50%;color: red;">Arrival Remark</th>
                                                                <th style="width:50%;color: red;">Dispatch Remark</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>@item.ArrivalLateTime</td>
                                                                <td>@item.DispatchLateTime</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </td>
                                            </tr>
                                            }

                                            }
                                            }*@
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Schedule Calculate Information Modal -->
<div class="example-modal">
    <div id="ScheduleCalculatorModal" class="modal modal-default" style="padding-top: 15px;">
        <div class="modal-dialog " style="width:45%;">
            <div style="overflow:auto;">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Route Data</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table ">
                                    <thead>
                                        <tr>
                                            <th style="width: 250px;" colspan="1">Route</th>
                                            <th style="width: 100px;" colspan="1">Activity</th>
                                            <th style="width: 100px;" colspan="1">Running Time</th>
                                            <th style="width: 100px;" colspan="1">Running KM</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @{
                                            if (Model.scheduleCalculators != null)
                                            {
                                                foreach (var item in Model.scheduleCalculators)
                                                {
                                                    <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td>@item.FromName - @item.ToName </td>
                                                        <td>@item.ActivityTime</td>
                                                        <td>@item.RunningTime</td>
                                                        <td>@item.RunningKM</td>
                                                    </tr>
                                                }
                                            }
                                        }

                                        <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                            <td>Total :-</td>
                                            <td>@Model.GrandActivity</td>
                                            <td>@Model.GrandTime</td>
                                            <td>@Model.GrandKM</td>
                                        </tr>
                                    </tbody>

                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Fm Differ Parameter List Modal -->
<div class="example-modal">
    <div id="FMDiffModal" class="modal modal-default" style="padding-top: 15px;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Differ</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                @Html.Partial("_FmDiffParametersView", Model.differenceFm)
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Ledger Posting Information Modal -->
<div class="example-modal">
    <div id="ledpostmodel" class="modal modal-primary" style="padding-top: 15px;">
        <div class="modal-dialog" style="width:700px;">
            <div id="ledpostingmodel">
                @Html.Partial("LedgerPosting")
            </div>
        </div>
    </div>
</div>

<!--Vehicle Reamrk Modal -->
<div class="example-modal">
    <div id="VehicleRemarkModal" class="modal modal-default" style="padding-top: 15px;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body" style="margin-top:5%;">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Vehicle Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group " id="SpclRemarkDiv">
                                <label style="font-weight:bold;color:black;">Remark :-&nbsp;&nbsp;</label><label id="SpclRMK" style="font-weight:bold;color:black;"></label>
                            </div>
                            <div class="form-group " id="BlackListRemarkDiv">
                                <label style="font-weight:bold;color:black;">Hold Remark :-&nbsp;&nbsp;</label><label id="BlackLStRMK" style="font-weight:bold;color:red;"></label>
                            </div>
                            <div class="form-group " id="VehicleDueExpiredDiv">
                                <label id="VehicleDueExpiredRMK" style="font-weight:bold;color:red;"></label>
                            </div>


                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Print Option -->
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @Html.Partial("ReportPrintOptions")
            </div>
        </div>
    </div>
</div>


<input type="hidden" id="AutoNo" />
<input type="hidden" id="MaintainDriverAc" />
<input type="hidden" id="FMVouRelReq" />
<input type="hidden" id="hdnAddBranchListBoxArray" />
<input type="hidden" name="hdn" id="DeleteLc" />
<input type="hidden" id="hdnAreaID" />
<input type="hidden" id="CatchFreight" />
<input type="hidden" id="BlackListVehicle" />
@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.Branch, new { @ID = "hdnBranch" })
@Html.HiddenFor(x => x.Mode, new { @ID = "hdnMode" })
<input type="hidden" id="hdnBlackListDriver" />
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })

<div class="modal" id="FmChargesModal" style="margin-top: 1%;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:80%;">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title col-sm-11" style="font-weight:bold;text-align:center;" id="ModalHeader">Freight Memo Charges Description</h4>
                <button type="button" class="close" style="color:red;" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div class="form-group" id="FMChargesDiv" style="min-height:500px;max-height:500px;overflow:auto;">
                    @Html.Partial("FMChargesDescription", Model.fmCatchCharges)
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="TripFmChargesModal" style="margin-top: 1%;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:80%;">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title col-sm-11" style="font-weight:bold;text-align:center;" id="ModalHeader">Freight Memo Charges Description</h4>
                <button type="button" class="close" style="color:red;" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div class="form-group" id="TripFMChargesDiv" style="min-height:500px;max-height:500px;overflow:auto;">
                    @Html.Partial("FMChargesDescription", Model.fmCatchCharges)
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Driver Tickler Modal -->
<div class="example-modal">
    <div id="DriverTicklerModal" class="modal modal-default" style="margin-top: 1%;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Tickler Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group " id="DriverSpclRemarkDiv">
                                <label style="font-weight:bold;color:black;">Remark :-&nbsp;&nbsp;</label><label id="DriverSpclRMK" style="font-weight:bold;color:black;"></label>
                            </div>
                            <div class="form-group " id="DriverBlackListRemarkDiv">
                                <label style="font-weight:bold;color:black;">Hold Remark :-&nbsp;&nbsp;</label><label id="DriverBlackLStRMK" style="font-weight:bold;color:red;"></label>
                            </div>
                            <div class="form-group " id="DriverNofiticationMegDiv">
                                <label id="DriverNofiticationMegRMK" style="font-weight:bold;color:red;"></label>
                            </div>

                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>