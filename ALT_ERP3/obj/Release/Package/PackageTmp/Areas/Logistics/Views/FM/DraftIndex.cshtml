@model ALT_ERP3.Areas.Logistics.Models.FMVM
@using Common;
@{
    ViewBag.Title = "FM Master";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>

<style>

    .driverAdv {
        color: #37a9b5 !important;
    }


    .circle {
        width: 38px;
        height: 84px;
        position: relative;
    }

    .SearchRow {
        background-color: coral;
    }

    .icon {
        position: absolute;
        top: 39%;
        left: 33%;
        transform: translate(-50%, -50%);
        width: 10px;
        height: 10px;
        display: block;
    }

    .multiselect {
        width: 205px !important;
        text-align: left !important;
    }

    /*.multiselect .dropdown-toggle .btn btn-default .disabled:hover{
        background-color:aqua !important;
    }*/
    .btn-group > .multiselect:hover {
        color: red !important;
    }

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    .GLR {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -40px;
    }

    .PickLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .TransLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .AllLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .legend3 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -36px;
        height: 33px;
        padding: 5px 20px 5px 20px;
    }

    .legend5 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }


    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }

        .toggle.btn {
            min-width: 77px !important;
            min-height: 34px;
        }

    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>

<script type="text/javascript">
    var value = 0;
    var Generate = true;

    $(document).ready(function ()
    {
        $("#BothCHK").prop("disabled", true);
        $('#FMDraftList').prop("disabled", true);
        $('#btnRecentFM').prop("disabled", true);
        $('#sample-table-1 tbody tr').each(function () {
            debugger;
            var tds = $(this).find('td');
            var Bal = parseFloat($("#NewBal").val());
            Bal += parseFloat(tds.find(".txtfvalue").val());
            $("#NewBal").val(Bal.toFixed(2));
        });

        $("#AutoNo").val('@Model.FMNO');
        $("#FM_Date").datepicker("setDate", '@Model.FM_Date');
        $("#ArrivalDate").datepicker("setDate", '@Model.ArrivalDate');

        if ('@Model.MaintainDriAc' == "True") {
            $("#MaintainDriverAc").val("T");
            $("#lblAdvance").html("Driver Advance");
            $("#lblAdvance").addClass("driverAdv");
        }
        else {
            $("#MaintainDriverAc").val("F");
            $("#lblAdvance").html("Advance");
            $("#lblAdvance").removeClass("driverAdv");
        }

        if ('@Model.VehicleGroup' =="100001") {
            $("#HireDriverDiv").show();
            $("#OwnAttachDriverDiv").hide();
        } else {
            $("#OwnAttachDriverDiv").show();
            $("#HireDriverDiv").hide();
        }

        LoadVehicleGroupStatus();
        LoadVehicle("");
        LoadBroker();
        LoadFrom();
        ComboDestination();
        LoadTo();
        LoadVehicleGroup();
        ShowRouteDest();
        LoadPayableAt();
        AddButtonValidation();
        LoadDriverCode();

        if ('@Model.Mode' == "Delete" || '@Model.Mode' == "View")
        {
            $('.form-group :input').prop("disabled", true);
            $('.modal-content .form-group :input').prop("disabled", false);
            $('#FBothCHK').prop("disabled", true);
            $('#FMDraftList').prop("disabled", true);
            $('#btnRecentFM').prop("disabled", true);
            $('#btnViewRoute').prop("disabled", false);
            $('#btnViewSchedule').prop("disabled", false);
        }
        else if ('@Model.Mode' == "Edit")
        {
            if ('@Model.BlockFM' == "True")
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").html("In This FM Material Loaded So U Cant Edit...!");
                $('.btn').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.modal-content .form-group :input').prop("disabled", false);
            }
        }

        $('#FM_Date,#ArrivalDate').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
        })

        $("#ArrivalKM").constrain({ allow: { regex: "[0-9]" } });
        $(".txtfvalue,#Freight,#Advance").constrain({ allow: { regex: "[0-9.]" } });
        $('#ScheduleRequired').change(function ()
        {
            if (this.checked)
            {
                $("#ArrivalDate").datepicker("setDate", '@DateTime.Now.ToShortDateString()');
                $("#ArrivalDate").prop("disabled", false);
                $("#ArrivalTime").val('@DateTime.Now.ToString("HH:mm")');
                $("#ArrivalTime").prop("disabled", false);
                $("#ArrivalKM").prop("disabled", false);
                $("#ArrivalRemark").prop("disabled", false);
            }
            else
            {
                $("#ArrivalDate").val("");
                $("#ArrivalDate").prop("disabled", true);
                $("#ArrivalTime").val("");
                $("#ArrivalTime").prop("disabled", true);
                $("#ArrivalKM").prop("disabled", true);
                $("#ArrivalRemark").prop("disabled", true);
            }
        });


        $(".txtfvalue").blur(function () {
            var ID = this.id;

            if (this.value == "" || this.value == null) {
                $("#" + ID).val("0");
            }

            var SumCharge = 0;
            $('#sample-table-1 tbody tr').each(function () {
                var tds = $(this).find('td');
                SumCharge += parseFloat(tds.find(".txtfvalue").val());
            });

            $("#NewBal").val(SumCharge.toFixed(2));
            $("#TotExp").val((SumCharge + parseFloat($("#Freight").val())).toFixed(2));
            $("#TotAdvExp").val((SumCharge + parseFloat($("#Advance").val())).toFixed(2));

        });
        $("#Freight").blur(function ()
        {
            $("#ErrorMessage").hide();

            if ($("#Freight").val() == "" || $("#Freight").val() == null) {
                $("#Freight").val("0");
            }

            FreightAdvanceCalculation();
        });
        $("#Advance").blur(function ()
        {
            $("#ErrorMessage").hide();

            if ($("#Advance").val() == "" || $("#Advance").val() == null) {
                $("#Advance").val("0");
            }

            FreightAdvanceCalculation();

        });

        $("#VehicleNo").change(function (event)
        {
            LoadVehicleGrpStatus($("#VehicleNo").val());

        })

        $("#btnNote").click(function (event)
        {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveNote")';
                var ModelData = {};
                ModelData["Document"] = $("#Document").val();
                ModelData["Note"] = $("#Note").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success')
                        {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else
                        {
                            $('.spinner').hide();
                            alert(data.Message);
                        }
                    },
                });
            }
        });
        $("#btnAttachSubmit").click(function (event)
        {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveAttachment")';
                var ModelData = {};
                ModelData["Document"] = $("#Document").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success')
                        {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else
                        {
                            $('.spinner').hide();
                            alert(data.Message);
                        }
                    },
                });
            }
        });
        $("#SaveLock").click(function (event)
        {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveLock")';
                var ModelData = {};
                if ($("#All").prop("checked") == true)
                {
                    ModelData["Dispach"] = true;
                    ModelData["Delivery"] = true;
                    ModelData["Billing"] = true;
                    ModelData["All"] = true;
                }
                else
                {
                    if ($("#Dispach").prop("checked") == true)
                    {
                        ModelData["Dispach"] = true;
                    }
                    else
                    {
                        ModelData["Dispach"] = false;
                    }
                    if ($("#Delivery").prop("checked") == true)
                    {
                        ModelData["Delivery"] = true;
                    }
                    else
                    {
                        ModelData["Delivery"] = false;
                    }
                    if ($("#Billing").prop("checked") == true)
                    {
                        ModelData["Billing"] = true;
                    }
                    else
                    {
                        ModelData["Billing"] = false;
                    }
                }
                ModelData["Document"] = $("#Document").val();
                ModelData["LockRemark"] = $("#LockRemark").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success')
                        {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else
                        {
                            $('.spinner').hide();
                            alert(data.Message);
                        }
                    },
                });
            }
        });

        $('#All').change(function ()
        {
            if (this.checked)
            {
                $("#Dispach").prop("checked", true);
                $("#Delivery").prop("checked", true);
                $("#Billing").prop("checked", true);
            }
            else
            {
                $("#Dispach").prop("checked", false);
                $("#Delivery").prop("checked", false);
                $("#Billing").prop("checked", false);
            }
        });

        $("#Dispach,#Delivery,#Billing").click(function ()
        {
            $("#All").prop("checked", false);
        });

        $('#AddDest').click(function (event)
        {
            event.preventDefault();
            $("#DestCombo").prop("disabled", false);
        });

        $("#btnPhotoupload").click(function (event)
        {
            event.preventDefault();
            var size = 0;
            var formData = new FormData();
            var totalFiles = document.getElementById("Attachment_UploadFile").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("Attachment_UploadFile").files[i];
                size += file.size;
                if (file.size < 1048576)
                {
                    formData.append("UploadFile", file);
                }
                else
                {
                    alert('File Size Must Not Exceed 1 MB')
                    return;
                }
            }
            if (size > 1048576)
            {
                alert('File Size Must Not Exceed 1 MB')
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AttachDocument")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    $('#ShowAllFile').html(data.Html);
                    AttachMentList();
                },
                error: function (error)
                {
                    alert("errror");
                }
            });
        });

        $('#btnDelete').click(function (event)
        {
            event.preventDefault();
            var result = confirm("Are you sure you want to delete?");
            if (result)
            {
                    var url = '@Url.Action("SaveDraftData")';
                    var ModelData = {};
                    ModelData["Document"] = $("#Document").val();
                    ModelData["Mode"] = '@Model.Mode';
                ModelData["Header"] = '@Model.Header';
                    var DTO = { mModel: ModelData };
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify(DTO),
                        cache: false,
                        url: url,
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function ()
                        {
                            $('.spinner').show();
                        },
                        success: function (data)
                        {

                            if (data.Status == 'Success') {
                                $('.spinner').hide();
                                window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Mode=Add&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                                $("#ErrorMessage").hide();
                            }
                            else
                            {
                                $('.spinner').hide();
                                alert(data.Message);
                            }
                        },
                    });
            }
            else
            {
                $('.spinner').hide();
                window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Mode=Add&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                $("#ErrorMessage").hide();
            }
        });
        $('#SaveDraftName').click(function (event)
        {
            if ($("#Draft_Name").val() == '' || $("#Draft_Name").val() == null)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Draft_Name Required.');
                return;
            }
            else
            {
                if ('@Model.Mode' == "Delete")
                {
                    var result = confirm("Are you sure you want to Delete This FM ?");
                    if (result)
                    {
                        SaveFM();
                    }
                }
            else
                {
                    CHeckLrNoExistOrNot("FMMasterDraft");
                }
            }
        });

    });

    function FreightAdvanceCalculation() {
        debugger;

        
            if (parseFloat($("#Freight").val()) >= parseFloat($("#Advance").val())) {
                var Bal = parseFloat($("#Freight").val()) - parseFloat($("#Advance").val()) - parseFloat($("#TDSAmt").val());
                
                if ($("#MaintainDriverAc").val() == "T") {
                    $("#Balance").val(0);
                } else {
                    $("#Balance").val(Bal.toFixed(2));
                }
                var SumCharge = 0;
                $('#sample-table-1 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    SumCharge += parseFloat(tds.find(".txtfvalue").val());
                });

                $("#TotExp").val((SumCharge + parseFloat($("#Freight").val())).toFixed(2));
                $("#TotAdvExp").val((SumCharge + parseFloat($("#Advance").val())).toFixed(2));

            }
            else {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Freight Not Less Than Advance.');
                return;
            }
    }
    function FMDraftList()
    {
        var url = '@Url.Action("FMDraft")';
        var ModelData = {};
        var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function ()
                {
                    $('.spinner').show();
                },
                success: function (data)
                {
                    $('.spinner').hide();
                    $('#FMDraft').html(data.Html);
                    $("#LorryDraftmodal").modal("show");
                },
            });

    }
    function AddViaRoute()
    {
        var url = '@Url.Action("StoreAllDestination")';
        var DTO = { ViaRoute: $("#DestCombo").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function ()
                {
                    $('.spinner').show();
                },
                success: function (data)
                {
                    var LoadDownLoadFiles = $("#GetDestView");
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#DestCombo").prop("disabled", true);
                    ShowRouteDest();
                },
            });
    }
    function AddButtonValidation()
    {
        var VehicleStatus = $("#VehicleGroup").val();
        if (VehicleStatus == "100001")
        {
            $("#HideHireBtn").hide();
            $("#ShowHireBtn").show();
            $("#Broker").prop("disabled", false);
            $("#VehicleCategory").prop("disabled", false);
            $("#DriverName").prop("disabled", false);
        }
        else
        {
            $("#HideHireBtn").show();
            $("#ShowHireBtn").hide();
            if ('@Model.FMSetup.ChgBroker' == "False")
            {
                $("#Broker").prop("disabled", true);
            }
            if ('@Model.FMSetup.ChgDriver' == "False")
            {
                $("#DriverName").prop("disabled", true);
            }
            $("#VehicleCategory").prop("disabled", true);
        }
    }
    function AttachMentList()
    {
        var url = '@Url.Action("AttachDocumentList")';
        var DTO = {  };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function ()
            {
                $('.spinner').show();
            },
            success: function (data)
            {
                var LoadDownLoadFiles = $("#AttachList");
                $('.spinner').hide();
                LoadDownLoadFiles.html('');
                LoadDownLoadFiles.html(data.Html);
            },
            error: function (error)
            {
                alert("errror");
            }
        });
    }
    function LoadVehicleGroupStatus()
    {
        var url = '@Url.Action("GetVehicleGroupStatus")'
        $('#VehicleGroup').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
            url: url,
            dataType: 'json',
            quietMillis: 100,
            enableFiltering: true,
            allowClear: true,
            minimumInputLength: 0,
            multiple: true,
            width: 300,
            data: function (term, page)
            {
                return {
                    types: ["exercise"],
                    limit: -1,
                    term: term
                };
            },
                results: function (data, page)
                {
                clientObj = JSON.stringify(data);
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.Name,
                            id: item.Code
                        }
                    })
                };
            }
        },
            initSelection: function (element, callback)
            {
                var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                callback(data);
            },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise)
            {
                AddButtonValidation();
                LoadVehicle($("#VehicleGroup").val());
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadDriverCode()
    {
        var url = '@Url.Action("GetDriver")'
        $('#DriverCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
            url: url,
            dataType: 'json',
            quietMillis: 100,
            enableFiltering: true,
            allowClear: true,
            minimumInputLength: 0,
            multiple: true,
            width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },


            initSelection: function (element, callback) {
                var data = { id: '@Model.DriverCode', text: '@Model.DriverNCombo' };
                callback(data);
            },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    //LoadVehicleGroup
    {
        function LoadVehicleGroup() {

            var url = '@Url.Action("GetVehicleGroup")'
            $('#VehicleCategory').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term: term,
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id: item.Code
                                }
                            })
                        };
                }
            },
                initSelection: function (element, callback)
                {
                    var data = { id: '@Model.VehicleCategory', text: '@Model.VehicleCategory_Name' };
                    callback(data);
                },
                formatResult: function (exercise)
                {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
                },
                formatSelection: function (exercise)
                {
                    return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
                },
            })
        };

    }

    function LoadVehicle(value) {
        var url = '@Url.Action("GetVehicle")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        TruckStatus: value,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNo' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })

    };
    function LoadVehicleGrpStatus(value)
    {

        if ($("#VehicleGroup").val() == "100001")
        {
            $("#DriverName").val("");
            $("#HireDriverDiv").show();
            $('#DriverCode').select2('data', { id: '', text: '' });
            $("#OwnAttachDriverDiv").hide();
        }
        else
        {
            $('#DriverCode').select2('data', { id: '', text: '' });
            $("#OwnAttachDriverDiv").show();
            $("#DriverName").val("");
            $("#HireDriverDiv").hide();
        }

        var url = '@Url.Action("FetChGrupStatus")';

        $.ajax({

            type: "POST",
            traditional: true,
            url: url,
            data: { VehicleNo: value},
            success: function (result)
            {
                $("#Owner").val(result.OwnerName);
                $("#DriverName").val(result.DriverName);
                $("#LicenceNo").val(result.LicenNo);
                $("#LicenceExpDate").val(result.LicenceExpDate);
                $("#PayLoad").val(result.Payload);
                $("#KM").val(result.KM);
                $("#MaintainDriverAc").val(result.MaintainDriverAc);
                if (result.MaintainDriverAc == "T")
                {
                    $("#lblAdvance").html("Driver Advance");
                    $("#lblAdvance").addClass("driverAdv");
                }
                else
                {
                    $("#lblAdvance").html("Advance");
                    $("#lblAdvance").removeClass("driverAdv");
                }

                $('#DriverCode').select2('data', { id: result.DriverCode, text: result.DriverNCombo });
                $('#VehicleGroup').select2('data', { id: result.VehicleGroupStatusCode, text: result.VehicleGroupStatusName });
                $('#Broker').select2('data', { id: result.BroCode, text: result.BroNAme });
                $('#VehicleCategory').select2('data', { id: result.VehicleCategoryCode, text: result.VehicleCategoryName });
                $('#VehicleNo').select2('data', { id: result.VehicleNo, text: result.VehicleNo });

                FreightAdvanceCalculation();
            }
        });
    }
    function LoadFrom() {
        var url = '@Url.Action("From")'
        $('#From').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.From', text: '@Model.From_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#To').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.To', text: '@Model.To_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function CHeckLrNoExistOrNot(tablename) {

        var url = '@Url.Action("CheckExistFM")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { TableName: tablename, Colfield: "[DraftName]", Value: $('#Draft_Name').val(), SkipColumnName: "[FmNo]", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        SaveFM();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Draft_Name Exist Please CHange Draft_Name.');
                        return;
                    }
                }
            });
    }
    
    function SaveFM() {

            var url = '@Url.Action("SaveDraftData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["FMNO"] = $("#FMNO").val();
            ModelData["FM_Time"] = $("#FM_Time").val();
            ModelData["FM_Date"] = $("#FM_Date").val();
            ModelData["VehicleGroup"] = $("#VehicleGroup").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            ModelData["Broker"] = $("#Broker").val();
            ModelData["KM"] = $("#KM").val();
            ModelData["From"] = $("#From").val();
            ModelData["To"] = $("#To").val();
            //ModelData["ScheduleRequired"] = $("#ScheduleRequired").prop("checked");

            ModelData["ScheduleRequired"] = $("#ScheduleRequired").is(":checked");
            ModelData["ArrivalDate"] = $("#ArrivalDate").val();
            ModelData["ArrivalTime"] = $("#ArrivalTime").val();
            ModelData["ArrivalKM"] = $("#ArrivalKM").val();
            ModelData["ArrivalRemark"] = $("#ArrivalRemark").val();
            ModelData["FMGenerate"] = "A";
            var From = "", To = "",seq="";
            $("#DestinationTable .RowData ").each(function () {
                var Row = $(this).closest("tr");
                var Sequence = $(this).find(".seqUenceRoute").val();

                seq = seq + Sequence + ",";
                 From = From + Row.find(".FromCode").attr('id') + ",";
            });
            From = From.substring(0, (From.length - 1));
            seq = seq.substring(0, (seq.length - 1));
            ModelData["DestCombo"] = From;
            ModelData["DestCombo_Sequence"] = seq;

        var ChargeList = [];
        $('#sample-table-1 tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            ChargeList.push(myDets);
        });

        ModelData["Charges"] = ChargeList;
        ModelData["Draft_Name"] = $("#Draft_Name").val();
            ModelData["VehicleCategory"] = $("#VehicleCategory").val();
            ModelData["PayLoad"] = $("#PayLoad").val();
            ModelData["ReceiptNo"] = $("#ReceiptNo").val();
        ModelData["DriverName"] = $("#DriverName").val();
        ModelData["DriverCode"] = $("#DriverCode").val();
            ModelData["LicenceNo"] = $("#LicenceNo").val();
            ModelData["LicenceExpDate"] = $("#LicenceExpDate").val();
            ModelData["Owner"] = $("#Owner").val();
            ModelData["ChallanNo"] = $("#ChallanNo").val();
            ModelData["ContactNo"] = $("#ContactNo").val();
            ModelData["Freight"] = $("#Freight").val();
            ModelData["Advance"] = $("#Advance").val();
            ModelData["PayableAt"] = $("#PayableAt").val();
            ModelData["Remark"] = $("#Remark").val();
            ModelData["Balance"] = $("#Balance").val();
        ModelData["TotAdvExp"] = $("#TotAdvExp").val();
        ModelData["TotExp"] = $("#TotExp").val();
        ModelData["TDSAmt"] = $("#TDSAmt").val();
        ModelData["DocDate"] = '@Model.DocDate';


            if ($("#All").prop("checked") == true) {
                ModelData["Dispach"] = true;
                ModelData["Delivery"] = true;
                ModelData["Billing"] = true;
                ModelData["All"] = true;
            } else {

                if ($("#Dispach").prop("checked") == true) {
                    ModelData["Dispach"] = true;
                } else {
                    ModelData["Dispach"] = false;
                }
                if ($("#Delivery").prop("checked") == true) {
                    ModelData["Delivery"] = true;
                } else {
                    ModelData["Delivery"] = false;
                }
                if ($("#Billing").prop("checked") == true) {
                    ModelData["Billing"] = true;
                } else {
                    ModelData["Billing"] = false;
                }
            }


            ModelData["LockRemark"] = $("#LockRemark").val();
            ModelData["Note"] = $("#Note").val();
            ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
            if ('@Model.Mode'=="Select") {
                        ModelData["Mode"] ="Add";
                    }


            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Mode=Add&Module=Transactions&optioncode=FM&Header=FreightMemo&Controller2=FM";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
    }

    function FooterButtonLoad() {

        if ('@Model.Mode' == "Select") {
            $('#btnFmDraftList').prop('disabled', false);
            $('#btnRecentFM').prop('disabled', false);
            $('#btnBlock').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", false);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);

        } else if ('@Model.Mode' == "Add")
        {
            $('#btnFmDraftList').prop('disabled', false);
            $('#btnRecentFM').prop('disabled', false);

            $('#btnBlock').prop('disabled', false);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
        } else if ('@Model.Mode' == "View")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnBlock").attr("disabled", true);
            $("#btnListPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Edit")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnBlock").attr("disabled", true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
            if ('@Model.Header' =="FMMaster_Draft") {
                $("#btnAttachment").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
            }
        } else if ('@Model.Mode' == "Delete")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnBlock").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        }

        if ('@Model.Mode' == "Select") {
            $('#btnBlock').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnDispachLC").attr("disabled", true);
            $("#btnDispachFM").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", false);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);

        } else if ('@Model.Mode' == "Add") {
            $('#btnBlock').prop('disabled', false);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnDispachLC").attr("disabled", true);
            $("#btnDispachFM").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
            if ('@Model.ViewDataId' == "FMMaster_Draft") {

                $("#btnAttachment").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
                $("#btnDelete").attr("disabled", true);
            }
        } else if ('@Model.Mode' == "View") {
            if ( '@Model.Draft' == 'True') {
                $("#btnBlock").attr("disabled", true);
            }
            $("#btnListPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Edit") {
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            if ('@Model.ViewDataId' == "LorryDraft") {

                $("#btnBlock").attr("disabled", true);
                $("#btnAttachment").attr("disabled", true);
                $("#btnDispachLC").attr("disabled", true);
                $("#btnDispachFM").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
                $("#btnDelete").attr("disabled", true);
            }



            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Delete") {


            $("#btnListPrint").attr("disabled", true);
            $("#btnBlock").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", false);
        } else if ('@Model.Mode' == "View") {

        }
    }


    function ShowRouteDest() {
        var url = '@Url.Action("ShowListBox")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = {  };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    var LoadDownLoadFiles = $("#ListBoxDiv");
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);

                    $(".listbox").prop('disabled', 'disabled');
                },
            });
    }
    function ComboDestination() {
        var url = '@Url.Action("AddDestination")'
        $('#DestCombo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DestCombo', text: '@Model.DestCombo_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                AddViaRoute();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadBroker() {
        var url = '@Url.Action("GetBroker")'
        $('#Broker').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker', text: '@Model.Broker_Name' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadPayableAt() {
        var url = '@Url.Action("PayableAt")'
        $('#PayableAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.PayableAt', text: '@Model.PayableAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function CheckLCDateFormat() {
        var date = $("#Date").val();
        var regex = /(((0|1)[0-9]|2[0-9]|3[0-1])\.(0[1-9]|1[0-2])\.((19|20)\d\d))$/;
        if (!(regex.test(date))) {
            //$("#From_Date").css("background-color", "red");

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Please provide valid date in format dd.mm.yyyy, including leading zero. Exapmle: 01.02.2015');
            return;
        }
    }

</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        @*<span>
                <button id="FMDetails">Fmdetails</button>
            </span>*@
        <span class="tools pull-right">
            <a href="~/Logistics/FM/Index?ViewDataId=FMMaster&Mode=Add&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>

<section class="panel" id="FmDetailsPanel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " role="form" style="margin-top:50px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-sm-12" style="margin-top: 0px;">
                @if (Model.FMSetup.FMBoth)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (Model.FMSetup.FMGenerate)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }
                @if (Model.Mode == "Add")
                {
                    <button class="btn btn-info legend2" id="FMDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="FMDraftList();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                    <button class="btn btn-info legend2" id="btnRecentFM" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>
                }
                else
                {
                    <button class="btn btn-info legend2" disabled id="FMDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="FMDraftList();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                    <button class="btn btn-info legend2" disabled id="btnRecentFM" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>
                }
                @*<button class="btn btn-info legend2" id="FMDetails" style="font-size: 12px;padding:0px 20px 3px 20px;">Details</button>*@

                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-sm-9">
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label ">F.M No:<span style="color:red;">*</span></label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.FMNO, new { @class = "form-control", @style = "width:100px;", @Value = Model.FMNO, @disabled = "disabled" })
                                </div>
                                <div class="col-sm-2">
                                    <label class=" bold   col-sm-3  control-label">Time:<span style="color:red;">*</span></label>
                                    <div class="col-sm-1 ">
                                        @if (Model.FMSetup.FMDate)
                                        {
                                            @Html.TextBoxFor(x => x.FM_Time, new { @class = "form-control", @type = "time", @style = "width:105px;", @Value = Model.FM_Time })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.FM_Time, new { @class = "form-control", @type = "time", @style = "width:105px;", @Value = Model.FM_Time, @disabled = "disabled" })
                                        }
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;">Date:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @if (Model.FMSetup.FMDate)
                                    {
                                        @Html.TextBoxFor(x => x.FM_Date, new { @class = "form-control", @style = "width:236px;", @Value = Model.FM_Date })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.FM_Date, new { @class = "form-control", @style = "width:236px;", @Value = Model.FM_Date, @disabled = "disabled" })
                                    }
                                </div>
                                <label class=" bold  col-sm-1 control-label">Vehicle Status:<span style="color:red;">*</span></label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleGroup })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">VehicleNo:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 " style="padding-left: 0px;">
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="ShowHireBtn">
                                        @*<a href="~/Vehicles/VehicleMaster/Index?TableName=VehicleMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Vehicle%20Master&ViewDataId=VehicleMaster&Controller2=VehicleMaster&Module=Master&optiontype=M&optioncode=VehicleMaster" target="_blank" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle"><i class="glyphicon glyphicon-plus"></i></a>*@
                                        <a href="~/Vehicles/HireVehicle/Index?TableName=VehicleMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Hire%20Vehicle%20Master&ViewDataId=HireVehicle&Controller2=HireVehicle&Module=Master&optiontype=M&optioncode=HireVehicleMaster" target="_blank" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle"><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="HideHireBtn">
                                        <a href="#" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle" disabled><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-9" style="padding-left:0px !important;padding-right:0px !important;">
                                        @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleNo })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Broker:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 " style="">
                                    @if (Model.FMSetup.ChgBroker)
                                    {
                                        @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker, @disabled = "disabled" })
                                    }
                                </div>
                                <label class=" bold   col-sm-1  control-label">KM:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.KM, new { @class = "form-control", @style = "width:110px;", @Value = Model.KM })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">From:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.From, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.From })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Add-Dest.:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="AddDest"><i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.DestCombo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DestCombo, @disabled = "disabled" })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Final-Dest:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.To, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.To })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Vehicle Cate.:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.VehicleCategory, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleCategory, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">View-Dest:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" id="btnViewRoute" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#GETDestMODAL"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;" id="ListBoxDiv">
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Receipt No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ReceiptNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ReceiptNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Driver-Name:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">

                                    <div id="HireDriverDiv">
                                        @if (Model.FMSetup.ChgDriver)
                                        {
                                            @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @style = "width:100%;", @Value = Model.DriverName })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @style = "width:100%;", @Value = Model.DriverName, @disabled = "disabled" })
                                        }
                                    </div>
                                    <div id="OwnAttachDriverDiv">
                                        @if (Model.FMSetup.ChgDriver)
                                        {
                                            @Html.TextBoxFor(x => x.DriverCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DriverCode })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(x => x.DriverCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DriverCode, @disabled = "disabled" })
                                        }
                                    </div>

                                </div>
                                <label class=" bold   col-sm-1 control-label">Licence-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Lic.Exp-Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceExpDate, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceExpDate })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Owner-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Owner, new { @class = "form-control", @style = "width:100%;", @Value = Model.Owner })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Challan-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ChallanNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ChallanNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Contact-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ContactNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Freight:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Freight, new { @class = "form-control", @style = "width:100%;", @Value = Model.Freight.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label" id="lblAdvance">Advance:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Advance, new { @class = "form-control", @style = "width:236px;", @Value = Model.Advance.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Payable-At:<span style="color:red;">*</span></label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.PayableAt, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.PayableAt })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Remark:</label>
                                <div class="col-sm-11 ">
                                    @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.Remark })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">PayLoad:<span style="color:red;">*</span></label>
                                <div class="col-sm-1 " style="">
                                    @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @Value = Model.PayLoad })
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width:auto;">Loaded :</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.Loaded, new { @class = "form-control", @style = "", @Value = Model.Loaded, @readonly = "readonly" })
                                </div>
                                <label class=" bold   col-sm-2  control-label" style="margin-left: 0px;width: auto;">Available PayLoad:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.AvailablePayload, new { @class = "form-control", @style = "", @Value = Model.AvailablePayload, @readonly = "readonly" })
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width: auto;">Over Load:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.OverLoadLoad, new { @class = "form-control", @style = "", @Value = Model.OverLoadLoad, @readonly = "readonly" })
                                </div>

                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Schedule:</label>
                                <div class="col-sm-1 ">
                                    @Html.CheckBoxFor(x => x.ScheduleRequired, new { @class = "form-control", @style = "width: 21px;height: 21px; ", @Value = Model.ScheduleRequired })
                                </div>
                                @if (Model.ScheduleRequired)
                                {
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Date:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Time:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival KM:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM })
                                    </div>
                                }
                                else
                                {
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Date:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate, @disabled = "disabled" })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Time:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime, @disabled = "disabled" })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival KM:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM, @disabled = "disabled" })
                                    </div>
                                }



                            </div>
                            <div class="form-group">
                                @if (Model.ScheduleRequired)
                                {
                                    <label class=" bold   col-sm-1  control-label">Arrival Remark:</label>
                                    <div class="col-sm-10 ">
                                        @Html.TextAreaFor(x => x.ArrivalRemark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.ArrivalRemark })
                                    </div>
                                }
                                else
                                {
                                    <label class=" bold   col-sm-1  control-label">Arrival Remark:</label>
                                    <div class="col-sm-10 ">
                                        @Html.TextAreaFor(x => x.ArrivalRemark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.ArrivalRemark, @disabled = "disabled" })
                                    </div>
                                }
                                <div class="col-sm-1 " style="float:right;">
                                    @*<button class="btn btn-primary" id="btnViewSchedule" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleModal"><i class="glyphicon glyphicon-eye-open"></i></button>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div style="border: 2px solid #d3d3d3;height:410px;">
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Other Advance To Driver</label>
                                </div>

                                @*<div class="form-group ">
                                        <label class=" bold   col-sm-offset-1  col-sm-3 control-label">Balance:</label>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(x => x.Balance, new { @class = "form-control", @style = "width:100%;", @Value = Model.Balance.ToString("0.00") })
                                        </div>
                                    </div>*@
                                <div class="form-group " style="padding:0px 0px 0px 35px;height: auto;overflow-x: auto;">
                                    <table id="sample-table-1" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            @if (Model.Charges != null)
                                            {
                                                foreach (var item in @Model.Charges.ToList())
                                                {
                                                    <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                        <td style="vertical-align:inherit;width:117px;">@item.Code</td>
                                                        <td hidden="hidden">@item.AddLess</td>
                                                        <td><input type="text" id="txtf_@item.Fld" alt="@item.Fld" value="@item.ColVal" class="txtfvalue form-control" style="text-align:right;width:131px;" /></td>
                                                        <td hidden="hidden">@item.ChgPostCode</td>
                                                        <td hidden="hidden">@item.Fld</td>
                                                    </tr>
                                                }

                                            }
                                        </tbody>
                                    </table>
                                    <table id="" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Total</td>
                                                <td><input type="text" id="NewBal" disabled value="@Model.NewBal.ToString("0.00");" class="form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>

                                </div>
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Total Advance Expenses</label>
                                </div>
                                <div class="form-group " style="padding:0px 0px 0px 35px;height: auto;">
                                    <table id="" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Advance Expense</td>
                                                <td><input type="text" id="TotAdvExp" disabled value="@Model.TotAdvExp.ToString("0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Total Expenses</label>
                                </div>
                                <div class="form-group " style="padding:0px 0px 0px 35px;height: auto;">
                                    <table id="" class="zui-charge">
                                        <thead>
                                        </thead>
                                        <tbody>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Total Expense</td>
                                                <td><input type="text" id="TotExp" disabled value="@Model.TotExp.ToString("0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">TDS Amount</td>
                                                <td><input type="text" id="TDSAmt" disabled value="@Model.TDSAmt.ToString("0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                            <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                                <td style="vertical-align:inherit;width:117px;">Balance</td>
                                                <td><input type="text" id="Balance" disabled value="@Model.Balance.ToString("0.00")" class=" form-control" style="text-align:right;width:131px;" /></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            @*<div style="border: 2px solid #d3d3d3;height:88px;" id="AttachList">
                                    @Html.Partial("_AttachmentList", Model)
                                </div>*@
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>


<footer class="footer-section" style="height:45px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            @*<div class="col-md-4 pull-left" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:5px;font-size:9pt; width:unset;">
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" data-toggle="modal" data-target="#FMDiffModal" title="Attachment"><i class="glyphicon glyphicon-eye-open"><br />Difference</i></button>
                </div>*@
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            @if (Model.Mode != "View")
            {
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:5px;font-size:9pt; width:unset;">
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="SubmitPrint" data-toggle="tooltip" data-placement="top" title="Save & Print"><i class="glyphicon glyphicon-floppy-saved">&nbsp;&nbsp;&nbsp;<i class="glyphicon glyphicon-print"></i><br />Save & Print</i></button>
                </div>
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
                    @if (Model.Mode == "Add" || Model.Mode == "Edit")
                    {
                        @*<button class="btn btn-info " style="font-size: 13px;padding:3px 12px;" id="SaveDraft" data-toggle="modal" data-target="#SaveNamePopUp"><i class="glyphicon glyphicon-floppy-saved" style="font-size: 2em;"></i><br />Save Draft</button>*@
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="modal" data-target="#SaveNamePopUp" title="Save"><i class="glyphicon glyphicon-floppy-saved"><br />Save</i></button>
                    }
                    else
                    {
                        <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnDelete" data-toggle="tooltip" data-placement="top" title="Save"><i class="glyphicon glyphicon-trash"><br />Delete</i></button>
                    }
                </div>
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAttachment" data-toggle="modal" data-target="#Attachmentmodal" title="Attachment"><i class="glyphicon glyphicon-paperclip"><br />Attachment</i></button>
                </div>
            }
        </div>
    </div>
</footer>
<input type="hidden" id="hdnAreaID" />
@Html.HiddenFor(x => x.Document)




<!--Attachment Modal -->
<div class="example-modal">
    <div id="Attachmentmodal" class="modal modal-default">
        <div class="modal-dialog " style="width:1080px;">
            <div id="AttachmentmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Attachment</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="max-height:600px;min-height:600px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group">
                                        <div class="col-sm-3" style="padding-top: 5px;">
                                            <label class="col-sm-12 control-label" style="font-weight:bold;color:black;">Upload File:</label>
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(x => x.Attachment.UploadFile, new { @type = "file", @class = "form-control" })
                                        </div>
                                        <div class="col-sm-4">

                                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPhotoupload">Upload</button>
                                        </div>
                                    </div>
                                    <div class="form-group col-sm-12" id="ShowAllFile">
                                        <hr />
                                        @Html.Partial("FMAttachmentView", Model)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnAttachSubmit" data-dismiss="modal">Save</button>
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--View Modal -->
<div class="example-modal">
    <div id="updTfatsearch1" class="modal modal-default">
        <div class="modal-dialog" style="width:1080px;">
            <div id="updTfatsearchDiv1">
            </div>
        </div>
    </div>
</div>


<!--FMDetails Modal -->
<div class="modal right fade" id="FMDetailsModal" style="margin-top: 20px;" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl">
        <div class="modal-content" style="width: 100%;">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <h4 class="modal-title"><b>FM Details</b></h4>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="WorkDetails" style="overflow: auto;width: 100%;display: block;min-height:500px;max-height:500px;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--All Destination Modal -->
<div class="modal fade" id="GETDestMODAL" style="overflow:scroll;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: fit-content;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-body">
                <div id="GetDestView">
                    @Html.Partial("_Get_Destination_List", Model)
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!--LorryDraft Modal -->
<div class="example-modal">
    <div id="LorryDraftmodal" class="modal modal-default">
        <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 2%;">
            <div id="LorryDraftmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>FM Draft</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="margin-top: 0px;max-height:500px;min-height:500px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group col-sm-12" id="FMDraft">
                                        <hr />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="hdnAddBranchListBoxArray" />
<input type="hidden" name="hdn" id="DeleteLc" />

<!--ScheduleModal Modal -->
<div class="example-modal">
    <div id="ScheduleModal" class="modal modal-default">
        <div class="modal-dialog modal-md">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Schedule</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th style="width: 35px;">Branch</th>
                                            <th style="width: 120px;" colspan="1">Arrival Schedule</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Schedule</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.ViewSchedule != null)
                                            {
                                                foreach (var item in Model.ViewSchedule)
                                                {
                                                    <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td>@item.Branch</td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ScheduleArrivalDate</td>
                                                                        <td>@item.ScheduleArrivalTime</td>
                                                                        <td>@item.ScheduleArrivalKM</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ScheduleDispatchDate</td>
                                                                        <td>@item.ScheduleDispatchTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                }

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!--Save Draft Name Modal -->
<div class="example-modal">
    <div id="SaveNamePopUp" class="modal modal-default">
        <div class="modal-dialog modal-md" @*style="width:1080px;"*@>
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Draft Name</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.Draft_Name, new { @class = "form-control", @maxlength = 30, @Value = Model.Draft_Name })
                                </div>
                                <div class="col-sm-offset-4 col-sm-8">

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                            <button class="btn btn-info" id="SaveDraftName">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<input type="hidden" id="AutoNo" />
<input type="hidden" id="MaintainDriverAc" />