@model ALT_ERP3.Areas.Logistics.Models.FMSetupVM
@using Common;
@{
    /**/

    ViewBag.Title = "FMSetupVM";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>

<script type="text/javascript">

    $(document).ready(function () {


        GetMyFavorites('@Model.ViewDataId');
        LoadFMType();
        LoadHireDebitAccount();

        $("#EditHours,#DeleteHours,#Class_Srl,#Class_BackDaysUpto,#Class_ForwardDaysUpto").constrain({ allow: { regex: "[0-9]" } });

        $('#PrintFormat').val('');
        var CommonValue = "";
        if ('@Model.PrintFormat' != "") {
            $.each('@Model.PrintFormat'.split(','), function (idx, val) {
                $(".PrintFormatL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PrintFormat').val(CommonValue);
        }
        $(".PrintFormatL").change(function () {
            $('#PrintFormat').val('');
            var selected = "";
            $(".PrintFormatL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PrintFormat').val(selected);
            return false;
        });
        $('.PrintFormatL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Default Print',
        });

        if ('@Model.EditReq' == 'True') {
            $("#EditHours").prop('disabled', false);
        } else {
            $("#EditHours").prop('disabled', true);
        }
        if ('@Model.DeleteReq'=='True') {
            $("#DeleteHours").prop('disabled', false);
        } else {
            $("#DeleteHours").prop('disabled', true);
        }

        if ('@Model.FillFromCurr' != 'True') {
            $("#FillFromAll").prop("checked", true);
        } else {
            $("#FillFromCurr").prop("checked", true);
        }

        $("#EditReq").change(function () {
            debugger;
            if (this.checked) {

                $("#EditHours").prop('disabled', false);
            } else {
                $("#EditHours").val('0');
                $("#EditHours").prop('disabled', true);
            }
        });
        $("#DeleteReq").change(function () {
            debugger;
            if (this.checked) {

                $("#DeleteHours").prop('disabled', false);
            } else {
                $("#DeleteHours").val('0');
                $("#DeleteHours").prop('disabled', true);
            }
        });

        $('#FMAutomatic').change(function () {
            if (this.checked) {
                $("#FMManual").prop('checked', false)
                $("#Both").prop('checked', false)

                $("#CheckManualFM").prop('checked', false)
                $("#CheckManualFM").prop('disabled', true)
            }
        });

        $('#FMManual').change(function () {
            if (this.checked) {
                $("#FMAutomatic").prop('checked', false)
                $("#Both").prop('checked', false)
                $("#CheckManualFM").prop('disabled', false)
            }
        });
        $('#Both').change(function () {
            if (this.checked) {
                $("#FMAutomatic").prop('checked', false)
                $("#FMManual").prop('checked', false)
                $("#CheckManualFM").prop('disabled', false)
            }
        });
        $('#Class_BranchwiseSrlReq').change(function () {
            if (this.checked) {
                $("#Class_YearwiseSrlReq").prop('checked', false)
                $("#Class_CetralisedSrlReq").prop('checked', false)
            }
        });
        $('#Class_YearwiseSrlReq').change(function () {
            if (this.checked) {
                $("#Class_BranchwiseSrlReq").prop('checked', false)
                $("#Class_CetralisedSrlReq").prop('checked', false)
            }
        });
        $('#Class_CetralisedSrlReq').change(function () {
            if (this.checked) {
                $("#Class_BranchwiseSrlReq").prop('checked', false)
                $("#Class_YearwiseSrlReq").prop('checked', false)
            }
        });
        $('#YearwiseManualSrlReq').change(function () {
            if (this.checked) {
                $("#CetralisedManualSrlReq").prop('checked', false)
            }
        });
        $('#CetralisedManualSrlReq').change(function () {
            if (this.checked) {
                $("#YearwiseManualSrlReq").prop('checked', false)
            }
        });

        $("#MaintainasCategaory").change(function (event) {
            event.preventDefault();
            if (this.checked) {
                $(".CategoryMaintain").attr("checked", true);
            } else {
                $(".CategoryMaintain").attr("checked", false);
            }
        });
        $(".CategoryMaintain").change(function (event) {
            event.preventDefault();
            if (this.checked) {
            } else {
                $("#MaintainasCategaory").attr("checked", false);
            }
        });

        if ('@Model.AttachTDSCut'=="True" || '@Model.HireTDSCut'=="True" || '@Model.OwnTDSCut'=="True" ) {

            $("#AllowToChgTDS").prop("disabled", false);
        }
        else
        {
            $("#AllowToChgTDS").prop("disabled", true);
            $("#AllowToChgTDS").prop("checked", false);
        }

        $("#AttachTDSCut,#HireTDSCut,#OwnTDSCut").change(function (event) {
            event.preventDefault();
            AllowToChgTDS();
        });

        $('#Submit').click(function (event) {
            event.preventDefault();

            if (($("#Class_BranchwiseSrlReq").is(":checked") == false) && ($("#Class_YearwiseSrlReq").is(":checked") == false) && ($("#Class_CetralisedSrlReq").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select System Generate No...!');
                return;
            }

            if ($("#Class_Srl").val() == null || $("#Class_Srl").val() == "0" || $("#Class_Srl").val() == "") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Enter Start From ...!');
                return;
            }
            if (($("#YearwiseManualSrlReq").is(":checked") == false) && ($("#CetralisedManualSrlReq").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select System Manual No...!');
                return;
            }
            if (($("#FMAutomatic").is(":checked") == false) && ($("#FMManual").is(":checked") == false) && ($("#Both").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select FM Generate');
                return;
            }
            if (($("#FillFromCurr").is(":checked") == false) && ($("#FillFromAll").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select Fill From Combo...');
                return;
            }

            //if ($("#FMType").val() == "") {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Please Select FMType..!');
            //    return;
            //}

            if ($("#EditReq").is(":checked") == true) {
                if ($("#EditHours").val() == "" || $("#EditHours").val() == "0") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Edit Hours Required...!');
                    return;
                }
            }
            if ($("#DeleteReq").is(":checked") == true) {
                if ($("#DeleteHours").val() == "" || $("#DeleteHours").val() == "0") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Delete Hours Required...!');
                    return;
                }
            }

            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Class_BranchwiseSrlReq"] = $("#Class_BranchwiseSrlReq").is(":checked");
            ModelData["Class_YearwiseSrlReq"] = $("#Class_YearwiseSrlReq").is(":checked");
            ModelData["Class_CetralisedSrlReq"] = $("#Class_CetralisedSrlReq").is(":checked");
            ModelData["Class_Srl"] = $("#Class_Srl").val();

            ModelData["CetralisedManualSrlReq"] = $("#CetralisedManualSrlReq").is(":checked");
            ModelData["YearwiseManualSrlReq"] = $("#YearwiseManualSrlReq").is(":checked");

            ModelData["Class_CurrDatetOnlyreq"] = $("#Class_CurrDatetOnlyreq").is(":checked");
            ModelData["Class_BackDateAllow"] = $("#Class_BackDateAllow").is(":checked");
            ModelData["Class_BackDaysUpto"] = $("#Class_BackDaysUpto").val();
            ModelData["Class_ForwardDateAllow"] = $("#Class_ForwardDateAllow").is(":checked");
            ModelData["Class_ForwardDaysUpto"] = $("#Class_ForwardDaysUpto").val();

            ModelData["PrintFormat"] = $("#PrintFormat").val();

            if (($("#Both").is(":checked") == true)) {
                ModelData["Both"] = true;
            } else {
                if (($("#FMAutomatic").is(":checked") == true)) {
                    ModelData["FMAutomatic"] = true;
                } else {
                    ModelData["FMAutomatic"] = false;
                }
            }
            if (($("#FillFromCurr").is(":checked") == true)) {
                ModelData["FillFromCurr"] = true;
            } else {
                ModelData["FillFromCurr"] = false;
            }
            ModelData["CheckManualFM"] = $("#CheckManualFM").is(":checked");
            ModelData["ChangeBroker"] = $("#ChangeBroker").is(":checked");
            ModelData["ChangeDriver"] = $("#ChangeDriver").is(":checked");

            ModelData["FitnessExp"] = $("#FitnessExp").is(":checked");
            ModelData["InsuranceExp"] = $("#InsuranceExp").is(":checked");
            ModelData["PUCExp"] = $("#PUCExp").is(":checked");
            ModelData["AIPExp"] = $("#AIPExp").is(":checked");
            ModelData["StateTaxExp"] = $("#StateTaxExp").is(":checked");
            ModelData["TPStateExp"] = $("#TPStateExp").is(":checked");
            ModelData["GreenTaxExp"] = $("#GreenTaxExp").is(":checked");
            ModelData["DriverExp"] = $("#DriverExp").is(":checked");

            ModelData["ExcludeHire"] = $("#ExcludeHire").is(":checked");

            ModelData["AllowToChgTDS"] = $("#AllowToChgTDS").is(":checked");

            ModelData["ShowLedgerPost"] = $("#ShowLedgerPost").is(":checked");


            ModelData["EditReq"] = $("#EditReq").is(":checked");
            ModelData["DeleteReq"] = $("#DeleteReq").is(":checked");
            ModelData["EditHours"] = $("#EditHours").val();
            ModelData["DeleteHours"] = $("#DeleteHours").val();
            ModelData["KM"] = $("#KM").is(":checked");
            ModelData["Payload"] = $("#Payload").is(":checked");
            ModelData["LicenceNo"] = $("#LicenceNo").is(":checked");
            ModelData["LicenceExpDate"] = $("#LicenceExpDate").is(":checked");
            ModelData["DriverName"] = $("#DriverName").is(":checked");
            ModelData["ContactNo"] = $("#ContactNo").is(":checked");
            ModelData["FMType"] = $("#FMType").val();
            ModelData["FmGetVehicleBranchWise"] = $("#FmGetVehicleBranchWise").is(':checked');
            ModelData["FmGetVehicleReadyStatus"] = $("#FmGetVehicleReadyStatus").is(':checked');
            var MaintainStatus = "";
            $('#ActivityTbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');

                var Maintain = tds.find(".CategoryMaintain").prop("checked");
                if (Maintain) {
                    MaintainStatus += tds.eq(2).text() + ",";
                }
            });

            if (MaintainStatus != "") {
                MaintainStatus = MaintainStatus.substring(0, MaintainStatus.length - 1);
            }

            ModelData["Selected_FM_Vehicle_Category_Status_Maintain"] = MaintainStatus;
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';

            ModelData["FooterDetails1"] = $("#FooterDetails1").val();
            ModelData["FooterDetails2"] = $("#FooterDetails2").val();
            ModelData["FooterDetails3"] = $("#FooterDetails3").val();
            ModelData["FooterDetails4"] = $("#FooterDetails4").val();
            ModelData["GenerateSchedule"] = $("#GenerateSchedule").is(':checked');

            ModelData["HireDebitAcCode"] = $("#HireDebitAcCode").val();


            ModelData["AttachTDSCut"] = $("#AttachTDSCut").is(':checked');
            ModelData["HireTDSCut"] = $("#HireTDSCut").is(':checked');
            ModelData["OwnTDSCut"] = $("#OwnTDSCut").is(':checked');
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/DashBoard/SetUP";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });
    });
    function ResetFmType() {
        $('#FMType').select2('data', { id: '', text: '' });
    }

    function AllowToChgTDS() {
        if ($("#HireTDSCut").is(':checked') == true || $("#OwnTDSCut").is(':checked') == true || $("#AttachTDSCut").is(':checked') == true) {
            $("#AllowToChgTDS").prop("disabled", false);
        } else {
            $("#AllowToChgTDS").prop("disabled", true);
            $("#AllowToChgTDS").prop("checked", false);
        }
    }
    function LoadFMType() {
        var url = '@Url.Action("FMType")'
        $('#FMType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.FMType', text: '@Model.FMType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    }

    function LoadHireDebitAccount() {
        var url = '@Url.Action("DebitAccount")'
        $('#HireDebitAcCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.HireDebitAcCode', text: '@Model.HireDebitAcName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    }

</script>
<style>
    hr {
        margin-top: 0%;
        margin-bottom: 15px;
        border: 0;
        border-top: 2px solid #e0cbcb !important;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    legend {
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }
</style>
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            <a href="~/DashBoard/SetUP" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">Setup Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="LCSetupMaster" role="form" style="margin-top:2%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-md-12" style="margin-top:0%;">
                <legend>@Model.Header</legend>

                <div class="panel panel-default" style="height:430px;overflow:auto;">
                    <div class="panel-body" style="padding-top: 5px;">
                        <div class="tab">
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="List"> Basic Info</button>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable1')" style="width:140px;"> Restriction Info</button>
                        </div>
                        <div id="divLedgerTable" class="tabcontent" style="min-height: 380px;max-height: 380px;overflow-y:auto;overflow-x:hidden;  border: 1px solid;">
                            <div class="form-group">
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title=" How To Generate Serial No In System.">System Generate No<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-4">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Branch-Wise Generate Serial No Per Year In System.">Branch Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.Class_BranchwiseSrlReq, new { @class = "", @Value = Model.Class_BranchwiseSrlReq, style = "height: 20px;width: 35px;", @title = "Branch-Wise Generate Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Year-Wise Generate Serial No Per Year In System.">Year Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.Class_YearwiseSrlReq, new { @class = "", @Value = Model.Class_YearwiseSrlReq, style = "height: 20px;width: 35px;", @title = "Year-Wise Generate Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;" title="Cetralised Generate Serial No In System.">Centralised:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.Class_CetralisedSrlReq, new { @class = "", @Value = Model.Class_CetralisedSrlReq, style = "height: 20px;width: 35px;", @title = "Cetralised Generate Serial No In System." })
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="If Data Not Found In System Then System Generate Start From No. Or Also BranchWise And Year Wise Process Repeated.">Start From <span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_Srl, new { @class = "form-control", @Value = Model.Class_Srl, @title = "If Data Not Found In System Then System Generate Start From No. Or Also BranchWise And Year Wise Process Repeated." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title=" How To Manual Serial No In System.">System Manual No<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-4">
                                    <label class="col-sm-offset-4 col-sm-3 control-label" style="font-weight:100;" title="Year-Wise Manual Serial No Per Year In System.">Year Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.YearwiseManualSrlReq, new { @class = "", @Value = Model.YearwiseManualSrlReq, style = "height: 20px;width: 35px;", @title = "Year-Wise Manual Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;" title="Cetralised Manual Serial No In System.">Centralised:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.CetralisedManualSrlReq, new { @class = "", @Value = Model.CetralisedManualSrlReq, style = "height: 20px;width: 35px;", @title = "Cetralised Manual Serial No In System." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title=" Default Cut Tds In Freight Memo.">TDS Cut In :</label>
                                <div class="col-sm-4">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Default Cut Tds In Attached Freight Memo.">Attached:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.AttachTDSCut, new { @class = "", @Value = Model.AttachTDSCut, style = "height: 20px;width: 35px;", @title = "Default Cut Tds In Attached Freight Memo." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Default Cut Tds In Hire Freight Memo.">Hire:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.HireTDSCut, new { @class = "", @Value = Model.HireTDSCut, style = "height: 20px;width: 35px;", @title = "Default Cut Tds In Hire Freight Memo." })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;" title="Default Cut Tds In Own Freight Memo.">Own:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.OwnTDSCut, new { @class = "", @Value = Model.OwnTDSCut, style = "height: 20px;width: 35px;", @title = "Default Cut Tds In Own Freight Memo." })
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="Allow To Change TDS IN Freight Memo.">Change TDS :</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.AllowToChgTDS, new { @class = "", @Value = Model.AllowToChgTDS, style = "height: 20px;width: 35px;", @title = "Allow To Change TDS IN Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Print OF Freight Memo.">Default Print :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-4">
                                        @Html.ListBoxFor(x => x.PrintFormatsL, Model.PrintFormats, new { @class = "PrintFormatL", @id = "PrintFormatL" })
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="Serial No Allow To How To Generate Auto,Manual  Or Both.">FM Generate Mode<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-3" style="padding-left: 0px;">
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Auto:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.FMAutomatic, new { @class = "", @Value = Model.FMAutomatic, style = "height: 20px;width: 35px;" })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Manual:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.FMManual, new { @class = "", @Value = Model.FMManual, style = "height: 20px;width: 35px;" })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Both:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.Both, new { @class = "", @Value = Model.Both, style = "height: 20px;width: 35px;" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default FM-Type In Freight Memo Of Add Mode.">FM Type By Default  :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.FMType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.FMType, @title = "Set Default FM-Type In Freight Memo Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetFmType();" style="padding: 4px 5px;" title="Remover LR-Type From The LR-Type Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Ledger Posting Show In Freight Memo.">Show Ledger Posting  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ShowLedgerPost, new { @class = "", @Value = Model.ShowLedgerPost, style = "height: 20px;width: 35px;", @title = "Ledger Posting Show In Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Allow To Change Broker In Freight Memo.">Change Broker  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ChangeBroker, new { @class = "", @Value = Model.ChangeBroker, style = "height: 20px;width: 35px;", @title = "Allow To Change Broker In Freight Memo." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="Allow To Change Driver In Freight Memo.">Change Driver  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ChangeDriver, new { @class = "", @Value = Model.ChangeDriver, style = "height: 20px;width: 35px;", @title = "Allow To Change Driver In Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle Fitness Expired Then Alert At Transaction Time.">Fitness-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.FitnessExp, new { @class = "", @Value = Model.FitnessExp, style = "height: 20px;width: 35px;", @title = "If Vehicle Fitness Expired Then Alert At Transaction Time." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle Insurance Expired Then Alert At Transaction Time.">Insurance-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.InsuranceExp, new { @class = "", @Value = Model.InsuranceExp, style = "height: 20px;width: 35px;", @title = "If Vehicle Insurance Expired Then Alert At Transaction Time." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle PUC Expired Then Alert At Transaction Time.">PUC-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.PUCExp, new { @class = "", @Value = Model.PUCExp, style = "height: 20px;width: 35px;", @title = "If Vehicle PUC Expired Then Alert At Transaction Time." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle AIP(1 Year) Expired Then Alert At Transaction Time.">AIP(1 Year)-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.AIPExp, new { @class = "", @Value = Model.AIPExp, style = "height: 20px;width: 35px;", @title = "If Vehicle AIP(1 Year) Expired Then Alert At Transaction Time." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle StateTax(5 Year) Expired Then Alert At Transaction Time.">State Tax(5 Year)-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.StateTaxExp, new { @class = "", @Value = Model.StateTaxExp, style = "height: 20px;width: 35px;", @title = "If Vehicle StateTax(5 Year) Expired Then Alert At Transaction Time." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle TPState Expired Then Alert At Transaction Time.">TP State-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.TPStateExp, new { @class = "", @Value = Model.TPStateExp, style = "height: 20px;width: 35px;", @title = "If Vehicle TPState Expired Then Alert At Transaction Time." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle GreenTax Expired Then Alert At Transaction Time.">Green Tax-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.GreenTaxExp, new { @class = "", @Value = Model.GreenTaxExp, style = "height: 20px;width: 35px;", @title = "If Vehicle GreenTax Expired Then Alert At Transaction Time." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="If Vehicle Driver Licence Expired Then Alert At Transaction Time.">Driver (Licence)-Exp Alert:</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.DriverExp, new { @class = "", @Value = Model.DriverExp, style = "height: 20px;width: 35px;", @title = "If Vehicle Driver Licence Expired Then Alert At Transaction Time." })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Fill The Combo Branch Wise Or Centralised.">Fill From Combo  :</label>
                                <div class="col-sm-4" style="display: flex;">
                                    <input type="radio" class="form-control" name="FillFromCombo" id="FillFromCurr" title="Fill The Combo Branch Wise Only." value="FillFromCurr" style="height:20px;width:35px;" checked /><label class=" bold col-sm-4  control-label"> Current Branch</label>
                                    <input type="radio" class="form-control" name="FillFromCombo" id="FillFromAll" title="Fill The Combo Centralised." value="FillFromAll" style="height:20px;width:35px;" /><label class=" bold col-sm-3 control-label"> All Area</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="This Posting Use In Only Hire Freight Memo.">Only Hire Posting  :</label>
                                <div class="col-sm-4" style="padding-left:5px;">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;">Debit A/C:</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(x => x.HireDebitAcCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.HireDebitAcCode })
                                    </div>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="This Posting Use In Only Hire Freight Memo.">Only Hire Posting  :</label>
                                <div class="col-sm-4">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;">Credit A/C:</label>
                                    <div class="col-sm-9">
                                        <input type="radio" class="form-control" name="OwnFM" id="FMBroker" value="Broker" style="height:20px;width:35px;" checked>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" style="padding-left: 15px;width: 600px;">
                                <table id="ActivityTbl" class="zui-table editableTable" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th colspan="2"> Vehicle Category Wise Status Maintain</th>
                                        </tr>
                                        <tr>
                                            <th style="width:50%;">Name</th>
                                            <th style="width:50%;"><input type="checkbox" id="MaintainasCategaory" style="height:18px;width:18px;" /></th>
                                            <th class="hidden">Code</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.FM_Vehicle_Category_Code != null)
                                        {
                                            for (int i = 0; i < Model.FM_Vehicle_Category_Code.Length; i++)
                                            {
                                                if (Model.FM_Vehicle_Category_Code[i] != null)
                                                {
                                                    <tr>
                                                        <td>@Model.FM_Vehicle_Category_Name[i]</td>
                                                        <td>
                                                            <center>@Html.CheckBoxFor(x => x.FM_Vehicle_Category_Status_Maintain_Flag[i], new { @class = "CategoryMaintain", @Value = Model.FM_Vehicle_Category_Status_Maintain_Flag[i], style = "height: 18px;width: 18px;" })</center>
                                                        </td>
                                                        <td class="hidden">@Model.FM_Vehicle_Category_Code[i]</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Footer Details -:</label>
                                <div class="col-sm-8" style="padding-right:0px;padding-left:15px;">
                                    @Html.TextBoxFor(x => x.FooterDetails1, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails1 })
                                    @Html.TextBoxFor(x => x.FooterDetails2, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails2 })
                                    @Html.TextBoxFor(x => x.FooterDetails3, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails3 })
                                    @Html.TextBoxFor(x => x.FooterDetails4, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails4 })
                                </div>
                            </div>
                        </div>
                        <div id="divLedgerTable1" class="tabcontent" style="min-height: 380px;max-height: 380px;overflow-y:auto;overflow-x:hidden;  border: 1px solid;">
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Freight Memo DocDate Allow Only Current Date In Freight Memo.">Current DocDate Req Only :</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.Class_CurrDatetOnlyreq, new { @class = "", @Value = Model.Class_CurrDatetOnlyreq, style = "height: 20px;width: 35px;", @title = "Freight Memo DocDate Allow Only Current Date In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;" title="Freight Memo Serial No Check In The Manual Range BranchWise.">Check Manual Range :</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.CheckManualFM, new { @class = "", @Value = Model.CheckManualFM, style = "height: 20px;width: 35px;" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Enable BackDated :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Class_BackDateAllow, new { @id = "Class_BackDateAllow", @name = "Class_BackDateAllow", @class = "form-control", @Value = Model.Class_BackDateAllow, style = "height: 20px;width: 35px;" })
                                </div>
                                <label class="col-sm-1 control-label" style="font-weight: 100;">Back Days:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_BackDaysUpto, new { @id = "Class_BackDaysUpto", @name = "Class_BackDaysUpto", @class = "form-control", @Value = Model.Class_BackDaysUpto })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Enable Forward Date :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Class_ForwardDateAllow, new { @id = "Class_ForwardDateAllow", @name = "Class_ForwardDateAllow", @class = "form-control", @Value = Model.Class_ForwardDateAllow, style = "height: 20px;width: 35px;" })
                                </div>
                                <label class="col-sm-1 control-label" style="font-weight: 100;">Forward Days:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_ForwardDaysUpto, new { @id = "Class_ForwardDaysUpto", @name = "Class_ForwardDaysUpto", @class = "form-control", @Value = Model.Class_ForwardDaysUpto })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Remove Hire Type From Freight Memo.">Exclude Hire  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ExcludeHire, new { @class = "", @Value = Model.ExcludeHire, style = "height: 20px;width: 35px;", @title = "Remove Hire Type From Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Edit Mode :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Freight Memo Update Will Stop.">Stop Edit :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.EditReq, new { @class = "", @Value = Model.EditReq, style = "height: 20px;width: 35px;", @title = "Freight Memo Update Will Stop." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Freight Memo Update Will Stop after Particular Hours Of The Docdate And Time.">After Hours :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.EditHours, new { @class = "form-control col-sm-6", @style = "margin-top:2px;", @Value = Model.EditHours, @title = "Freight Memo Update Will Stop after Particular Hours Of The Docdate And Time." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Delete Mode :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Freight Memo Delete Will Stop.">Stop Delete :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.DeleteReq, new { @class = "", @Value = Model.DeleteReq, style = "height: 20px;width: 35px;", @title = "Freight Memo Delete Will Stop." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Freight Memo Delete Will Stop after Particular Hours Of The Docdate And Time.">After Hours :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.DeleteHours, new { @class = "form-control col-sm-6", @style = "margin-top:2px;", @Value = Model.DeleteHours, @title = "Freight Memo Delete Will Stop after Particular Hours Of The Docdate And Time." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Vehicles (BranchWise)  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Vehicle Show In Freight Memo BranchWise Only.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.FmGetVehicleBranchWise, new { @class = "", @Value = Model.FmGetVehicleBranchWise, style = "height: 20px;width: 35px;", @title = "Vehicle Show In Freight Memo BranchWise Only." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">Vehicles (Ready Status Only)  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Freight Memo Allow Only Ready Status Vehicles.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.FmGetVehicleReadyStatus, new { @class = "", @Value = Model.FmGetVehicleReadyStatus, style = "height: 20px;width: 35px;", @title = "Freight Memo Allow Only Ready Status Vehicles." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">KM  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="KM Mandatory In Freight Memo Or Zero KM Not Allow In Freight Memo.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.KM, new { @class = "", @Value = Model.KM, style = "height: 20px;width: 35px;", @title = "KM Mandatory In Freight Memo Or Zero KM Not Allow In Freight Memo." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">Payload  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Payload Mandatory In Freight Memo Or Zero Payload Not Allow In Freight Memo.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Payload, new { @class = "", @Value = Model.Payload, style = "height: 20px;width: 35px;", @title = "Payload Mandatory In Freight Memo Or Zero Payload Not Allow In Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">LicenceNo  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="LicenceNo Mandatory In Freight.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.LicenceNo, new { @class = "", @Value = Model.LicenceNo, style = "height: 20px;width: 35px;", @title = "LicenceNo Mandatory In Freight Memo." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">LicenceExp-Date  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="LicenceExp-Date Mandatory In Freight Memo.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.LicenceExpDate, new { @class = "", @Value = Model.LicenceExpDate, style = "height: 20px;width: 35px;", @title = "LicenceExp-Date Mandatory In Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Driver  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Driver Mandatory In Freight.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.DriverName, new { @class = "", @Value = Model.DriverName, style = "height: 20px;width: 35px;", @title = "Driver Mandatory In Freight Memo." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">ContactNo  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Driver ContactNo Mandatory In Freight Memo.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ContactNo, new { @class = "", @Value = Model.ContactNo, style = "height: 20px;width: 35px;", @title = "Driver ContactNo Mandatory In Freight Memo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Generate Schedule  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Generate Schedule Mandatory In Freight.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.GenerateSchedule, new { @class = "", @Value = Model.GenerateSchedule, style = "height: 20px;width: 35px;", @title = "Generate Schedule Mandatory In Freight Memo." })
                                </div>
                            </div>
                            
                        </div>
                        <script>
                            function openCity(evt, cityName) {
                                var i, tabcontent, tablinks;
                                tabcontent = document.getElementsByClassName("tabcontent");
                                for (i = 0; i < tabcontent.length; i++) {
                                    tabcontent[i].style.display = "none";
                                }
                                tablinks = document.getElementsByClassName("tablinks");
                                for (i = 0; i < tablinks.length; i++) {
                                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                                }
                                document.getElementById(cityName).style.display = "block";
                                evt.currentTarget.className += " active";
                            }
                            document.getElementById("List").click();

                        </script>
                    </div>
                </div>
            </fieldset>
        </div>

    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/DashBoard/SetUP" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>


@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.PrintFormat)