@model ALT_ERP3.Areas.Logistics.Models.TransactionSMSModel
@using Common;
@{
    ViewBag.Title = "Transaction Message Rules";
}
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<script>
    $(document).ready(function () {

        $('.PartyBranchL,.UsersL,.UserBranchL,.UserPrintFormatL,.PartyPrintFormatL,.XPartyPrintFormatL,.XPartyBranchL,.XUserPrintFormatL,.XUsersL,.XUserBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Item',
        });

        $('#XSMSTemplate').change(function () {
            var UserATT = $("#XSMSTemplate").val();
            $('#tabledatapick2 tbody tr').each(function () {
                var tds = $(this).find('td');
                tds.find("#SMSTemplate").val(UserATT);
            });
        });
        $('#XPartyPrintFormatL').change(function () {
            var UserATT = [];
            UserATT = $("#XPartyPrintFormatL").val();
            if (UserATT != null) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    for (var i = 0; i < UserATT.length; i++) {
                        tds.find(".PartyPrintFormatL option[value='" + UserATT[i] + "']").attr("selected", true);
                        tds.find('.PartyPrintFormatL').multiselect('rebuild');
                    }
                });
            }
            else
            {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find(".PartyPrintFormatL option").attr("selected", false);
                    tds.find('.PartyPrintFormatL').multiselect('rebuild');
                });
            }

        });

        $('#XPartyBranchL').change(function () {
            var UserATT = [];
            UserATT = $("#XPartyBranchL").val();
            if (UserATT != null) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    for (var i = 0; i < UserATT.length; i++) {
                        tds.find(".PartyBranchL option[value='" + UserATT[i] + "']").attr("selected", true);
                        tds.find('.PartyBranchL').multiselect('rebuild');
                    }
                });
            } else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find(".PartyBranchL option").attr("selected", false);
                    tds.find('.PartyBranchL').multiselect('rebuild');
                });
            }
            
        });
        $('#XUserPrintFormatL').change(function () {
            var UserATT = [];
            UserATT = $("#XUserPrintFormatL").val();
            if (UserATT != null) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    for (var i = 0; i < UserATT.length; i++) {
                        tds.find(".UserPrintFormatL option[value='" + UserATT[i] + "']").attr("selected", true);
                        tds.find('.UserPrintFormatL').multiselect('rebuild');
                    }
                });
            } else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find(".UserPrintFormatL option").attr("selected", false);
                    tds.find('.UserPrintFormatL').multiselect('rebuild');
                });
            }
            
        });
        $('#XUsersL').change(function () {
            var UserATT = [];
            UserATT = $("#XUsersL").val();
            if (UserATT != null) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    for (var i = 0; i < UserATT.length; i++) {
                        tds.find(".UsersL option[value='" + UserATT[i] + "']").attr("selected", true);
                        tds.find('.UsersL').multiselect('rebuild');
                    }
                });
            } else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find(".UsersL option").attr("selected", false);
                    tds.find('.UsersL').multiselect('rebuild');
                });
            }
            
        });
        $('#XUserBranchL').change(function () {
            var UserATT = [];
            UserATT = $("#XUserBranchL").val();
            if (UserATT != null) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    for (var i = 0; i < UserATT.length; i++) {
                        tds.find(".UserBranchL option[value='" + UserATT[i] + "']").attr("selected", true);
                        tds.find('.UserBranchL').multiselect('rebuild');
                    }
                });
            } else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find(".UserBranchL option").attr("selected", false);
                    tds.find('.UserBranchL').multiselect('rebuild');
                });
            }
            
        });


        $('#XPartySendSMS').click(function () {
            var xcess = $('#XPartySendSMS').is(':checked');
            if (xcess == true) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='PartySendSMS']").prop("checked", true);
                })
            }
            else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='PartySendSMS']").prop("checked", false);
                })
            }
        });


        $('#XPartySendEmail').click(function () {
            var xcess = $('#XPartySendEmail').is(':checked');
            if (xcess == true) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='PartySendEmail']").prop("checked", true);
                })
            }
            else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='PartySendEmail']").prop("checked", false);
                })
            }
        });

        $('#XUserEmail').click(function () {
            var xcess = $('#XUserEmail').is(':checked');
            if (xcess == true) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendEmail']").prop("checked", true);
                })
            }
            else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendEmail']").prop("checked", false);
                })
            }
        });

        $('#XUserSMS').click(function () {
            var xcess = $('#XUserSMS').is(':checked');
            if (xcess == true) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendSMS']").prop("checked", true);
                })
            }
            else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendSMS']").prop("checked", false);
                })
            }
        });

        $('#XUserMSG').click(function () {
            var xcess = $('#XUserMSG').is(':checked');
            if (xcess == true) {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendMSG']").prop("checked", true);
                })
            }
            else {
                $('#tabledatapick2 tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[id='UserSendMSG']").prop("checked", false);
                })
            }
        });

       

    });
    function XloadEmailTemplates() {
        var url = '@Url.Action("GetEmailMsgTemplates")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#XEmailTemplate").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                //$("#EmailTemplate").val('@Model.SMSTemplate')
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }
    function loadEmailTemplates() {
        var url = '@Url.Action("GetEmailMsgTemplates")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#EmailTemplate").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $("#EmailTemplate").val('@Model.SMSTemplate')
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function loadSMSTemplates() {
        var url = '@Url.Action("GetSMSTemplates")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#SMSTemplate").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $("#SMSTemplate").val('@Model.SMSTemplate')
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

</script>

<div class="form-body">
    <table id="tabledatapick2" class="zui-table" style="font-size:12pt;width:220%!important;">
        <thead>

            <tr role="row">
                <th style=" vertical-align:inherit;"></th>
                <th style=" vertical-align:inherit;border-right: 1px solid black;"></th>

                <th colspan="4" style=" vertical-align:inherit;border-right: 1px solid black;">Party Details</th>
                <th colspan="6" style=" vertical-align:inherit;border-right: 1px solid black;">Users Details</th>
            </tr>

            <tr role="row">
                <th style="vertical-align:inherit;"></th>
                <th style="vertical-align:inherit;border-right: 1px solid black;">@Html.DropDownListFor(m => Model.SMSTemplate, Model.SMSTemplates, "--Select--", new { @class = "form-control", @style = "font-size:14px;font-weight:bolder;", @id = "XSMSTemplate", @name = "XSMSTemplate" })</th>

                <th style="vertical-align:inherit;"><input id="XPartySendSMS" name="XPartySendSMS" style="width:16px;height:16px;" type="checkbox"></th>
                <th style="vertical-align:inherit;"><input id="XPartySendEmail" name="XPartySendEmail" style="width:16px;height:16px;" type="checkbox"></th>
                <th style="vertical-align:inherit;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.PartyPrintFormatL, Model.PrintFormats, new { Multiple = "multiple", size = "4", @class = "XPartyPrintFormatL", @id = "XPartyPrintFormatL" })</th>
                <th style="vertical-align:inherit;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.PartyBranchL, Model.PartyBranchs, new { Multiple = "multiple", size = "4", @class = "XPartyBranchL", @id = "XPartyBranchL" })</th>

                <th style="vertical-align:inherit;"><input id="XUserEmail" name="XUserEmail" style="width:16px;height:16px;" type="checkbox"></th>
                <th style="vertical-align:inherit;">@Html.ListBoxFor(x => Model.UserPrintFormatL, Model.PrintFormats, new { Multiple = "multiple", size = "4", @class = "XUserPrintFormatL", @id = "XUserPrintFormatL" })</th>
                <th style="vertical-align:inherit;"><input id="XUserSMS" name="XUserSMS" style="width:16px;height:16px;" type="checkbox"></th>
                <th style="vertical-align:inherit;"><input id="XUserMSG" name="XUserMSG" style="width:16px;height:16px;" type="checkbox"></th>
                <th style="vertical-align:inherit;">@Html.ListBoxFor(x => Model.UsersL, Model.Userss, new { Multiple = "multiple", size = "4", @class = "XUsersL", @id = "XUsersL" })</th>
                <th style="vertical-align:inherit;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.UserBranchL, Model.UserBranchs, new { Multiple = "multiple", size = "4", @class = "XUserBranchL", @id = "XUserBranchL" })</th>
            </tr>
            <tr role="row">
                <th style="vertical-align:inherit;width:25%;">Party</th>
                <th style="vertical-align:inherit;border-right: 1px solid black;width:18%;">SMS Template</th>

                <th style="vertical-align:inherit;width:4%;">SMS</th>
                <th style="vertical-align:inherit;width:4%;">Email</th>
                <th style="vertical-align:inherit;width:10%;">Email Attachment</th>
                <th style="vertical-align:inherit;border-right: 1px solid black;width:10%;">Branch</th>


                <th style="vertical-align:inherit;width:4%;">Email</th>
                <th style="vertical-align:inherit;width:10%;">Email Attachment</th>
                <th style="vertical-align:inherit;width:4%;">SMS</th>
                <th style="vertical-align:inherit;width:4%;">MSG</th>
                <th style="vertical-align:inherit;width:10%;">Users</th>
                <th style="vertical-align:inherit;border-right: 1px solid black;width:10%;">Branch</th>
            </tr>

        </thead>
        <tbody>
            @if (Model.mRightList != null)
            {
                for (int i = 0; i < Model.mRightList.Count; i++)
                {

                    <tr style="font-family:Tahoma;font-size:12pt;border: solid 1px lightgray;">
                        <td style="text-align:center;">@Html.TextBoxFor(m => Model.mRightList[i].PartyName, new { @value = Model.mRightList[i].PartyName, @style = "border:none;text-align:left;width: 100%;", @readonly = "readonly", @id = "PartyName", @name = "PartyName" })</td>
                        <td class="hidden" style="text-align:center;">@Html.TextBoxFor(m => Model.mRightList[i].PartyId, new { @value = Model.mRightList[i].PartyId, @style = "border:none;text-align:left;width: 100%;", @readonly = "readonly", @id = "PartyId", @name = "PartyId" })</td>
                        <td style="text-align:center;border-right: 1px solid black;">@Html.DropDownListFor(m => Model.mRightList[i].SMSTemplate, Model.SMSTemplates.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].SMSTemplate == null ? false : Model.mRightList[i].SMSTemplate.Contains(y.Value) }), "--Select--", new { @value = Model.mRightList[i].SMSTemplate, @class = "form-control", @style = "font-size:14px;font-weight:bolder;", @id = "SMSTemplate", @name = "SMSTemplate" })</td>

                        <td style="text-align:center;">@Html.CheckBoxFor(m => Model.mRightList[i].PartySendSMS, new { @value = Model.mRightList[i].PartySendSMS, @style = "width:16px;height:16px;", @id = "PartySendSMS", @name = "PartySendSMS" })</td>
                        <td style="text-align:center;">@Html.CheckBoxFor(m => Model.mRightList[i].PartySendEmail, new { @value = Model.mRightList[i].PartySendEmail, @style = "width:16px;height:16px;", @id = "PartySendEmail", @name = "PartySendEmail" })</td>
                        <td style="text-align:center;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.mRightList[i].PartyPrintFormatL, Model.PrintFormats.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].PartyPrintFormatL == null ? false : Model.mRightList[i].PartyPrintFormatL.Contains(y.Value) }), new { Multiple = "multiple", size = "4", @class = "PartyPrintFormatL", @id = "PartyPrintFormatL" })</td>
                        <td style="text-align:center;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.mRightList[i].PartyBranchL, Model.PartyBranchs.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].PartyBranchL == null ? false : Model.mRightList[i].PartyBranchL.Contains(y.Value) }), new { Multiple = "multiple", size = "4", @class = "PartyBranchL", @id = "PartyBranchL" })</td>

                        <td style="text-align:center;">@Html.CheckBoxFor(m => Model.mRightList[i].UserSendEmail, new { @value = Model.mRightList[i].UserSendEmail, @style = "width:16px;height:16px;", @id = "UserSendEmail", @name = "UserSendEmail" })</td>
                        <td style="text-align:center;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.mRightList[i].UserPrintFormatL, Model.PrintFormats.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].UserPrintFormatL == null ? false : Model.mRightList[i].UserPrintFormatL.Contains(y.Value) }), new { Multiple = "multiple", size = "4", @class = "UserPrintFormatL", @id = "UserPrintFormatL" })</td>
                        <td style="text-align:center;">@Html.CheckBoxFor(m => Model.mRightList[i].UserSendSMS, new { @value = Model.mRightList[i].UserSendSMS, @style = "width:16px;height:16px;", @id = "UserSendSMS", @name = "UserSendSMS" })</td>
                        <td style="text-align:center;">@Html.CheckBoxFor(m => Model.mRightList[i].UserSendMSG, new { @value = Model.mRightList[i].UserSendMSG, @style = "width:16px;height:16px;", @id = "UserSendMSG", @name = "UserSendMSG" })</td>
                        <td style="text-align:center;">@Html.ListBoxFor(x => Model.mRightList[i].UsersL, Model.Userss.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].UsersL == null ? false : Model.mRightList[i].UsersL.Contains(y.Value) }), new { Multiple = "multiple", size = "4", @class = "UsersL", @id = "UsersL" })</td>
                        <td style="text-align:center;border-right: 1px solid black;">@Html.ListBoxFor(x => Model.mRightList[i].UserBranchL, Model.UserBranchs.Select(y => new SelectListItem { Text = y.Text, Value = y.Value, Selected = Model.mRightList[i].UserBranchL == null ? false : Model.mRightList[i].UserBranchL.Contains(y.Value) }), new { Multiple = "multiple", size = "4", @class = "UserBranchL", @id = "UserBranchL" })</td>

                    </tr>
                }
            }
        </tbody>
    </table>
</div>