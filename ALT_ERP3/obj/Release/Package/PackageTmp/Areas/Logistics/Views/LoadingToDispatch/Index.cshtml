@model ALT_ERP3.GridOption
@using Common;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<style>
    .ui-jqgrid tr.jqgrow td {
        vertical-align: middle;
        font-family: Tahoma;
        font-size: 9pt;
        /*Suresh*/
        text-align: center;
    }

    .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default {
        border: 1px solid #A9A9A9;
    }

    .ui-state-hover, .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, .ui-state-focus, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus {
        border: 1px solid gray;
    }

    .btncolor {
        background-color: slategray;
        color: white;
    }

    .ui-widget-content {
        background: unset;
    }

    .ui-jqgrid .ui-pg-table td {
        font-size: 9pt;
        font-family: Tahoma;
    }

    .ui-jqgrid .ui-paging-info {
        font-size: 9pt;
        font-family: Tahoma;
    }

    .ui-jqgrid .ui-pg-input {
        font-size: 9pt;
        font-family: Tahoma;
    }

    .ui-jqgrid .ui-pg-selbox {
        font-size: 9pt;
        font-family: Tahoma;
    }

    .ui-jqdialog {
        display: none;
        width: 300px;
        position: absolute;
        padding: .2em;
        font-size: 11px;
        overflow: visible;
        left: 30% !important;
        top: 35% !important;
        background-color: whitesmoke;
    }

    .ui-jqdialog-titlebar {
        background-color: gray;
    }

    /*a:link, a:visited {
        cursor: pointer!important;
    }*/
    svg {
        cursor: pointer;
    }
</style>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>

<script type="text/javascript">
    var Querymarkers = [];
    var Code = "Active";
    $(document).ready(function () {

        $('#attachdoc,#mapdoc,#AlertNoteModalNew').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#attachdoc,#mapdoc,#AlertNoteModalNew").modal("hide");

        $('#txtDataSearch').val("");
        $('#Fromdate').val('@Model.FromDate');
        $('#ToDate').val('@Model.ToDate');
        $('#Branch').val('');
        var CommonValue = "";
        if ('@Model.Branch' != "") {
            $.each('@Model.Branch'.split(','), function (idx, val) {
                $(".BranchL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#Branch').val("'" + CommonValue+"'");
        }

        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();
        //$('#Fromdate,#ToDate').datepicker({
        //    format: 'dd/mm/yyyy',
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "-60:+0",
        //    autoclose: true,
        //});
        $('#Fromdate,#ToDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        $('.BranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for Branch...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        });
        $(".BranchL").change(function () {
            $('#Branch').val('');
            var selected = "";
            $(".BranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#Branch').val("'" + selected + "'");
            return false;
        });

        $("#btnPrint").attr("disabled", true);
        $("#btnVehicleStatus").click(function (event)
        {
            event.preventDefault();
            var url = '@Url.Action("Clear")';
            var ModelData = {};
            ModelData["Document"] = $("#DocNO").val();
            ModelData["LastRoute"] = true;
            ModelData["vehicleStatus"] = $('#vehicleStatus').val();
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        location.reload();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });
        Loadformats();
        gridreload();
        $('#btnRefresh').click(function (event) {
            clickRefresh();
        });
        $('#btnopnFormat').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["ViewDataId"] = $("#formats").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetReportFormat")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#updTfatsearch').modal('show');
                    $('#updTfatsearchDiv').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
    });
    function Print()
    {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sUrlpath = window.open('@Url.Action("GetMasterGridData1")?Date=' + mDate + '&ViewDataId=' + '@ViewBag.id' + '&mWhat=PDL', '_blank');
    }
    function Loadformats()
    {
        var url = '@Url.Action("GetFormats1")';
        $('#formats').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return { text: item.Name, id: item.Code }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@ViewBag.ViewDataId', text: '@ViewBag.ViewDataId' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function SVGActive() {
        Code = "Active";
        $('#list').jqGrid('clearGridData');
        $("#list").jqGrid("GridUnload");
        $('#list').trigger('reloadGrid');
        gridreload();
    }
    function SVGClear() {
        Code = "Clear";
        $('#list').jqGrid('clearGridData');
        $("#list").jqGrid("GridUnload");
        $('#list').trigger('reloadGrid');
        gridreload();
    }
    function SVGComplete() {
        Code = "Complete";
        $('#list').jqGrid('clearGridData');
        $("#list").jqGrid("GridUnload");
        $('#list').trigger('reloadGrid');
        gridreload();
    }
    function SVGALL() {
        Code = "All";
        $('#list').jqGrid('clearGridData');
        $("#list").jqGrid("GridUnload");
        $('#list').trigger('reloadGrid');
        gridreload();
    }
    function clickRefresh()
    {
        $('#list').jqGrid('clearGridData');
        $("#list").jqGrid("GridUnload");
        $('#list').trigger('reloadGrid');
        gridreload();
    }
    function gridreload()
    {
        var ColName, Coldata;
        var lPath = window.location.pathname;
        var arrPath = lPath.split("/");
        var code = $("#btncode").val();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());

        var sPathUrl = "/Logistics/LoadingToDispatch/GetGridStructureRecords1/?Date=" + mDate + "&id=" + $("#formats").val() + '&TableName=' + '@ViewBag.Table' + '&AcType=' + '@ViewBag.MainType' + '&MainType=' + '@ViewBag.MainType' + '&IsFormatSelected=' + $('#isdefault').is(':checked');
        var sUrlpath = "/Logistics/LoadingToDispatch/GetMasterGridData1/?Date=" + mDate + "&ViewDataId=" + $("#formats").val() + '&TableName=' + '@ViewBag.Table' + '&AcType=' + '@ViewBag.MainType' + '&MainType=' + '@ViewBag.MainType' + '&IsFormatSelected=' + $('#isdefault').is(':checked') + '&searchString=' + $('#hdnDataSearchString').val() + '&Branch=' + $('#Branch').val() + '&Code=' + Code;
        $('#hdnDataSearchString').val("");
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                CreateGridData();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });
        function CreateGridData() {
            $('#list').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                //height: $(window).height() - 111 - 75,
                height:400,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                onSelectRow: function (id, status, e) {
                    e.preventDefault();
                    var ff = $('#list').jqGrid('getCell', id, 'Document');
                    $("#Document").val(ff);
                    $("#GetCurrent_LRNo").val(ff);
                    $('.spinner').hide();
                },
                ondblClickRow: function (id) {
                    var myGrid = $('#list');
                    var cellVal = myGrid.jqGrid('getCell', id, 'Document');
                    location.href = "/Logistics/" + '@ViewBag.Controller2' + "/Index1?Document=" + encodeURIComponent(cellVal) + "&TableName=" + '@ViewBag.Table' + "&MainType=" + '@ViewBag.MainType' + "&Mode=View&Header=" + '@ViewBag.Header' + "&ViewDataId=" + '@ViewBag.id' + '&Controller2=' + '@ViewBag.Controller2' + '&Module=' + '@ViewBag.Module' + '&optiontype=' + '@ViewBag.optiontype' + '&optioncode=' + '@ViewBag.optioncode';
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    debugger;
                    if ('@Model.ScheduleFlow' != "")
                    {
                        if ('@Model.ScheduleFlow' == "True")
                        {
                            var ids = jQuery("#list").jqGrid('getDataIDs');
                            for (var i = 0; i < ids.length; i++)
                            {
                                var rowId = ids[i];
                                if (jQuery("#list").getCell(rowId, "FMStatus") == "C")
                                {
                                    if (jQuery("#list").getCell(rowId, "Allow") == "True" && jQuery("#list").getCell(rowId, "ActivityButtonAllow")=="Y") {
                                        var btn = "<button type='button' id='btnReWorking" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Clear' , title='clear' , attr='" + rowId + "'>Re-Work</button>";
                                        jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                    }
                                    $("#list").jqGrid('setCell', rowId, 'FMStatus', 'Completed');
                                    // Set Backgroud Red
                                    jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(224 155 155)' });
                                }
                                else
                                {
                                    if (jQuery("#list").getCell(rowId, "RouteClear") == "False" && jQuery("#list").getCell(rowId, "Allow") == "True")
                                    {
                                        $("#list").jqGrid('setCell', rowId, 'FMStatus', 'Active');
                                        jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(163 228 180)' });
                                        if ( jQuery("#list").getCell(rowId, "ActivityButtonAllow") == "Y") {
                                            var btn = "<button id='btnActivity" + rowId + "' value='" + rowId + "' Class='Activity' tooltip='Activity' , title='Activity' , attr='" + rowId + "' />";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Edit: btn });
                                            var btn = "<button type='button' id='btnClear" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Clear' , title='clear' , attr='" + rowId + "'>Clear</button>";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                        }
                                    }
                                    else
                                    {
                                        $("#list").jqGrid('setCell', rowId, 'FMStatus', 'InActive');
                                        jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(157, 210, 218)' });
                                        if (jQuery("#list").getCell(rowId, "ActivityButtonAllow") == "Y") {
                                            var btn = "<button type='button' id='btnForceActivity" + rowId + "' value='" + rowId + "' style='padding:3px 8px;border-radius:15px;' class='btn btn-danger' tooltip='UnClear' , title='Unclear' , attr='" + rowId + "'>Un-Clear</button>";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            var ids = jQuery("#list").jqGrid('getDataIDs');
                            for (var i = 0; i < ids.length; i++)
                            {
                                var rowId = ids[i];
                                var btn = "<button id='btnTrackVehicle' value='" + rowId + "' Class='Tracking' tooltip='Tracking Vehicle' style='border:none;border-radius:10px;', title='Tracking Vehicle' , attr='" + rowId + "' />";
                                jQuery("#list").jqGrid('setRowData', rowId, { Tracking: btn });

                                if (jQuery("#list").getCell(rowId, "FMStatus") == "C")
                                {
                                    if ('@Model.Rework' == "True")
                                    {
                                        if (jQuery("#list").getCell(rowId, "ActivityButtonAllow") == "Y") {
                                            var btn = "<button type='button' id='btnReWorking" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Clear' , title='clear' , attr='" + rowId + "'>Re-Work</button>";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                        }
                                    }
                                    $("#list").jqGrid('setCell', rowId, 'FMStatus', 'Completed');
                                    // Set Backgroud Red
                                    jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(224 155 155)' });
                                }
                                else
                                {
                                    if (jQuery("#list").getCell(rowId, "RouteClear") == "False")
                                    {
                                        $("#list").jqGrid('setCell', rowId, 'FMStatus', 'Active');
                                        jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(163 228 180)' });
                                        if (jQuery("#list").getCell(rowId, "ActivityButtonAllow") == "Y") {
                                            var btn = "<button id='btnActivity" + rowId + "' value='" + rowId + "' Class='Activity' tooltip='Activity' , title='Activity' , attr='" + rowId + "' />";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Edit: btn });

                                            var btn = "<button type='button' id='btnClear" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Clear' , title='clear' , attr='" + rowId + "'>Clear</button>";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                        }
                                    }
                                    else
                                    {
                                        $("#list").jqGrid('setCell', rowId, 'FMStatus', 'InActive');
                                        jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(157, 210, 218)' });
                                        if (jQuery("#list").getCell(rowId, "ActivityButtonAllow") == "Y") {
                                            var btn = "<button type='button' id='btnForceActivity" + rowId + "' value='" + rowId + "' style='padding:3px 8px;border-radius:15px;' class='btn btn-danger' tooltip='UnClear' , title='Unclear' , attr='" + rowId + "'>Un-Clear</button>";
                                            jQuery("#list").jqGrid('setRowData', rowId, { Delete: btn });
                                        }
                                    }
                                }
                            }
                        }
                    }

                    $('.Activity').html('<img src="/Content/images/Activity.ico" height="16" />');
                    $('.Tracking').html('<img src="/Content/images/pngegg.ico" height="20" width="25" />');
                    $("button").click(function (event)
                    {
                        debugger;
                        event.preventDefault();
                        var btnname = this.id;
                        var curRowId = this.value;
                        var btntype = btnname.replace(/[0-9]/g, "");
                        var myGrid = $('#list');
                        selectedRowId = myGrid.jqGrid('getGridParam', 'selrow');
                        var cellVal = myGrid.jqGrid('getCell', curRowId, 'Document');
                        var DocNo = myGrid.jqGrid('getCell', curRowId, 'FMNO');
                        switch (btntype)
                        {
                            case "btnReWorking":
                                ReWorking(cellVal);
                                break;
                            case "btnActivity":
                                location.href = "/Logistics/" + '@ViewBag.Controller2' + "/Index1?Document=" + encodeURIComponent(cellVal) + "&TableName=" + '@ViewBag.Table' + "&MainType=" + '@ViewBag.MainType' + "&Mode=Activity&Header=" + '@ViewBag.Header' + "&ViewDataId=" + '@ViewBag.id' + '&Controller2=' + '@ViewBag.Controller2' + '&Module=' + '@ViewBag.Module' + '&optiontype=' + '@ViewBag.optiontype' + '&optioncode=' + '@ViewBag.optioncode';
                                break;
                            case "btnForceActivity":
                                CheckNextRouteActivity(cellVal);
                                break;
                            case "btnClear":
                                checkLastBranchOrNot(cellVal);
                                break;
                            case "FMAttach":
                                FMAttachment(curRowId);
                                break;
                            case "FMBell":
                                FMAlertNote(curRowId);
                                break;
                            case "LRBell":
                                LRAlertNote(curRowId);
                                break;
                            case "btnTrackVehicle":
                                TrackVehicle(cellVal);
                                break;
                        }
                    });
                },
            });
            jQuery("#list").jqGrid('navGrid', "#pager",
                { edit: false, add: false, del: false, print: false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#list").jqGrid("setFrozenColumns");
            $('#pg_pager').append($("<div class=\"col-sm-offset-2 col-md-6\" style=\"display: flex;margin-top:-40px; \">" +
                "<label style = \"color:black;margin-top:0%;width:inherit;\" > Doc No:</label>" +
                " <div class=\"col-md-10\" style=\"padding: 0px 5px 0px 0px;\">" +
                " <input type=\"text\" class=\"form-control\" id=\"btnSearchDocNo\" style=\"margin-top:5px;\" placeholder=\"Search Doc. No\">" +
                " </div>" +
                " <label style=\"color:black;margin-top:0%;width:inherit;\">General:</label>" +
                " <div class=\"col-md-10\" style=\"padding: 0px 5px 0px 0px;\">" +
                " <input type=\"text\" class=\"form-control\" id=\"btnSearchAny\" style=\"margin-top:5px;\" placeholder=\"Search By Any\">" +
                " </div>" +
                "  <label style=\"color:black;margin-top:0%;width:inherit;\">Search:</label>" +
                " <div class=\"col-md-10\" style=\"display:flex;padding: 0px 5px 0px 0px;\">" +
                "   <input type=\"text\" class=\"form-control\" id=\"txtDataSearch\" style=\"margin-top:5px;width: -webkit-fill-available;\" placeholder=\"Search Doc. NO\">" +
                "  <button class=\"btn btn-danger\" style=\"height: 28px;margin-top:5px;width: fit-content;\" id=\"btnDataSearch\" data-toggle=\"tooltip\" data-placement=\"top\" ><i class=\"glyphicon glyphicon-search\"></i></button>" +
                " </div>" + " </div>"));
            $("#btnSearchDocNo").keyup(function (event)
            {
                $("#btnSearchAny").val("");
                var value = $(this).val();
                event.preventDefault();
                var myGrid = $('#list');
                var ids = jQuery("#list").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++)
                {
                    var rowId = ids[i];
                    var Row = jQuery("#list").getCell(rowId, "FMNO");
                    if (Row.toLowerCase().indexOf(value.toLowerCase()) >= 0)
                    {
                        $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
                    }
                    else
                    {
                        $('#' + $.jgrid.jqID(rowId)).addClass('hidden');
                    }
                }
            });
            $("#btnSearchAny").keyup(function (event) {
                $("#btnSearchDocNo").val("");
                var value = $(this).val();
                event.preventDefault();
                var myGrid = $('#list');
                var ids = jQuery("#list").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var rowId = ids[i];
                    var Row = $('#' + $.jgrid.jqID(rowId));
                    if (Row.text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
                    }
                    else {
                        $('#' + $.jgrid.jqID(rowId)).addClass('hidden');
                    }
                }
            });
            $("#btnDataSearch").click(function (event) {
                $("#hdnDataSearchString").val($("#txtDataSearch").val());
                clickRefresh();
            });
        };
        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
        };
    };
    function TrackVehicle(value)
    {
        var url = '@Url.Action("TrackID")';
        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var markers = [];
                if (data.TrackReq == false)
                {
                    alert(data.Msg);
                }
                else if (data.Status =="Error") {
                    alert("Vehicle Not Found...!");
                }
                else
                {
                    var map1 = new google.maps.Map(document.getElementById('QueryMapDiv'), {
                        center: { lat: 21.145800, lng: 79.088158 },
                        zoom: 4
                    });
                    for (var i = 0; i < Querymarkers.length; i++) {
                        Querymarkers[i].setMap(null);
                    }
                    Querymarkers = [];
                    var markerQ = new google.maps.Marker({
                        position: { lat: parseFloat(data.Latitude), lng: parseFloat(data.Longitude) },
                        map: map1,
                    });

                    var contentStringQ = '<div id="content">' +
                        '<div id="siteNotice">' +
                        '</div>' +
                        '<h1 id="firstHeading" class="firstHeading">' + data.Vehicle + '</h1>' +
                        '<div id="bodyContent">';
                    var infowindowQ = new google.maps.InfoWindow({
                        content: contentStringQ
                    });
                    var markerValueQ = markerQ;
                    google.maps.event.addListener(markerQ, 'mouseover', (function (markerValueQ, i) {
                        return function () {
                            infowindowQ.open(map1, markerQ);
                        }
                    })(markerQ));
                    google.maps.event.addListener(markerQ, 'mouseout', (function (markerValueQ, i) {
                        return function () {
                            infowindowQ.close();
                        }
                    })(markerQ));

                    Querymarkers.push(markerQ);
                    $('#mapdoc').modal('show');
                }
            },
        });
    }
    function ShowMapLocation(value1, value2) {
        //window.open("https://www.google.com/maps?q=" + value1 + ',' + value2 + '&t=m', "_blank");
    }
    function initializeMap(markers) {
        //you can check your marker data in console
        console.log(markers);
        //Create Google map options
        var GoogleMapOptions = {
            center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
            zoom: 6,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        document.getElementById('MapDiv').innerHTML = ''; // removal
        document.getElementById('MapDiv').innerHTML = '<div id="inner_map_div" style="width: 100%; height: 350px;"></div>';
        //create a variable of InfoWindow type to show data on clicking map icon
        var infoWindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById("inner_map_div"), GoogleMapOptions);

        //loop through each marker data
        for (i = 0; i < markers.length; i++) {
            var data = markers[i]
            //set lat long of current marker
            var myLatlng = new google.maps.LatLng(data.lat, data.lng);

            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: data.title
            });

            (function (marker, data) {
                // add a on marker click event
                google.maps.event.addListener(marker, "click", function (e) {
                    //show description
                    infoWindow.setContent(data.description);
                    infoWindow.open(map, marker);
                });
            })(marker, data);
        }
    }
    function ReWorking(value)
    {
        var url = '@Url.Action("ReWorking")';
        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //location.href = "/Logistics/" + '@ViewBag.Controller2' + "/Index1?Document=" + encodeURIComponent(value) + "&TableName=" + '@ViewBag.Table' + "&MainType=" + '@ViewBag.MainType' + "&Mode=Activity&Header=" + '@ViewBag.Header' + "&ViewDataId=" + '@ViewBag.id' + '&Controller2=' + '@ViewBag.Controller2' + '&Module=' + '@ViewBag.Module' + '&optiontype=' + '@ViewBag.optiontype' + '&optioncode=' + '@ViewBag.optioncode';
                    location.reload();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function CheckNextRouteActivity(value)
    {
        var url = '@Url.Action("UnclearRoute")';
        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    location.reload();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function checkLastBranchOrNot(value)
    {
        debugger;
        var url = '@Url.Action("CheckLastBranch")';
        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    if (data.Message)
                    {
                        if (data.CheckMaterial)
                        {
                            CheckMaterial(true, value);
                        }
                        else
                        {
                            if (data.VehicleModalShow)
                            {
                                VehicleThrough(value);
                            }
                            else
                            {
                                FMCompleteWithoutVehicleModal(value);
                            }
                        }
                    }
                    else
                    {
                        if (data.CheckMaterial)
                        {
                            CheckMaterial(false, value);
                        }
                        else
                        {
                            FinalClear(value);
                        }
                    }
                }
                else
                {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function CheckMaterial(LastBranch,Docu)
    {
        $("#DocNO").val(Docu);
        var url = '@Url.Action("CheckClear")';
        var ModelData = {};
        ModelData["Document"] = Docu;
        ModelData["LastRoute"] = LastBranch;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                $('.spinner').hide();
                if (data.Status == "Error")
                {
                    if (data.Flag)
                    {
                        alert(data.Message);
                    }
                    else
                    {
                        var result = confirm(data.Message);
                        if (result)
                        {
                            if (LastBranch)
                            {
                                if (data.VehicleModalShow)
                                {
                                    VehicleThrough(Docu);
                                }
                                else
                                {
                                    FMCompleteWithoutVehicleModal(Docu);
                                }
                            }
                            else
                            {
                                FinalClear(Docu);
                            }
                        }
                    }
                }
                else
                {
                    if (LastBranch)
                    {
                        if (data.VehicleModalShow)
                        {
                            VehicleThrough(Docu);
                        }
                        else
                        {
                            FMCompleteWithoutVehicleModal(Docu);
                        }
                    }
                    else
                    {
                        FinalClear(Docu);
                    }
                }
            },
        });
    }
    function VehicleThrough(value)
    {
        $("#DocNO").val(value);
        $('#UpdateVehicleStatus').modal('show');
    }
    function FinalClear(value)
    {
        $("#DocNO").val(value);
        var url = '@Url.Action("Clear")';
        var ModelData = {};
        ModelData["Document"] = value;
        ModelData["LastRoute"] = false;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    location.reload();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function FMCompleteWithoutVehicleModal(value)
    {
        $("#DocNO").val(value);
        var url = '@Url.Action("Clear")';
        var ModelData = {};
        ModelData["Document"] = value;
        ModelData["LastRoute"] = true;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    location.reload();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function SetSessionNull()
    {
        var DTO = {  };
        var url = '@Url.Action("SetAttach_SessionNull")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {

            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }
    function FMAttachment(value)
    {
        $('.spinner').show();
        debugger;
        SetSessionNull();
        $('.spinner').show();
        $('.spinner').show();
        var url = '/Logistics/Attachment/UploadFile';
        var ModelData = {};
        ModelData["Mode"] = "Edit";
        ModelData["Type"] = "FM000";
        ModelData["Srl"] = value;
        ModelData["RefType"] = "@Model.Header";
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $("#ErrorMessage").hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                }
                else {
                    alert("Not Found Any Attachment...!");
                }
            },
        });
    }
    function FMAlertNote(value)
    {
        debugger;
        $('.spinner').show();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        myTableArray.push(value);
        var DTO = { Type: "FM000", TypeCode: myTableArray, DocTpe: "ACTVT" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDivNew");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModalNew').modal('show');
                }
            },
        });
    }
    function LRAlertNote(value) {
        $('.spinner').show();
        var url = '@Url.Action("GetCurrnetBranchLoadLRFromLC")';
        var DTO = { Type: "LR", Reco: value, DocTpe: "LR" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }
            },
        });
    }
</script>


<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <div class="col-md-2">
            <b class="CodeSt">@ViewBag.Header</b>
        </div>

        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Active :</label>
            <svg width="20" height="20">
                <title>Active</title>
                <a onclick="SVGActive();">
                    <rect width="20" height="20" style="fill:rgb(163,228,180);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Clear :</label>
            <svg width="20" height="20">
                <title>Clear</title>
                <a onclick="SVGClear();">
                    <rect width="20" height="20" style="fill:rgb(157,210,218);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Complete :</label>
            <svg width="20" height="20">
                <title>Complete</title>
                <a onclick="SVGComplete();">
                    <rect width="20" height="20" style="fill:rgb(224,155,155);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">All :</label>
            <svg width="20" height="20">
                <title>All</title>
                <a onclick="SVGALL();">
                    <rect width="20" height="20" style="fill:rgb(201,201,199);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>

        <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
            <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnListPrint" onclick="Print();" data-toggle="tooltip" data-placement="top" title="Print">Print</button>
        </div>
        <div class="col-md-1 pull-right" style="padding-left:6px;padding-right:0px;font-family:Tahoma;padding-top:6px;font-size:9pt; width:unset;color:black;">
            <a id="btnopnFormat" href="" title="View Columns"><i class="fa fa-edit" style="color:blue;font-size:20px;"></i></a>
        </div>

        <div class="col-md-3" style="padding-right:unset;">
            <div class="col-md-1" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;color:black;">
                Period:
            </div>
            <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                <input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;font-size:10pt;">
                <span class="input-group-addon">to</span>
                <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;font-size:10pt;">
            </div>
        </div>
        <div class="col-md-3">
            <div class="col-sm-10">
                @Html.ListBoxFor(x => x.BranchL, Model.Branches, new { @class = "BranchL", @id = "BranchL" })
            </div>
            <div class="col-sm-1" style="padding-right:1px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;text-align:right">
                <a onclick="clickRefresh()" class="fa fa-refresh" style="font-size:20px;cursor:pointer" title="Refresh the Report"></a>
            </div>
        </div>


        <div class="col-md-1 pull-right hidden" style="padding-left:0px;font-family:Tahoma;padding-top:6px;font-size:9pt; width:unset;color:black;">
            Set Default
        </div>
        <div class="col-md-1 pull-right hidden" style="padding-left:6px;width:30px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;">
            <input title='Set this View as Default' type="checkbox" id="isdefault" name="isdefault" style="margin-top:2px; width:17px;height:17px;" />
        </div>
        <div class="col-md-3 pull-right hidden">
            @Html.TextBoxFor(x => x.ViewDataId, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "formats", @name = "formats" })
        </div>



    </div>
</header>

<section class="panel">

    <div class="panel-body" style="margin-top:2%;height:auto;padding-left:0px;padding-right:0px;">
        <div id="page-contentgrid">
            <div class="jqGrid">
                <table id="list" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;"></table>
                <div id="pager" style="height:34px;"></div>
            </div>
        </div>
    </div>

</section>




<div class="example-modal">
    <div id="updTfatsearch" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;">
            <div id="updTfatsearchDiv">
                @Html.Partial("TfatSearchUpdate")
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>


<!--VehicleStatus Modal -->
<div class="example-modal">
    <div id="UpdateVehicleStatus" class="modal modal-default" style="margin-top: 1%;">
        <div class="modal-dialog " style="width:1080px;">
            <div id="AttachmentmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Vehicle Status</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="max-height:33px;min-height:33px; width:100%; overflow: hidden;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group">
                                        <div class="col-sm-3" style="padding-top: 5px;">
                                            <label class="col-sm-12 control-label">Vehicle Status :</label>
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.EnumDropDownListFor(x => x.vehicleStatus, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnVehicleStatus" data-dismiss="modal">Save</button>
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!--Alert Note Modal -->
<div class="example-modal">
    <div id="AlertNoteModalNew" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="OnlyAlertNoteDivNew" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Shruham Map*@
<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="mapdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">

            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Location</b></h4>
                    </div>
                    <div class="modal-body">
                        <div id="QueryMapDiv" style="height:300px;width:100%;background-color:rebeccapurple;">
                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })
@Html.HiddenFor(x => x.Branch)
@Html.HiddenFor(x => x.Document)
<input type="hidden" name="action" id="GetCurrent_LRNo" />
<input type="hidden" name="action" id="DocNO" />
<input type="hidden" name="action" id="hdnDataSearchString" />