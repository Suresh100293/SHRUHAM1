@model ALT_ERP3.Areas.Logistics.Models.LCVM
@using Common;
@{
    ViewBag.Title = "FM Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>

<style>
    .AutoRetrive {
        background: #95cac7;
        color: black;
    }

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    .SearchRow {
        background-color: coral;
    }

    .SelectedRow {
        background-color: #e1cde1 !important;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    .legend {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: white;
        color: red !important;
        width: auto;
        z-index: auto;
        padding: 5px 45px 5px 45px;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -40px;
    }

    .legend3 {
        top: -1.3em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .legend4 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .legend5 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }

    .display {
        display: block;
    }

    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }

    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>

<script type="text/javascript">
    var LcGenerate = true;
    var PrintLR = "";
    $(document).ready(function ()
    {
        GetMyFavorites('@Model.ViewDataId');
        $("#txtSearchLr,#Lcno").constrain({ allow: { regex: "[0-9]" } });
        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();
        $('#LcDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        //$('#LcDate').datepicker({
        //    format: 'dd/mm/yyyy',
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "-60:+0",
        //    autoclose: true,
        //});
        if ('@Model.LCSetup.LCBoth' == "True")
        {
            LcGenerate = true;
        }
        else if ('@Model.LCSetup.LCGenerate' == "False")
        {
            LcGenerate = false;
        }
        if ('@Model.Mode' == "Delete" || '@Model.Mode' == "View")
        {
            $('#BothCHK,#lstDispatch,#lstAdd,#lstTransit,#lstAll,#txtSearchLr').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
        }
        else if ('@Model.Mode' == "Edit")
        {
            $('#BothCHK').prop("disabled", true);
            if ('@Model.DispatchLc' == "True")
            {
                var Message = $("#ErrorMessage").text() + "<br>This Lorry Challan Dispatch So U Cant Update...!";
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message);
                $('#BothCHK,#lstDispatch,#lstAdd,#lstTransit,#lstAll,#txtSearchLr').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
            }
        }
        else if ('@Model.Mode' == "Add")
        {
            if ('@Model.LcGenerate' == "M")
            {
                $('#BothCHK').bootstrapToggle('on');
            }
        }
        if ('@Model.Mode' == "Edit" || '@Model.Mode' == "Delete")
        {
            if ('@Model.LockAuthorise' == "True")
            {
                var Message = $("#ErrorMessage").text() + "<br>Document Lock In @Model.Mode Mode As Per The Authentication Rule...";
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message);
                $('#BothCHK,#lstDispatch,#lstAdd,#lstTransit,#lstAll,#txtSearchLr').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
            }
        }
        if ('@Model.PeriodLock' == "True") {
            var Message = $("#ErrorMessage").text() + "<br>This Document Lock By Author....!";
            $("#ErrorMessage").show();
            $("#ErrorMessage").html(Message);
            $('#BothCHK,#lstDispatch,#lstAdd,#lstTransit,#lstAll,#txtSearchLr').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
            $('.btn').prop("disabled", true);
        }

        $('#btnAddNote,#btnPrintOnly').prop("disabled", false);
        $('#changebranch :input').prop("disabled", false);
        $('#changeperiod :input').prop("disabled", false);
        $('#addnotemodel :input').prop("disabled", false);
        $('#printpostmodel :input').prop("disabled", false);
        $("#BothCHK").change(function ()
        {
            $("#ErrorMessage").hide();
            if (this.checked)
            {
                $("#Lcno").removeAttr("disabled");
                LcGenerate = false;
            }
            else
            {
                $("#Lcno").attr("disabled", "disabled");
                LcGenerate = true;
                $("#Lcno").val($("#AutoNo").val());
            }
        });

        $('#btnPrintOnly').click(function (event) {
            event.preventDefault();
            PrintLR = "OnlyPrint";
            $('#printpostmodel').modal('show');
        });
        $("#Lcno").blur(function ()
        {
            CheckManual();
        });

        $("#AutoNo").val('@Model.Lcno');

        LoadFromnew();
        LoadTo();

        $('#GetLRLIst,#AlertNoteModal,#addnotemodel').modal({
            backdrop: 'static',
            keyboard: false
        })

        $("#GetLRLIst,#AlertNoteModal,#addnotemodel").modal("hide");
        $("#DeselectAll").click(function ()
        {
            $(".checkbox").prop('checked', false);
            var CheckBox = $("#DeselectAll").prop("checked");
            if (!CheckBox)
            {
                $("#list > tbody  > tr").each(function ()
                {
                    var Row = $(this).closest('tr');
                    Row.find("input[class='DebitGrid']").prop("checked", false);
                    Row.find(".LGQty").val("0");
                    Row.find(".LGQty").prop("disabled", true);
                    Row.find(".LDQty").val("0");
                    Row.find(".LDQty").prop("disabled", true);
                    Row.find(".CalculateWeight").val("0");
                    Row.find(".CalculateWeight").prop("disabled", true);
                    Row.removeClass("SelectedRow");
                });
            }
            $("#mTotalQty1").html("0");
            $("#mTotalWeight1").html("0");
            $("#mTotalLR1").html("0");
        });




        $('#All').change(function ()
        {
            if (this.checked)
            {
                $("#Dispach").prop("checked", true);
                $("#Delivery").prop("checked", true);
                $("#Billing").prop("checked", true);
            }
            else
            {
                $("#Dispach").prop("checked", false);
                $("#Delivery").prop("checked", false);
                $("#Billing").prop("checked", false);
            }
        });

        $("#Dispach,#Delivery,#Billing").click(function ()
        {
            $("#All").prop("checked", false);
        });


        $("#txtSearchLr").blur(function (event)
        {
            debugger;
            event.preventDefault();
            var url = '@Url.Action("AddLRExternally")';
            if (parseInt($("#txtSearchLr").val()) > 0 ) {

                $("#DeselectAll").prop('checked', false);
                $("#Search").val("");
                $("#SelectLR").val("");
                $('#list').jqGrid('clearGridData');
                $("#list").jqGrid("GridUnload");
                $('#list').trigger('reloadGrid');
                GridReload("5");
            }
        });

        $('#lstAdd').click(function (event)
        {
            event.preventDefault();
            $("#DeselectAll").prop('checked', false);
            $("#Search").val("");
            $("#SelectLR").val("");
            $('#list').jqGrid('clearGridData');
            $("#list").jqGrid("GridUnload");
            $('#list').trigger('reloadGrid');
            GridReload("2");
        });
        $('#lstDispatch').click(function (event)
        {
            event.preventDefault();
            $("#DeselectAll").prop('checked', false);
            $("#Search").val("");
            $("#SelectLR").val("");
            $('#list').jqGrid('clearGridData');
            $("#list").jqGrid("GridUnload");
            $('#list').trigger('reloadGrid');
            GridReload("1");
        });

        $('#lstTransit').click(function (event)
        {
            event.preventDefault();
            $("#DeselectAll").prop('checked', false);
            $("#Search").val("");
            $("#SelectLR").val("");
            $('#list').jqGrid('clearGridData');
            $("#list").jqGrid("GridUnload");
            $('#list').trigger('reloadGrid');
            GridReload("3");
        });

        $('#lstAll').click(function (event)
        {
            event.preventDefault();

            $("#DeselectAll").prop('checked', false);
            $("#Search").val("");
            $("#SelectLR").val("");
            $('#list').jqGrid('clearGridData');
            $("#list").jqGrid("GridUnload");
            $('#list').trigger('reloadGrid');
            GridReload("4");
        });



        $('#btnDelete').click(function (event) {
                event.preventDefault();

                var result = confirm("Are you sure you want to delete?");
                if (result) {
                    var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                    var ModelData = {};
                    ModelData["Document"] = $("#Document").val();
                    ModelData["Mode"] = "Delete";
                    ModelData["Header"] = "@Model.Header";
                    var DTO = { mModel: ModelData };
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify(DTO),
                        cache: false,
                        url: url,
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function () {
                            $('.spinner').show();
                        },
                        success: function (data) {
                            if (data.Status == 'Success') {
                                $('.spinner').hide();
                                window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                                $("#ErrorMessage").hide();
                            }
                            else {
                                $('.spinner').hide();
                                alert(data.Message);
                            }
                        },
                    });
                } else {
                    $('.spinner').hide();
                    window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                    $("#ErrorMessage").hide();
                }


            });


        $('#Submit').click(function (event) {
            event.preventDefault();
            PrintLR = "";
            if ('@Model.Mode' == "Delete")
            {
                var result = confirm("Are you sure you want to Delete  ?");
                if (result)
                {
                    SaveLC();
                }
            }
            else
            {
                CheckDate();
            }
        });
        $('#btnPrint').click(function (event) {
            event.preventDefault();
            PrintLR = "SavePrint";
            if ('@Model.Mode' == "Delete")
            {
                var result = confirm("Are you sure you want to Delete  ?");
                if (result)
                {
                    SaveLC();
                }
            }
            else
            {
                CheckDate();
            }
        });

        $("#SelectLR").blur(function () {

            var CountLrExistOrNot = 0, TotalQty = 0, TotalWeight = 0, count=0;
            var WantToselectLRNO = $("#SelectLR").val();
            var ScrollRow;

            debugger;
            if ($("#SelectLR").val() != "" && $("#SelectLR").val() != null) {
                $('#list > tbody > tr').removeClass("SelectedRow");
                $('#list tbody tr').each(function () {
                    debugger;
                    var Qty = 0, Weight = 0;
                    var Row = $(this).closest('tr');
                    var LRNO = Row.find('td:eq(7)').text();
                    var Auth = Row.find('td:eq(26)').text();
                    var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');

                    if (LRNO == WantToselectLRNO) {
                        ScrollRow = Row;
                        if (Auth == "A") {
                            Row.find("input[class='DebitGrid']").prop("checked", true);
                            Row.find(".LGQty").val(Row.find('td:eq(11)').text());
                            Row.find(".LGQty").prop("disabled", false);
                            Row.find(".LDQty").val("0");
                            Row.find(".LDQty").prop("disabled", false);
                            Row.find(".CalculateWeight").val(Row.find('td:eq(16)').text());
                            Row.find(".CalculateWeight").prop("disabled", false);
                            Qty = parseInt(Row.find('td:eq(11)').text());
                            Weight = parseInt(Row.find('td:eq(16)').text());
                            count++;

                            debugger;
                            var objTable = $("#list");
                            var iRow = ScrollRow.find("td:eq(6)").text();
                            objTable.jqGrid('setSelection', iRow);
                            jQuery("#list").jqGrid('setRowData', parseInt(iRow), false, { background: 'rgb(225 205 225)' });
                            Row.addClass("SelectedRow");
                        }
                        else if (Auth == "N") {
                            alert("This Is Un-Authorised LR So U Cant Select IT...");
                            Row.find("input[class='DebitGrid']").prop("checked", false);
                        }
                        else if (Auth == "R") {
                            alert("This Is Reject LR So U Cant Select IT...");
                            Row.find("input[class='DebitGrid']").prop("checked", false);
                        }
                    }
                    else {
                        if (CheckBox) {
                            Row.addClass("SelectedRow");
                            Qty = parseInt(Row.find(".LGQty").val());
                            Weight = parseInt(Row.find('.CalculateWeight').val());
                        }
                    }

                    TotalQty += Qty;
                    TotalWeight += Weight;
                })

                var check = $('#list').find("input[class='DebitGrid']:checked").length;
                $("#mTotalQty1").html(TotalQty);
                $("#mTotalWeight1").html(TotalWeight);
                $("#mTotalLR1").html(check);
                debugger;
                if (count == 0) {
                    alert("Not Found");
                    $("#Search").focus();
                }
                else {
                    $("#SelectLR").focus();
                }
            }



            $("#SelectLR").val("");

        });
        // Search all columns
        $('#Search').keyup(function () {
            var value = $(this).val();
            if (value != "") {
                $('#list > tbody > tr').removeClass('SearchRow');

                $("#list > tbody > tr > td ").each(function () {
                    if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        var dd = $(this).text().toLowerCase();
                        $(this).addClass("SearchRow");
                    }
                    else {
                        $(this).removeClass("SearchRow");
                    }
                });
            }
            else {
                $('#list td').removeClass('SearchRow');
            }
        });
        $('#btnGetLc').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("GridView")';
            var myTableArray = [];
            $("#list > tbody  > tr").each(function () {
                if ($(this).find("input[class='DebitGrid']").prop("checked") == true) {
                    debugger;
                    var myDets = {
                        StockTableky: $(this).find('td:eq(4)').text(),
                        LrNo: $(this).find('td:eq(7)').text(),
                        LrBookDate: $(this).find('td:eq(8)').text(),
                        StockAvlIn: $(this).find('td:eq(10)').text(),
                        AvlQty: $(this).find('td:eq(11)').text(),
                        LoadQty: $(this).find(".LGQty").val(),
                        LoadWeight: $(this).find(".CalculateWeight").val(),
                        ChrWeight: $(this).find('td:eq(15)').text(),
                        ActWeight: $(this).find('td:eq(16)').text(),
                        ChgType: $(this).find('td:eq(18)').text(),
                        UnitCode: $(this).find('td:eq(17)').text(),
                        From: $(this).find('td:eq(19)').text(),
                        To: $(this).find('td:eq(20)').text(),
                        Consigner: $(this).find('td:eq(23)').text(),
                        Consignee: $(this).find('td:eq(24)').text(),
                        LRType: $(this).find('td:eq(25)').text(),
                        Authenticate: $(this).find('td:eq(26)').text(),
                        DeliveryOfLR: $(this).find('td:eq(21)').text(),
                        Collection: $(this).find('td:eq(22)').text(),
                        Mode: $(this).find('td:eq(27)').text(),
                        ConsignmentTableky: $(this).find('td:eq(28)').text(),
                    }
                    myTableArray.push(myDets);
                }
            });
            var check = $('#list').find("input[class='DebitGrid']:checked").length;
            if (check > 0)
            {
                $("#GetLRLIst").modal("hide");
                var ModelData = {};
                ModelData["Consignments"] = myTableArray;
                var DTO = { mModel:ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        var LoadDownLoadFiles1 = $("#SelectedLrShow");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles1.html('');
                        LoadDownLoadFiles1.html(data.Html);
                        $("#txtSearchLr").val("");
                        AlertNoteMaster();
                    },
                });
            }
            else
            {
                alert("Atleast One LR Required...");
            }
        });
        $("#btnAddNote").click(function (e) {
            e.preventDefault();
            $("#OnlyAlertNoteDiv").html('');
            var url = '/Logistics/AlertNote/ShoWAlertNoteList';
            var myTableArray = [];
            myTableArray.push($('#Document').val());
            var DTO = { Type: "LC000", TypeCode: myTableArray, DocTpe: "LC000" };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    debugger;
                    $('#addnotemodel').modal('show');
                    var AttachDoc = $("#AlertAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);

                    $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");


                },
            });
        });
        $("#btnAddNarr").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").addClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").removeClass("hidden");
            var url = '/Logistics/AlertNote/PartialView';
            var ModelData = {};
            ModelData["AType"] = "LC000";
            ModelData["DocReceived"] = $("#Lcno").val();
            ModelData["DocumentKey"] = $("#Document").val();
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    debugger;
                    var AttachDoc = $("#AddAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                },
            });
        });
        $("#btnNarrList").click(function (e) {
            e.preventDefault();
            $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
            $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
        });
        $('#btnNarrSave').click(function (event) {
            event.preventDefault();
            debugger;
            if ($("#AType").val() == null || $("#AType").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Type is required..');
                return;
            }
            if ($("#CommonRemark").val() == null || $("#CommonRemark").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Remark is required..');
                return;
            }
            var AlertRefType = [];
            debugger;
            $('#ALerttbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');
                if ($(this).find(".chkfvalue").prop("checked") == true || $(this).find(".chkfvalueStop").prop("checked")) {
                    var myDets =
                    {
                        Code: tds.eq(1).text(),
                        select: $(this).find(".chkfvalue").prop("checked"),
                        stop: $(this).find(".chkfvalueStop").prop("checked"),
                    }
                    AlertRefType.push(myDets);
                }
            });
            var url = '/Logistics/AlertNote/SaveDataGetList';
            var ModelData = {};
            ModelData["AType"] = $("#AType").val();
            ModelData["TypeCode"] = $("#TypeCode").val();
            ModelData["RefersType"] = AlertRefType;
            ModelData["Remark"] = $("#CommonRemark").val();
            ModelData["Bling"] = $("#Bling").is(":checked");
            ModelData["PartyNarr"] = $("#PartyNarr").is(":checked");
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message);
                    } else
                    {
                        var LoadDownLoadFiles = $("#AlertAlertNoteDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $("#AlertAlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                    }
                },
            });
        });
    });

    function JQGridCheckbox() {
        var TotalQty = 0, TotalWeight = 0, count = 0;
        $('#list > tbody > tr').removeClass("SelectedRow");

        $('#list tbody tr').each(function () {
            debugger;
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
            var Auth = Row.find('td:eq(26)').text();
            var Qty = 0, Weight = 0;
            if (Auth == "A")
            {
                if (CheckBox)
                {
                    Row.find(".LGQty").val(Row.find('td:eq(11)').text());
                    Row.find(".LGQty").prop("disabled", false);
                    Row.find(".LDQty").val("0");
                    Row.find(".LDQty").prop("disabled", false);
                    Row.find(".CalculateWeight").val(Row.find('td:eq(16)').text());
                    Row.find(".CalculateWeight").prop("disabled", false);
                    Qty = parseInt(Row.find('td:eq(11)').text()) ;
                    Weight = parseInt(Row.find('td:eq(16)').text());
                    count++;
                    Row.addClass("SelectedRow");

                }
                else
                {
                    Row.find(".LGQty").val("0");
                    Row.find(".LGQty").prop("disabled", true);
                    Row.find(".LDQty").val("0");
                    Row.find(".LDQty").prop("disabled", true);
                    Row.find(".CalculateWeight").val("0");
                    Row.find(".CalculateWeight").prop("disabled", true);
                }
            }
            else if (Auth == "N")
            {
                alert("This Is Un-Authorised LR So U Cant Select IT...");
                Row.find("input[class='DebitGrid']").prop("checked", false);
            }
            else if (Auth == "R")
            {
                alert("This Is Reject LR So U Cant Select IT...");
                Row.find("input[class='DebitGrid']").prop("checked", false);
            }

            TotalQty += Qty;
            TotalWeight += Weight;

        })

        if (count == 0) {
            $("#DeselectAll").prop('checked', false);
        } else {
            $("#DeselectAll").prop('checked', true);
        }
        $("#mTotalQty1").html(TotalQty);
        $("#mTotalWeight1").html(TotalWeight);
        $("#mTotalLR1").html(count);
    }

    function QtyCheck()
    {
        debugger;
        var TotalQty1 = 0, TotalWeight1 = 0, count = 0;

        $('#list tbody tr').each(function () {
            debugger;
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
            var Qty = 0, Weight = 0;

            if (CheckBox)
            {

                var TotalQty = Row.find('td:eq(11)').text();
                var TotalWeight = Row.find('td:eq(16)').text();

                var LoadGQty = Row.find(".LGQty").val();
                var LoadDQty = Row.find(".LDQty").val();
                var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
                if (LoadQty==0)
                {
                    Row.find(".LGQty").val("0");
                    Row.removeClass("SelectedRow");
                    Row.find(".LGQty").prop("disabled", true);
                    Row.find(".LDQty").val("0");
                    Row.find(".LDQty").prop("disabled", true);
                    Row.find(".CalculateWeight").val("0");
                    Row.find(".CalculateWeight").prop("disabled", true);
                    Row.find("input[class='DebitGrid']").prop('checked',false);
                }
                else
                {
                    count++;
                    if (parseFloat(TotalQty) < parseFloat(LoadQty)) {
                        Row.find(".CalculateWeight").val(TotalWeight);
                        alert("GodownQty and DoorQty Not Greater Than Qty OF Lr.....!");
                        Row.find(".LGQty").val(TotalQty);
                        Row.find(".LDQty").val("0");

                        Qty = parseInt(TotalQty);
                        Weight = parseInt(TotalWeight);
                    }
                    else
                    {
                        var CalculateWeight = parseFloat(LoadQty) / parseFloat(TotalQty) * parseFloat(TotalWeight);
                        if (parseInt(CalculateWeight) >= parseInt(TotalWeight))
                        {
                            Row.find(".CalculateWeight").val(Math.round(TotalWeight));
                            Weight = parseInt(TotalWeight);
                            Qty = parseInt(TotalQty);
                        }
                        else
                        {
                            Row.find(".CalculateWeight").val(Math.round(CalculateWeight));
                            Weight = parseInt(CalculateWeight);
                            Qty = parseInt(LoadQty);
                        }

                    }
                }

            }

            TotalQty1 += Qty;
            TotalWeight1 += Weight;

        })

        if (count == 0) {
            $("#DeselectAll").prop('checked', false);
        } else {
            $("#DeselectAll").prop('checked', true);
        }
        $("#mTotalQty1").html(TotalQty1);
        $("#mTotalWeight1").html(TotalWeight1);
        $("#mTotalLR1").html(count);
    }

    function WeightCheck()
    {
        var TotalQty1 = 0, TotalWeight1 = 0, count = 0;

        $('#list tbody tr').each(function () {
            debugger;
            var Row = $(this).closest('tr');
            var CheckBox = $(this).find("input[class='DebitGrid']").is(':checked');
            var Qty = 0, Weight = 0;
            if (CheckBox) {
                count++;
                debugger;
                var TotalQty = Row.find('td:eq(11)').text();
                var TotalWeight = Row.find('td:eq(16)').text();

                var LoadGQty = Row.find(".LGQty").val();
                var LoadDQty = Row.find(".LDQty").val();
                var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
                var LoadWeight = Row.find(".CalculateWeight").val();

                if (parseFloat(TotalWeight) < parseFloat(LoadWeight)) {
                    Row.find(".CalculateWeight").val(TotalWeight);
                    alert("Weight Not Greater Than Act Weight OF Lr.....!");
                    Weight = parseInt(TotalWeight);
                    Qty = parseInt(LoadQty);
                } else {
                    var CalculateWeight = parseFloat(LoadQty) / parseFloat(TotalQty) * parseFloat(TotalWeight);
                    Row.find(".CalculateWeight").val(Math.round(CalculateWeight));
                    Weight = parseInt(CalculateWeight);
                    Qty = parseInt(LoadQty);
                }
            }
            TotalQty1 += Qty;
            TotalWeight1 += Weight;

        })



        if (count == 0) {
            $("#DeselectAll").prop('checked', false);
        } else {
            $("#DeselectAll").prop('checked', true);
        }
        $("#mTotalQty1").html(TotalQty1);
        $("#mTotalWeight1").html(TotalWeight1);
        $("#mTotalLR1").html(count);
    }

    function GridReload(value) {
        //event.preventDefault();
        var ColName, Coldata;
        var lPath = window.location.pathname;
        var arrPath = lPath.split("/");
        var code = $("#btncode").val();
        var Flag = false;
        if (value == "5") {
            Flag = true;
        }
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?id=LCMergeData&Flag=' + Flag;
        var ExistLr = "";
        $("#example > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            if (ExistLr == "")
            {
                ExistLr = ExistLr +  tds.eq(0).text() + "',"
            }
            else
            {
                ExistLr = ExistLr + "'" + tds.eq(0).text() + "',"
            }
        });
        if (ExistLr != "") {
            ExistLr = ExistLr.substr(0, ExistLr.length - 2)
        }

        var sUrlpath = '@Url.Action("GetGridData")?ViewDataId=LCMergeData&mVar4=' + ExistLr;

        if (value == "1")
        {
            sUrlpath = '@Url.Action("GetGridData1")?ViewDataId=LCMergeData&mVar4=' + ExistLr + '&mVar3='+$("#LcTODest").val();
        }
        else if (value == "2")
        {
            sUrlpath = '@Url.Action("GetGridData2")?ViewDataId=LCMergeData&mVar4=' + ExistLr;
        }
        else if (value == "3")
        {
            sUrlpath = '@Url.Action("GetGridData3")?ViewDataId=LCMergeData&mVar4=' + ExistLr;
        }
        else if (value == "4")
        {
            sUrlpath = '@Url.Action("GetGridData")?ViewDataId=LCMergeData&mVar4=' + ExistLr;
        }
        else if (value == "5")
        {
            sUrlpath = '@Url.Action("GetGridData4")?ViewDataId=LCMergeData&mVar4=' + ExistLr + '&mVar3=' + $("#txtSearchLr").val();
            $("#txtSearchLr").val("");
        }

        var sUrlpath1 = '@Url.Action("GetGridData")';

        var ModelData = {};
        ModelData["ViewDataId"] = "LCMergeData";


        ModelData["mVar4"] = ExistLr;

        var DTO = { Model: ModelData };

        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function CreateGridData() {
            $('#list').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                height:350,
                sortname: '',
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                //scroll: false,
                autowidth: false,
                shrinkToFit: false,
                search: true,
                scrollrows: true,
                onSelectRow: function (id, status, e) {
                    //e.preventDefault();
                    //$('#GetCurrentRow').val($('#list').jqGrid('getCell', id, 'Document'));
                    //$('#EditFlag').val($('#list').jqGrid('getCell', id, 'EditUpto'));
                    //$('#DeleteFlag').val($('#list').jqGrid('getCell', id, 'DeleteUpto'));
                    $('.spinner').hide();

                },
                ondblClickRow: function (id) {
                    //event.preventDefault();
                    //var myGrid = $('#list');
                    //var cellVal = myGrid.jqGrid('getCell', id, 'Document');
                    //location.href = "/Logistics/" + '@ViewBag.Controller2' + "/Index?Document=" + encodeURIComponent(cellVal) + "&TableName=" + '@ViewBag.Table' + "&MainType=" + '@ViewBag.MainType' + "&Mode=View&Header=" + '@ViewBag.Header' + "&ViewDataId=" + '@ViewBag.id' + '&Controller2=' + '@ViewBag.Controller2' + '&Module=' + '@ViewBag.Module' + '&optiontype=' + '@ViewBag.optiontype' + '&optioncode=' + '@ViewBag.optioncode';
                },

                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    var ids = jQuery("#list").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length; i++) {
                        var rowId = ids[i];
                        var gridId = jQuery("#list").getDataIDs();
                        //loop through grid rows

                        var LRno = jQuery("#list").getCell(rowId, "Recordekey");
                        var Auth = jQuery("#list").getCell(rowId, "Authenticate");
                        var beChecked = "<input type ='checkbox' id='" + rowId + "' value='" + jQuery("#list").getCell(rowId, "Recordekey") + "'  onclick='JQGridCheckbox();' class='DebitGrid' name='DebitGrid'  style='height: 22px;width: 19px;' />";
                        var LoadGQty = "<center><input type ='text' value='0' id=LGQty" + rowId + " class='LGQty' name='LGQty' onblur='QtyCheck()'  style='width:100px;' disabled /></center>";
                        var LoadDQty = "<center><input type ='text' value='0'  class='LDQty' name='LDQty' onblur='QtyCheck()' style='width:100px;' disabled /></center>";
                        var LoadWeight = "<center><input type ='text' value='0'  class='CalculateWeight' onblur='WeightCheck()' name='CalculateWeight'   style='width:100px;' disabled /></center>";
                        if (Auth == "A")
                        {

                        }
                        else if (Auth == "N")
                        {
                            jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(80 121 212)' });
                        }
                        else if (Auth == "R")
                        {
                            jQuery("#list").jqGrid('setRowData', ids[i], false, { background: 'rgb(191 104 96)' });
                        }

                        jQuery("#list").jqGrid('setRowData', rowId, { 'Select': beChecked, 'LoadGQty': LoadGQty, 'LoadDQty': LoadDQty, 'LRActWeight': LoadWeight });


                    }
                },
            });
            jQuery("#list").jqGrid('navGrid', "#pager",
            { edit: false, add: false, del: false, print:false, search: true, refresh: false, searchtext: "filter" });
            jQuery("#list").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            $('#GetLRLIst').modal('show');
        };
    };

    function AlertNoteMaster() {
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        $("#example > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            myTableArray.push(tds.eq(1).text());
        });

        var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "LC000" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == "Success")
                {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }

            },
        });
    }
    function AlertNoteMasterDocument(value) {
        debugger;
        event.preventDefault();
        var url = '/Logistics/AlertNote/ShoWAlertNoteList';
        var myTableArray = [];
        myTableArray.push(value);
        var DTO = { Type: "LC000", TypeCode: myTableArray, DocTpe: "LC000" };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == "Success") {
                    var AttachDoc = $("#OnlyAlertNoteDiv");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#AlertNoteModal').modal('show');
                }

            },
        });
    }
    function CheckDate() {
            var url = '@Url.Action("CheckLCDate")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { DocDate: $("#LcDate").val(), DocTime: $("#Time").val() },
                success: function (result) {
                    if (result.Status == "T") {
                        CheckOwnDocumentAlertNoteMaster($("#Document").val());
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text(result.Message);
                        return;
                    }
                }
            });
    }
    function CheckAlertNoteMaster()
    {
        event.preventDefault();
        var url = '@Url.Action("CheckStopAlertNote")';
        var myTableArray = [];
        $("#example > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            myTableArray.push(tds.eq(1).text());
        });
        var DTO = { Type:"LR000", TypeCode:myTableArray ,DocTpe:"LC000"};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $("#ErrorMessage").hide();
                    SaveLC();
                }
                else
                {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function CheckOwnDocumentAlertNoteMaster(value)
    {
        var url = '@Url.Action("DocumentStopAlertNote")';
        var myTableArray = [];
        myTableArray.push(value);
        var DTO = { Type:"LC000", TypeCode:myTableArray};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                debugger;
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $("#ErrorMessage").hide();
                    CheckAlertNoteMaster();
                }
                else
                {
                    $('.spinner').hide();
                    AlertNoteMasterDocument(data.Message);
                }
            },
        });
    }
    function SaveLC() {

            if ($("#LcSource").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Source Required..');
                return;
            }
            if ($("#LcTODest").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Destination Required..');
                return;
            }
            if ($("#KM").val() == '' || $("#KM").val() == '0') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('KM Required..');
                return;
        }
        if (LcGenerate)
        {
            CheckAuto();
        }
        else
        {
            if ($("#Lcno").val() == '0' || $("#Lcno").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Lcno is required..');
                return;
            }
            CheckManual();
        }
        var url = '@Url.Action("SaveData")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["Lcno"] = $("#Lcno").val();
        ModelData["LcDate"] = $("#LcDate").val();
        ModelData["Time"] = $("#Time").val();
        ModelData["LcFromSource"] = $("#LcFromSource").val();
        ModelData["LcTODest"] = $("#LcTODest").val();
        ModelData["KM"] = $("#KM").val();
        ModelData["Remark"] = $("#Remark").val();
        if (LcGenerate) {
            ModelData["LcGenerate"] = "A";
        } else {
            ModelData["LcGenerate"] = "M";
        }
        var myTableArray = [];
        $("#example > tbody  > tr").each(function () {
            var tds = $(this).find('td');
            var myDets = {
                StockTableky: tds.eq(0).text(),
                ConsignmentTableky: tds.eq(1).text(),
                Lcno: $("#Lcno").val(),
                Lrno: tds.eq(3).text(),
                StockAvlIn: tds.eq(5).text(),
                Qty: tds.eq(6).text(),
                LoadQty: tds.find(".LoadGQty").val(),
                LoadWeight: tds.find(".LoadWeight").val(),
            }
            myTableArray.push(myDets);
        });


        if ('@Model.Mode' != "Delete") {
            debugger;
            var rowCount = $('#example >tbody >tr').length;
            if (rowCount == 0)
            {
                if ('@Model.Mode' == "Add")
                {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Atleast One Consignment Required..');
                    return;
                }
                else
                {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Cannot Allow LC Without Any LR..');
                    return;
                }
            }
        }

        ModelData["Consignments"] = myTableArray;

       if ($("#All").prop("checked") == true) {
           ModelData["Dispach"] = true;
           ModelData["Delivery"] = true;
           ModelData["Billing"] = true;
           ModelData["All"] = true;
       } else {

           if ($("#Dispach").prop("checked") == true) {
               ModelData["Dispach"] = true;
           } else {
               ModelData["Dispach"] = false;
           }
           if ($("#Delivery").prop("checked") == true) {
               ModelData["Delivery"] = true;
           } else {
               ModelData["Delivery"] = false;
           }
           if ($("#Billing").prop("checked") == true) {
               ModelData["Billing"] = true;
           } else {
               ModelData["Billing"] = false;
           }
       }

       ModelData["LockRemark"] = $("#LockRemark").val();
       ModelData["Note"] = $("#Note").val();

       var DeleteLR = $("#DeleteLR").val();
       DeleteLR = DeleteLR.substring(0, (DeleteLR.length) - 1);
       ModelData["DeleteLRFromLCTable"] = DeleteLR;

       ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
       var DTO = { mModel: ModelData };
       $.ajax({
           type: "POST",
           dataType: "json",
           data: JSON.stringify(DTO),
           cache: false,
           url: url,
           contentType: "application/json; charset=utf-8",
           beforeSend: function () {
               $('.spinner').show();
           },
           success: function (data) {
               if (data.Status == 'Success') {

                   if (data.Msg != "N") {
                       alert(data.Msg);
                   }
                   if ('@Model.Mode' != "Delete") {
                       alert("Document Saved as " + data.SerialNo + "");
                       $("#Document").val(data.SerialNo);
                   } else {
                       alert("Document Delete Sucessfully...!");
                   }
                   if (PrintLR =="SavePrint")
                   {
                       $('.spinner').hide();
                       $('#printpostmodel').modal('show');
                       @*window.location.href = "/Logistics/LorryReceipt/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";*@
                   }
                   else
                   {
                       $('.spinner').hide();
                       $("#ErrorMessage").hide();
                       if ('@Model.Mode' == "Add")
                       {
                           window.location.href = "/Logistics/LC/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";
                       }
                       else
                       {
                            window.location.href = "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                       }
                       
                   }
               }
               else if (data.Status == 'AutoDocumentAlert') {
                   CheckOwnDocumentAlertNoteMaster(data.Message);
               }
               else {
                   $('.spinner').hide();
                   alert(data.Message);
               }
           },
       });
    }



    function CheckManual() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckManual")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { No: $("#Lcno").val(), document: $("#Document").val() },
            success: function (result) {
                debugger;
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                }
            }
        });
    }
    function CheckAuto() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckAuto")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { No: $("#Lcno").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                }
            }
        });
    }





    function LoadFromnew() {


        var url = '@Url.Action("From")'
        $('#LcFromSource').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.LcFromSource', text: '@Model.LcFromSource_Name' };
                callback(data);
            },

            formatResult: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadTo() {

        var url = '@Url.Action("To")'
        $('#LcTODest').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.LcTODest', text: '@Model.LcToDest_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            @if (Model.LedgerThrough)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>


<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="FreightMemo" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none;"></div>

            <fieldset class=" col-md-12" style="margin-top: 0px;">


                @if (Model.LCSetup.LCBoth)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (Model.LCSetup.LCGenerate)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }


                <div class="panel panel-default" style="margin-bottom: 0px !important;">
                    <div class="panel-body " style="padding-left: 20px;padding: 1px !important;">
                        <div class="col-md-12">
                            <div class="form-group" style="margin-top: 5px;">
                                <label class=" bold   col-md-1  control-label" style="width:85px;">LC No:</label>
                                <div class="col-md-1 " style="width:100px;">
                                    @if (Model.LCSetup.LCGenerate == false && Model.LCSetup.LCBoth == false)
                                    {
                                        @Html.TextBoxFor(x => x.Lcno, new { @class = "form-control", @style = "width:100%;", @Value = Model.Lcno })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.Lcno, new { @class = "form-control", @style = "width:100%;", @Value = Model.Lcno, @disabled = "disabled" })
                                    }
                                </div>
                                <label class=" bold   col-md-1  control-label" style="width:65px;">Time:</label>
                                <div class="col-md-1 " style="width:140px;">
                                    @Html.TextBoxFor(x => x.Time, new { @class = "form-control", @type = "time", @style = "width:100%;", @Value = Model.Time })
                                </div>
                                <label class=" bold   col-md-1  control-label" style="width:65px;">Date:</label>
                                <div class="col-md-1 ">
                                    @Html.TextBoxFor(x => x.LcDate, new { @class = "form-control", @style = "width:100%;", @Value = Model.DocDate.ToString("dd/MM/yyyy") })
                                </div>
                                <label class=" bold   col-md-1  control-label" style="width:75px;">Source:</label>
                                <div class="col-md-2 " style="width:250px;">
                                    @Html.TextBoxFor(x => x.LcFromSource, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.LcFromSource })
                                </div>
                                <label class=" bold   col-md-1  control-label" style="width:100px;">Destination:</label>
                                <div class="col-md-2 " style="width:250px;">
                                    @Html.TextBoxFor(x => x.LcTODest, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.LcTODest })
                                </div>

                            </div>

                            <div class="form-group" style="margin-top: 6px;margin-bottom: 8px;">
                                <label class=" bold   col-md-1  control-label" style="width: 85px;">Remark:</label>
                                <div class="col-md-8 ">
                                    @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @rows = "1", @style = "width:100%;", @Value = Model.Remark })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>

    </div>
</section>

<section class="panel" style="margin-top: 20px;">
    <div class="panel-body" style="margin-top:-30px;">
        <div class="form-horizontal " role="form" style="">
            <fieldset class=" col-md-12" style="">
                <button class="btn btn-info legend5" title="Curent Branch Stock To Be Dispatch For Other Branch." id="lstDispatch">Dispatch Stock</button>
                <button class="btn btn-info legend2" title="Curent Branch Godown Stock." id="lstAdd">Godown Stock</button>
                <button class="btn btn-info legend4" title="Curent Branch Transit Stock." id="lstTransit">Transit Stock</button>
                <button class="btn btn-info legend4" title="Curent Branch Total Stock." id="lstAll">All Stock</button>

                <input class="legend3" type="text" placeholder="Search All Stock" style="text-align:center;width:175px;" id="txtSearchLr" />

                <div class="panel panel-default" style="margin-bottom: 0px !important;">
                    <div class="panel-body " style="max-height:290px;min-height:290px;padding-left: 20px;padding: 1px !important;">
                        <div class="grid" id="SelectedLrShow" style="overflow: auto;width: 100%;display: block !important;max-height:290px;min-height:290px; width:auto;">
                            @Html.Partial("GridView", Model.Consignments)
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>

<footer class="footer-section" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
            <button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "Add")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                }
                @if (Model.Mode == "Edit" || Model.Mode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnPrint" data-toggle="tooltip" data-placement="top" title="Save">Save &amp; Print</button>
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Save</button>
                }
                @if (Model.Mode == "Delete")
                {
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Delete</button>
                }
                @if (Model.LedgerThrough)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>


<!--Print Option -->
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @Html.Partial("ReportPrintOptions")
            </div>
        </div>
    </div>
</div>

<!--LR Stock Modal -->
<div class="modal fade" id="GetLRLIst" style="width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: auto;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <div class="col-md-2">
                        <h4 class="modal-title">
                            <b>Add Lorry Receipt</b>
                        </h4>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-4">
                            <label class=" bold control-label" style="margin-top: 5px;">Unselect All :</label>
                        </div>
                        <div class="col-md-1">
                            <input type="checkbox" tabindex="1" id="DeselectAll" style="height:20px;width:20px;" />
                        </div>
                        <div class="col-md-3">
                            @*<label class=" bold control-label" style="margin-top: 5px;">Auto Retrive :</label>*@
                        </div>
                        <div class="col-md-1">
                            @*<input type="checkbox" id="AutoRetrive" style="height:20px;width:20px;" />*@
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="col-md-2">
                            <label class=" bold control-label" style="margin-top: 5px;"> Select By</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" id="SelectLR" tabindex="2" class="form-control" placeholder="LR NO" />
                        </div>
                        <div class="col-md-2">
                            <label class=" bold control-label" style="margin-top: 5px;"> Search</label>
                        </div>
                        <div class="col-md-5">
                            <input type="text" id="Search" class="form-control" placeholder="Search Here" />
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div id="tabLedger" class="tabcontent" style="height:450px;padding:0px 0px 0px 0px;display:block !important;">
                    <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                        <table id="list" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                        <div id="pager" style="height:32px;width:100%;"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-1" style="font-weight: bold;text-align:center;color: red;">Total -:</div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">No. Of LR :<label id="mTotalLR1" style="padding-left: 15px;font-weight: bold;color: red;">0</label></div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">Quantity :<label id="mTotalQty1" style="padding-left: 15px;font-weight: bold;color: red;">0</label></div>
                    <div class="col-md-2" style="font-weight: bold;width:auto;">Weight :<label id="mTotalWeight1" style="padding-left: 15px;font-weight: bold;color: red;">0</label><label style="padding-left: 15px;font-weight: bold;color: red;">Kgs</label></div>
                    <div class="col-sm-offset-2 col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Rejected LR :</label>
                        <svg width="20" height="20">
                            <title>Rejected LR</title>
                            @*<a onclick="SVGClear();">*@
                            <rect width="20" height="20" style="fill:#bf6860;stroke-width:3;stroke:rgb(0,0,0)" />
                            @*</a>*@
                        </svg>
                    </div>
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Authorise LR:</label>
                        <svg width="20" height="20">
                            <title>Un-Authorise LR</title>
                            @*<a onclick="SVGComplete();">*@
                            <rect width="20" height="20" style="fill:#5079d4;stroke-width:3;stroke:rgb(0,0,0)" />
                            @*</a>*@
                        </svg>
                    </div>
                    <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
                        <label class="col-sm-12 control-label" style="width:auto;color:black;">Selected LR:</label>
                        <svg width="20" height="20">
                            <title>Selected LR</title>
                            @*<a onclick="SVGComplete();">*@
                            <rect width="20" height="20" style="fill:#cb9ecb;stroke-width:3;stroke:rgb(0,0,0)" />
                            @*</a>*@
                        </svg>
                    </div>

                </div>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnGetLc">Submit</button>
            </div>
        </div>
    </div>
</div>

<!--Only Alert Modal -->
<div class="example-modal">
    <div id="AlertNoteModal" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="OnlyAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Alert/Note Modal -->
<div class="example-modal">
    <div id="addnotemodel" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="AlertAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                        <div class="form-group hidden" id="AddAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button class="btn btn-success" type="button" id="btnAddNarr">Add Narration</button>
                        <button class="btn btn-info hidden" type="button" id="btnNarrList">Show List</button>
                        <button class="btn btn-success hidden" type="button" id="btnNarrSave">Save</button>
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.Branch, new { @ID = "hdnBranch" })
@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.Mode, new { @ID = "hdnMode" })
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })
<input type="hidden" name="hdn" id="DeleteLR" />
<input type="hidden" id="AutoNo" />