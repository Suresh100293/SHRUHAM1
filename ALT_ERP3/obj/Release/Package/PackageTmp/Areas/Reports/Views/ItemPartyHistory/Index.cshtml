@model GridOption

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        document.getElementById("headerdiv").style.backgroundColor = '@Session["headerdivcolor"]';
        document.getElementById("headercaption").style.color = '@Session["headercaptioncolor"]';
        $('#Fromdate').val('@Model.FromDate');
        $('#ToDate').val('@Model.ToDate');
        $("#viewcode").val('@Model.ViewDataId');
        $("#hdnformatname").val('@Model.ViewDataId');
        LoadAccount();
        LoadItems();
        //Gridinvoice();
        //$('select').select2();

        $('#btnExcel').click(function () {
            var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
            var sUrlpath = window.open('@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val(), '_blank');
        });

        $('#btnPrint').click(function () {
            var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
            var sUrlpath = window.open('@Url.Action("GetPrint")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val(), '_blank');
        });

        $('#btnPDF').click(function () {
            var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
            var sUrlpath = window.open('@Url.Action("GetGridData")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val()+'&mWhat='+'PDF', '_blank');
        });

        $('#btnPDL').click(function () {
            var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
            var sUrlpath = window.open('@Url.Action("GetGridData")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val()+'&mWhat='+'PDL', '_blank');
        });

        $('#btnRefresh').click(function (event) {
            event.preventDefault();
            $('#invoice').jqGrid('clearGridData');
            $('#invoice').jqGrid('GridUnload');
            $('#invoice').trigger('reloadGrid');
            Gridinvoice();
        });
    });

    function GetURL(mdocument) {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        //var mURL = '@Url.Action("GetURL")?mDate=' + mDate + '&mdocument=' + mdocument;
        var mURL = '@Url.Action("GetURL")?mdocument=' + mdocument;
        $.ajax({
            type: 'POST',
            url: mURL,
            dataType: 'json',
            data: {},
            success: function (result) {
                //mURL = encodeURIComponent(result.url);
                $('.spinner').hide();
                if (result.url != "") {
                    //var sUrlpath = window.open('@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val(), '_blank');
                    window.open(result.url, '_blank');
                    //window.location.href = result.url;
                } else {
                    alert("Error! Can't Zoom into the Transaction!");
                }
            },
            error: function (ex) {
                alert("Error! Can't Open the Transaction" + ex);
            }
        });
        return false;
    };

    function LoadAccount() {
        var url = '@Url.Action("GetAccountList")';
        $('#Account').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return { text: item.Text, id: item.Value }
                        })
                    };
                }
            },
            //initSelection: function (element, callback) {
            //    var elementText = $(element).attr('data-init-text');
            //    xcallback({ "term": elementText });
            initSelection: function (element, callback) {
                var data = { id: '@Model.Document', text: '@Model.AccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadItems() {
        var url = '@Url.Action("GetItemList")';
        $('#items').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return { text: item.Text, id: item.Value }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Item', text: '@Model.Item' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function Gridinvoice() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureRecords")?Date=' + mDate + '&ViewDataId=PIVInvoiceRegister&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridData")?Date=' + mDate + '&ViewDataId=PIVInvoiceRegister&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createinvoice();
                $('.spinner').hide();
                //}
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createinvoice() {
            $('#invoice').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager1'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                height: $(window).height() - 250,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                footerrow : true,
                userDataOnFooter : true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                ondblClickRow: function (id) {
                    event.preventDefault();
                    var myGrid = $('#invoice');
                    var cellVal = myGrid.jqGrid('getCell', id, 'Document');
                    GetURL(cellVal);
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                loadComplete: function () {
                    $('.spinner').hide();
                    $('#pager1').height = 5;
                },
            });
            jQuery("#invoice").jqGrid('navGrid', "#pager1",
                { edit: false, add: false, del: false, search: true, refresh: true, searchtext: "filter"});
            jQuery("#invoice").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for enquiry
    function Gridenquiry() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId=' + 'PIVEnquiryRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVEnquiryRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createenquiry();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createenquiry() {
            $('#enquiry').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager2'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                },
            });
            jQuery("#enquiry").jqGrid('navGrid', "#pager2",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#enquiry").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for quotes
    function Gridquotes() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId='+'PIVQuoteRegister'+'&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVQuoteRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createquotes();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createquotes() {
            $('#quotes').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager3'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                },
            });
            jQuery("#quotes").jqGrid('navGrid', "#pager3",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#quotes").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for order
    function Gridorder() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId=' + 'PIVOrderRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVOrderRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createorder();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createorder() {
            $('#order').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager4'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                },
            });
            jQuery("#order").jqGrid('navGrid', "#pager4",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#order").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for proforma
    function Gridproforma() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId=' + 'PIVProformaRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVProformaRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createproforma();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createproforma() {
            $('#proforma').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager5'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                },
            });
            jQuery("#proforma").jqGrid('navGrid', "#pager5",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#proforma").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for challan
    function Gridchallan() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId=' + 'PIVChallanRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVChallanRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createchallan();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createchallan() {
            $('#challan').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: false,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager6'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500,1000,3000,5000,10000,50000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll:true,
                autoencode: true,
                search: false,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                },
            });
            jQuery("#challan").jqGrid('navGrid', "#pager6",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#challan").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    // grid functions for returns
    function Gridreturns() {
        event.preventDefault();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sPathUrl = '@Url.Action("GetGridStructureSales")?Date=' + mDate + '&ViewDataId=' + 'PIVReturnsRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        var sUrlpath = '@Url.Action("GetGridDataSales")?Date=' + mDate + '&ViewDataId=' + 'PIVReturnsRegister' + '&Code=' + $('#Account').val() + '&Item=' + $('#items').val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                Createreturns();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });

        function Createreturns() {
            $('#returns').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: false,
                mtype: 'POST',
                sortable: false,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager7'),
                rowNum: 3000,
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 220,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: true,
                autoencode: true,
                search: false,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                beforeRequest: function () {
                    $('.spinner').show();
                    responsive_jqgridData($(".jqGrid"));
                },
                gridComplete: function () {
                    $('.spinner').hide();
                },
            });
            jQuery("#returns").jqGrid('navGrid', "#pager7",
                { edit: false, add: false, del: false, search: false, refresh: false, searchtext: "Search", });
            jQuery("#returns").jqGrid("setFrozenColumns");
        };

        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            //jqgrid.find('.ui-jqgrid').addClass('ui-widget-content jqgrow ui-row-ltr ui-state-highlight').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    //function ClickPara() {
    //    $('#ParaDialog').modal('show');
    //}
</script>

<header class="header fixed-top" id="headerdiv" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0px;">
    <div class="fixhead">
        <div class="form-group">
            <div class="col-sm-12" style="padding-left:0px;">
                <div class="col-md-2" style="padding-left:unset;padding:1px;">
                    <b class="CodeSt" id="headercaption">@Model.Header</b>
                </div>
                <div class="col-md-2 pull-right" style="padding-right:0px; padding-top:-3px;float:right;align-items:flex-end;">
                    <button class="btn btn-info" style="font-size:10pt;padding:3px 3px;width:32px;height:28px;" id="btnRefresh" title='Refresh'><i class="fa fa-refresh"></i></button>
                    @*<button class="btn btn-danger" style="font-size:10pt;padding:3px 3px;width:32px;height:28px;" id="btnPara" onclick="ClickPara()" title='Para'><i class="fa fa-gear"></i></button>*@
                    <button class="btn btn-success" style="font-size:10pt;padding:3px 3px;width:32px;height:28px;" id="btnExcel" title='Excel'><i class="fa fa-file-text-o"></i></button>
                    <button class="btn btn-warning" style="font-size:10pt;padding:3px 3px;width:32px;height:28px;" id="btnPDF" title='Export to PDF in Portrait'>PDF</button>
                    <button class="btn btn-warning" style="font-size:10pt;padding:3px 3px;width:35px;height:28px;" id="btnPDL" title='Export to PDF in Landscape'>PDFL</button>
                </div>
                <div class="col-md-3 pull-right" style="padding-right:unset;">
                    <div class="col-md-1" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;color:black;">
                        Period:
                    </div>
                    <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                        <input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                        <span class="input-group-addon">to</span>
                        <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    </div>
                </div>
                <div class="col-md-4 pull-right">
                    @Html.TextBoxFor(x => x.Code, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "Account", @name = "Account" })
                </div>
                <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;color:black;">
                    Account:
                </div>
            </div>
        </div>
    </div>
    <div class="fixhead">
        <div class="form-group">
            <div class="col-sm-12" style="padding-left:0px;">
                <div class="col-md-2" style="padding-left:unset;padding:1px;">
                </div>
                <div class="col-md-2 pull-right" style="padding-right:0px; padding-top:-3px;float:right;align-items:flex-end;">
                </div>
                <div class="col-md-3 pull-right" style="padding-right:unset;">
                    <div class="col-md-1" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;color:black;">
                    </div>
                </div>
                <div class="col-md-4 pull-right">
                    @Html.TextBoxFor(x => x.Item, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "items", @name = "items" })
                </div>
                <div class="col-md-1 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;color:black;">
                    Item:
                </div>
            </div>
        </div>
    </div>
</header>

<section class="panel">
    <div class="panel-body" style="margin-top:3%;height:500px;padding-left:0px;padding-right:5px;">
        <div class="tab">
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'tabinvoice')" id="invoices">Invoices</button>
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'tabenquiry')">Enquiry</button>
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'tabquotes')">Quotations</button>
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'taborder')">Orders</button>
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'tabproforma')">Proforma</button>
            <button class="tablinks" style="width:130px;" onclick="openTab(event, 'tabchallan')">Challan (Dely)</button>
            <button class="tablinks" style="width:120px;" onclick="openTab(event, 'tabreturns')">Returns</button>
        </div>

        <div id="tabinvoice" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="invoice" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager1" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="tabenquiry" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                @*overflow:scroll;*@
                <table id="enquiry" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager2" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="tabquotes" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="quotes" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager3" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="taborder" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="order" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager4" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="tabproforma" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="proforma" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager5" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="tabchallan" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="challan" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager6" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="tabreturns" class="tabcontent" style="height:490px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;">
                <table id="returns" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager7" style="height:32px;"></div>
            </div>
        </div>
        <script>
            function openTab(evt, tabName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(tabName).style.display = "block";
                evt.currentTarget.className += " active";
                if (tabName == "tabinvoice") {
                    $('#invoice').jqGrid('clearGridData');
                    $("#invoice").jqGrid("GridUnload");
                    $('#invoice').trigger('reloadGrid');
                    Gridinvoice();
                } else if (tabName == "tabenquiry") {
                    $('#enquiry').jqGrid('clearGridData');
                    $("#enquiry").jqGrid("GridUnload");
                    $('#enquiry').trigger('reloadGrid');
                    Gridenquiry();
                } else if (tabName == "tabquotes") {
                    $('#quotes').jqGrid('clearGridData');
                    $("#quotes").jqGrid("GridUnload");
                    $('#quotes').trigger('reloadGrid');
                    Gridquotes();
                } else if (tabName == "taborder") {
                    $('#order').jqGrid('clearGridData');
                    $("#order").jqGrid("GridUnload");
                    $('#order').trigger('reloadGrid');
                    Gridorder();
                } else if (tabName == "tabproforma") {
                    $('#proforma').jqGrid('clearGridData');
                    $("#proforma").jqGrid("GridUnload");
                    $('#proforma').trigger('reloadGrid');
                    Gridproforma();
                } else if (tabName == "tabchallan") {
                    $('#challan').jqGrid('clearGridData');
                    $("#challan").jqGrid("GridUnload");
                    $('#challan').trigger('reloadGrid');
                    Gridchallan();
                } else if (tabName == "tabreturns") {
                    $('#returns').jqGrid('clearGridData');
                    $("#returns").jqGrid("GridUnload");
                    $('#returns').trigger('reloadGrid');
                    Gridreturns();
                }
            }
            document.getElementById("invoices").click();
        </script>
    </div>
</section>

@*<div id="myfooter" class="footer-section" style="position:fixed;background-color:rgb(235, 235, 235);padding:2px;color:unset;height:30px;border:solid 1px black;">
        <div class="row" style="padding-top:1px;">
            <label class="col-sm-1 control-label" style="padding-top:2px;padding-left:20px;">Opening:</label>
            <div class="col-sm-2">
                <input type="text" id="openb" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:2px;">Total Debit:</label>
            <div class="col-sm-2">
                <input type="text" id="tdebit" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:2px;">Total Credit:</label>
            <div class="col-sm-2">
                <input type="text" id="tcredit" alt="" class="form-control" style="width:80%;text-align:right;font-weight:bolder;height:22px;" disabled="disabled" />
            </div>
            <label class="col-sm-1 control-label" style="padding-top:2px;">Closing:</label>
            <div class="col-sm-2">
                <input type="text" id="closeb" alt="" class="form-control" style="width:80%;text-align:right;font-size:11pt;background-color:gray;color:white;font-weight:bolder;height:22px;" disabled="disabled" />
            </div>
        </div>
    </div>*@

<footer class="footer-section" id="fixedbottom" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;height:33px;">
    <div class="col-sm-4"></div>
    <div class="col-sm-4" style="text-align:center; margin-top:5px;color:white;font-family:Helvetica;font-size:9pt;padding-top:0px;">
        T.FAT ERP-iX9, by Suchan Software Private Limited
    </div>
    <div class="col-sm-4"></div>
</footer>

@*<div class="example-modal">
        <div id="ParaDialog" class="modal modal-primary" style="z-index:2100;">
            <div class="modal-dialog" style="width:1000px;">
                <div id="Dialog">
                    @Html.Partial("GeneralParameters")
                </div>
            </div>
        </div>
    </div>*@