@model ALT_ERP3.Areas.Accounts.Models.OtherTransactModel
@using Common
<table id="itemrelatedtable" class="zui-table" style="width:50%;">
    <thead>
    </thead>
    <tbody>
        @if (Model.ItemList != null)
        {
            foreach (var item in @Model.ItemList.ToList())
            {
                <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;background-color:@item.BackColor">
                    <td style="width:10%;" hidden="hidden">@item.Fld</td>
                    <td style="width:20%;">@item.Head</td>
                    @if (item.FldType == "C")
                    {
                        <td style="width:40%;">
                            @if (item.Fld == "F001")
                            {
                                <select disabled class="addontxtfvalue" id="txtf_@item.Fld" alt="@item.Fld" style="width:100%">
                                    @{
                                        var Text = item.QueryText.Split('^');
                                        var Codes = item.QueryCode.Split('^');
                                        for (int i = 0; i < Text.Length; i++)
                                        {
                                            <option value="@Codes[i]" @(Codes[i] == item.ApplCode ? "selected" : "")>@Text[i]</option>
                                        }
                                    }
                                </select>
                            }
                            else
                            {
                                <select class="addontxtfvalue" id="txtf_@item.Fld" alt="@item.Fld" style="width:100%">
                                    @{
                                        var Text = item.QueryText.Split('^');
                                        var Codes = item.QueryCode.Split('^');
                                        for (int i = 0; i < Text.Length; i++)
                                        {
                                            <option value="@Codes[i]" @(Codes[i] == item.ApplCode ? "selected" : "")>@Text[i]</option>
                                        }
                                    }
                                </select>
                            }

                        </td>
                    }
                    else if (item.FldType == "M")
                    {
                        <td style="width:50%;"><textarea type="textarea" rows="5" cols="20" id="txtf_@item.Fld" alt="@item.Fld" class="addontxtfvalue" style="width:100%;">@item.ApplCode</textarea></td>
                    }
                    else if (item.FldType == "D")
                    {
                        <td style="width:50%;"><input type="date" id="txtf_@item.Fld" alt="@item.Fld" value="@item.ApplCode" class="addontxtfvalue" style="width:100%;" maxlength="250" /></td>
                    }
                    else if (item.FldType == "N")
                    {
                        <td style="width:50%;"><input type="number" id="txtf_@item.Fld" alt="@item.Fld" value="@item.ApplCode" class="addontxtfvalue" style="width:100%;" maxlength="250" /></td>
                    }
                    else if (item.FldType == "R")
                    {
                        <td style="width:50%;">
                            <div>
                                @foreach (var item2 in item.QueryText.Split('^').ToList())
                                {
                                    <div class="col-sm-2 control-label" style="padding-top:0px;">
                                        @item2:  <input @(item2 == item.ApplCode ? "checked=checked" : "") class="addontxtfvalue" name="addontxtfvalue" style="padding-left:0px;width:20px;height:20px;" type="radio" value="@item2">
                                    </div>
                                }
                            </div>
                        </td>
                    }
                    else
                    {
                        if (@item.Fld == "F014")
                        {
                            <td style="width:50%;"><input type="text" id="HSNCODE" alt="@item.Fld" value="@item.ApplCode" class="addontxtfvalue" style="width:100%;" maxlength="250" /></td>
                        }
                        else
                        {
                            <td style="width:50%;"><input type="text" id="txtf_@item.Fld" alt="@item.Fld" value="@item.ApplCode" class="addontxtfvalue" style="width:100%;" maxlength="250" /></td>
                        }
                    }
                    <td style="width:1%;" hidden="hidden">@item.FldType</td>
                </tr>
            }
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        loadHSN();

        if ('@Model.HSNCODEName'!="") {
            $('#HSNCODE').select2('data', { id: '@Model.HSNCODE', text: '@Model.HSNCODEName' });
        }


        $("#itemrelatedtable tbody").on('focusout', '.addontxtfvalue', function () {
            debugger;
            var currentRow = $(this).closest("tr");
            var tds = currentRow.find('td').eq(0).text();
            //Rate or Qty Blus Functions
            if (tds == "F004" || tds == "F005") {
                var Qty = 0, cost = 0;
                $('#itemrelatedtable tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "F005") {
                        var Amount = parseInt(tds.find(".addontxtfvalue").val());
                        if (Amount == 0) {
                            Qty = 1;
                        } else {
                            Qty = Amount;
                        }
                    }
                    if (tds.eq(0).text() == "F004") {
                        var Amount = parseFloat(tds.find(".addontxtfvalue").val());
                        cost = Amount;
                    }
                });
                $('#itemrelatedtable tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "F006") {
                        tds.find(".addontxtfvalue").val(Qty * cost);
                    }
                });
            }
            //Current KM Change
            if (tds == "F008" || tds == "F007") {
                var WarrantyKM = 0, CurrentKM = 0;
                $('#itemrelatedtable tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "F007") {
                        var Amount = parseInt(tds.find(".addontxtfvalue").val());
                        WarrantyKM = Amount;
                    }
                    if (tds.eq(0).text() == "F008") {
                        var Amount = parseFloat(tds.find(".addontxtfvalue").val());
                        CurrentKM = Amount;
                    }
                });
                $('#itemrelatedtable tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "F009") {
                        var laterkm = parseFloat(CurrentKM) + parseFloat(WarrantyKM)
                        tds.find(".addontxtfvalue").val(laterkm);
                    }
                });
            }
            //Expiry Days Change
            if (tds == "F010") {
                var ModelData = {};
                var mCode = "";
                var mexpdate = "";
                var mmDays = "";
                var mmKm = "";
                var CheckMasterOrNot = "";
                $("#itemrelatedtable tbody tr").each(function () {
                    var sectds = $(this).find('td');
                    if (sectds.eq(0).text() == "F003") {
                        mCode = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F002") {
                        CheckMasterOrNot = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F012") {
                        mexpdate = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F010") {
                        mmDays = parseInt(sectds.find(".addontxtfvalue").val());
                    }
                    if (sectds.eq(0).text() == "F007") {
                        mmKm = parseInt(sectds.find(".addontxtfvalue").val());
                    }
                });
                ModelData["BankCashCode"] = $('#BankCashCode').val();
                ModelData["Code"] = $('#txtAccount').val();
                ModelData["Type"] = mCode;
                ModelData["FromDate"] = mexpdate;
                if (CheckMasterOrNot !="Direct") {
                    var DTO = { Model: ModelData, KM: mmKm, Days: mmDays };
                    var url = '@Url.Action("GetItemPartDetail")';
                    $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        var c = new Date();
                        $('#itemrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val()=="") {
                                    tds.find(".addontxtfvalue").val(data.Cost);
                                }
                            }
                            if (tds.eq(0).text() == "F006") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Cost);
                                }
                            }
                            else if (tds.eq(0).text() == "F007") {

                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.KM);
                                }
                            }
                            else if (tds.eq(0).text() == "F010") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Days);
                                }
                            }
                            else if (tds.eq(0).text() == "F013") {
                                //if (parseInt(data.Days) > 0) {
                                    tds.find(".addontxtfvalue").val(data.ExpDays);
                                //}
                            }
                            else if (tds.eq(0).text() == "F015") {
                                if (tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Descr);
                                }
                            }
                        });
                        if (data.Account != "") {
                            $('#txtAccount').select2('data', { id: data.Account, text: data.AccountName });
                        }
                        if (data.HSNCODENAme != "") {
                            $('#HSNCODE').select2('data', { id: data.HSNCODE, text: data.HSNCODENAme });
                        }
                        if (data.GSTNAME != "")
                        {
                            $('#addGSTCode').select2('data', { id: data.GSTCODE, text: data.GSTNAME });
                            $('#addIGSTRate').val(data.IGSTRATE);
                            $('#addCGSTRate').val(data.CGSTRATE);
                            $('#addSGSTRate').val(data.SGSTRATE);
                        }
                        },
                        error: function () {
                        alert("Error occured while processing your request.");
                        }
                    });
                }
            }
        });
        $("#itemrelatedtable tbody").on('change', '.addontxtfvalue', function () {
            var currentRow = $(this).closest("tr");
            var tds = currentRow.find('td').eq(0).text();
            if (tds == "F001" || tds == "F002") {
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                var mFromType = "", mProductGroupType="";
                $("#itemrelatedtable tbody tr").each(function () {
                    var sectds = $(this).find('td');
                    if (sectds.eq(0).text() == "F001") {
                        mProductGroupType = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F002") {
                        mFromType = sectds.find(".addontxtfvalue").val();
                    }
                });
                if (mProductGroupType == "Select") {
                    ModelData["FromType"] = "Direct";
                } else {
                    ModelData["FromType"] = mFromType;
                }
                ModelData["ProductGroupType"] = mProductGroupType;
                //ModelData["FromType"] = mFromType;
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetItemSingleViewList")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('#ItemRelatedDialog').html('');
                        $('#ItemRelatedDialog').html(data.Html);
                        $('.spinner').hide();
                    },
                    error: function () {
                        $('.spinner').hide();
                        alert("error occured while processing your request.");
                    }
                });
            }
            else if (tds == "F003") {
                var ModelData = {};
                var mCode = "";
                var mexpdate = "";
                var mmDays = "";
                var mmKm = "";
                var CheckMasterOrNot = "";

                $("#itemrelatedtable tbody tr").each(function () {
                    var sectds = $(this).find('td');
                    if (sectds.eq(0).text() == "F003") {
                        mCode = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F002") {
                        CheckMasterOrNot = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F012") {
                        mexpdate = sectds.find(".addontxtfvalue").val();
                    }
                    if (sectds.eq(0).text() == "F010") {
                        mmDays = parseInt(sectds.find(".addontxtfvalue").val());
                    }
                    if (sectds.eq(0).text() == "F007") {
                        mmKm = parseInt(sectds.find(".addontxtfvalue").val());
                    }
                });
                ModelData["BankCashCode"] = $('#BankCashCode').val();
                ModelData["Code"] = $('#txtAccount').val();
                ModelData["Type"] = mCode;
                ModelData["FromDate"] = mexpdate;
                if (CheckMasterOrNot !="Direct") {
                    var DTO = { Model: ModelData, KM: mmKm, Days: mmDays };
                    var url = '@Url.Action("GetItemPartDetail")';
                    $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        var c = new Date();
                        $('#itemrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Cost);
                                }
                            }
                            if (tds.eq(0).text() == "F006") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Cost);
                                }
                            }
                            else if (tds.eq(0).text() == "F007") {

                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.KM);
                                }
                            }
                            else if (tds.eq(0).text() == "F010") {
                                if (tds.find(".addontxtfvalue").val() == "0" || tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Days);
                                }
                            }
                            else if (tds.eq(0).text() == "F013") {
                                if (parseInt(data.Days) > 0) {
                                    tds.find(".addontxtfvalue").val(data.ExpDays);
                                }
                            }
                            else if (tds.eq(0).text() == "F015") {
                                if (tds.find(".addontxtfvalue").val() == "") {
                                    tds.find(".addontxtfvalue").val(data.Descr);
                                }
                            }
                        });
                        if (data.Account != "") {
                            $('#txtAccount').select2('data', { id: data.Account, text: data.AccountName });
                            $('#txtAccount').trigger('change');
                            $('#txtAccount').select2('data', { id: data.Account, text: data.AccountName });
                        }
                        if (data.HSNCODENAme != "") {
                            $('#HSNCODE').select2('data', { id: data.HSNCODE, text: data.HSNCODENAme });
                        }
                        if (data.GSTNAME != "")
                        {
                            $('#addGSTCode').select2('data', { id: data.GSTCODE, text: data.GSTNAME });
                            $('#addIGSTRate').val(data.IGSTRATE);
                            $('#addCGSTRate').val(data.CGSTRATE);
                            $('#addSGSTRate').val(data.SGSTRATE);
                        }
                        },
                        error: function () {
                        alert("Error occured while processing your request.");
                        }
                    });
                }
            }
        });
    });
    function loadHSN() {
        var url = '@Url.Action("GetHSNList")';
        $('#HSNCODE').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.HSNCODE', text: '@Model.HSNCODEName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        });
    };
</script>

