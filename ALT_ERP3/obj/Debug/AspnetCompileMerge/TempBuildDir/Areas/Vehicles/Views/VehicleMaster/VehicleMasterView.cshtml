@model TFATERPWebApplication.Areas.Vehicles.Models.VehicleMasterVM
@using Common;
@{
    ViewBag.Title = "Vehicle Master";
    Layout = null;
}

<script type="text/javascript">
    $(document).ready(function () {
        LoadCurrCategory();
        LoadBroker();
        LoadDriver();
        LoadVehicleGroupStatus();

        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }
        $('#Vehicle_No').blur(function () {
            CheckName();
        });
        
        $('#Purchase_Date').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Date').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Last_Emi_Date').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        @* iX9: Validation rules for the fields where AllowBlank is False in Definition *@
        //$('#ServiceMaster').validate({
        //    onfocusout: false,
        //    errorLabelContainer: $('#ErrorMessage'),
        //    wrapper: "li",
        //    rules: {
        //        ChargeType: {required: true,},
        //        ShortName: {required: true,},
        //       },
        //    messages: {
        //        ChargeType: { required: 'Charge Type is Required',},
        //        ShortName: { required: 'Short Name is Required',},
        //    }
        //});

        @* iX9: Input Contraints to limit the inputs to required Input Type i.e. String, Numeric etc. *@
        //$("#ChargeType").constrain({ allow: { regex: "[a-zA-Z0-9() ]" } });
        //$("#ShortName").constrain({ allow: { regex: "[a-zA-Z0-9() ]" } });


        //$("#VehicleCategory").constrain({ allow: { regex: "[a-zA-Z0-9 ]" } });

        //$("#TfatState_Name").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        //$("#TfatState_Code").constrain({ allow: { regex: "[0-9.-]" } });
        //$("#TfatState_Country").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });

        @* iX9: Executed when Save/Submit button is Pressed *@

        $('#btnDelete').click(function (event) {
            event.preventDefault();
            //if ($("#StateMaster").validate().form() == false)
            //    return;
            var result = confirm("Are you sure you want to delete?");
            if (result) {
                //Logic to delete the item
            //    if ($("#VehicleCategory").val() == null || $("#VehicleCategory").val() == '')
            //{
            //    $("#ErrorMessage").show();
            //        $("#ErrorMessage").text('Vehicle Category Name is Required..');
            //    return;
            //}
                //var emailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
            //    debugger;
            //    var emailReg =/(([a-zA-Z\-0-9\.]+@@)([a-zA-Z\-0-9\.]+)[;]*)+/g;
            //    if (!emailReg.test($("#EmailId").val())) {
            //        debugger;
            //        $("#ErrorMessage").text('Please Enter Valid Email Id With ; Seperated is Required..');
            //        return;
            //}


            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();

            //ModelData["VehicleCategory"] = $("#VehicleCategory").val();



            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
            } else {
                $('.spinner').hide();
                window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
            }


        });

        $('#Submit').click(function (event) {
            event.preventDefault();
            //var TruckStatus = "";
            //if ($("#StateMaster").validate().form() == false)
            //    return;

            if ($("#Vehicle_No").val() == null || $("#Vehicle_No").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle_No is Required..');
                return;
            }
            //if ($("#Truck_Status").val() == null || $("#Truck_Status").val() == '')
            //{
                
            //}
           
            //if (($("#Truck_Status1").prop("checked")== false) && ($("#Truck_Status2").prop("checked")== false)) {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Truck_Status is Required..');
            //    return;
            //} else if ($("#Truck_Status1").prop("checked") == true) {
            //    debugger;
            //    Truck_Status = "Attached";
            //} else if ($("#Truck_Status2").prop("checked") == true) {
            //    debugger;
            //    Truck_Status ="Own";
            //}


            //if (($("#Truck_Status1").is(":checked")) || ($("#Truck_Status2").is(":checked"))) {
            //    // do something
            //    debugger;
            //    alert("dgdfsg");
            //} else {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Truck_Status is Required..');
            //    return;
            //}



            if ($("#Vehicle_Category").val() == null || $("#Vehicle_Category").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle_Category is Required..');
                return;
            }
            if ($("#VehicleGroup").val() == null || $("#VehicleGroup").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('VehicleGroup is Required..');
                return;
            }

            if ($("#Pick_Vehicle_Rate_From_Category").val() == null || $("#Pick_Vehicle_Rate_From_Category").val() == '0')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Pick_Vehicle_Rate_From_Category is Required..');
                return;
            }


            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();

            ModelData["Vehicle_No"] = $("#Vehicle_No").val();
            ModelData["Owner_Name"] = $("#Owner_Name").val();
            ModelData["Chassis_No"] = $("#Chassis_No").val();
            ModelData["Driver_Name"] = $("#Driver_Name").val();
            ModelData["Purchase_Date"] = $("#Purchase_Date").val();
            ModelData["BillOrInvoice_No"] = $("#BillOrInvoice_No").val();
            ModelData["Chassis_Cost"] = $("#Chassis_Cost").val();
            ModelData["Financer_Name"] = $("#Financer_Name").val();
            ModelData["Agreement_Amount"] = $("#Agreement_Amount").val();
            ModelData["Intrest_Rate"] = $("#Intrest_Rate").val();
            ModelData["Insurance_Co"] = $("#Insurance_Co").val();
            ModelData["Insured_Amount"] = $("#Insured_Amount").val();
            ModelData["VehicleGroup"] = $("#VehicleGroup").val();
            //ModelData["Truck_Status"] = Truck_Status;
            ModelData["Vehicle_Category"] = $("#Vehicle_Category").val();
            //ModelData["Vehicle_Category_Name"] = $("#Vehicle_Category_Name").val();
            ModelData["Broker_Name"] = $("#Broker_Name").val();
            ModelData["Permit_No"] = $("#Permit_No").val();
            ModelData["Engine_No"] = $("#Engine_No").val();
            ModelData["Dealer_Name"] = $("#Dealer_Name").val();
            ModelData["Invoice_Amount"] = $("#Invoice_Amount").val();
            ModelData["Body_Cost"] = $("#Body_Cost").val();
            ModelData["Agreement_nature"] = $("#Agreement_nature").val();
            ModelData["Financed_Amount"] = $("#Financed_Amount").val();
            ModelData["Date"] = $("#Date").val();
            ModelData["Intrest_Amount"] = $("#Intrest_Amount").val();
            ModelData["Policy_No"] = $("#Policy_No").val();
            ModelData["Premium_Amount"] = $("#Premium_Amount").val();
            ModelData["Last_Emi_Date"] = $("#Last_Emi_Date").val();
            ModelData["Pick_Vehicle_Rate_From_Category"] = $("#Pick_Vehicle_Rate_From_Category").val();

            if ($('input[type=checkbox]').prop('checked')) {
                debugger;
                ModelData["AcitveorNot"] = "True";

            } else {
                debugger;
                ModelData["AcitveorNot"] = "False";

            }




            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    @*function LoadCurrCategory() {
        var url = '@Url.Action("AutoCompleteVehicleCategory")'
        $('#Vehicle_Category').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    debugger;
                    clientObj = JSON.stringify(data);
                    return {
                     
                        results: $.map(data, function (item) {
                            debugger;
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Vehicle_Category', text: '@Model.Vehicle_Category_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };*@
    function LoadBroker() {
        var url = '@Url.Action("GetBroker")'
        $('#Broker_Name').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker_Name', text: '@Model.Broker' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadVehicleGroupStatus() {

            var url = '@Url.Action("GetVehicleGroupStatus")'
            $('#VehicleGroup').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
    };


    function LoadDriver() {
        var url = '@Url.Action("GetDriver")'
        $('#Driver_Name').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Driver_Name', text: '@Model.Driver' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadCurrCategory() {
        var url = '@Url.Action("AutoCompleteVehicleCategory")'
        $('#Vehicle_Category').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Vehicle_Category', text: '@Model.Vehicle_Category_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function CheckName() {
        debugger;
            NameFlag = "False";
        var currValue = $('#Vehicle_No').val()
        var url = '@Url.Action("CheckExist")'; 
        if (currValue != null || currValue != "") {
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { TableName: "VehicleMaster", Colfield: "[Vehicle No]", Value: $('#Vehicle_No').val(), SkipColumnName: "RecordKey", PKValue: '@Model.Document' },
                success: function (result) {
                    if (result.Message == "F") {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Vehicle_No is Exist Please Change The Vehicle_No..');
                        $('#Submit').prop('disabled', true);
                        return;
                    } else {
                        $("#ErrorMessage").hide();
                        $('#Submit').prop('disabled', false);
                    }
                }
            });
        }
    }
</script>


<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:15px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Body Panels *@
            @*<div class="form-group">
            <label class="col-sm-2 control-label">Code:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.ItemGroups_Code, "{0:n2}", new { @maxlength = "6", @class = "form-control", @readonly = "readonly", @Name = "ItemGroups_Code", @Id = "ItemGroups_Code" })
            </div>
            <label class="col-sm-2 control-label">Name:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.ItemGroups_Name, new { @maxlength = "100", @class = "form-control", @Name = "ItemGroups_Name", @Id = "ItemGroups_Name" })
            </div>
        </div>*@
            <div class="form-group">
                <label class="col-sm-2 control-label">Vehicle No:<span style="color:red;">*</span></label>
                <div class="col-sm-2">
                    @if (Model.Mode == "Add")
                    {
                        @Html.TextBoxFor(x => x.Vehicle_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Vehicle_No })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Vehicle_No, new { @class = "input-large-query form-control", @readonly = "readonly", @style = "width:100%;", @Value = Model.Vehicle_No })
                    }
                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Owner Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Owner_Name, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Owner_Name })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Chassis No:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Chassis_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Chassis_No })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Driver Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Driver_Name, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Driver_Name })

                    @*@Html.TextBoxFor(x => x.Driver_Name, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Driver_Name })*@
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Purchase Date:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Purchase_Date, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Purchase_Date })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Bill / Invoice_No:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.BillOrInvoice_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.BillOrInvoice_No })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Chassis Cost:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Chassis_Cost, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Chassis_Cost })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Financer Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Financer_Name, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Financer_Name })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Agreement Amount:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Agreement_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Agreement_Amount })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Intrest Rate:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Intrest_Rate, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Intrest_Rate })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Insurance Co:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Insurance_Co, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Insurance_Co })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Insured Amount:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Insured_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Insured_Amount })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Truck Status:<span style="color:red;">*</span></label>
                <div class="col-sm-2" style="display: flex;">
                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.VehicleGroup })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Vehicle Category:<span style="color:red;">*</span></label>
                <div class="col-sm-2">
                    @*@Html.TextBoxFor(x => x.Vehicle_Category, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Vehicle_Category })*@
                    @Html.TextBoxFor(x => x.Vehicle_Category, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Vehicle_Category })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Broker Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Broker_Name, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Broker_Name })

                    @*@Html.TextBoxFor(x => x.Broker_Name, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Broker_Name })*@

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Permit No:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Permit_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Permit_No })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Engine No:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Engine_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Engine_No })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Dealer Name:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Dealer_Name, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Dealer_Name })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Invoice Amount:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Invoice_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Invoice_Amount })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Body Cost:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Body_Cost, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Body_Cost })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Agreement nature:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Agreement_nature, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Agreement_nature })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Financed Amount:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Financed_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Financed_Amount })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Date:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Date, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Date })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Intrest Amount:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Intrest_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Intrest_Amount })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Policy No:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Policy_No, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Policy_No })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Premium Amount:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Premium_Amount, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Premium_Amount })
                </div>
                <div class="col-sm-2"></div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">Last-Emi-Date:</label>
                <div class="col-sm-2">

                    @Html.TextBoxFor(x => x.Last_Emi_Date, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Last_Emi_Date })

                </div>
                <label class="col-sm-offset-1 col-sm-2 control-label">Pick-Vehicle-Rate-From-Category:<span style="color:red;">*</span></label>
                <div class="col-sm-2">
                    @Html.EnumDropDownListFor(m => m.Pick_Vehicle_Rate_From_Category, "Select Pick Vehicle Rate(Y/N)", new { @class = "form-control" })
                    @*@Html.TextBoxFor(x => x.Pick_Vehicle_Rate_From_Category, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Pick_Vehicle_Rate_From_Category })*@
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Status:</label>
                <div class="col-sm-2">


                    @Html.CheckBoxFor(x => x.Acitve, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Acitve })

                </div>
                
                <div class="col-sm-2">
                    
                    @*@Html.TextBoxFor(x => x.Pick_Vehicle_Rate_From_Category, new { @class = "input-large-query form-control", @style = "width:100%;", @Value = Model.Pick_Vehicle_Rate_From_Category })*@
                </div>
                <div class="col-sm-2"></div>
            </div>
            @* iX9: -- Code for Header Ends -- *@
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

@*<input type="hidden" id="controllername" />*@
@Html.HiddenFor(x => x.Document)