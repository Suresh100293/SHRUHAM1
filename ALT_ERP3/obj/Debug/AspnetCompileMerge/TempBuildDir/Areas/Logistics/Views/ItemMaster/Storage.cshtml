
@model TFATERPWebApplication.Areas.Logistics.Models.ItemMasterVM
@using Common;

<script type="text/javascript">
    $(document).ready(function () {
        loadHazard()
        loadPotency()
        loadVED()
        loadABC()
        loadFSN()
        loadStocking()
        loadValuation()
        loadMatterState()
    });

    function loadHazard() {
        var url = '@Url.Action("AutoHazard")'
        $('#Hazard').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term:
                                term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id:
                                        item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Hazard', text: '@Model.HazardName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadPotency() {
        var url = '@Url.Action("AutoPotency")'
        $('#Potency').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term:
                                term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id:
                                        item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Potency', text: '@Model.PotencyName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadVED() {
        event.preventDefault();
        var url = '@Url.Action("GetVED")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#VED").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#VED').val('@Model.VED').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadABC() {
        event.preventDefault();
        var url = '@Url.Action("GetABC")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ABC").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ABC').val('@Model.ABC').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadFSN() {
        event.preventDefault();
        var url = '@Url.Action("GetFSN")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#FSN").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#FSN').val('@Model.FSN').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadStocking() {
        event.preventDefault();
        var url = '@Url.Action("GetStockingType")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Stocking").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Stocking').val('@Model.Stocking').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadValuation() {
        var url = '@Url.Action("GetValuationMethod")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ValuationMethod").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ValuationMethod').val('@Model.ValuationMethod').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadMatterState() {
        var url = '@Url.Action("GetMatterState")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#MatterState").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#MatterState').val('@Model.MatterState').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
</script>

<div class="row">
    <br />
    <div class="col-lg-12">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Hazard:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.Hazard, new
                   {
                       @class = "input-large search-query",
                       @Name = "Hazard",
                       @Id = "Hazard",
                       @style = "width: 98%;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Potency:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.Potency, new { @type = "number", @class = "input-large search-query", @id = "Potency", @Name = "Potency", @style = "width: 98%;text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">AVG.Potency%:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.PotencyAVG,  new
                   {
                       @type = "number", @class = "form-control",
                       @id = "PotencyAVG",
                       @Name = "PotencyAVG",
                       @style = "text-align:right;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Storage Humidity:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Humidity,  new
               {
                   @type = "number",
                   @class = "form-control",
                   @id = "Humidity",
                   @Name = "Humidity",
                   @style = "text-align:right;"
               })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Storage Temperature:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Temperature,  new
                   {
                       @type = "number", @class = "form-control",
                       @id = "Temperature",
                       @Name = "Temperature",
                       @style = "text-align:right;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Shelf Life(Months):</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Storage,  new
                   {
                       @type = "number", @class = "form-control",
                       @id = "Storage",
                       @Name = "Storage",@style = "text-align:right;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Item Density Per Unit:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Density,  new
                   {
                       @type = "number", @class = "form-control",
                       @id = "Density",
                       @Name = "Density",@style = "text-align:right;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Batch Size:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.BatchSize,  new
                   {
                       @type = "number", @class = "form-control",
                       @id = "BatchSize",
                       @Name = "BatchSize",@style = "text-align:right;"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Drawing Number:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.DWGNumber, new
                   {
                       @class = "form-control",
                       @id = "DWGNumber",
                       @Name = "DWGNumber"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Party must have Drug Lic:</label>
                <div class="col-sm-6">
                    @Html.CheckBoxFor(x => x.IsPartyDrugLic, new
                   {
                       @id = "IsPartyDrugLic",
                       @Name = "IsPartyDrugLic",
                       @style = "width:16px;height:16px;"
                   })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Party must have Poison Lic:</label>
                <div class="col-sm-6">
                    @Html.CheckBoxFor(x => x.IsPartyPoisonLic, new
               {
                   @id = "IsPartyPoisonLic",
                   @Name = "IsPartyPoisonLic",
                   @style = "width:16px;height:16px;"
               })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Therapeutic Code:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.ThCode, new
                   {
                       @class = "form-control",
                       @Name = "ThCode",
                       @Id = "ThCode"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Matter State:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.MatterState, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Name = "MatterState",
                       @Id = "MatterState"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Flammable?:</label>
                <div class="col-sm-6">
                    @Html.CheckBoxFor(x => x.Flammable, new
               {
                   @Id = "Flammable",
                   @Name = "Flammable",
                   @style = "width:16px;height:16px;"
               })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Generic Name/Code:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.GenericCode, new
                   {
                       @class = "form-control",
                       @Name = "GenericCode",
                       @Id = "GenericCode"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Stock Valuation:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.ValuationMethod, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Name = "ValuationMethod",
                       @Id = "ValuationMethod"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Stocking Type:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.Stocking, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "Stocking",
                       @Name = "Stocking"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">VED Class:</label>
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.VED, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "VED",
                       @Name = "VED"
                   })
                </div>
                <label class="col-sm-2 control-label">CAS NO:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.CASNo, new
                   {
                       @class = "form-control",
                       @id = "CASNo",
                       @Name = "CASNo"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">ABC Class:</label>
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.ABC, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "ABC",
                       @Name = "ABC"
                   })
                </div>
                <label class="col-sm-2 control-label">FSN Class:</label>
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.FSN, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "FSN",
                       @Name = "FSN"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Stockist ID:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.StockistID, new
                   {
                       @class = "form-control",
                       @id = "StockistID",
                       @Name = "StockistID"
                   })
                </div>
            </div>
            @*<div class="form-group">
                    <label class="col-sm-3 control-label">UN Number:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.UNNumber, new
                       {
                           @class = "form-control",
                           @id = "UNNumber",
                           @Name = "UNNumber"
                       })
                    </div>
                </div>*@

            <div class="form-group">
                <label class="col-sm-3 control-label">Packing Grp:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.PackingGrp, new
                   {
                       @class = "form-control",
                       @id = "PackingGrp",
                       @Name = "PackingGrp"
                   })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Class:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.Class, new
                   {
                       @class = "form-control",
                       @id = "Class",
                       @Name = "Class"
                   })
                </div>
            </div>
        </div>
    </div>
</div>