
@model TFATERPWebApplication.Areas.Logistics.Models.ItemMasterVM
@using Common;

<script type="text/javascript">
    $(document).ready(function () {
        GetPurAC()
        GetLocationCode()
        GetPurACImport()
        GetSalAC()
        GetSalACImport()
        loadVendor()

        loadProductLife()
    });

    function GetPurAC() {
        var url = '@Url.Action("GetPurchAC")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ACCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ACCode').val('@Model.ACCode').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function GetPurACImport() {
        var url = '@Url.Action("GetPurchAC")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ACCodeX").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ACCodeX').val('@Model.ACCodeX').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function GetSalAC() {
        var url = '@Url.Action("GetPurchAC")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#AcCodeS").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#AcCodeS').val('@Model.AcCodeS').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function GetSalACImport() {
        var url = '@Url.Action("GetPurchAC")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#AcCodeSX").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#AcCodeSX').val('@Model.AcCodeSX').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function GetLocationCode() {
        var url = '@Url.Action("GetLocationCode")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#LocationCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#LocationCode').val('@Model.LocationCode').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadVendor() {
        var url = '@Url.Action("GetVendor")'
        $('#Party').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Party', text: '@Model.PartyName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadProductLife() {
        var url = '@Url.Action("GetProductLife")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#AcCode').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ProductLife").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ProductLife').val('@Model.ProductLife').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
</script>

<div class="row">
    <br />
    <div class="col-lg-12">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Dely Location:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.LocationCode, DropdownHelper.EmptyList(), new { @Class = "selected form-control", @Id = "LocationCode", @Name = "LocationCode" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Domestic Purchase A/C:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.ACCode, DropdownHelper.EmptyList(), new { @Class = "selected form-control", @Id = "ACCode", @Name = "ACCode" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Import Purchase A/C:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.ACCodeX, DropdownHelper.EmptyList(), new { @Class = "selected form-control", @Id = "ACCodeX", @Name = "ACCodeX" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Domestic Sales A/C:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.AcCodeS, DropdownHelper.EmptyList(), new { @Class = "selected form-control", @Id = "AcCodeS", @Name = "AcCodeS" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Export Sales A/C:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.AcCodeSX, DropdownHelper.EmptyList(), new { @Class = "selected form-control", @Id = "AcCodeSX", @Name = "AcCodeSX" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Preferred Vendor:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.Party, new { @class = "input-large search-query", @id = "Party", @Name = "Party", @style = "width: 100%;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Labour Charges:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.LCharges, new { @type = "number", @style = "text-align:right;", @class = "form-control", @id = "LCharges", @Name = "LCharges" })
                </div>
                <label class="col-sm-2 control-label">Other:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.OCharges, new { @type = "number", @style = "text-align:right;", @class = "form-control", @id = "OCharges", @Name = "OCharges" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Machine Charges:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.MCharges, new { @type = "number", @style = "text-align:right;", @class = "form-control", @id = "MCharges", @Name = "MCharges" })
                </div>

            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Charges on 2nd Qty:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.ChargesOnQty2, new { @id = "ChargesOnQty2", @Name = "ChargesOnQty2", @style = "width:16px;height:16px;" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-6 control-label"><b>This Product Can Be..</b></label>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Sold:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.CanSale, new { @id = "CanSale", @Name = "CanSale", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Purchased:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.CanPurch, new { @id = "CanPurch", @Name = "CanPurch", @style = "width:16px;height:16px;" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Sold Online:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.CanSaleOnline, new { @id = "CanSaleOnline", @Name = "CanSaleOnline", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Manufactured:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.CanMfg, new { @id = "CanMfg", @Name = "CanMfg", @value = Model.CanMfg, @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Sub-Contract:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.CanSubContract, new { @id = "CanSubContract", @Name = "CanSubContract", @style = "width:16px;height:16px;" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-4 control-label">Generate Auto Mfg. Entry On Sale:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.AutoMFG, new { @id = "AutoMFG", @Name = "AutoMFG", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label"><b>Quality Control:</b></label>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">Optional QC?:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.QCReqdOPT, new { @id = "QCReqdOPT", @Name = "QCReqdOPT", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">QC on Procurement?:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.QCReqd, new { @id = "QCReqd", @Name = "QCReqd", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">QC on Manufacturing?:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.QCReqdMfg, new { @id = "QCReqdMfg", @Name = "QCReqdMfg", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">QC on Sub-Contract Inwards?:</label>
                <div class="col-sm-1">
                    @Html.CheckBoxFor(x => x.QCReqdSub, new { @id = "QCReqdSub", @Name = "QCReqdSub", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">QC LeadTime:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.QCLeadTime, new { @type = "number", @style = "text-align:right;", @class = "form-control", @Name = "QCLeadTime", @Id = "QCLeadTime" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">QC Sample Qty:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.QCSampleQty, new { @type = "number", @style = "text-align:right;", @class = "form-control", @Name = "QCSampleQty", @Id = "QCSampleQty" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">Re-Test After (Months):</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.ReTestPeriod, new { @type = "number", @style = "text-align:right;", @class = "form-control", @Name = "ReTestPeriod", @Id = "ReTestPeriod" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">Re-Test Sample Qty:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.ReTestQty, new { @type = "number", @style = "text-align:right;", @class = "form-control", @Name = "ReTestQty", @Id = "ReTestQty" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">Retain Quantity:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.RetainQty, new { @type = "number", @style = "text-align:right;", @class = "form-control", @Name = "RetainQty", @Id = "RetainQty" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label">Product Life:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.ProductLife, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "ProductLife", @Id = "ProductLife" })
                </div>
            </div>
        </div>
    </div>
</div>