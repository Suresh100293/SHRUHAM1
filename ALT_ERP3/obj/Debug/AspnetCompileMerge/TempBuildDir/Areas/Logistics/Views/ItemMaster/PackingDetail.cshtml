
@model TFATERPWebApplication.Areas.Logistics.Models.ItemMasterVM
@using Common;

<script type="text/javascript">
    $(document).ready(function () {
        loadPackingPlan()
        loadMaxLoadUnit()
        loadUnitWt()
        loadDimensionUnit()
    });

    function loadPackingPlan() {
        var url = '@Url.Action("GetPackingPlan")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#PackingPlan").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#PackingPlan').val('@Model.PackingPlan').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadMaxLoadUnit() {
        var url = '@Url.Action("GetUnitMaxLoad")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitMaxLoad").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitMaxLoad').val('@Model.UnitMaxLoad').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadDimensionUnit() {
        var url = '@Url.Action("GetDimensionUnit")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitDim").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitDim').val('@Model.UnitDim').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };

    function loadUnitWt() {
        var url = '@Url.Action("GetUnitWt")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitWt").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitWt').val('@Model.UnitWt').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
</script>

<div class="row">
    <br />
    <div class="col-lg-12">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Is it a Packing Material?:</label>
                <div class="col-sm-6">
                    @Html.CheckBoxFor(x => x.IsPacking, new { @id = "IsPacking", @name = "IsPacking", @value = Model.IsPacking, @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Packing Size:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.PackingSize, new { @type = "number", @class = "form-control", @Name = "PackingSize", @Id = "PackingSize", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Packing Instructions:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.PackingPlan, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "PackingPlan", @Name = "PackingPlan" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Max Loading Weight:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.MaxLoad, new { @type = "number", @class = "form-control", @id = "MaxLoad", @Name = "MaxLoad", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Packing Unit Prefix:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.PUPrefix, new { @class = "form-control", @id = "PUPrefix", @Name = "PUPrefix" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Max Load Unit:</label>
                <div class="col-sm-6">
                    @Html.DropDownListFor(x => x.UnitMaxLoad, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "UnitMaxLoad", @Id = "UnitMaxLoad" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-6 control-label"><b>Product Dimensions:</b></label>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Length:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.pLength, new { @type = "number", @class = "form-control", @Name = "pLength", @Id = "pLength", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Width:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.pWidth, new { @type = "number", @class = "form-control", @Name = "pWidth", @Id = "pWidth", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Height:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.pHeight, new { @type = "number", @class = "form-control", @Name = "pHeight", @Id = "pHeight", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-6 control-label"><b>Packing Dimensions</b></label>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Lenght:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.iLength, new { @type = "number", @class = "form-control", @Name = "iLength", @Id = "iLength", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Width:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.iWidth, new { @type = "number", @class = "form-control", @Name = "iWidth", @Id = "iWidth", @style = "text-align:right;" })
                </div>
                <label class="col-sm-2 control-label">Height:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.iHeight, new { @type = "number", @class = "form-control", @Name = "iHeight", @Id = "iHeight", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Dimension Unit:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(x => x.UnitDim, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "UnitDim", @Id = "UnitDim" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Net Wt.:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.NetWeight, new { @type = "number", @class = "form-control", @Name = "NetWeight", @Id = "NetWeight", @style = "text-align:right;" })
                </div>
                <label class="col-sm-2 control-label">Gross Wt.:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.GrWeight, new { @type = "number", @class = "form-control", @Name = "GrWeight", @Id = "GrWeight", @style = "text-align:right;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Weight Unit:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(x => x.UnitWt, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "UnitWt", @Id = "UnitWt" })
                </div>
            </div>
        </div>
    </div>
</div>