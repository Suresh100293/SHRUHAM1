@model TFATERPWebApplication.Areas.Logistics.Models.LorryReceiptVM
@using Common;
@{
    ViewBag.Title = "LorryReceipt Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script src="~/Scripts/jquery.jstree.js"></script>
<style>
    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    /*legend {
        margin-left: 30%;
        text-align: center;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #dec0c0;
    }*/
    legend {
        /*margin-left: 30%;
        text-align: center;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #dec0c0;*/
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: #dec0c0;
        width: auto;
        z-index: auto;
    }

    .legend2 {
        color: black;
        position: absolute;
        margin: -40px 0% 0% 20%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: #53bee6;
        width: auto;
    }
</style>
<style>
    #menu li {
        list-style: none;
        text-align: center;
        color: black;
        margin-left: 0px;
        position: relative;
    }

    #menu ul li:hover {
        cursor: pointer;
        background-color: coral;
        padding: 2px 0px 2px 0px;
        text-align: center;
        color: white;
    }

    /*#menu ul li:hover a {
            color: white !important;
        }*/

    ul, .list-unstyled {
        padding-left: 0px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function ()
    {
        
        if ('@Model.Draft' == 'True' && '@Model.Mode'=='Add') {
            $(".hidebcozOfDraft").hide();
        }
       
       
       

        $("#SaveNamePopUp").dialog({
            autoOpen: false,
            modal: true,
            title: "Enter Draft Name"
        });
        LoadLRType();
        LoadServiceType();
        LoadConsigner();
        LoadConsignee();
        LoadBillingParty();
        LoadFrom();
        LoadTo();
        LoadBillAt();
        LoadUnit();
        LoadParticular();
        LoadChargeType();
        LoadDelivery();
        LoadCollArea();




        $('#BothCHK').change(function () {
            if (this.checked) {
                $("#LrNo").removeAttr("disabled");


            } else {
                $("#LrNo").attr("disabled", "disabled");
            }

        });


        $('#ActWt').blur(function () {
            $("#ChgWt").val($("#ActWt").val());
        });

        $("#Descrtextbox").hide();
        $('#DescrChk').change(function () {
            if (this.checked) {
                $("#DescrsearchDiv").hide();
                $("#Descrtextbox").show();
            } else {
                $("#Descrtextbox").hide();
                $("#DescrsearchDiv").show();
            }
        });

        if ($("#Del").val() == "0") {
            $("#DeliveryMainTable").show();
        } else {
            $("#DeliveryMainTable").hide();
        }
        $('#Del').change(function () {
            if ($("#Del").val() == "0") {
                $("#DeliveryMainTable").show();
            } else {
                $("#DeliveryMainTable").hide();
            }
        });
        $("#Deliverytextbox").hide();
        $('#DeliveryChk').change(function () {
            if (this.checked) {
                $("#DeliverysearchDiv").hide();
                $("#Deliverytextbox").show();
            } else {
                $("#Deliverytextbox").hide();
                $("#DeliverysearchDiv").show();
            }
        });

        $('#Colln').change(function () {
            if ($("#Colln").val() == "1") {
                $("#CollectionMainTable").show();
            } else {
                $("#CollectionMainTable").hide();
            }
        });
        $("#colntextbox").hide();
        $('#ColareaChk').change(function () {
            if (this.checked) {
                $("#searchDiv").hide();
                $("#colntextbox").show();
            } else {
                $("#colntextbox").hide();
                $("#searchDiv").show();
            }
        });

        $('#ChargeDiv :text').blur(function () {
            var amt = 0;
            $("#ChargeDiv :text").each(function () {
                amt += parseFloat($(this).val());
            });
            $("#Amt").val((amt.toFixed(2)).toString());
        });






        //Edit Code Below



        if ('@Model.DescrChk'=="True") {
            $("#DescrsearchDiv").hide();
            $("#Descrtextbox").show();
        } else {
            $("#Descrtextbox").hide();
            $("#DescrsearchDiv").show();
        }

        if ('@Model.DelAt' == "Door")
        {
            $("#DeliveryMainTable").show();
            if ('@Model.DeliveryChk' == "True")
            {
                $("#DeliverysearchDiv").hide();
                $("#Deliverytextbox").show();
            }
            else
            {
                $("#Deliverytextbox").hide();
                $("#DeliverysearchDiv").show();
            }
        } else {
            $("#DeliveryMainTable").hide();
        }

        if ('@Model.Colln' == 'Yes')
        {
            $("#CollectionMainTable").show();
            if ('@Model.ColareaChk' == "True")
            {
                $("#searchDiv").hide();
                $("#colntextbox").show();
            }
            else
            {
                $("#colntextbox").hide();
                $("#searchDiv").show();
            }
        }
        else
        {
            $("#CollectionMainTable").hide();
        }




        @*if ('@Model.ColareaChk'=="True") {
            $("#searchDiv").hide();
            $("#colntextbox").show();
        } else {
            $("#colntextbox").hide();
            $("#searchDiv").show();
        }*@

        $("#ConsignerAddress").val('@ViewBag.Consiger');
        $("#ConsigneeAddress").val('@ViewBag.Consigee');
        $("#BillPartyAddress").val('@ViewBag.BillParty');






        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }

        $(".CalculationTxt").constrain({ allow: { regex: "[0-9]" } });
        //$("#ShortName").constrain({ allow: { regex: "[a-zA-Z0-9() ]" } });

        //$("input[name=setRegex]").constrain({ allow: { regex: "[0-9]" } });
        $("#Name").constrain({ allow: { regex: "[a-zA-Z0-9 ]" } });
        $("#Contact_Person").constrain({ allow: { regex: "[a-zA-Z0-9 ]" } });
        $("#Contact_Person1").constrain({ allow: { regex: "[a-zA-Z0-9 ]" } });
        // $("#Contact_Person #Contact_Person1").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Address").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        //$("#City").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Pincode").constrain({ allow: { regex: "[0-9]" } });
        $("#District").constrain({ allow: { regex: "[a-zA-Z" } });
        $("#Contact_No #Contact_No1").constrain({ allow: { regex: "[0-9]" } });
        $("#Fax").constrain({ allow: { regex: "[0-9+]" } });


        $('#btnDelete').click(function (event)
        {
            event.preventDefault();
            var result = confirm("Are you sure you want to delete?");
            if (result)
            {
                var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};
                ModelData["Document"] = $("#Document").val();
                ModelData["Mode"] = '@Model.Mode';
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success')
                        {
                            $('.spinner').hide();
                            window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                            $("#ErrorMessage").hide();
                        }
                        else
                        {
                            $('.spinner').hide();
                            alert(data.Message);
                        }
                    },
                });
            } else {
                $('.spinner').hide();
                window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                $("#ErrorMessage").hide();
            }
        });

        $("#DocDate").blur(function (event) {
            event.preventDefault();

            CheckLRDateFormat();
        });

        $('#SaveDraftName').click(function (event) {

            $('#SaveNamePopUp').dialog('close');


            if ($("#Draft_Name").val() == '' || $("#Draft_Name").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Draft_Name Required.');
                return;
            }
            else
            {
                CHeckLrNoExistOrNot("NDraft_LrBill");
            }
        });
        $('#SaveDraft').click(function (event) {
            $('#SaveNamePopUp').dialog('open');


        });

        $('#Submit').click(function (event) {
            event.preventDefault();

            //var LrFlag = CHeckLrNoExistOrNot(false);

            CHeckLrNoExistOrNot("nlrbill");



        });

        $('#expandall').click(function () {


            ExpandOrCollapse();

        });

    });

    @*function CHeckLrNoExistOrNot(flg) {
        
        var Flag = false;
        var data;
        if ('@Model.LR_Check_IN_DraftLrbill' == 'True' && flg == "DraftTable")
        {
            
            var currValue = $('#LrNo').val();
            var url = '@Url.Action("CheckExistLR")';
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data:  { TableName: "Draft_LorryPrt", Colfield: "[LRno]", Value: $('#LrNo').val(), SkipColumnName: "LRno", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        SaveDraft();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
                        return;
                    }
                }
            });
            var url = '@Url.Action("CheckExistLR")';
            if (currValue != null || currValue != "") {
                $.ajax({
                    type: "POST",
                    traditional: true,
                    //url: "/Base/CheckExist",
                    url: url,
                    data:  { TableName: "Draft_LorryPrt", Colfield: "[LRno]", Value: $('#LrNo').val(), SkipColumnName: "LRno", PKValue: '@Model.Document' },
                    success: function (result) {
                        
                        if (result.Message == "F") {
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
                            return;
                        }
                    }
                });
            }

        }

    }*@

    function CHeckLrNoExistOrNot(tablename) {

        
        //var Consigner = $('#RecCode').val();
        //var Consignee = $('#SendCode').val();
        //var BillParty = $('#BillParty').val();

        var url = '@Url.Action("CheckExistLR")';
        if (tablename =="NDraft_LrBill") {
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { TableName: tablename, Colfield: "[DraftName]", Value: $('#DraftName').val(), SkipColumnName: "DraftName", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        SaveDraft();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
                        return;
                    }

                }
            });
        } else {
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { TableName: tablename, Colfield: "[LRno]", Value: $('#LrNo').val(), SkipColumnName: "LRno", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        SaveLRBILL();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
                        return;
                    }

                }
            });
        }

    }


    //$('#SaveDraft').click(function (event) {

    function SaveLRBILL() {

        var DocDate = $("#DocDate").val().split("/");
            var EndDate = '@Model.EndDate'.split("/");
            var StartDate = '@Model.StartDate'.split("/");
            if (parseInt(StartDate[2]) <= parseInt(DocDate[2]))
            {
                if (parseInt(StartDate[1]) == parseInt(DocDate[1]))
                {
                    if (!(parseInt(StartDate[0]) <= parseInt(DocDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
                else
                {
                     if (parseInt(StartDate[1]) > parseInt(DocDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                return;
            }
            if (parseInt(DocDate[2]) <= parseInt(EndDate[2]))
            {
                if (parseInt(DocDate[1]) == parseInt(EndDate[1]))
                {
                    if (!(parseInt(DocDate[0]) <= parseInt(EndDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
                else
                {
                    if (parseInt(DocDate[1]) > parseInt(EndDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be less Than @Model.EndDate');
                return;
            }


            //if ($("#LRtype").val() == "0") {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('LRType is Required..');
            //    return;
            //}
            if ($("#LRtype").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LRtype is required..');
                return;
            }
            if ($("#ServiceType").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ServiceType is required..');
                return;
            }
            if ($("#RecCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consigner is required..');
                return;
            }
            if ($("#SendCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consignee_Code is required..');
                return;
            }
            if ($("#BillParty").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billing_Party is required..');
                return;
            }
            if ($("#Source").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From is required..');
                return;
            }
            if ($("#Dest").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To is required..');
                return;
            }
            if ($("#BillBran").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billed_At is required..');
                return;
            }
            if ($("#PackQty").val() == '' || $("#PackQty").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PackQty is required..');
                return;

            }
            if ($("#UnitCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Unit is required..');
                return;
            }
            if ($("#ActWt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight is required..');
                return;
            }
            if ($("#ChgWt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charged_Weight is required..');
                return;
            }

            if ((parseFloat($("#ActWt").val()).toFixed(2)) > (parseFloat($("#ChgWt").val()).toFixed(2))) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight Should Be Less Than Or Equal To Charged_Weight ..');
                return;
            }
            if ($("#ChgType").val() == '') {

                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charge_Type is required..');
                    return;
            }
            if ($("#Descr").val() == '' && $("#DescrTxt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Particulars is required..');
                return;
            }

            if ('@Model.LRSetup.Party_Challan' == 'True') {
                if ($("#PartyRef").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Party_Challan is required..');
                    return;
                }
            }
            if ('@Model.LRSetup.Party_Invoice' == 'True') {
                if ($("#PartyInvoice").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PartyInvoice is required..');
                    return;

                }
            }

            if ($("#DecVal").val() == "0.00") {

                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('DecVal is required..');
                    return;

            }
            if (parseInt($('#DecVal').val()) >= parseInt(@Model.LRSetup.Declare_Value)) {
                if ('@Model.LRSetup.GST' == 'True') {
                    if ($("#GSTNO").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('GSTNO is required..');
                        return;
                    }
                }
                if ('@Model.LRSetup.Eway_Bill' == 'True') {
                    if ($("#EwayBill").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('EwayBill is required..');
                        return;
                    }
                }
            }
            if ('@Model.LRSetup.Vehicle' == 'True') {
                if ($("#VehicleNo").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('VehicleNo is required..');
                    return;
                }
            }
            if ($("#DelAt").val() == '0' ) {

                if ($("#DeliveryAtTxt").val() == '' && $('#DeliveryAtSearch').val() == '')
                {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Delivery At is required..');
                    return;
                }
            }



            if ($("#Colln").val() == "1")
            {
                if ($("#CollNArea").val() == '' && ($("#CollNArea1").val() == '' || $("#CollNArea1").val() == null)) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('CollNArea is required..');
                    return;
                }
            }

            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["LrNo"] = $("#LrNo").val();
            ModelData["DocDate"] = $("#DocDate").val();
            ModelData["TrType"] = $("#TrType").val();
            ModelData["RecCode"] = $("#RecCode").val();
            ModelData["SendCode"] = $("#SendCode").val();
            ModelData["BillParty"] = $("#BillParty").val();
            ModelData["BillBran"] = $("#BillBran").val();
            ModelData["Source"] = $("#Source").val();
            ModelData["Dest"] = $("#Dest").val();
            ModelData["UnitCode"] = $("#UnitCode").val();

            if ($("#DescrChk").is(":checked") == true) {
                ModelData["Descr"] = null;
                ModelData["DescrTxt"] = $("#DescrTxt").val();

            } else {
                ModelData["Descr"] = $("#Descr").val();
            }

            ModelData["PackQty"] = $("#PackQty").val();
            ModelData["ActWt"] = $("#ActWt").val();
            ModelData["ChgWt"] = $("#ChgWt").val();
            ModelData["ChgType"] = $("#ChgType").val();
            ModelData["PartyRef"] = $("#PartyRef").val();

            ModelData["DecVal"] = $("#DecVal").val();
            ModelData["DelAt"] = $("#DelAt").val();

            if ($("#DeliveryChk").is(":checked") == true) {
                ModelData["DeliveryAtSearch"] = null;
                ModelData["DeliveryAtTxt"] = $("#DeliveryAtTxt").val();
            } else {
                ModelData["DeliveryAtSearch"] = $("#DeliveryAtSearch").val();
            }

            if ($("#ColareaChk").is(":checked") == true) {
                ModelData["CollNArea"] = null;
                ModelData["CollNArea1"] = $("#CollNArea1").val();
            } else {
                ModelData["CollNArea"] = $("#CollNArea").val();
            }

            ModelData["Colln"] = $("#Colln").val();
            ModelData["Narr"] = $("#Narr").val();
        ModelData["EndDate"] = '@Model.EndDate';
        ModelData["StartDate"] = '@Model.StartDate';
        ModelData["DocCurrentDate"] = '@Model.DocCurrentDate';
        debugger;
            var Val = "";
            var amt=0;
            $("#ChargeDiv :text").each(function () {
                Val += $(this).val() + "^";
                amt += parseFloat($(this).val());
            });

            ModelData["Amt"] = (amt.toFixed(2)).toString();
            ModelData["Val1"] = Val.substring(0, (Val.length-1));;
            ModelData["Mode"] = '@Model.Mode';
            ModelData["PartyInvoice"] = $("#PartyInvoice").val();
            ModelData["GSTNO"] = $("#GSTNO").val();
            ModelData["EwayBill"] = $("#EwayBill").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            ModelData["ConsignerEXTRAInfo"] = $("#ConsignerEXTRAInfo").val();
            ModelData["ConsigneeEXTRAInfo"] = $("#ConsigneeEXTRAInfo").val();
            ModelData["BillingPartyEXTRAInfo"] = $("#BillingPartyEXTRAInfo").val();
            ModelData["LRtype"] = $("#LRtype").val();
            ModelData["ServiceType"] = $("#ServiceType").val();
            
            if ('@Model.Draft' == 'True') {
                ModelData["Document"] = null;
                ModelData["Mode"] = 'Add';
                ModelData["Draft"] = false;

            }
            //ComingFromDraftss

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
    }


    function SaveDraft()
    {
        


            if ('@Model.Draft'=='False') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Not Allow To Draft Created Use Only Draft Link.');
            return;
        }





        if ($('#ErrorMessage').is(':visible'))
        {
            $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
        }


            var DocDate = $("#DocDate").val().split("/");
            var EndDate = '@Model.EndDate'.split("/");
            var StartDate = '@Model.StartDate'.split("/");
            if (parseInt(StartDate[2]) <= parseInt(DocDate[2]))
            {
                if (parseInt(StartDate[1]) == parseInt(DocDate[1]))
                {
                    if (!(parseInt(StartDate[0]) <= parseInt(DocDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
                else
                {
                     if (parseInt(StartDate[1]) > parseInt(DocDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                return;
            }
            if (parseInt(DocDate[2]) <= parseInt(EndDate[2]))
            {
                if (parseInt(DocDate[1]) == parseInt(EndDate[1]))
                {
                    if (!(parseInt(DocDate[0]) <= parseInt(EndDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
                else
                {
                    if (parseInt(DocDate[1]) > parseInt(EndDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be less Than @Model.EndDate');
                return;
            }


            //if ($("#LRtype").val() == "0") {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('LRType is Required..');
            //    return;
            //}
            if ($("#RecCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consigner is required..');
                return;
            }
            if ($("#SendCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consignee_Code is required..');
                return;
            }
            if ($("#BillParty").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billing_Party is required..');
                return;
            }
            if ($("#Source").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From is required..');
                return;
            }
            if ($("#Dest").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To is required..');
                return;
            }
            if ($("#BillBran").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billed_At is required..');
                return;
            }
            if ($("#PackQty").val() == '' || $("#PackQty").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PackQty is required..');
                return;

            }
            if ($("#UnitCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Unit is required..');
                return;
            }
            if ($("#ActWt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight is required..');
                return;
            }
            if ($("#ChgWt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charged_Weight is required..');
                return;
            }

            if ((parseFloat($("#ActWt").val()).toFixed(2)) > (parseFloat($("#ChgWt").val()).toFixed(2))) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight Should Be Less Than Or Equal To Charged_Weight ..');
                return;
            }
            if ($("#ChgType").val() == '') {

                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charge_Type is required..');
                    return;
            }
            if ($("#Descr").val() == '' && $("#DescrTxt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Particulars is required..');
                return;
            }

            if ('@Model.LRSetup.Party_Challan' == 'True') {
                if ($("#PartyRef").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Party_Challan is required..');
                    return;
                }
            }
            if ('@Model.LRSetup.Party_Invoice' == 'True') {
                if ($("#PartyInvoice").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PartyInvoice is required..');
                    return;

                }
            }

            if ($("#DecVal").val() == "0.00") {

                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('DecVal is required..');
                    return;

            }
            if (parseInt($('#DecVal').val()) >= parseInt(@Model.LRSetup.Declare_Value)) {
                if ('@Model.LRSetup.GST' == 'True') {
                    if ($("#GSTNO").val() == '') {

                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('GSTNO is required..');
                        return;
                    }
                }
                if ('@Model.LRSetup.Eway_Bill' == 'True') {
                    if ($("#EwayBill").val() == '') {

                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('EwayBill is required..');
                        return;
                    }
                }
            }
            if ('@Model.LRSetup.Vehicle' == 'True') {
                if ($("#VehicleNo").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('VehicleNo is required..');
                    return;
                }
            }
            if ($("#DelAt").val() == '0' ) {

                if ($("#DeliveryAtTxt").val() == '' && $('#DeliveryAtSearch').val() == '')
                {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Delivery At is required..');
                    return;
                }
            }



            if ($("#Colln").val() == "1")
            {
                if ($("#CollNArea").val() == '' && ($("#CollNArea1").val() == '' || $("#CollNArea1").val() == null)) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('CollNArea is required..');
                    return;
                }
            }

            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
        var ModelData = {};
        

        @*if ('@Model.Draft'=='False') {
            ModelData["Draft"] = true;
            ModelData["Mode"] = 'Add';
            ModelData["Document"] = null;
        }*@
        ModelData["Draft"] = '@Model.Draft';
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Document"] = $("#Document").val();

            ModelData["LrNo"] = $("#LrNo").val();
        ModelData["DocDate"] = $("#DocDate").val();
            ModelData["TrType"] = $("#TrType").val();
            ModelData["RecCode"] = $("#RecCode").val();
            ModelData["SendCode"] = $("#SendCode").val();
            ModelData["BillParty"] = $("#BillParty").val();
            ModelData["BillBran"] = $("#BillBran").val();
            ModelData["Source"] = $("#Source").val();
            ModelData["Dest"] = $("#Dest").val();
            ModelData["UnitCode"] = $("#UnitCode").val();

            if ($("#DescrChk").is(":checked") == true) {
                ModelData["Descr"] = null;
                ModelData["DescrTxt"] = $("#DescrTxt").val();

            } else {
                ModelData["Descr"] = $("#Descr").val();
            }

            ModelData["PackQty"] = $("#PackQty").val();
            ModelData["ActWt"] = $("#ActWt").val();
            ModelData["ChgWt"] = $("#ChgWt").val();
            ModelData["ChgType"] = $("#ChgType").val();
            ModelData["PartyRef"] = $("#PartyRef").val();

            ModelData["DecVal"] = $("#DecVal").val();
            ModelData["DelAt"] = $("#DelAt").val();

            if ($("#DeliveryChk").is(":checked") == true) {
                ModelData["DeliveryAtSearch"] = null;
                ModelData["DeliveryAtTxt"] = $("#DeliveryAtTxt").val();
            } else {
                ModelData["DeliveryAtSearch"] = $("#DeliveryAtSearch").val();
            }

            if ($("#ColareaChk").is(":checked") == true) {
                ModelData["CollNArea"] = null;
                ModelData["CollNArea1"] = $("#CollNArea1").val();
            } else {
                ModelData["CollNArea"] = $("#CollNArea").val();
            }

            ModelData["Colln"] = $("#Colln").val();
            ModelData["Narr"] = $("#Narr").val();
        ModelData["EndDate"] = '@Model.EndDate';
        ModelData["StartDate"] = '@Model.StartDate';
        ModelData["DocCurrentDate"] = '@Model.DocCurrentDate';

            var Val = "";
            var amt=0;
            $("#ChargeDiv :text").each(function () {
                Val += $(this).val() + "^";
                amt += parseFloat($(this).val());
            });

            ModelData["Amt"] = $("#Amt").val();//(amt.toFixed(2)).toString();
            ModelData["Val1"] = Val.substring(0, (Val.length-1));;

            ModelData["PartyInvoice"] = $("#PartyInvoice").val();
            ModelData["GSTNO"] = $("#GSTNO").val();
            ModelData["EwayBill"] = $("#EwayBill").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            ModelData["ConsignerEXTRAInfo"] = $("#ConsignerEXTRAInfo").val();
            ModelData["ConsigneeEXTRAInfo"] = $("#ConsigneeEXTRAInfo").val();
            ModelData["BillingPartyEXTRAInfo"] = $("#BillingPartyEXTRAInfo").val();
            ModelData["Draft_Name"] = $("#Draft_Name").val();
            ModelData["LRtype"] = $("#LRtype").val();
            ModelData["ServiceType"] = $("#ServiceType").val();


            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        }




    @*function AddNewEntry() {

          window.location.href = "/Logistics/" + '@Model.Controller2' + "/Index?TableName=" + '@Model.TableName' + "&MainType=" + '@Model.MainType' + "&Mode=Add&Header=" + '@Model.Header' + "&ViewDataId=" + '@Model.ViewDataId' + '&Controller2=' + '@Model.Controller2' + '&Module=' + '@Model.Module' + '&optiontype=' + '@Model.OptionType' + '&optioncode=' + '@Model.OptionCode';
    }*@
    function CheckLRDateFormat() {

        //DocDate = (3)["28", "05", "2020"]
        //ExtendedDate = (3)["17", "06", "2020"]

        $("#ErrorMessage").hide();
            var DocDate = $("#DocDate").val().split("/");
            var EndDate = '@Model.EndDate'.split("/");
            var StartDate = '@Model.StartDate'.split("/");
            if (parseInt(StartDate[2]) <= parseInt(DocDate[2]))
            {
                if (parseInt(StartDate[1]) == parseInt(DocDate[1]))
                {
                    if (!(parseInt(StartDate[0]) <= parseInt(DocDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
                else
                {
                     if (parseInt(StartDate[1]) > parseInt(DocDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.StartDate');
                return;
            }
            if (parseInt(DocDate[2]) <= parseInt(EndDate[2]))
            {
                if (parseInt(DocDate[1]) == parseInt(EndDate[1]))
                {
                    if (!(parseInt(DocDate[0]) <= parseInt(EndDate[0])))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
                else
                {
                    if (parseInt(DocDate[1]) > parseInt(EndDate[1]))
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('DocDate Should Be Grater Than @Model.EndDate');
                        return;
                    }
                }
            }
            else
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DocDate Should Be less Than @Model.EndDate');
                return;
            }
    }

    function LoadFrom() {
        
        var flag = false;
        if ('@Model.LRSetup.Branch_Area'== 'True') {
            flag = true;
        }

        var url = '@Url.Action("From")'
        $('#Source').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        Flag: flag
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Source', text: '@Model.Source_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadChargeType() {

        var url = '@Url.Action("ChargeType")'
        $('#ChgType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ChgType', text: '@Model.ChgType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadUnit() {

        var url = '@Url.Action("GetUnit")'
        $('#UnitCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.UnitCode', text: '@Model.UnitCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadParticular() {

        var url = '@Url.Action("GetParticulars")'
        $('#Descr').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Descr', text: '@Model.Descr_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadLRType() {

        var url = '@Url.Action("GetLRType")'
        $('#LRtype').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.LRtype', text: '@Model.LRtype_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadServiceType() {

        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadDelivery() {
        var url = '@Url.Action("LoadDeliveryAtSearch")'
        $('#DeliveryAtSearch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#Source').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DelAt', text: '@Model.DelAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadBillAt() {
        var url = '@Url.Action("BillatBranch")'
        $('#BillBran').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillBran', text: '@Model.BillBran_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#Dest').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#Source').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Dest', text: '@Model.Dest_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
     function LoadCollArea() {
        var url = '@Url.Action("CollArea")'
         $('#CollNArea').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                        //From: $('#Source').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.CollnArea', text: '@Model.CollnArea_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadConsigner() {
        var url = '@Url.Action("GetConsigner")'
        $('#RecCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.RecCode', text: '@Model.RecCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";

            },
        })
    };

    function LoadBillingParty() {
        var url = '@Url.Action("GetConsigner")'
        $('#BillParty').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillParty', text: '@Model.BillParty_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };



    function LoadConsignee() {

        var url = '@Url.Action("GetConsignee")'
        $('#SendCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        Consigner: $('#Consigner').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.SendCode', text: '@Model.SendCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function myFunction() {

        if ($("#hdnAreaID").val() == null || $("#hdnAreaID").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Select Branch..');
            return;

        }
    }





    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function CheckName() {

            NameFlag = "False";
        var currValue = $('#Name').val()
        var url = '@Url.Action("CheckExist")';
        if (currValue != null || currValue != "") {
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { TableName: "Consigner", Colfield: "Name", Value: $('#Name').val(), SkipColumnName: "Code", PKValue: '@Model.Document' },
                success: function (result) {
                    if (result.Message == "F") {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Name is Exist Please Change The Name..');
                        $('#Submit').prop('disabled', true);
                        return;
                    } else {
                        $("#ErrorMessage").hide();
                        $('#Submit').prop('disabled', false);
                    }
                }
            });
        }
    }
    function GetAddress() {


        var Consigner = $('#RecCode').val();
        var Consignee = $('#SendCode').val();
        var BillParty = $('#BillParty').val();

        var url = '@Url.Action("GetAddress")';

            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { Consigner: Consigner, Consignee: Consignee, BillingParty: BillParty},
                success: function (result) {

                    $("#ConsignerAddress").val(result.Message);
                    $("#ConsigneeAddress").val(result.Message1);
                    $("#BillPartyAddress").val(result.Message2);


                }
            });
    }




    function ExpandOrCollapse() {

        if (isTreeOpen == false) {
            $("#treeviewcontrol").jstree("open_all", "#0");
            isTreeOpen = true;


        } else {
            $("#treeviewcontrol").jstree("close_all", "#0");
            isTreeOpen = false;
        }
    }

    //function FillTreeView() {
    //    $("#treeviewcontrol").jstree({
    //        json_data: {
    //            "ajax": {
    //                "url": "/LR/TreeView",
    //                "type": "POST",
    //                "dataType": "json",
    //                "contentType": "application/json charset=utf-8"
    //            }
    //        },
    //        checkbox: {
    //            real_checkboxes: false,
    //            checked_parent_open: false
    //        },
    //        plugins: ["themes", "json_data", "ui", ""]
    //    });
    //};









</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">LR Entry</b>

        <span class="tools pull-right">
            <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>


<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:30px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-md-12" style="margin-top: 15px;">
                <legend style="color: black;">Lorry Receipts</legend>

                <button type="button" class="btn btn-info btn-lg legend2" data-toggle="modal" data-target="#myModal">Pick From Draft</button>

                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-md-9">
                            <div class="form-group" style="margin-top: 0px;">
                                <div class="col-sm-1 ">
                                    <div class="hidebcozOfDraft">
                                        <label class=" bold   control-label ">LR No :</label>
                                    </div>
                                </div>

                                <div class="col-sm-2">
                                    <div class="col-sm-6 " style="width: 35px;margin-left: -22px;">
                                        <div class="hidebcozOfDraft">
                                            @if (Model.LRSetup.LR_Both == true)
                                            {
                                                <input type="checkbox" id="BothCHK" style="height: 20px;width: 35px;" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" id="BothCHK" style="height: 20px;width: 35px;" disabled />
                                            }
                                        </div>
                                    </div>
                                    <div class="col-sm-6 " style="width: 90px;">
                                        <div class="hidebcozOfDraft">
                                            @if (Model.LRSetup.LR_Generate == false && Model.LRSetup.LR_Both == false)
                                            {
                                                @Html.TextBoxFor(x => x.LrNo, new { @class = "form-control", @Value = Model.LrNo })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => x.LrNo, new { @class = "form-control", @Value = Model.LrNo, @disabled = "disabled" })
                                            }
                                        </div>
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1 control-label">LR Date :</label>
                                <div class="col-sm-2">
                                    @if (Model.LRSetup.LR_Date)
                                    {
                                        @Html.TextBoxFor(x => x.DocDate, new { @class = "form-control", @Value = Model.DocDate })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.DocDate, new { @class = "form-control", @Value = Model.DocDate, @disabled = "disabled" })
                                    }
                                </div>
                                <label class=" bold  col-sm-1 control-label">LR Type :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.LRtype, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.LRtype })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Service Type :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ServiceType })
                                </div>
                            </div>
                            <div class="form-group ">
                                <label class=" bold   col-sm-1 control-label">Consigner:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.RecCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.RecCode })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Consignee_Code:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.SendCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.SendCode })
                                </div>
                                <label class=" bold  col-sm-offset-0 col-sm-1 control-label">Billing Party:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.BillParty, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.BillParty })
                                </div>

                            </div>
                            <div class="form-group " style="padding-top: 5px;">
                                <label class=" bold   col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    <textarea id="ConsignerAddress" name="ConsignerAddress" rows="2" cols="43" readonly></textarea>
                                </div>
                                <label class=" bold  col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    <textarea id="ConsigneeAddress" name="ConsigneeAddress" rows="2" cols="43" readonly></textarea>
                                </div>
                                <label class=" bold   col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    <textarea id="BillPartyAddress" name="ConsigneeAddress" rows="2" cols="44" readonly></textarea>
                                </div>
                            </div>
                            <div class="form-group " style="padding-top: 5px;">
                                <label class=" bold   col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.RecCodeInfo, new { @class = "form-control", @Value = Model.RecCodeInfo })
                                </div>
                                <label class=" bold  col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.SendCodeInfo, new { @class = "form-control", @Value = Model.SendCodeInfo })
                                </div>
                                <label class=" bold   col-sm-1 control-label"></label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.BillPartyInfo, new { @class = "form-control", @Value = Model.BillPartyInfo })
                                </div>
                            </div>
                            <div class="form-group ">
                                <label class=" bold   col-sm-1 control-label">From:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Source, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Source })
                                </div>
                                <label class=" bold  col-sm-offset-1 col-sm-1 control-label">To:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Dest, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Dest })
                                </div>
                                <label class=" bold   col-sm-2 control-label" style="width: 150px;margin-left: 80px;">Billed At (Branch):</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.BillBran, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.BillBran })
                                </div>


                            </div>

                            <div class="form-group" style="margin-top: 20px;">
                                <label class=" bold   col-sm-1 control-label">Collection :</label>
                                <div class="col-sm-2">
                                    @Html.EnumDropDownListFor(m => m.Colln, new { @class = "form-control" })
                                </div>

                                <div id="CollectionMainTable" hidden>
                                    <div id="CollNAreaDiv">
                                        <label class=" bold   col-sm-1 control-label" style="WIDTH: 120px;">Collection Area :</label>
                                        <div class="col-sm-2" style="margin-left: -5px;">
                                            <div id="searchDiv">
                                                @Html.TextBoxFor(x => x.CollnArea, new { @class = "input-large-query ", @style = "width: 180px;" })
                                            </div>
                                            <div id="colntextbox">
                                                <input type="text" value="@Model.CollNAreaTxt" id="CollNArea1" class="form-control" style="width:182px;" />
                                            </div>
                                            <div style="width: 28px;margin: -26px 0px 0px 180px;">
                                                @*<input type="checkbox" id="CollectionAreaNotExist" style="height: 20px;width: 35px;"/>*@
                                                @Html.CheckBoxFor(x => x.ColareaChk, new { @style = "height: 20px;width: 35px;", @value = Model.ColareaChk })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <label class=" bold  col-sm-1 control-label">Delivery :</label>
                                <div class="col-sm-2">
                                    @Html.EnumDropDownListFor(m => m.Del, new { @class = "form-control" })                                @*@Html.TextBoxFor(x => x.LRNo, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.From_code })*@
                                </div>
                                <div id="DeliveryMainTable" hidden>
                                    <label class=" bold  col-sm-1 control-label">Delivery At :</label>
                                    <div class="col-sm-2">
                                        <div id="DeliverysearchDiv">
                                            @Html.TextBoxFor(x => x.DelAt, new { @class = "input-large-query ", @style = "width: 180px;" })
                                        </div>
                                        <div id="Deliverytextbox">
                                            <input type="text" value="@Model.DeliveryAtTxt" id="DeliveryAtTxt" class="form-control" style="width:182px;" />
                                        </div>
                                        <div style="width: 28px;margin: -26px 0px 0px 180px;">
                                            @Html.CheckBoxFor(x => x.DeliveryChk, new { @style = "height: 20px;width: 35px;", @value = Model.DeliveryChk })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group" style="margin-top: 0px;">
                                <label class=" bold  col-sm-1 control-label">Package :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.PackQty, new { @class = "form-control", @Value = Model.PackQty })
                                </div>
                                <label class=" bold   col-sm-1 control-label">Unit :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.UnitCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;" })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Actual Weight :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.ActWt, new { @class = "form-control", @Value = Model.ActWt })
                                    @*@Html.TextBoxFor(x => x.LRNo, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.From_code })*@
                                </div>
                                <label class=" bold  col-sm-1 control-label" style="width: 125px;">Charged Weight :</label>
                                <div class="col-sm-2" style="margin-left: -10px;">
                                    @Html.TextBoxFor(x => x.ChgWt, new { @class = "form-control", @Value = Model.ChgWt })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold  col-sm-1 control-label">Charge Type :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.ChgType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;" })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Particulars :</label>
                                <div class="col-sm-2">
                                    <div id="DescrsearchDiv">
                                        @Html.TextBoxFor(x => x.Descr, new { @class = "input-large-query", @style = "width: 180px;" })
                                    </div>
                                    <div id="Descrtextbox">
                                        <input type="text" value="@Model.DescrTxt" id="DescrTxt" class="form-control" style="width:182px;" />
                                    </div>
                                    <div style="width: 28px;margin: -26px 0px 0px 180px;">
                                        @Html.CheckBoxFor(x => x.DescrChk, new { @style = "height: 20px;width: 35px;", @value = Model.DescrChk })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1 control-label">Party Challan :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.PartyRef, new { @class = "form-control", @Value = Model.PartyRef })
                                </div>
                                <label class=" bold   col-sm-1 control-label">Party Invoice :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.PartyInvoice, new { @class = "form-control", @Value = Model.PartyInvoice })
                                </div>

                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1 control-label" style="width: 119px;">Declared Value :</label>
                                <div class="col-sm-2" style="margin-left: -4px;">
                                    @Html.TextBoxFor(x => x.DecVal, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.DecVal) })
                                </div>
                                <div id="DeclareValueSupport">
                                    <label class=" bold   col-sm-1 control-label">GST NO :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.GSTNO, new { @class = "form-control", @Value = Model.GSTNO })
                                    </div>
                                    <label class=" bold   col-sm-1 control-label">EwayBill No :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.EwayBill, new { @class = "form-control", @Value = Model.EwayBill })
                                    </div>
                                    <label class=" bold   col-sm-1 control-label">Vehicle No :</label>
                                    <div class="col-sm-2" style="">
                                        @Html.TextBoxFor(x => x.VehicleNo, new { @class = "form-control", @Value = Model.VehicleNo })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold  col-sm-1 control-label">Remark :</label>
                                <div class="col-sm-11">
                                    @Html.TextAreaFor(x => x.Narr, new { @class = "form-control", @Value = Model.Narr, @rows = "3", @maxlength = 100, })
                                </div>

                                <div class="col-sm-2">
                                </div>
                            </div>
                        </div>
                        <div class=" col-md-3  " style="overflow:scroll;width: 410px;margin-left: 40px;height:418px;">
                            <div id="PartialView_CalculationPart">

                                <div class="form-group" id="ChargeDiv">


                                    @for (int i = 0; i < Model.ChargeName.Length; i++)
                                    {
                                        if (Model.ChargeName[i] != null)
                                        {<div class="form-group">
                                                <label class=" bold col-sm-6 control-label">@Model.ChargeName[i] :</label>
                                                <div class=" col-sm-4">
                                                    @Html.TextBoxFor(x => x.ChargeName[i], new { @class = "form-control CalculationTxt", @Value = Model.ChargeValue[i] })
                                                </div>
                                            </div>
                                        }
                                    }

                                </div>
                                <div class="form-group"></div>
                                <div class="form-group">
                                    <label class=" col-sm-6 control-label" style="font-weight:bold;">Total Amout :</label>
                                    <div class=" col-sm-4">
                                        @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.Amt), @style = "height: 40px;width: 100%;" })
                                    </div>
                                </div>


                            </div>
                        </div>




                    </div>
                </div>
                >
                @*<div class="panel panel-default col-md-2">
                        <div class="panel-body scroll" style="height:395px;overflow:scroll">

                        </div>
                    </div>*@


                @*<div class="panel panel-default col-md-10" style="margin-top: -165px;">
                        <div class="panel-body" style="height:auto;">



                        </div>
                    </div>*@


            </fieldset>
        </div>

    </div>

    <div id="SaveNamePopUp" style="display: none">
        <div class="form-group ">
            <div class="col-sm-12">
                @Html.TextBoxFor(x => x.Draft_Name, new { @class = "form-control", @Value = Model.Draft_Name })
            </div>
            <div class="col-sm-offset-4 col-sm-8">
                <button class="btn btn-info" id="SaveDraftName">Save</button>
            </div>

        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog" style="    margin: 135px 0px 0px 397px;width: 216px;">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-body" style="padding: 15px;">
                    @*<ul>
                            @foreach (var item in Model.DraftVM)
                            {
                                if (item.Mode == "Add")
                                {
                                    <a href="/Logistics/@Model.Controller2/Index?TableName=@Model.TableName&MainType=@Model.MainType&Mode=Add&Header=@Model.Header&ViewDataId=@Model.ViewDataId&Controller2=@Model.Controller2&Module=@Model.Module&optiontype=@Model.OptionType&optioncode=@Model.OptionCode"><li>@item.Name</li></a>
                                }
                                else
                                {
                                    <a href="/Logistics/@Model.Controller2/Index?Document=@item.Document&TableName=@Model.TableName&MainType=@Model.MainType&Mode=Edit&Header=@Model.Header&ViewDataId=@Model.ViewDataId&Controller2=@Model.Controller2&Module=@Model.Module&optiontype=@Model.OptionType&optioncode=@Model.OptionCode"><li>Recent</li></a>
                                }
                            }
                        </ul>*@


                    <div id="menu">
                        <ul class="list-inline-item" style="font-family:Verdana; margin-top:-1px;height:auto;width:100%;background-color:whitesmoke;">
                            @foreach (var item in Model.DraftVM)
                            {
                                if (item.Mode == "Add")
                                {
                                    <a href="/Logistics/@Model.Controller2/Index?TableName=@Model.TableName&MainType=@Model.MainType&Mode=Add&Header=@Model.Header&ViewDataId=@Model.ViewDataId&Controller2=@Model.Controller2&Module=@Model.Module&optiontype=@Model.OptionType&optioncode=@Model.OptionCode&Draft=true&Mode=@item.Mode"><li style="padding-bottom:5px;font-weight:bold;">@item.Name</li></a>


                                }
                                else
                                {
                                    if (item.DraftFlag == true)
                                    {
                                        <a href="/Logistics/@Model.Controller2/Index?Document=@item.Document&TableName=@Model.TableName&MainType=@Model.MainType&Mode=Edit&Header=@Model.Header&ViewDataId=@Model.ViewDataId&Controller2=@Model.Controller2&Module=@Model.Module&optiontype=@Model.OptionType&optioncode=@Model.OptionCode&Draft=true&Mode=@item.Mode"><li style="padding-bottom:5px;font-weight:bold;">@item.Name</li></a>

                                    }
                                    else
                                    {
                                        <a href="/Logistics/@Model.Controller2/Index?Document=@item.Document&TableName=@Model.TableName&MainType=@Model.MainType&Mode=Edit&Header=@Model.Header&ViewDataId=@Model.ViewDataId&Controller2=@Model.Controller2&Module=@Model.Module&optiontype=@Model.OptionType&optioncode=@Model.OptionCode&Draft=false&Mode=@item.Mode"><li style="padding-bottom:5px;font-weight:bold;">@item.Name</li></a>

                                    }


                                }

                            }
                        </ul>
                    </div>
                </div>

            </div>

        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveDraft">Save Draft</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

<input type="hidden" id="hdnAreaID" />
@Html.HiddenFor(x => x.Document)



