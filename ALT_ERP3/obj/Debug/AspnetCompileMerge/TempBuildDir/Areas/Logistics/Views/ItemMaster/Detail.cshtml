@model TFATERPWebApplication.Areas.Logistics.Models.ItemMasterVM
@using Common;

<script type="text/javascript">
    $(document).ready(function () {
        LoadProductGrp()
        loadGetGSTItemType()
        loadHSNCode()
        loadBaseUnit()
        loadSaleUnit()
        loadPurchUnit()
        loadMfgUnit()
        LoadAltItem()
        loadRateType()
        loadRateCalcType()
        var values = $('#hdnAppBranch').val();
        $("#hdnBranchCodeArray").val(values);
        if (values == "") {
        }
        else {
            $.each(values.split(","), function (i, e) {
                $(".listbox option[value='" + e + "']").prop("selected", true);
            });
        }

        $(".listbox").change(function () {
            $('#hdnBranchCodeArray').val('');
            var selected = [];
            $(".listbox :selected").each(function () {
                selected.push($(this).val());
            });
            $('#hdnBranchCodeArray').val(selected)
            return false;
        });

        var values2 = $('#hdnCategory').val();
        $("#hdnCategoryCodeArray").val(values2);
        if (values2 == "") {

        }
        else {
            $.each(values2.split(","), function (i, e) {
                $(".catlistbox option[value='" + e + "']").prop("selected", true);
            });
        }

        $(".catlistbox").change(function () {
            $('#hdnCategoryCodeArray').val('');
            var selected = [];
            $(".catlistbox :selected").each(function () {
                selected.push($(this).val());
            });
            $('#hdnCategoryCodeArray').val(selected)
            return false;
        });

        var values3 = $('#hdnAlternateItems').val();
        $("#hdnAlternateItemsArray").val(values3);
        if (values3 == "") {
        }
        else {
            $.each(values3.split(","), function (i, e) {
                $(".itemlistbox option[value='" + e + "']").prop("selected", true);
            });
        }

        $(".itemlistbox").change(function () {
            $('#hdnAlternateItemsArray').val('');
            var selected = [];
            $(".itemlistbox :selected").each(function () {
                selected.push($(this).val());
            });
            $('#hdnAlternateItemsArray').val(selected)
            return false;
        });

        $('.listbox').multiselect({ includeSelectAllOption: true })
        $('.catlistbox').multiselect({ includeSelectAllOption: true })
        $('.itemlistbox').multiselect({ includeSelectAllOption: true })
    });

    function LoadProductGrp() {
        var url = '@Url.Action("AutoCompleteProductGrp")'
        $('#ProductGrp').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 2,
                    multiple: true,
                    //width: 300,
                    data: function (term, page) {
                        return { types: ["exercise"], limit: -1, term: term };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return { text: item.Name, id: item.Code }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Grp', text: '@Model.GrpName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
        $("#ErrorMessage").hide();
    };

    function LoadAltItem() {
        var url = '@Url.Action("AutoCompleteAltItem")'
        $('#AltItem').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 2,
                    multiple: true,
                    //width: 300,
                    data: function (term, page) {
                        return { types: ["exercise"], limit: -1, term: term };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return { text: item.Name, id: item.Code }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.AltItem', text: '@Model.AltItemName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadHSNCode() {
        var url = '@Url.Action("AutoHSNCode")'
        $('#HSNCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.HSNCode', text: '@Model.HSNCode' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadGetGSTItemType() {
        event.preventDefault();
        var url = '@Url.Action("GetGSTItemType")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#ServiceTax').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ItemType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ItemType').val('@Model.ItemType').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadBaseUnit() {
        var url = '@Url.Action("GetUnit")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Unit").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Unit').val('@Model.Unit').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadSaleUnit() {
        var url = '@Url.Action("GetUnit")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitS").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitS').val('@Model.UnitS').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadPurchUnit() {
        var url = '@Url.Action("GetUnit")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitP").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitP').val('@Model.UnitP').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadMfgUnit() {
        var url = '@Url.Action("GetUnit")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UnitM").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UnitM').val('@Model.UnitM').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadRateType() {
        var url = '@Url.Action("GetRateType")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#RateType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#RateType').val('@Model.RateType').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadRateCalcType() {
        var url = '@Url.Action("GetRateCalcType")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#AppBranch1').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#RateCalcType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#RateCalcType').val('@Model.RateCalcType').attr("selected", "selected");
                $('.spinner').hide();
                $("#ErrorMessage").hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
</script>

<div class="row">
    <br />
    <div class="col-lg-12">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Product Group:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.Grp, new { @class = "input-large search-query", @id = "ProductGrp", @Name = "ProductGrp", @style = "width: 100%;" })
                    @*@Html.DropDownListFor(x => x.Grp, DropdownHelper.EmptyList(), new { @Class = "form-control", @Id = "Grp", @Name = "Grp" })*@
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Base Unit:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.Unit, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "Unit", @Name = "Unit" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Sales Unit:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.UnitS, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UnitS", @Name = "UnitS" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Purchase Unit:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.UnitP, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UnitP", @Name = "UnitP" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Mfg.Unit:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.UnitM, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UnitM", @Name = "UnitM" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Item Type:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.ItemType, DropdownHelper.EmptyList(), new { @class = "form-control", @Id = "ItemType", @Name = "ItemType" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">GST Rate Limit:</label>
                <div class="col-sm-8">
                    @Html.CheckBoxFor(x => x.GSTRateLimit, new { @Name = "GSTRateLimit", @Id = "GSTRateLimit", @style = "width:16px;height:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">HSN Code:</label>
                <div class="col-sm-8">
                    @Html.TextAreaFor(x => x.HSNCode, new { @class = "input-large search-query", @Name = "HSNCode", @Id = "HSNCode", @style = "width: 98%;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">BarCode Equivalent:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.BarCode, new { @class = "form-control", @id = "BarCode", @Name = "BarCode" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-sm-3 control-label">Applicable Branches:</label>
                <div class="col-sm-8">
                    @Html.ListBoxFor(x => x.DetailBranch, Model.Branches, new { @class = "listbox", @id = "AppBranch" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Product Category:</label>
                <div class="col-sm-8">
                    @Html.ListBoxFor(x => x.DetailCategory, Model.ItemCategorys, new { @class = "catlistbox", @id = "Category" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Alternate Items:</label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(x => x.AltItem, new { @class = "input-large search-query", @id = "AltItem", @Name = "AltItem", @style = "width: 100%;" })
                    @*@Html.ListBoxFor(x => x.DetailItem, Model.AlternateItems, new {  @class = "itemlistbox", @id = "AltItem"})*@
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label">Rate Type:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.RateType, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "RateType", @Name = "RateType" })
                    @*@Html.ListBoxFor(x => x.DetailItem, Model.AlternateItems, new {  @class = "itemlistbox", @id = "AltItem"})*@
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Rate Calc Type:</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(x => x.RateCalcType, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "RateCalcType", @Name = "RateCalcType" })
                    @*@Html.ListBoxFor(x => x.DetailItem, Model.AlternateItems, new {  @class = "itemlistbox", @id = "AltItem"})*@
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="hdnBranchCodeArray" />
<input type="hidden" id="hdnCategoryCodeArray" />
<input type="hidden" id="hdnAlternateItemsArray" />
@Html.HiddenFor(x => x.AppBranch, new { @id = "hdnAppBranch" })
@Html.HiddenFor(x => x.Category, new { @id = "hdnCategory" })
@Html.HiddenFor(x => x.AltItem, new { @id = "hdnAlternateItems" })