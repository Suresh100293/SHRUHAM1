
@model TFATERPWebApplication.Areas.Accounts.Models.MasterVM
@using Common;
<script type="text/javascript">
    $(document).ready(function () {
        LoadCountry()
        LoadState()
        LoadCity()
        LoadArea()
        loadCorrespondence()
        loadSegment()
        loadMailCategory()
        loadSourceDoc()
        $('#Country').change(function () {
            $('#State').val("");
            LoadState()
        });
        $('#State').change(function () {
            $('#City').val("");
            LoadCity()
        });
    });

    function LoadCountry() {
        var url = '@Url.Action("AutoCompleteCountry")'
        $('#Country').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Country', text: '@Model.CountryName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadState() {
        var url = '@Url.Action("AutoCompleteState")'
        $('#State').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $('#Country').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.State', text: '@Model.StateName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadCity() {
        var url = '@Url.Action("AutoCompleteCity")'
        $('#City').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $('#State').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.City', text: '@Model.CityName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadArea() {
        var url = '@Url.Action("AutoCompleteTfatArea")'
        $('#Area').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 5,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {

                                text: item.Name,
                                id: item.Code

                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Area', text: '@Model.AreaName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadCorrespondence() {
        var url = '@Url.Action("GetCorrespondenceType")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#CorrespondenceType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#CorrespondenceType').val('@Model.CorrespondenceType').attr("selected", "selected");
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadSegment() {
        var url = '@Url.Action("GetSegmentType")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Segment").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Segment').val('@Model.Segment').attr("selected", "selected");
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadMailCategory() {
        var url = '@Url.Action("GetMailCategory")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#MailingCategory").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#MailingCategory').val('@Model.MailingCategory').attr("selected", "selected");
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadSourceDoc() {
        var url = '@Url.Action("GetSourceDoc")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Source").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Source').val('@Model.Source').attr("selected", "selected");
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };
</script>
<div>
    <div id="addmailaddress">
        <div class="form-horizontal" method="get" id="" role="form">

            <br />
            <div class="form-group">
                <label class="col-sm-1 control-label">Address:<span class="red">*</span></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Adrl1, new
               {
                   @class = "form-control",
                   @Name = "Adrl1",
                   @Id = "Adrl1",
                   @Value = Model.Adrl1,
                   @MaxLength =  "50"
               })
                </div>
                <label class="col-sm-1 control-label"></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Adrl2, new
               {
                   @class = "form-control",
                   @Name = "Adrl2",
                   @Id = "Adrl2",
                   @Value = Model.Adrl2,
                   @MaxLength = "50"
               })
                </div>
                <label class="col-sm-1 control-label"></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Adrl3, new
               {
                   @class = "form-control",
                   @Name = "Adrl3",
                   @Id = "Adrl3",
                   @Value = Model.Adrl3,
                   @MaxLength = "50"
               })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Country:<span class="red">*</span></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Country, new
               {
                   @class = "input-large-query",
                   @style = "width:100%;margin-top:2px;",
                   @id = "Country",
                   @Value = Model.Country,
                   @Name = "Country"
               })
                    @*@Html.TextBoxFor(x => x.Country, new { @class = "input - large - query", @style = "width:100%;margin-top:2px;", @id = "Country", @Name = "Country" })*@
                </div>
                <label class="col-sm-1 control-label">State:<span class="red">*</span></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.State, new
               {
                   @class = "input-large-query",
                   @style = "width:100%;margin-top:2px;",
                   @id = "State",
                   @Value = Model.State,
                   @Name = "State"
               })
                    @*@Html.DropDownListFor(m => m.State, DropdownHelper.EmptyList(), new { @class = "form-control", @style = "width:100%;margin-top:2px;", @id = "State", @Name = "State" })*@
                </div>
                <label class="col-sm-1 control-label">City:<span class="red">*</span></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.City, new
               {
                   @class = "input-large-query",
                   @style = "width:100%;margin-top:2px;",
                   @id = "City",
                   @Value = Model.City,
                   @Name = "City"
               })
                    @*@Html.DropDownListFor(m => m.City, DropdownHelper.EmptyList(), new { @class = "form-control", @style = "width:100%;margin-top:2px;", @id = "City", @Name = "City" })*@
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Pin Code:<span class="red">*</span></label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Pin, new
               {
                   @class = "form-control",
                   @Name = "Pin",
                   @Id = "Pin",
                   @Value = Model.Pin,
                   @MaxLength = "10"
               })
                </div>
                <label class="col-sm-1 control-label">Area:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Area, new
               {
                   @class = "input - large - query",
                   @style = "width:100%;margin-top:2px;",
                   @id = "Area",
                   @Name = "Area"
               })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Telephone No:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Tel1, new
               {
                   @class = "form-control",
                   @Name = "Tel1",
                   @Id = "Tel1",
                   @Value = Model.Tel1,
                   @MaxLength = 15,
               })
                </div>
                <label class="col-sm-1 control-label">Tel2:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Tel2, new
               {
                   @class = "form-control",
                   @Name = "Tel2",
                   @Id = "Tel2",
                   @Value = Model.Tel2,
                   @MaxLength = 15,
               })
                </div>
                <label class="col-sm-1 control-label">Tel3:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Tel3, new
               {
                   @class = "form-control",
                   @Name = "Tel3",
                   @Id = "Tel3",
                   @Value = Model.Tel3,
                   @MaxLength = 15,
               })
                </div>
            </div>
            <div class="form-group">


                <label class="col-sm-1 control-label">Mobile:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Mobile, new
               {
                   @class = "form-control",
                   @Name = "Mobile",
                   @Id = "Mobile",
                   @Value = Model.Mobile,
                   @MaxLength = 55
               })
                </div>
                <label class="col-sm-1 control-label">Fax:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Fax, new
               {
                   @class = "form-control",
                   @Name = "Fax",
                   @Id = "Fax",
                   @Value = Model.Fax
               })
                </div>
                <label class="col-sm-1 control-label">Website:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.www, new
               {
                   @class = "form-control",
                   @Name = "www",
                   @Id = "www",
                   @Value = Model.www,
                   @MaxLength = 50
               })
                </div>

            </div>
            <div class="form-group">

                <label class="col-sm-1 control-label">Email:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Email, new
               {
                   @class = "form-control",
                   @Name = "Email",
                   @Id = "Email",
                   @Value = Model.Email,
                   @MaxLength = 100
               })
                </div>
                <label class="col-sm-1 control-label">Mail Category:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.MailingCategory, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @Name = "MailingCategory",
                   @Id = "MailingCategory"
               })
                </div>

            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Correspondance:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.CorrespondenceType, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @Name = "CorrespondenceType",
                   @Id = "CorrespondenceType"
               })
                </div>
                <label class="col-sm-1 control-label">User ID:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.UserID, new
               {
                   @class = "form-control",
                   @Name = "UserID",
                   @Id = "UserID",
                   @Value = Model.UserID
               })
                </div>
                <label class="col-sm-1 control-label">Password:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Password, new
               {
                   @class = "form-control",
                   @Name = "Password",
                   @Id = "Password",
                   @Value = Model.Password
               })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Data Source:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(x => x.Source, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @Name = "Source",
                   @Id = "Source"
               })
                </div>
                <label class="col-sm-1 control-label">Segment:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Segment, DropdownHelper.EmptyList(), new
               {
                   @class = "form-control",
                   @Name = "Segment",
                   @Id = "Segment"
               })
                </div>


            </div>
        </div>
    </div>
</div>