//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ALT_ERP3 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BranchDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BranchDataSet : global::System.Data.DataSet {
        
        private TfatBranchDataTable tableTfatBranch;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BranchDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected BranchDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TfatBranch"] != null)) {
                    base.Tables.Add(new TfatBranchDataTable(ds.Tables["TfatBranch"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TfatBranchDataTable TfatBranch {
            get {
                return this.tableTfatBranch;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BranchDataSet cln = ((BranchDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TfatBranch"] != null)) {
                    base.Tables.Add(new TfatBranchDataTable(ds.Tables["TfatBranch"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTfatBranch = ((TfatBranchDataTable)(base.Tables["TfatBranch"]));
            if ((initTable == true)) {
                if ((this.tableTfatBranch != null)) {
                    this.tableTfatBranch.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BranchDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BranchDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTfatBranch = new TfatBranchDataTable();
            base.Tables.Add(this.tableTfatBranch);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeTfatBranch() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BranchDataSet ds = new BranchDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void TfatBranchRowChangeEventHandler(object sender, TfatBranchRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TfatBranchDataTable : global::System.Data.TypedTableBase<TfatBranchRow> {
            
            private global::System.Data.DataColumn columnRECORDKEY;
            
            private global::System.Data.DataColumn columnaAuthno;
            
            private global::System.Data.DataColumn columnaCstNo;
            
            private global::System.Data.DataColumn columnAddrl1;
            
            private global::System.Data.DataColumn columnAddrl2;
            
            private global::System.Data.DataColumn columnAddrl3;
            
            private global::System.Data.DataColumn columnAddrl4;
            
            private global::System.Data.DataColumn columnaFax;
            
            private global::System.Data.DataColumn columnaLstno;
            
            private global::System.Data.DataColumn columnaPin;
            
            private global::System.Data.DataColumn columnBusiness;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnCompCode;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnFlag;
            
            private global::System.Data.DataColumn columnFri;
            
            private global::System.Data.DataColumn columnGrp;
            
            private global::System.Data.DataColumn columnLastBranch;
            
            private global::System.Data.DataColumn columnLastUpdated;
            
            private global::System.Data.DataColumn columnLicence2;
            
            private global::System.Data.DataColumn columnLogIn;
            
            private global::System.Data.DataColumn columnMon;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnPanNo;
            
            private global::System.Data.DataColumn columnSat;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnSun;
            
            private global::System.Data.DataColumn columnTDSAUTHORISE;
            
            private global::System.Data.DataColumn columnTDSCir;
            
            private global::System.Data.DataColumn columnTDSOffice;
            
            private global::System.Data.DataColumn columnTDSReg;
            
            private global::System.Data.DataColumn columnTel1;
            
            private global::System.Data.DataColumn columnTel2;
            
            private global::System.Data.DataColumn columnTel3;
            
            private global::System.Data.DataColumn columnTel4;
            
            private global::System.Data.DataColumn columnThu;
            
            private global::System.Data.DataColumn columnTINNumber;
            
            private global::System.Data.DataColumn columnTue;
            
            private global::System.Data.DataColumn columnUsers;
            
            private global::System.Data.DataColumn columnVATReg;
            
            private global::System.Data.DataColumn columnWed;
            
            private global::System.Data.DataColumn columnwww;
            
            private global::System.Data.DataColumn columnENTEREDBY;
            
            private global::System.Data.DataColumn columnLASTUPDATEDATE;
            
            private global::System.Data.DataColumn columnAUTHORISE;
            
            private global::System.Data.DataColumn columnAUTHIDS;
            
            private global::System.Data.DataColumn columnGSTNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnCINNo;
            
            private global::System.Data.DataColumn columnLocationCode;
            
            private global::System.Data.DataColumn columnTimeDiff;
            
            private global::System.Data.DataColumn columnPCCode;
            
            private global::System.Data.DataColumn columnCurrName;
            
            private global::System.Data.DataColumn columnCurrDec;
            
            private global::System.Data.DataColumn columngp_AllowDiscAP;
            
            private global::System.Data.DataColumn columngp_AllowDiscAS;
            
            private global::System.Data.DataColumn columngp_AllowDiscPP;
            
            private global::System.Data.DataColumn columngp_AllowDiscPS;
            
            private global::System.Data.DataColumn columngp_AllowRateP;
            
            private global::System.Data.DataColumn columngp_AllowRateS;
            
            private global::System.Data.DataColumn columngp_BillStock;
            
            private global::System.Data.DataColumn columngp_BIN;
            
            private global::System.Data.DataColumn columngp_CashLimit;
            
            private global::System.Data.DataColumn columngp_CashLimitAmt;
            
            private global::System.Data.DataColumn columngp_CashLimitWarn;
            
            private global::System.Data.DataColumn columngp_CLStock;
            
            private global::System.Data.DataColumn columngp_DiscAP;
            
            private global::System.Data.DataColumn columngp_DiscAS;
            
            private global::System.Data.DataColumn columngp_DiscPP;
            
            private global::System.Data.DataColumn columngp_DiscPS;
            
            private global::System.Data.DataColumn columngp_EnableParty;
            
            private global::System.Data.DataColumn columngp_GINQty;
            
            private global::System.Data.DataColumn columngp_GSTSupply;
            
            private global::System.Data.DataColumn columngp_LocWiseTax;
            
            private global::System.Data.DataColumn columngp_NegStock;
            
            private global::System.Data.DataColumn columngp_NegStockAsOn;
            
            private global::System.Data.DataColumn columngp_NegWarn;
            
            private global::System.Data.DataColumn columngp_PostP;
            
            private global::System.Data.DataColumn columngp_PSP;
            
            private global::System.Data.DataColumn columngp_PurchPostTDS;
            
            private global::System.Data.DataColumn columngp_QtnA;
            
            private global::System.Data.DataColumn columngp_RCMDate;
            
            private global::System.Data.DataColumn columngp_RoundVAT;
            
            private global::System.Data.DataColumn columngp_SEZChargeParty;
            
            private global::System.Data.DataColumn columngp_SOPropagation;
            
            private global::System.Data.DataColumn columngp_SPAdjForce;
            
            private global::System.Data.DataColumn columngp_VatDecP;
            
            private global::System.Data.DataColumn columngp_VatDecS;
            
            private global::System.Data.DataColumn columngp_Holiday1;
            
            private global::System.Data.DataColumn columngp_Holiday2;
            
            private global::System.Data.DataColumn columngp_GSTStyle;
            
            private global::System.Data.DataColumn columnProxyServer;
            
            private global::System.Data.DataColumn columnSMSCaption;
            
            private global::System.Data.DataColumn columnSMSPass;
            
            private global::System.Data.DataColumn columnSMSURL;
            
            private global::System.Data.DataColumn columnSMSUserId;
            
            private global::System.Data.DataColumn columnSMSPrefix;
            
            private global::System.Data.DataColumn columngp_AutoAccCode;
            
            private global::System.Data.DataColumn columngp_AutoAccLength;
            
            private global::System.Data.DataColumn columngp_AutoAccStyle;
            
            private global::System.Data.DataColumn columngp_MultiUnit;
            
            private global::System.Data.DataColumn columngp_Batch;
            
            private global::System.Data.DataColumn columngp_Serial;
            
            private global::System.Data.DataColumn columnAccount;
            
            private global::System.Data.DataColumn columngp_VATGST;
            
            private global::System.Data.DataColumn columnPrintInfo;
            
            private global::System.Data.DataColumn columngp_AllowEditDelete;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchDataTable() {
                this.TableName = "TfatBranch";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TfatBranchDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected TfatBranchDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RECORDKEYColumn {
                get {
                    return this.columnRECORDKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn aAuthnoColumn {
                get {
                    return this.columnaAuthno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn aCstNoColumn {
                get {
                    return this.columnaCstNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Addrl1Column {
                get {
                    return this.columnAddrl1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Addrl2Column {
                get {
                    return this.columnAddrl2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Addrl3Column {
                get {
                    return this.columnAddrl3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Addrl4Column {
                get {
                    return this.columnAddrl4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn aFaxColumn {
                get {
                    return this.columnaFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn aLstnoColumn {
                get {
                    return this.columnaLstno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn aPinColumn {
                get {
                    return this.columnaPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BusinessColumn {
                get {
                    return this.columnBusiness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompCodeColumn {
                get {
                    return this.columnCompCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlagColumn {
                get {
                    return this.columnFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FriColumn {
                get {
                    return this.columnFri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GrpColumn {
                get {
                    return this.columnGrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastBranchColumn {
                get {
                    return this.columnLastBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastUpdatedColumn {
                get {
                    return this.columnLastUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Licence2Column {
                get {
                    return this.columnLicence2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LogInColumn {
                get {
                    return this.columnLogIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MonColumn {
                get {
                    return this.columnMon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PanNoColumn {
                get {
                    return this.columnPanNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SatColumn {
                get {
                    return this.columnSat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SunColumn {
                get {
                    return this.columnSun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TDSAUTHORISEColumn {
                get {
                    return this.columnTDSAUTHORISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TDSCirColumn {
                get {
                    return this.columnTDSCir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TDSOfficeColumn {
                get {
                    return this.columnTDSOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TDSRegColumn {
                get {
                    return this.columnTDSReg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Tel1Column {
                get {
                    return this.columnTel1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Tel2Column {
                get {
                    return this.columnTel2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Tel3Column {
                get {
                    return this.columnTel3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Tel4Column {
                get {
                    return this.columnTel4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ThuColumn {
                get {
                    return this.columnThu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TINNumberColumn {
                get {
                    return this.columnTINNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TueColumn {
                get {
                    return this.columnTue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UsersColumn {
                get {
                    return this.columnUsers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATRegColumn {
                get {
                    return this.columnVATReg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WedColumn {
                get {
                    return this.columnWed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn wwwColumn {
                get {
                    return this.columnwww;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ENTEREDBYColumn {
                get {
                    return this.columnENTEREDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LASTUPDATEDATEColumn {
                get {
                    return this.columnLASTUPDATEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AUTHORISEColumn {
                get {
                    return this.columnAUTHORISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AUTHIDSColumn {
                get {
                    return this.columnAUTHIDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GSTNoColumn {
                get {
                    return this.columnGSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CINNoColumn {
                get {
                    return this.columnCINNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LocationCodeColumn {
                get {
                    return this.columnLocationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TimeDiffColumn {
                get {
                    return this.columnTimeDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCCodeColumn {
                get {
                    return this.columnPCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrNameColumn {
                get {
                    return this.columnCurrName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrDecColumn {
                get {
                    return this.columnCurrDec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowDiscAPColumn {
                get {
                    return this.columngp_AllowDiscAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowDiscASColumn {
                get {
                    return this.columngp_AllowDiscAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowDiscPPColumn {
                get {
                    return this.columngp_AllowDiscPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowDiscPSColumn {
                get {
                    return this.columngp_AllowDiscPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowRatePColumn {
                get {
                    return this.columngp_AllowRateP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowRateSColumn {
                get {
                    return this.columngp_AllowRateS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_BillStockColumn {
                get {
                    return this.columngp_BillStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_BINColumn {
                get {
                    return this.columngp_BIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_CashLimitColumn {
                get {
                    return this.columngp_CashLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_CashLimitAmtColumn {
                get {
                    return this.columngp_CashLimitAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_CashLimitWarnColumn {
                get {
                    return this.columngp_CashLimitWarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_CLStockColumn {
                get {
                    return this.columngp_CLStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_DiscAPColumn {
                get {
                    return this.columngp_DiscAP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_DiscASColumn {
                get {
                    return this.columngp_DiscAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_DiscPPColumn {
                get {
                    return this.columngp_DiscPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_DiscPSColumn {
                get {
                    return this.columngp_DiscPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_EnablePartyColumn {
                get {
                    return this.columngp_EnableParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_GINQtyColumn {
                get {
                    return this.columngp_GINQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_GSTSupplyColumn {
                get {
                    return this.columngp_GSTSupply;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_LocWiseTaxColumn {
                get {
                    return this.columngp_LocWiseTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_NegStockColumn {
                get {
                    return this.columngp_NegStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_NegStockAsOnColumn {
                get {
                    return this.columngp_NegStockAsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_NegWarnColumn {
                get {
                    return this.columngp_NegWarn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_PostPColumn {
                get {
                    return this.columngp_PostP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_PSPColumn {
                get {
                    return this.columngp_PSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_PurchPostTDSColumn {
                get {
                    return this.columngp_PurchPostTDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_QtnAColumn {
                get {
                    return this.columngp_QtnA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_RCMDateColumn {
                get {
                    return this.columngp_RCMDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_RoundVATColumn {
                get {
                    return this.columngp_RoundVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_SEZChargePartyColumn {
                get {
                    return this.columngp_SEZChargeParty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_SOPropagationColumn {
                get {
                    return this.columngp_SOPropagation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_SPAdjForceColumn {
                get {
                    return this.columngp_SPAdjForce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_VatDecPColumn {
                get {
                    return this.columngp_VatDecP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_VatDecSColumn {
                get {
                    return this.columngp_VatDecS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_Holiday1Column {
                get {
                    return this.columngp_Holiday1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_Holiday2Column {
                get {
                    return this.columngp_Holiday2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_GSTStyleColumn {
                get {
                    return this.columngp_GSTStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProxyServerColumn {
                get {
                    return this.columnProxyServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMSCaptionColumn {
                get {
                    return this.columnSMSCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMSPassColumn {
                get {
                    return this.columnSMSPass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMSURLColumn {
                get {
                    return this.columnSMSURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMSUserIdColumn {
                get {
                    return this.columnSMSUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SMSPrefixColumn {
                get {
                    return this.columnSMSPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AutoAccCodeColumn {
                get {
                    return this.columngp_AutoAccCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AutoAccLengthColumn {
                get {
                    return this.columngp_AutoAccLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AutoAccStyleColumn {
                get {
                    return this.columngp_AutoAccStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_MultiUnitColumn {
                get {
                    return this.columngp_MultiUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_BatchColumn {
                get {
                    return this.columngp_Batch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_SerialColumn {
                get {
                    return this.columngp_Serial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AccountColumn {
                get {
                    return this.columnAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_VATGSTColumn {
                get {
                    return this.columngp_VATGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrintInfoColumn {
                get {
                    return this.columnPrintInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn gp_AllowEditDeleteColumn {
                get {
                    return this.columngp_AllowEditDelete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRow this[int index] {
                get {
                    return ((TfatBranchRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TfatBranchRowChangeEventHandler TfatBranchRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TfatBranchRowChangeEventHandler TfatBranchRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TfatBranchRowChangeEventHandler TfatBranchRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event TfatBranchRowChangeEventHandler TfatBranchRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddTfatBranchRow(TfatBranchRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRow AddTfatBranchRow(
                        string aAuthno, 
                        string aCstNo, 
                        string Addrl1, 
                        string Addrl2, 
                        string Addrl3, 
                        string Addrl4, 
                        string aFax, 
                        string aLstno, 
                        string aPin, 
                        string Business, 
                        string City, 
                        string Code, 
                        string CompCode, 
                        string Country, 
                        string Flag, 
                        bool Fri, 
                        string Grp, 
                        bool LastBranch, 
                        bool LastUpdated, 
                        string Licence2, 
                        bool LogIn, 
                        bool Mon, 
                        string Name, 
                        string PanNo, 
                        bool Sat, 
                        string State, 
                        bool Sun, 
                        string TDSAUTHORISE, 
                        string TDSCir, 
                        string TDSOffice, 
                        string TDSReg, 
                        string Tel1, 
                        string Tel2, 
                        string Tel3, 
                        string Tel4, 
                        bool Thu, 
                        string TINNumber, 
                        bool Tue, 
                        string Users, 
                        string VATReg, 
                        bool Wed, 
                        string www, 
                        string ENTEREDBY, 
                        System.DateTime LASTUPDATEDATE, 
                        string AUTHORISE, 
                        string AUTHIDS, 
                        string GSTNo, 
                        string Email, 
                        string CINNo, 
                        int LocationCode, 
                        decimal TimeDiff, 
                        int PCCode, 
                        int CurrName, 
                        int CurrDec, 
                        bool gp_AllowDiscAP, 
                        bool gp_AllowDiscAS, 
                        bool gp_AllowDiscPP, 
                        bool gp_AllowDiscPS, 
                        bool gp_AllowRateP, 
                        bool gp_AllowRateS, 
                        bool gp_BillStock, 
                        bool gp_BIN, 
                        bool gp_CashLimit, 
                        double gp_CashLimitAmt, 
                        bool gp_CashLimitWarn, 
                        bool gp_CLStock, 
                        bool gp_DiscAP, 
                        bool gp_DiscAS, 
                        bool gp_DiscPP, 
                        bool gp_DiscPS, 
                        bool gp_EnableParty, 
                        bool gp_GINQty, 
                        bool gp_GSTSupply, 
                        bool gp_LocWiseTax, 
                        bool gp_NegStock, 
                        bool gp_NegStockAsOn, 
                        bool gp_NegWarn, 
                        bool gp_PostP, 
                        bool gp_PSP, 
                        bool gp_PurchPostTDS, 
                        bool gp_QtnA, 
                        System.DateTime gp_RCMDate, 
                        byte gp_RoundVAT, 
                        bool gp_SEZChargeParty, 
                        bool gp_SOPropagation, 
                        bool gp_SPAdjForce, 
                        byte gp_VatDecP, 
                        byte gp_VatDecS, 
                        string gp_Holiday1, 
                        string gp_Holiday2, 
                        int gp_GSTStyle, 
                        string ProxyServer, 
                        string SMSCaption, 
                        string SMSPass, 
                        string SMSURL, 
                        string SMSUserId, 
                        bool SMSPrefix, 
                        bool gp_AutoAccCode, 
                        byte gp_AutoAccLength, 
                        byte gp_AutoAccStyle, 
                        bool gp_MultiUnit, 
                        bool gp_Batch, 
                        bool gp_Serial, 
                        string Account, 
                        string gp_VATGST, 
                        string PrintInfo, 
                        bool gp_AllowEditDelete) {
                TfatBranchRow rowTfatBranchRow = ((TfatBranchRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        aAuthno,
                        aCstNo,
                        Addrl1,
                        Addrl2,
                        Addrl3,
                        Addrl4,
                        aFax,
                        aLstno,
                        aPin,
                        Business,
                        City,
                        Code,
                        CompCode,
                        Country,
                        Flag,
                        Fri,
                        Grp,
                        LastBranch,
                        LastUpdated,
                        Licence2,
                        LogIn,
                        Mon,
                        Name,
                        PanNo,
                        Sat,
                        State,
                        Sun,
                        TDSAUTHORISE,
                        TDSCir,
                        TDSOffice,
                        TDSReg,
                        Tel1,
                        Tel2,
                        Tel3,
                        Tel4,
                        Thu,
                        TINNumber,
                        Tue,
                        Users,
                        VATReg,
                        Wed,
                        www,
                        ENTEREDBY,
                        LASTUPDATEDATE,
                        AUTHORISE,
                        AUTHIDS,
                        GSTNo,
                        Email,
                        CINNo,
                        LocationCode,
                        TimeDiff,
                        PCCode,
                        CurrName,
                        CurrDec,
                        gp_AllowDiscAP,
                        gp_AllowDiscAS,
                        gp_AllowDiscPP,
                        gp_AllowDiscPS,
                        gp_AllowRateP,
                        gp_AllowRateS,
                        gp_BillStock,
                        gp_BIN,
                        gp_CashLimit,
                        gp_CashLimitAmt,
                        gp_CashLimitWarn,
                        gp_CLStock,
                        gp_DiscAP,
                        gp_DiscAS,
                        gp_DiscPP,
                        gp_DiscPS,
                        gp_EnableParty,
                        gp_GINQty,
                        gp_GSTSupply,
                        gp_LocWiseTax,
                        gp_NegStock,
                        gp_NegStockAsOn,
                        gp_NegWarn,
                        gp_PostP,
                        gp_PSP,
                        gp_PurchPostTDS,
                        gp_QtnA,
                        gp_RCMDate,
                        gp_RoundVAT,
                        gp_SEZChargeParty,
                        gp_SOPropagation,
                        gp_SPAdjForce,
                        gp_VatDecP,
                        gp_VatDecS,
                        gp_Holiday1,
                        gp_Holiday2,
                        gp_GSTStyle,
                        ProxyServer,
                        SMSCaption,
                        SMSPass,
                        SMSURL,
                        SMSUserId,
                        SMSPrefix,
                        gp_AutoAccCode,
                        gp_AutoAccLength,
                        gp_AutoAccStyle,
                        gp_MultiUnit,
                        gp_Batch,
                        gp_Serial,
                        Account,
                        gp_VATGST,
                        PrintInfo,
                        gp_AllowEditDelete};
                rowTfatBranchRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTfatBranchRow);
                return rowTfatBranchRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRow FindByCode(string Code) {
                return ((TfatBranchRow)(this.Rows.Find(new object[] {
                            Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TfatBranchDataTable cln = ((TfatBranchDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TfatBranchDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRECORDKEY = base.Columns["RECORDKEY"];
                this.columnaAuthno = base.Columns["aAuthno"];
                this.columnaCstNo = base.Columns["aCstNo"];
                this.columnAddrl1 = base.Columns["Addrl1"];
                this.columnAddrl2 = base.Columns["Addrl2"];
                this.columnAddrl3 = base.Columns["Addrl3"];
                this.columnAddrl4 = base.Columns["Addrl4"];
                this.columnaFax = base.Columns["aFax"];
                this.columnaLstno = base.Columns["aLstno"];
                this.columnaPin = base.Columns["aPin"];
                this.columnBusiness = base.Columns["Business"];
                this.columnCity = base.Columns["City"];
                this.columnCode = base.Columns["Code"];
                this.columnCompCode = base.Columns["CompCode"];
                this.columnCountry = base.Columns["Country"];
                this.columnFlag = base.Columns["Flag"];
                this.columnFri = base.Columns["Fri"];
                this.columnGrp = base.Columns["Grp"];
                this.columnLastBranch = base.Columns["LastBranch"];
                this.columnLastUpdated = base.Columns["LastUpdated"];
                this.columnLicence2 = base.Columns["Licence2"];
                this.columnLogIn = base.Columns["LogIn"];
                this.columnMon = base.Columns["Mon"];
                this.columnName = base.Columns["Name"];
                this.columnPanNo = base.Columns["PanNo"];
                this.columnSat = base.Columns["Sat"];
                this.columnState = base.Columns["State"];
                this.columnSun = base.Columns["Sun"];
                this.columnTDSAUTHORISE = base.Columns["TDSAUTHORISE"];
                this.columnTDSCir = base.Columns["TDSCir"];
                this.columnTDSOffice = base.Columns["TDSOffice"];
                this.columnTDSReg = base.Columns["TDSReg"];
                this.columnTel1 = base.Columns["Tel1"];
                this.columnTel2 = base.Columns["Tel2"];
                this.columnTel3 = base.Columns["Tel3"];
                this.columnTel4 = base.Columns["Tel4"];
                this.columnThu = base.Columns["Thu"];
                this.columnTINNumber = base.Columns["TINNumber"];
                this.columnTue = base.Columns["Tue"];
                this.columnUsers = base.Columns["Users"];
                this.columnVATReg = base.Columns["VATReg"];
                this.columnWed = base.Columns["Wed"];
                this.columnwww = base.Columns["www"];
                this.columnENTEREDBY = base.Columns["ENTEREDBY"];
                this.columnLASTUPDATEDATE = base.Columns["LASTUPDATEDATE"];
                this.columnAUTHORISE = base.Columns["AUTHORISE"];
                this.columnAUTHIDS = base.Columns["AUTHIDS"];
                this.columnGSTNo = base.Columns["GSTNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnCINNo = base.Columns["CINNo"];
                this.columnLocationCode = base.Columns["LocationCode"];
                this.columnTimeDiff = base.Columns["TimeDiff"];
                this.columnPCCode = base.Columns["PCCode"];
                this.columnCurrName = base.Columns["CurrName"];
                this.columnCurrDec = base.Columns["CurrDec"];
                this.columngp_AllowDiscAP = base.Columns["gp_AllowDiscAP"];
                this.columngp_AllowDiscAS = base.Columns["gp_AllowDiscAS"];
                this.columngp_AllowDiscPP = base.Columns["gp_AllowDiscPP"];
                this.columngp_AllowDiscPS = base.Columns["gp_AllowDiscPS"];
                this.columngp_AllowRateP = base.Columns["gp_AllowRateP"];
                this.columngp_AllowRateS = base.Columns["gp_AllowRateS"];
                this.columngp_BillStock = base.Columns["gp_BillStock"];
                this.columngp_BIN = base.Columns["gp_BIN"];
                this.columngp_CashLimit = base.Columns["gp_CashLimit"];
                this.columngp_CashLimitAmt = base.Columns["gp_CashLimitAmt"];
                this.columngp_CashLimitWarn = base.Columns["gp_CashLimitWarn"];
                this.columngp_CLStock = base.Columns["gp_CLStock"];
                this.columngp_DiscAP = base.Columns["gp_DiscAP"];
                this.columngp_DiscAS = base.Columns["gp_DiscAS"];
                this.columngp_DiscPP = base.Columns["gp_DiscPP"];
                this.columngp_DiscPS = base.Columns["gp_DiscPS"];
                this.columngp_EnableParty = base.Columns["gp_EnableParty"];
                this.columngp_GINQty = base.Columns["gp_GINQty"];
                this.columngp_GSTSupply = base.Columns["gp_GSTSupply"];
                this.columngp_LocWiseTax = base.Columns["gp_LocWiseTax"];
                this.columngp_NegStock = base.Columns["gp_NegStock"];
                this.columngp_NegStockAsOn = base.Columns["gp_NegStockAsOn"];
                this.columngp_NegWarn = base.Columns["gp_NegWarn"];
                this.columngp_PostP = base.Columns["gp_PostP"];
                this.columngp_PSP = base.Columns["gp_PSP"];
                this.columngp_PurchPostTDS = base.Columns["gp_PurchPostTDS"];
                this.columngp_QtnA = base.Columns["gp_QtnA"];
                this.columngp_RCMDate = base.Columns["gp_RCMDate"];
                this.columngp_RoundVAT = base.Columns["gp_RoundVAT"];
                this.columngp_SEZChargeParty = base.Columns["gp_SEZChargeParty"];
                this.columngp_SOPropagation = base.Columns["gp_SOPropagation"];
                this.columngp_SPAdjForce = base.Columns["gp_SPAdjForce"];
                this.columngp_VatDecP = base.Columns["gp_VatDecP"];
                this.columngp_VatDecS = base.Columns["gp_VatDecS"];
                this.columngp_Holiday1 = base.Columns["gp_Holiday1"];
                this.columngp_Holiday2 = base.Columns["gp_Holiday2"];
                this.columngp_GSTStyle = base.Columns["gp_GSTStyle"];
                this.columnProxyServer = base.Columns["ProxyServer"];
                this.columnSMSCaption = base.Columns["SMSCaption"];
                this.columnSMSPass = base.Columns["SMSPass"];
                this.columnSMSURL = base.Columns["SMSURL"];
                this.columnSMSUserId = base.Columns["SMSUserId"];
                this.columnSMSPrefix = base.Columns["SMSPrefix"];
                this.columngp_AutoAccCode = base.Columns["gp_AutoAccCode"];
                this.columngp_AutoAccLength = base.Columns["gp_AutoAccLength"];
                this.columngp_AutoAccStyle = base.Columns["gp_AutoAccStyle"];
                this.columngp_MultiUnit = base.Columns["gp_MultiUnit"];
                this.columngp_Batch = base.Columns["gp_Batch"];
                this.columngp_Serial = base.Columns["gp_Serial"];
                this.columnAccount = base.Columns["Account"];
                this.columngp_VATGST = base.Columns["gp_VATGST"];
                this.columnPrintInfo = base.Columns["PrintInfo"];
                this.columngp_AllowEditDelete = base.Columns["gp_AllowEditDelete"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRECORDKEY = new global::System.Data.DataColumn("RECORDKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECORDKEY);
                this.columnaAuthno = new global::System.Data.DataColumn("aAuthno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaAuthno);
                this.columnaCstNo = new global::System.Data.DataColumn("aCstNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaCstNo);
                this.columnAddrl1 = new global::System.Data.DataColumn("Addrl1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrl1);
                this.columnAddrl2 = new global::System.Data.DataColumn("Addrl2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrl2);
                this.columnAddrl3 = new global::System.Data.DataColumn("Addrl3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrl3);
                this.columnAddrl4 = new global::System.Data.DataColumn("Addrl4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrl4);
                this.columnaFax = new global::System.Data.DataColumn("aFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaFax);
                this.columnaLstno = new global::System.Data.DataColumn("aLstno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaLstno);
                this.columnaPin = new global::System.Data.DataColumn("aPin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaPin);
                this.columnBusiness = new global::System.Data.DataColumn("Business", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusiness);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnCompCode = new global::System.Data.DataColumn("CompCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompCode);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnFlag = new global::System.Data.DataColumn("Flag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag);
                this.columnFri = new global::System.Data.DataColumn("Fri", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFri);
                this.columnGrp = new global::System.Data.DataColumn("Grp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrp);
                this.columnLastBranch = new global::System.Data.DataColumn("LastBranch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastBranch);
                this.columnLastUpdated = new global::System.Data.DataColumn("LastUpdated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUpdated);
                this.columnLicence2 = new global::System.Data.DataColumn("Licence2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicence2);
                this.columnLogIn = new global::System.Data.DataColumn("LogIn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogIn);
                this.columnMon = new global::System.Data.DataColumn("Mon", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMon);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnPanNo = new global::System.Data.DataColumn("PanNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPanNo);
                this.columnSat = new global::System.Data.DataColumn("Sat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSat);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnSun = new global::System.Data.DataColumn("Sun", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSun);
                this.columnTDSAUTHORISE = new global::System.Data.DataColumn("TDSAUTHORISE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSAUTHORISE);
                this.columnTDSCir = new global::System.Data.DataColumn("TDSCir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSCir);
                this.columnTDSOffice = new global::System.Data.DataColumn("TDSOffice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSOffice);
                this.columnTDSReg = new global::System.Data.DataColumn("TDSReg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDSReg);
                this.columnTel1 = new global::System.Data.DataColumn("Tel1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel1);
                this.columnTel2 = new global::System.Data.DataColumn("Tel2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel2);
                this.columnTel3 = new global::System.Data.DataColumn("Tel3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel3);
                this.columnTel4 = new global::System.Data.DataColumn("Tel4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel4);
                this.columnThu = new global::System.Data.DataColumn("Thu", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThu);
                this.columnTINNumber = new global::System.Data.DataColumn("TINNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTINNumber);
                this.columnTue = new global::System.Data.DataColumn("Tue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTue);
                this.columnUsers = new global::System.Data.DataColumn("Users", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsers);
                this.columnVATReg = new global::System.Data.DataColumn("VATReg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATReg);
                this.columnWed = new global::System.Data.DataColumn("Wed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWed);
                this.columnwww = new global::System.Data.DataColumn("www", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwww);
                this.columnENTEREDBY = new global::System.Data.DataColumn("ENTEREDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTEREDBY);
                this.columnLASTUPDATEDATE = new global::System.Data.DataColumn("LASTUPDATEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTUPDATEDATE);
                this.columnAUTHORISE = new global::System.Data.DataColumn("AUTHORISE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTHORISE);
                this.columnAUTHIDS = new global::System.Data.DataColumn("AUTHIDS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTHIDS);
                this.columnGSTNo = new global::System.Data.DataColumn("GSTNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCINNo = new global::System.Data.DataColumn("CINNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCINNo);
                this.columnLocationCode = new global::System.Data.DataColumn("LocationCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationCode);
                this.columnTimeDiff = new global::System.Data.DataColumn("TimeDiff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeDiff);
                this.columnPCCode = new global::System.Data.DataColumn("PCCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCCode);
                this.columnCurrName = new global::System.Data.DataColumn("CurrName", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrName);
                this.columnCurrDec = new global::System.Data.DataColumn("CurrDec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrDec);
                this.columngp_AllowDiscAP = new global::System.Data.DataColumn("gp_AllowDiscAP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowDiscAP);
                this.columngp_AllowDiscAS = new global::System.Data.DataColumn("gp_AllowDiscAS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowDiscAS);
                this.columngp_AllowDiscPP = new global::System.Data.DataColumn("gp_AllowDiscPP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowDiscPP);
                this.columngp_AllowDiscPS = new global::System.Data.DataColumn("gp_AllowDiscPS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowDiscPS);
                this.columngp_AllowRateP = new global::System.Data.DataColumn("gp_AllowRateP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowRateP);
                this.columngp_AllowRateS = new global::System.Data.DataColumn("gp_AllowRateS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowRateS);
                this.columngp_BillStock = new global::System.Data.DataColumn("gp_BillStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_BillStock);
                this.columngp_BIN = new global::System.Data.DataColumn("gp_BIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_BIN);
                this.columngp_CashLimit = new global::System.Data.DataColumn("gp_CashLimit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_CashLimit);
                this.columngp_CashLimitAmt = new global::System.Data.DataColumn("gp_CashLimitAmt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_CashLimitAmt);
                this.columngp_CashLimitWarn = new global::System.Data.DataColumn("gp_CashLimitWarn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_CashLimitWarn);
                this.columngp_CLStock = new global::System.Data.DataColumn("gp_CLStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_CLStock);
                this.columngp_DiscAP = new global::System.Data.DataColumn("gp_DiscAP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_DiscAP);
                this.columngp_DiscAS = new global::System.Data.DataColumn("gp_DiscAS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_DiscAS);
                this.columngp_DiscPP = new global::System.Data.DataColumn("gp_DiscPP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_DiscPP);
                this.columngp_DiscPS = new global::System.Data.DataColumn("gp_DiscPS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_DiscPS);
                this.columngp_EnableParty = new global::System.Data.DataColumn("gp_EnableParty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_EnableParty);
                this.columngp_GINQty = new global::System.Data.DataColumn("gp_GINQty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_GINQty);
                this.columngp_GSTSupply = new global::System.Data.DataColumn("gp_GSTSupply", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_GSTSupply);
                this.columngp_LocWiseTax = new global::System.Data.DataColumn("gp_LocWiseTax", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_LocWiseTax);
                this.columngp_NegStock = new global::System.Data.DataColumn("gp_NegStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_NegStock);
                this.columngp_NegStockAsOn = new global::System.Data.DataColumn("gp_NegStockAsOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_NegStockAsOn);
                this.columngp_NegWarn = new global::System.Data.DataColumn("gp_NegWarn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_NegWarn);
                this.columngp_PostP = new global::System.Data.DataColumn("gp_PostP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_PostP);
                this.columngp_PSP = new global::System.Data.DataColumn("gp_PSP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_PSP);
                this.columngp_PurchPostTDS = new global::System.Data.DataColumn("gp_PurchPostTDS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_PurchPostTDS);
                this.columngp_QtnA = new global::System.Data.DataColumn("gp_QtnA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_QtnA);
                this.columngp_RCMDate = new global::System.Data.DataColumn("gp_RCMDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_RCMDate);
                this.columngp_RoundVAT = new global::System.Data.DataColumn("gp_RoundVAT", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_RoundVAT);
                this.columngp_SEZChargeParty = new global::System.Data.DataColumn("gp_SEZChargeParty", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_SEZChargeParty);
                this.columngp_SOPropagation = new global::System.Data.DataColumn("gp_SOPropagation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_SOPropagation);
                this.columngp_SPAdjForce = new global::System.Data.DataColumn("gp_SPAdjForce", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_SPAdjForce);
                this.columngp_VatDecP = new global::System.Data.DataColumn("gp_VatDecP", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_VatDecP);
                this.columngp_VatDecS = new global::System.Data.DataColumn("gp_VatDecS", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_VatDecS);
                this.columngp_Holiday1 = new global::System.Data.DataColumn("gp_Holiday1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_Holiday1);
                this.columngp_Holiday2 = new global::System.Data.DataColumn("gp_Holiday2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_Holiday2);
                this.columngp_GSTStyle = new global::System.Data.DataColumn("gp_GSTStyle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_GSTStyle);
                this.columnProxyServer = new global::System.Data.DataColumn("ProxyServer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProxyServer);
                this.columnSMSCaption = new global::System.Data.DataColumn("SMSCaption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSCaption);
                this.columnSMSPass = new global::System.Data.DataColumn("SMSPass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSPass);
                this.columnSMSURL = new global::System.Data.DataColumn("SMSURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSURL);
                this.columnSMSUserId = new global::System.Data.DataColumn("SMSUserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSUserId);
                this.columnSMSPrefix = new global::System.Data.DataColumn("SMSPrefix", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSPrefix);
                this.columngp_AutoAccCode = new global::System.Data.DataColumn("gp_AutoAccCode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AutoAccCode);
                this.columngp_AutoAccLength = new global::System.Data.DataColumn("gp_AutoAccLength", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AutoAccLength);
                this.columngp_AutoAccStyle = new global::System.Data.DataColumn("gp_AutoAccStyle", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AutoAccStyle);
                this.columngp_MultiUnit = new global::System.Data.DataColumn("gp_MultiUnit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_MultiUnit);
                this.columngp_Batch = new global::System.Data.DataColumn("gp_Batch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_Batch);
                this.columngp_Serial = new global::System.Data.DataColumn("gp_Serial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_Serial);
                this.columnAccount = new global::System.Data.DataColumn("Account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount);
                this.columngp_VATGST = new global::System.Data.DataColumn("gp_VATGST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_VATGST);
                this.columnPrintInfo = new global::System.Data.DataColumn("PrintInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintInfo);
                this.columngp_AllowEditDelete = new global::System.Data.DataColumn("gp_AllowEditDelete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngp_AllowEditDelete);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode}, true));
                this.columnRECORDKEY.AutoIncrement = true;
                this.columnRECORDKEY.AutoIncrementSeed = -1;
                this.columnRECORDKEY.AutoIncrementStep = -1;
                this.columnRECORDKEY.AllowDBNull = false;
                this.columnRECORDKEY.ReadOnly = true;
                this.columnaAuthno.MaxLength = 30;
                this.columnaCstNo.MaxLength = 30;
                this.columnAddrl1.MaxLength = 35;
                this.columnAddrl2.MaxLength = 35;
                this.columnAddrl3.MaxLength = 35;
                this.columnAddrl4.MaxLength = 35;
                this.columnaFax.MaxLength = 25;
                this.columnaLstno.MaxLength = 30;
                this.columnaPin.MaxLength = 10;
                this.columnBusiness.MaxLength = 1;
                this.columnCity.MaxLength = 30;
                this.columnCode.AllowDBNull = false;
                this.columnCode.Unique = true;
                this.columnCode.MaxLength = 6;
                this.columnCompCode.AllowDBNull = false;
                this.columnCompCode.MaxLength = 3;
                this.columnCountry.MaxLength = 30;
                this.columnFlag.AllowDBNull = false;
                this.columnFlag.MaxLength = 1;
                this.columnFri.AllowDBNull = false;
                this.columnGrp.AllowDBNull = false;
                this.columnGrp.MaxLength = 6;
                this.columnLastBranch.AllowDBNull = false;
                this.columnLastUpdated.AllowDBNull = false;
                this.columnLicence2.MaxLength = 30;
                this.columnLogIn.AllowDBNull = false;
                this.columnMon.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnPanNo.MaxLength = 30;
                this.columnSat.AllowDBNull = false;
                this.columnState.MaxLength = 30;
                this.columnSun.AllowDBNull = false;
                this.columnTDSAUTHORISE.MaxLength = 10;
                this.columnTDSCir.MaxLength = 30;
                this.columnTDSOffice.MaxLength = 30;
                this.columnTDSReg.MaxLength = 30;
                this.columnTel1.MaxLength = 10;
                this.columnTel2.MaxLength = 10;
                this.columnTel3.MaxLength = 10;
                this.columnTel4.MaxLength = 10;
                this.columnThu.AllowDBNull = false;
                this.columnTINNumber.MaxLength = 30;
                this.columnTue.AllowDBNull = false;
                this.columnUsers.MaxLength = 2147483647;
                this.columnVATReg.MaxLength = 30;
                this.columnWed.AllowDBNull = false;
                this.columnwww.MaxLength = 50;
                this.columnENTEREDBY.MaxLength = 15;
                this.columnAUTHORISE.MaxLength = 3;
                this.columnAUTHIDS.MaxLength = 15;
                this.columnGSTNo.MaxLength = 15;
                this.columnEmail.MaxLength = 50;
                this.columnCINNo.MaxLength = 30;
                this.columnLocationCode.AllowDBNull = false;
                this.columnCurrName.AllowDBNull = false;
                this.columngp_AllowDiscAP.AllowDBNull = false;
                this.columngp_AllowDiscAS.AllowDBNull = false;
                this.columngp_AllowDiscPP.AllowDBNull = false;
                this.columngp_AllowDiscPS.AllowDBNull = false;
                this.columngp_AllowRateP.AllowDBNull = false;
                this.columngp_AllowRateS.AllowDBNull = false;
                this.columngp_BillStock.AllowDBNull = false;
                this.columngp_BIN.AllowDBNull = false;
                this.columngp_CashLimit.AllowDBNull = false;
                this.columngp_CashLimitWarn.AllowDBNull = false;
                this.columngp_CLStock.AllowDBNull = false;
                this.columngp_DiscAP.AllowDBNull = false;
                this.columngp_DiscAS.AllowDBNull = false;
                this.columngp_DiscPP.AllowDBNull = false;
                this.columngp_DiscPS.AllowDBNull = false;
                this.columngp_EnableParty.AllowDBNull = false;
                this.columngp_GINQty.AllowDBNull = false;
                this.columngp_GSTSupply.AllowDBNull = false;
                this.columngp_LocWiseTax.AllowDBNull = false;
                this.columngp_NegStock.AllowDBNull = false;
                this.columngp_NegStockAsOn.AllowDBNull = false;
                this.columngp_NegWarn.AllowDBNull = false;
                this.columngp_PostP.AllowDBNull = false;
                this.columngp_PSP.AllowDBNull = false;
                this.columngp_PurchPostTDS.AllowDBNull = false;
                this.columngp_QtnA.AllowDBNull = false;
                this.columngp_SEZChargeParty.AllowDBNull = false;
                this.columngp_SOPropagation.AllowDBNull = false;
                this.columngp_SPAdjForce.AllowDBNull = false;
                this.columngp_Holiday1.MaxLength = 9;
                this.columngp_Holiday2.MaxLength = 9;
                this.columnProxyServer.MaxLength = 25;
                this.columnSMSCaption.MaxLength = 35;
                this.columnSMSPass.MaxLength = 15;
                this.columnSMSURL.MaxLength = 2147483647;
                this.columnSMSUserId.MaxLength = 35;
                this.columnSMSPrefix.AllowDBNull = false;
                this.columngp_AutoAccCode.AllowDBNull = false;
                this.columngp_MultiUnit.AllowDBNull = false;
                this.columngp_Batch.AllowDBNull = false;
                this.columngp_Serial.AllowDBNull = false;
                this.columnAccount.MaxLength = 9;
                this.columngp_VATGST.MaxLength = 1;
                this.columnPrintInfo.MaxLength = 2147483647;
                this.columngp_AllowEditDelete.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRow NewTfatBranchRow() {
                return ((TfatBranchRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TfatBranchRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TfatBranchRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TfatBranchRowChanged != null)) {
                    this.TfatBranchRowChanged(this, new TfatBranchRowChangeEvent(((TfatBranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TfatBranchRowChanging != null)) {
                    this.TfatBranchRowChanging(this, new TfatBranchRowChangeEvent(((TfatBranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TfatBranchRowDeleted != null)) {
                    this.TfatBranchRowDeleted(this, new TfatBranchRowChangeEvent(((TfatBranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TfatBranchRowDeleting != null)) {
                    this.TfatBranchRowDeleting(this, new TfatBranchRowChangeEvent(((TfatBranchRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveTfatBranchRow(TfatBranchRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BranchDataSet ds = new BranchDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TfatBranchDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TfatBranchRow : global::System.Data.DataRow {
            
            private TfatBranchDataTable tableTfatBranch;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal TfatBranchRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTfatBranch = ((TfatBranchDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RECORDKEY {
                get {
                    return ((int)(this[this.tableTfatBranch.RECORDKEYColumn]));
                }
                set {
                    this[this.tableTfatBranch.RECORDKEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string aAuthno {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.aAuthnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aAuthno\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.aAuthnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string aCstNo {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.aCstNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aCstNo\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.aCstNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Addrl1 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Addrl1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrl1\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Addrl1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Addrl2 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Addrl2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrl2\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Addrl2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Addrl3 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Addrl3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrl3\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Addrl3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Addrl4 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Addrl4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrl4\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Addrl4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string aFax {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.aFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aFax\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.aFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string aLstno {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.aLstnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aLstno\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.aLstnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string aPin {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.aPinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'aPin\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.aPinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Business {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.BusinessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Business\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.BusinessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tableTfatBranch.CodeColumn]));
                }
                set {
                    this[this.tableTfatBranch.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CompCode {
                get {
                    return ((string)(this[this.tableTfatBranch.CompCodeColumn]));
                }
                set {
                    this[this.tableTfatBranch.CompCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Flag {
                get {
                    return ((string)(this[this.tableTfatBranch.FlagColumn]));
                }
                set {
                    this[this.tableTfatBranch.FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Fri {
                get {
                    return ((bool)(this[this.tableTfatBranch.FriColumn]));
                }
                set {
                    this[this.tableTfatBranch.FriColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Grp {
                get {
                    return ((string)(this[this.tableTfatBranch.GrpColumn]));
                }
                set {
                    this[this.tableTfatBranch.GrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool LastBranch {
                get {
                    return ((bool)(this[this.tableTfatBranch.LastBranchColumn]));
                }
                set {
                    this[this.tableTfatBranch.LastBranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool LastUpdated {
                get {
                    return ((bool)(this[this.tableTfatBranch.LastUpdatedColumn]));
                }
                set {
                    this[this.tableTfatBranch.LastUpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Licence2 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Licence2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Licence2\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Licence2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool LogIn {
                get {
                    return ((bool)(this[this.tableTfatBranch.LogInColumn]));
                }
                set {
                    this[this.tableTfatBranch.LogInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Mon {
                get {
                    return ((bool)(this[this.tableTfatBranch.MonColumn]));
                }
                set {
                    this[this.tableTfatBranch.MonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PanNo {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.PanNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PanNo\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.PanNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Sat {
                get {
                    return ((bool)(this[this.tableTfatBranch.SatColumn]));
                }
                set {
                    this[this.tableTfatBranch.SatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Sun {
                get {
                    return ((bool)(this[this.tableTfatBranch.SunColumn]));
                }
                set {
                    this[this.tableTfatBranch.SunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TDSAUTHORISE {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.TDSAUTHORISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSAUTHORISE\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TDSAUTHORISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TDSCir {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.TDSCirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSCir\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TDSCirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TDSOffice {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.TDSOfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSOffice\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TDSOfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TDSReg {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.TDSRegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDSReg\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TDSRegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Tel1 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Tel1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel1\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Tel1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Tel2 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Tel2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel2\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Tel2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Tel3 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Tel3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel3\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Tel3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Tel4 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.Tel4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tel4\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.Tel4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Thu {
                get {
                    return ((bool)(this[this.tableTfatBranch.ThuColumn]));
                }
                set {
                    this[this.tableTfatBranch.ThuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TINNumber {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.TINNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TINNumber\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TINNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Tue {
                get {
                    return ((bool)(this[this.tableTfatBranch.TueColumn]));
                }
                set {
                    this[this.tableTfatBranch.TueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Users {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.UsersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Users\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.UsersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VATReg {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.VATRegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATReg\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.VATRegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Wed {
                get {
                    return ((bool)(this[this.tableTfatBranch.WedColumn]));
                }
                set {
                    this[this.tableTfatBranch.WedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string www {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.wwwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'www\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.wwwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ENTEREDBY {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.ENTEREDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTEREDBY\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.ENTEREDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime LASTUPDATEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTfatBranch.LASTUPDATEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTUPDATEDATE\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.LASTUPDATEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AUTHORISE {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.AUTHORISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTHORISE\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.AUTHORISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AUTHIDS {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.AUTHIDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTHIDS\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.AUTHIDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GSTNo {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.GSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTNo\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.GSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CINNo {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.CINNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CINNo\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.CINNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int LocationCode {
                get {
                    return ((int)(this[this.tableTfatBranch.LocationCodeColumn]));
                }
                set {
                    this[this.tableTfatBranch.LocationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TimeDiff {
                get {
                    try {
                        return ((decimal)(this[this.tableTfatBranch.TimeDiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeDiff\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.TimeDiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PCCode {
                get {
                    try {
                        return ((int)(this[this.tableTfatBranch.PCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCCode\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.PCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CurrName {
                get {
                    return ((int)(this[this.tableTfatBranch.CurrNameColumn]));
                }
                set {
                    this[this.tableTfatBranch.CurrNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CurrDec {
                get {
                    try {
                        return ((int)(this[this.tableTfatBranch.CurrDecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrDec\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.CurrDecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowDiscAP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowDiscAPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowDiscAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowDiscAS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowDiscASColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowDiscASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowDiscPP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowDiscPPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowDiscPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowDiscPS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowDiscPSColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowDiscPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowRateP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowRatePColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowRatePColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowRateS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowRateSColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowRateSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_BillStock {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_BillStockColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_BillStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_BIN {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_BINColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_BINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_CashLimit {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_CashLimitColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_CashLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double gp_CashLimitAmt {
                get {
                    try {
                        return ((double)(this[this.tableTfatBranch.gp_CashLimitAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_CashLimitAmt\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_CashLimitAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_CashLimitWarn {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_CashLimitWarnColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_CashLimitWarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_CLStock {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_CLStockColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_CLStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_DiscAP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_DiscAPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_DiscAPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_DiscAS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_DiscASColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_DiscASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_DiscPP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_DiscPPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_DiscPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_DiscPS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_DiscPSColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_DiscPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_EnableParty {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_EnablePartyColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_EnablePartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_GINQty {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_GINQtyColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_GINQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_GSTSupply {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_GSTSupplyColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_GSTSupplyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_LocWiseTax {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_LocWiseTaxColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_LocWiseTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_NegStock {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_NegStockColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_NegStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_NegStockAsOn {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_NegStockAsOnColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_NegStockAsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_NegWarn {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_NegWarnColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_NegWarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_PostP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_PostPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_PostPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_PSP {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_PSPColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_PSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_PurchPostTDS {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_PurchPostTDSColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_PurchPostTDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_QtnA {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_QtnAColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_QtnAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime gp_RCMDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTfatBranch.gp_RCMDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_RCMDate\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_RCMDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte gp_RoundVAT {
                get {
                    try {
                        return ((byte)(this[this.tableTfatBranch.gp_RoundVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_RoundVAT\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_RoundVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_SEZChargeParty {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_SEZChargePartyColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_SEZChargePartyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_SOPropagation {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_SOPropagationColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_SOPropagationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_SPAdjForce {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_SPAdjForceColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_SPAdjForceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte gp_VatDecP {
                get {
                    try {
                        return ((byte)(this[this.tableTfatBranch.gp_VatDecPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_VatDecP\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_VatDecPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte gp_VatDecS {
                get {
                    try {
                        return ((byte)(this[this.tableTfatBranch.gp_VatDecSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_VatDecS\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_VatDecSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string gp_Holiday1 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.gp_Holiday1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_Holiday1\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_Holiday1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string gp_Holiday2 {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.gp_Holiday2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_Holiday2\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_Holiday2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int gp_GSTStyle {
                get {
                    try {
                        return ((int)(this[this.tableTfatBranch.gp_GSTStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_GSTStyle\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_GSTStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProxyServer {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.ProxyServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProxyServer\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.ProxyServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SMSCaption {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.SMSCaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMSCaption\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.SMSCaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SMSPass {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.SMSPassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMSPass\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.SMSPassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SMSURL {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.SMSURLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMSURL\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.SMSURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SMSUserId {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.SMSUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMSUserId\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.SMSUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool SMSPrefix {
                get {
                    return ((bool)(this[this.tableTfatBranch.SMSPrefixColumn]));
                }
                set {
                    this[this.tableTfatBranch.SMSPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AutoAccCode {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AutoAccCodeColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AutoAccCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte gp_AutoAccLength {
                get {
                    try {
                        return ((byte)(this[this.tableTfatBranch.gp_AutoAccLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_AutoAccLength\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_AutoAccLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte gp_AutoAccStyle {
                get {
                    try {
                        return ((byte)(this[this.tableTfatBranch.gp_AutoAccStyleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_AutoAccStyle\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_AutoAccStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_MultiUnit {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_MultiUnitColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_MultiUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_Batch {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_BatchColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_BatchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_Serial {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_SerialColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_SerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Account {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.AccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Account\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.AccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string gp_VATGST {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.gp_VATGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gp_VATGST\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.gp_VATGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrintInfo {
                get {
                    try {
                        return ((string)(this[this.tableTfatBranch.PrintInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintInfo\' in table \'TfatBranch\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTfatBranch.PrintInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool gp_AllowEditDelete {
                get {
                    return ((bool)(this[this.tableTfatBranch.gp_AllowEditDeleteColumn]));
                }
                set {
                    this[this.tableTfatBranch.gp_AllowEditDeleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaAuthnoNull() {
                return this.IsNull(this.tableTfatBranch.aAuthnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaAuthnoNull() {
                this[this.tableTfatBranch.aAuthnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaCstNoNull() {
                return this.IsNull(this.tableTfatBranch.aCstNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaCstNoNull() {
                this[this.tableTfatBranch.aCstNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAddrl1Null() {
                return this.IsNull(this.tableTfatBranch.Addrl1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAddrl1Null() {
                this[this.tableTfatBranch.Addrl1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAddrl2Null() {
                return this.IsNull(this.tableTfatBranch.Addrl2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAddrl2Null() {
                this[this.tableTfatBranch.Addrl2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAddrl3Null() {
                return this.IsNull(this.tableTfatBranch.Addrl3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAddrl3Null() {
                this[this.tableTfatBranch.Addrl3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAddrl4Null() {
                return this.IsNull(this.tableTfatBranch.Addrl4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAddrl4Null() {
                this[this.tableTfatBranch.Addrl4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaFaxNull() {
                return this.IsNull(this.tableTfatBranch.aFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaFaxNull() {
                this[this.tableTfatBranch.aFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaLstnoNull() {
                return this.IsNull(this.tableTfatBranch.aLstnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaLstnoNull() {
                this[this.tableTfatBranch.aLstnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsaPinNull() {
                return this.IsNull(this.tableTfatBranch.aPinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetaPinNull() {
                this[this.tableTfatBranch.aPinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBusinessNull() {
                return this.IsNull(this.tableTfatBranch.BusinessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBusinessNull() {
                this[this.tableTfatBranch.BusinessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableTfatBranch.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCityNull() {
                this[this.tableTfatBranch.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableTfatBranch.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryNull() {
                this[this.tableTfatBranch.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLicence2Null() {
                return this.IsNull(this.tableTfatBranch.Licence2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLicence2Null() {
                this[this.tableTfatBranch.Licence2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableTfatBranch.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameNull() {
                this[this.tableTfatBranch.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPanNoNull() {
                return this.IsNull(this.tableTfatBranch.PanNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPanNoNull() {
                this[this.tableTfatBranch.PanNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tableTfatBranch.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStateNull() {
                this[this.tableTfatBranch.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTDSAUTHORISENull() {
                return this.IsNull(this.tableTfatBranch.TDSAUTHORISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTDSAUTHORISENull() {
                this[this.tableTfatBranch.TDSAUTHORISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTDSCirNull() {
                return this.IsNull(this.tableTfatBranch.TDSCirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTDSCirNull() {
                this[this.tableTfatBranch.TDSCirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTDSOfficeNull() {
                return this.IsNull(this.tableTfatBranch.TDSOfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTDSOfficeNull() {
                this[this.tableTfatBranch.TDSOfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTDSRegNull() {
                return this.IsNull(this.tableTfatBranch.TDSRegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTDSRegNull() {
                this[this.tableTfatBranch.TDSRegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTel1Null() {
                return this.IsNull(this.tableTfatBranch.Tel1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTel1Null() {
                this[this.tableTfatBranch.Tel1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTel2Null() {
                return this.IsNull(this.tableTfatBranch.Tel2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTel2Null() {
                this[this.tableTfatBranch.Tel2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTel3Null() {
                return this.IsNull(this.tableTfatBranch.Tel3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTel3Null() {
                this[this.tableTfatBranch.Tel3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTel4Null() {
                return this.IsNull(this.tableTfatBranch.Tel4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTel4Null() {
                this[this.tableTfatBranch.Tel4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTINNumberNull() {
                return this.IsNull(this.tableTfatBranch.TINNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTINNumberNull() {
                this[this.tableTfatBranch.TINNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUsersNull() {
                return this.IsNull(this.tableTfatBranch.UsersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUsersNull() {
                this[this.tableTfatBranch.UsersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVATRegNull() {
                return this.IsNull(this.tableTfatBranch.VATRegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVATRegNull() {
                this[this.tableTfatBranch.VATRegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IswwwNull() {
                return this.IsNull(this.tableTfatBranch.wwwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetwwwNull() {
                this[this.tableTfatBranch.wwwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsENTEREDBYNull() {
                return this.IsNull(this.tableTfatBranch.ENTEREDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetENTEREDBYNull() {
                this[this.tableTfatBranch.ENTEREDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLASTUPDATEDATENull() {
                return this.IsNull(this.tableTfatBranch.LASTUPDATEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLASTUPDATEDATENull() {
                this[this.tableTfatBranch.LASTUPDATEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAUTHORISENull() {
                return this.IsNull(this.tableTfatBranch.AUTHORISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAUTHORISENull() {
                this[this.tableTfatBranch.AUTHORISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAUTHIDSNull() {
                return this.IsNull(this.tableTfatBranch.AUTHIDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAUTHIDSNull() {
                this[this.tableTfatBranch.AUTHIDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGSTNoNull() {
                return this.IsNull(this.tableTfatBranch.GSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGSTNoNull() {
                this[this.tableTfatBranch.GSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableTfatBranch.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmailNull() {
                this[this.tableTfatBranch.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCINNoNull() {
                return this.IsNull(this.tableTfatBranch.CINNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCINNoNull() {
                this[this.tableTfatBranch.CINNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTimeDiffNull() {
                return this.IsNull(this.tableTfatBranch.TimeDiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTimeDiffNull() {
                this[this.tableTfatBranch.TimeDiffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCCodeNull() {
                return this.IsNull(this.tableTfatBranch.PCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCCodeNull() {
                this[this.tableTfatBranch.PCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCurrDecNull() {
                return this.IsNull(this.tableTfatBranch.CurrDecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCurrDecNull() {
                this[this.tableTfatBranch.CurrDecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_CashLimitAmtNull() {
                return this.IsNull(this.tableTfatBranch.gp_CashLimitAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_CashLimitAmtNull() {
                this[this.tableTfatBranch.gp_CashLimitAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_RCMDateNull() {
                return this.IsNull(this.tableTfatBranch.gp_RCMDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_RCMDateNull() {
                this[this.tableTfatBranch.gp_RCMDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_RoundVATNull() {
                return this.IsNull(this.tableTfatBranch.gp_RoundVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_RoundVATNull() {
                this[this.tableTfatBranch.gp_RoundVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_VatDecPNull() {
                return this.IsNull(this.tableTfatBranch.gp_VatDecPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_VatDecPNull() {
                this[this.tableTfatBranch.gp_VatDecPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_VatDecSNull() {
                return this.IsNull(this.tableTfatBranch.gp_VatDecSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_VatDecSNull() {
                this[this.tableTfatBranch.gp_VatDecSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_Holiday1Null() {
                return this.IsNull(this.tableTfatBranch.gp_Holiday1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_Holiday1Null() {
                this[this.tableTfatBranch.gp_Holiday1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_Holiday2Null() {
                return this.IsNull(this.tableTfatBranch.gp_Holiday2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_Holiday2Null() {
                this[this.tableTfatBranch.gp_Holiday2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_GSTStyleNull() {
                return this.IsNull(this.tableTfatBranch.gp_GSTStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_GSTStyleNull() {
                this[this.tableTfatBranch.gp_GSTStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProxyServerNull() {
                return this.IsNull(this.tableTfatBranch.ProxyServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProxyServerNull() {
                this[this.tableTfatBranch.ProxyServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSMSCaptionNull() {
                return this.IsNull(this.tableTfatBranch.SMSCaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSMSCaptionNull() {
                this[this.tableTfatBranch.SMSCaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSMSPassNull() {
                return this.IsNull(this.tableTfatBranch.SMSPassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSMSPassNull() {
                this[this.tableTfatBranch.SMSPassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSMSURLNull() {
                return this.IsNull(this.tableTfatBranch.SMSURLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSMSURLNull() {
                this[this.tableTfatBranch.SMSURLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSMSUserIdNull() {
                return this.IsNull(this.tableTfatBranch.SMSUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSMSUserIdNull() {
                this[this.tableTfatBranch.SMSUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_AutoAccLengthNull() {
                return this.IsNull(this.tableTfatBranch.gp_AutoAccLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_AutoAccLengthNull() {
                this[this.tableTfatBranch.gp_AutoAccLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_AutoAccStyleNull() {
                return this.IsNull(this.tableTfatBranch.gp_AutoAccStyleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_AutoAccStyleNull() {
                this[this.tableTfatBranch.gp_AutoAccStyleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAccountNull() {
                return this.IsNull(this.tableTfatBranch.AccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAccountNull() {
                this[this.tableTfatBranch.AccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Isgp_VATGSTNull() {
                return this.IsNull(this.tableTfatBranch.gp_VATGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void Setgp_VATGSTNull() {
                this[this.tableTfatBranch.gp_VATGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrintInfoNull() {
                return this.IsNull(this.tableTfatBranch.PrintInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrintInfoNull() {
                this[this.tableTfatBranch.PrintInfoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class TfatBranchRowChangeEvent : global::System.EventArgs {
            
            private TfatBranchRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRowChangeEvent(TfatBranchRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public TfatBranchRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ALT_ERP3.BranchDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TfatBranchTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public TfatBranchTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TfatBranch";
            tableMapping.ColumnMappings.Add("RECORDKEY", "RECORDKEY");
            tableMapping.ColumnMappings.Add("aAuthno", "aAuthno");
            tableMapping.ColumnMappings.Add("aCstNo", "aCstNo");
            tableMapping.ColumnMappings.Add("Addrl1", "Addrl1");
            tableMapping.ColumnMappings.Add("Addrl2", "Addrl2");
            tableMapping.ColumnMappings.Add("Addrl3", "Addrl3");
            tableMapping.ColumnMappings.Add("Addrl4", "Addrl4");
            tableMapping.ColumnMappings.Add("aFax", "aFax");
            tableMapping.ColumnMappings.Add("aLstno", "aLstno");
            tableMapping.ColumnMappings.Add("aPin", "aPin");
            tableMapping.ColumnMappings.Add("Business", "Business");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("CompCode", "CompCode");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Flag", "Flag");
            tableMapping.ColumnMappings.Add("Fri", "Fri");
            tableMapping.ColumnMappings.Add("Grp", "Grp");
            tableMapping.ColumnMappings.Add("LastBranch", "LastBranch");
            tableMapping.ColumnMappings.Add("LastUpdated", "LastUpdated");
            tableMapping.ColumnMappings.Add("Licence2", "Licence2");
            tableMapping.ColumnMappings.Add("LogIn", "LogIn");
            tableMapping.ColumnMappings.Add("Mon", "Mon");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("PanNo", "PanNo");
            tableMapping.ColumnMappings.Add("Sat", "Sat");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Sun", "Sun");
            tableMapping.ColumnMappings.Add("TDSAUTHORISE", "TDSAUTHORISE");
            tableMapping.ColumnMappings.Add("TDSCir", "TDSCir");
            tableMapping.ColumnMappings.Add("TDSOffice", "TDSOffice");
            tableMapping.ColumnMappings.Add("TDSReg", "TDSReg");
            tableMapping.ColumnMappings.Add("Tel1", "Tel1");
            tableMapping.ColumnMappings.Add("Tel2", "Tel2");
            tableMapping.ColumnMappings.Add("Tel3", "Tel3");
            tableMapping.ColumnMappings.Add("Tel4", "Tel4");
            tableMapping.ColumnMappings.Add("Thu", "Thu");
            tableMapping.ColumnMappings.Add("TINNumber", "TINNumber");
            tableMapping.ColumnMappings.Add("Tue", "Tue");
            tableMapping.ColumnMappings.Add("Users", "Users");
            tableMapping.ColumnMappings.Add("VATReg", "VATReg");
            tableMapping.ColumnMappings.Add("Wed", "Wed");
            tableMapping.ColumnMappings.Add("www", "www");
            tableMapping.ColumnMappings.Add("ENTEREDBY", "ENTEREDBY");
            tableMapping.ColumnMappings.Add("LASTUPDATEDATE", "LASTUPDATEDATE");
            tableMapping.ColumnMappings.Add("AUTHORISE", "AUTHORISE");
            tableMapping.ColumnMappings.Add("AUTHIDS", "AUTHIDS");
            tableMapping.ColumnMappings.Add("GSTNo", "GSTNo");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("CINNo", "CINNo");
            tableMapping.ColumnMappings.Add("LocationCode", "LocationCode");
            tableMapping.ColumnMappings.Add("TimeDiff", "TimeDiff");
            tableMapping.ColumnMappings.Add("PCCode", "PCCode");
            tableMapping.ColumnMappings.Add("CurrName", "CurrName");
            tableMapping.ColumnMappings.Add("CurrDec", "CurrDec");
            tableMapping.ColumnMappings.Add("gp_AllowDiscAP", "gp_AllowDiscAP");
            tableMapping.ColumnMappings.Add("gp_AllowDiscAS", "gp_AllowDiscAS");
            tableMapping.ColumnMappings.Add("gp_AllowDiscPP", "gp_AllowDiscPP");
            tableMapping.ColumnMappings.Add("gp_AllowDiscPS", "gp_AllowDiscPS");
            tableMapping.ColumnMappings.Add("gp_AllowRateP", "gp_AllowRateP");
            tableMapping.ColumnMappings.Add("gp_AllowRateS", "gp_AllowRateS");
            tableMapping.ColumnMappings.Add("gp_BillStock", "gp_BillStock");
            tableMapping.ColumnMappings.Add("gp_BIN", "gp_BIN");
            tableMapping.ColumnMappings.Add("gp_CashLimit", "gp_CashLimit");
            tableMapping.ColumnMappings.Add("gp_CashLimitAmt", "gp_CashLimitAmt");
            tableMapping.ColumnMappings.Add("gp_CashLimitWarn", "gp_CashLimitWarn");
            tableMapping.ColumnMappings.Add("gp_CLStock", "gp_CLStock");
            tableMapping.ColumnMappings.Add("gp_DiscAP", "gp_DiscAP");
            tableMapping.ColumnMappings.Add("gp_DiscAS", "gp_DiscAS");
            tableMapping.ColumnMappings.Add("gp_DiscPP", "gp_DiscPP");
            tableMapping.ColumnMappings.Add("gp_DiscPS", "gp_DiscPS");
            tableMapping.ColumnMappings.Add("gp_EnableParty", "gp_EnableParty");
            tableMapping.ColumnMappings.Add("gp_GINQty", "gp_GINQty");
            tableMapping.ColumnMappings.Add("gp_GSTSupply", "gp_GSTSupply");
            tableMapping.ColumnMappings.Add("gp_LocWiseTax", "gp_LocWiseTax");
            tableMapping.ColumnMappings.Add("gp_NegStock", "gp_NegStock");
            tableMapping.ColumnMappings.Add("gp_NegStockAsOn", "gp_NegStockAsOn");
            tableMapping.ColumnMappings.Add("gp_NegWarn", "gp_NegWarn");
            tableMapping.ColumnMappings.Add("gp_PostP", "gp_PostP");
            tableMapping.ColumnMappings.Add("gp_PSP", "gp_PSP");
            tableMapping.ColumnMappings.Add("gp_PurchPostTDS", "gp_PurchPostTDS");
            tableMapping.ColumnMappings.Add("gp_QtnA", "gp_QtnA");
            tableMapping.ColumnMappings.Add("gp_RCMDate", "gp_RCMDate");
            tableMapping.ColumnMappings.Add("gp_RoundVAT", "gp_RoundVAT");
            tableMapping.ColumnMappings.Add("gp_SEZChargeParty", "gp_SEZChargeParty");
            tableMapping.ColumnMappings.Add("gp_SOPropagation", "gp_SOPropagation");
            tableMapping.ColumnMappings.Add("gp_SPAdjForce", "gp_SPAdjForce");
            tableMapping.ColumnMappings.Add("gp_VatDecP", "gp_VatDecP");
            tableMapping.ColumnMappings.Add("gp_VatDecS", "gp_VatDecS");
            tableMapping.ColumnMappings.Add("gp_Holiday1", "gp_Holiday1");
            tableMapping.ColumnMappings.Add("gp_Holiday2", "gp_Holiday2");
            tableMapping.ColumnMappings.Add("gp_GSTStyle", "gp_GSTStyle");
            tableMapping.ColumnMappings.Add("ProxyServer", "ProxyServer");
            tableMapping.ColumnMappings.Add("SMSCaption", "SMSCaption");
            tableMapping.ColumnMappings.Add("SMSPass", "SMSPass");
            tableMapping.ColumnMappings.Add("SMSURL", "SMSURL");
            tableMapping.ColumnMappings.Add("SMSUserId", "SMSUserId");
            tableMapping.ColumnMappings.Add("SMSPrefix", "SMSPrefix");
            tableMapping.ColumnMappings.Add("gp_AutoAccCode", "gp_AutoAccCode");
            tableMapping.ColumnMappings.Add("gp_AutoAccLength", "gp_AutoAccLength");
            tableMapping.ColumnMappings.Add("gp_AutoAccStyle", "gp_AutoAccStyle");
            tableMapping.ColumnMappings.Add("gp_MultiUnit", "gp_MultiUnit");
            tableMapping.ColumnMappings.Add("gp_Batch", "gp_Batch");
            tableMapping.ColumnMappings.Add("gp_Serial", "gp_Serial");
            tableMapping.ColumnMappings.Add("Account", "Account");
            tableMapping.ColumnMappings.Add("gp_VATGST", "gp_VATGST");
            tableMapping.ColumnMappings.Add("PrintInfo", "PrintInfo");
            tableMapping.ColumnMappings.Add("gp_AllowEditDelete", "gp_AllowEditDelete");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TfatBranch] WHERE (([Code] = @Original_Code))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TfatBranch] ([aAuthno], [aCstNo], [Addrl1], [Addrl2], [Addrl3]" +
                ", [Addrl4], [aFax], [aLstno], [aPin], [Business], [City], [Code], [CompCode], [C" +
                "ountry], [Flag], [Fri], [Grp], [LastBranch], [LastUpdated], [Licence2], [LogIn]," +
                " [Mon], [Name], [PanNo], [Sat], [State], [Sun], [TDSAUTHORISE], [TDSCir], [TDSOf" +
                "fice], [TDSReg], [Tel1], [Tel2], [Tel3], [Tel4], [Thu], [TINNumber], [Tue], [Use" +
                "rs], [VATReg], [Wed], [www], [ENTEREDBY], [LASTUPDATEDATE], [AUTHORISE], [AUTHID" +
                "S], [GSTNo], [Email], [CINNo], [LocationCode], [TimeDiff], [PCCode], [CurrName]," +
                " [CurrDec], [gp_AllowDiscAP], [gp_AllowDiscAS], [gp_AllowDiscPP], [gp_AllowDiscP" +
                "S], [gp_AllowRateP], [gp_AllowRateS], [gp_BillStock], [gp_BIN], [gp_CashLimit], " +
                "[gp_CashLimitAmt], [gp_CashLimitWarn], [gp_CLStock], [gp_DiscAP], [gp_DiscAS], [" +
                "gp_DiscPP], [gp_DiscPS], [gp_EnableParty], [gp_GINQty], [gp_GSTSupply], [gp_LocW" +
                "iseTax], [gp_NegStock], [gp_NegStockAsOn], [gp_NegWarn], [gp_PostP], [gp_PSP], [" +
                "gp_PurchPostTDS], [gp_QtnA], [gp_RCMDate], [gp_RoundVAT], [gp_SEZChargeParty], [" +
                "gp_SOPropagation], [gp_SPAdjForce], [gp_VatDecP], [gp_VatDecS], [gp_Holiday1], [" +
                "gp_Holiday2], [gp_GSTStyle], [ProxyServer], [SMSCaption], [SMSPass], [SMSURL], [" +
                "SMSUserId], [SMSPrefix], [gp_AutoAccCode], [gp_AutoAccLength], [gp_AutoAccStyle]" +
                ", [gp_MultiUnit], [gp_Batch], [gp_Serial], [Account], [gp_VATGST], [PrintInfo], " +
                "[gp_AllowEditDelete]) VALUES (@aAuthno, @aCstNo, @Addrl1, @Addrl2, @Addrl3, @Add" +
                "rl4, @aFax, @aLstno, @aPin, @Business, @City, @Code, @CompCode, @Country, @Flag," +
                " @Fri, @Grp, @LastBranch, @LastUpdated, @Licence2, @LogIn, @Mon, @Name, @PanNo, " +
                "@Sat, @State, @Sun, @TDSAUTHORISE, @TDSCir, @TDSOffice, @TDSReg, @Tel1, @Tel2, @" +
                "Tel3, @Tel4, @Thu, @TINNumber, @Tue, @Users, @VATReg, @Wed, @www, @ENTEREDBY, @L" +
                "ASTUPDATEDATE, @AUTHORISE, @AUTHIDS, @GSTNo, @Email, @CINNo, @LocationCode, @Tim" +
                "eDiff, @PCCode, @CurrName, @CurrDec, @gp_AllowDiscAP, @gp_AllowDiscAS, @gp_Allow" +
                "DiscPP, @gp_AllowDiscPS, @gp_AllowRateP, @gp_AllowRateS, @gp_BillStock, @gp_BIN," +
                " @gp_CashLimit, @gp_CashLimitAmt, @gp_CashLimitWarn, @gp_CLStock, @gp_DiscAP, @g" +
                "p_DiscAS, @gp_DiscPP, @gp_DiscPS, @gp_EnableParty, @gp_GINQty, @gp_GSTSupply, @g" +
                "p_LocWiseTax, @gp_NegStock, @gp_NegStockAsOn, @gp_NegWarn, @gp_PostP, @gp_PSP, @" +
                "gp_PurchPostTDS, @gp_QtnA, @gp_RCMDate, @gp_RoundVAT, @gp_SEZChargeParty, @gp_SO" +
                "Propagation, @gp_SPAdjForce, @gp_VatDecP, @gp_VatDecS, @gp_Holiday1, @gp_Holiday" +
                "2, @gp_GSTStyle, @ProxyServer, @SMSCaption, @SMSPass, @SMSURL, @SMSUserId, @SMSP" +
                "refix, @gp_AutoAccCode, @gp_AutoAccLength, @gp_AutoAccStyle, @gp_MultiUnit, @gp_" +
                "Batch, @gp_Serial, @Account, @gp_VATGST, @PrintInfo, @gp_AllowEditDelete)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aAuthno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aAuthno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aCstNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aCstNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aLstno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aLstno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aPin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Business", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Business", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fri", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fri", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastBranch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBranch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Licence2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Licence2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogIn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mon", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PanNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PanNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sun", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSAUTHORISE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSAUTHORISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSCir", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSCir", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSOffice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSReg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thu", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TINNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TINNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tue", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Users", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Users", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VATReg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VATReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@www", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "www", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTEREDBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTEREDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTUPDATEDATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTUPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTHORISE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTHIDS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTHIDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSTNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSTNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeDiff", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDiff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrDec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrDec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscAP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscAS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscPP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscPP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscPS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscPS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowRateP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowRateP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowRateS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowRateS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_BillStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_BillStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_BIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_BIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimitAmt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimitAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimitWarn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimitWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CLStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CLStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscAP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscAS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscPP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscPP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscPS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscPS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_EnableParty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_EnableParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GINQty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GINQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GSTSupply", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GSTSupply", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_LocWiseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_LocWiseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegStockAsOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegStockAsOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegWarn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PostP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PostP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PSP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PSP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PurchPostTDS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PurchPostTDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_QtnA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_QtnA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_RCMDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_RCMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_RoundVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_RoundVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SEZChargeParty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SEZChargeParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SOPropagation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SOPropagation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SPAdjForce", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SPAdjForce", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VatDecP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VatDecP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VatDecS", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VatDecS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Holiday1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Holiday1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Holiday2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Holiday2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GSTStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GSTStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProxyServer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProxyServer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSCaption", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSCaption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSPass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSPass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSURL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSUserId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSPrefix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSPrefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccCode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccLength", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccStyle", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_MultiUnit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_MultiUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Batch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Batch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Serial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Serial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VATGST", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VATGST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowEditDelete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowEditDelete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TfatBranch] SET [aAuthno] = @aAuthno, [aCstNo] = @aCstNo, [Addrl1] " +
                "= @Addrl1, [Addrl2] = @Addrl2, [Addrl3] = @Addrl3, [Addrl4] = @Addrl4, [aFax] = " +
                "@aFax, [aLstno] = @aLstno, [aPin] = @aPin, [Business] = @Business, [City] = @Cit" +
                "y, [Code] = @Code, [CompCode] = @CompCode, [Country] = @Country, [Flag] = @Flag," +
                " [Fri] = @Fri, [Grp] = @Grp, [LastBranch] = @LastBranch, [LastUpdated] = @LastUp" +
                "dated, [Licence2] = @Licence2, [LogIn] = @LogIn, [Mon] = @Mon, [Name] = @Name, [" +
                "PanNo] = @PanNo, [Sat] = @Sat, [State] = @State, [Sun] = @Sun, [TDSAUTHORISE] = " +
                "@TDSAUTHORISE, [TDSCir] = @TDSCir, [TDSOffice] = @TDSOffice, [TDSReg] = @TDSReg," +
                " [Tel1] = @Tel1, [Tel2] = @Tel2, [Tel3] = @Tel3, [Tel4] = @Tel4, [Thu] = @Thu, [" +
                "TINNumber] = @TINNumber, [Tue] = @Tue, [Users] = @Users, [VATReg] = @VATReg, [We" +
                "d] = @Wed, [www] = @www, [ENTEREDBY] = @ENTEREDBY, [LASTUPDATEDATE] = @LASTUPDAT" +
                "EDATE, [AUTHORISE] = @AUTHORISE, [AUTHIDS] = @AUTHIDS, [GSTNo] = @GSTNo, [Email]" +
                " = @Email, [CINNo] = @CINNo, [LocationCode] = @LocationCode, [TimeDiff] = @TimeD" +
                "iff, [PCCode] = @PCCode, [CurrName] = @CurrName, [CurrDec] = @CurrDec, [gp_Allow" +
                "DiscAP] = @gp_AllowDiscAP, [gp_AllowDiscAS] = @gp_AllowDiscAS, [gp_AllowDiscPP] " +
                "= @gp_AllowDiscPP, [gp_AllowDiscPS] = @gp_AllowDiscPS, [gp_AllowRateP] = @gp_All" +
                "owRateP, [gp_AllowRateS] = @gp_AllowRateS, [gp_BillStock] = @gp_BillStock, [gp_B" +
                "IN] = @gp_BIN, [gp_CashLimit] = @gp_CashLimit, [gp_CashLimitAmt] = @gp_CashLimit" +
                "Amt, [gp_CashLimitWarn] = @gp_CashLimitWarn, [gp_CLStock] = @gp_CLStock, [gp_Dis" +
                "cAP] = @gp_DiscAP, [gp_DiscAS] = @gp_DiscAS, [gp_DiscPP] = @gp_DiscPP, [gp_DiscP" +
                "S] = @gp_DiscPS, [gp_EnableParty] = @gp_EnableParty, [gp_GINQty] = @gp_GINQty, [" +
                "gp_GSTSupply] = @gp_GSTSupply, [gp_LocWiseTax] = @gp_LocWiseTax, [gp_NegStock] =" +
                " @gp_NegStock, [gp_NegStockAsOn] = @gp_NegStockAsOn, [gp_NegWarn] = @gp_NegWarn," +
                " [gp_PostP] = @gp_PostP, [gp_PSP] = @gp_PSP, [gp_PurchPostTDS] = @gp_PurchPostTD" +
                "S, [gp_QtnA] = @gp_QtnA, [gp_RCMDate] = @gp_RCMDate, [gp_RoundVAT] = @gp_RoundVA" +
                "T, [gp_SEZChargeParty] = @gp_SEZChargeParty, [gp_SOPropagation] = @gp_SOPropagat" +
                "ion, [gp_SPAdjForce] = @gp_SPAdjForce, [gp_VatDecP] = @gp_VatDecP, [gp_VatDecS] " +
                "= @gp_VatDecS, [gp_Holiday1] = @gp_Holiday1, [gp_Holiday2] = @gp_Holiday2, [gp_G" +
                "STStyle] = @gp_GSTStyle, [ProxyServer] = @ProxyServer, [SMSCaption] = @SMSCaptio" +
                "n, [SMSPass] = @SMSPass, [SMSURL] = @SMSURL, [SMSUserId] = @SMSUserId, [SMSPrefi" +
                "x] = @SMSPrefix, [gp_AutoAccCode] = @gp_AutoAccCode, [gp_AutoAccLength] = @gp_Au" +
                "toAccLength, [gp_AutoAccStyle] = @gp_AutoAccStyle, [gp_MultiUnit] = @gp_MultiUni" +
                "t, [gp_Batch] = @gp_Batch, [gp_Serial] = @gp_Serial, [Account] = @Account, [gp_V" +
                "ATGST] = @gp_VATGST, [PrintInfo] = @PrintInfo, [gp_AllowEditDelete] = @gp_AllowE" +
                "ditDelete WHERE (([Code] = @Original_Code))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aAuthno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aAuthno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aCstNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aCstNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Addrl4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Addrl4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aFax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aFax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aLstno", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aLstno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@aPin", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "aPin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Business", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Business", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fri", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fri", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastBranch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastBranch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastUpdated", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastUpdated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Licence2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Licence2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LogIn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LogIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mon", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mon", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PanNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PanNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sat", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sun", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSAUTHORISE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSAUTHORISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSCir", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSCir", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSOffice", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSOffice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TDSReg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TDSReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tel4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tel4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Thu", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Thu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TINNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TINNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tue", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Users", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Users", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VATReg", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VATReg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@www", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "www", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTEREDBY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTEREDBY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTUPDATEDATE", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTUPDATEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTHORISE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTHIDS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTHIDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSTNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSTNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeDiff", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeDiff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrDec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrDec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscAP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscAS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscPP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscPP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowDiscPS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowDiscPS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowRateP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowRateP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowRateS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowRateS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_BillStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_BillStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_BIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_BIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimitAmt", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimitAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CashLimitWarn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CashLimitWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_CLStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_CLStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscAP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscAP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscAS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscPP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscPP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_DiscPS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_DiscPS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_EnableParty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_EnableParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GINQty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GINQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GSTSupply", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GSTSupply", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_LocWiseTax", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_LocWiseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegStockAsOn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegStockAsOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_NegWarn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_NegWarn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PostP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PostP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PSP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PSP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_PurchPostTDS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_PurchPostTDS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_QtnA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_QtnA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_RCMDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_RCMDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_RoundVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_RoundVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SEZChargeParty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SEZChargeParty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SOPropagation", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SOPropagation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_SPAdjForce", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_SPAdjForce", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VatDecP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VatDecP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VatDecS", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VatDecS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Holiday1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Holiday1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Holiday2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Holiday2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_GSTStyle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_GSTStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProxyServer", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProxyServer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSCaption", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSCaption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSPass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSPass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSURL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSURL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSUserId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSPrefix", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSPrefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccCode", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccLength", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AutoAccStyle", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AutoAccStyle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_MultiUnit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_MultiUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Batch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Batch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_Serial", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_Serial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_VATGST", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_VATGST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrintInfo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrintInfo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gp_AllowEditDelete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gp_AllowEditDelete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=.\\SQL2017;Initial Catalog=TFAT_ERPiX9;User ID=sa;Password=suc357;Mult" +
                "ipleActiveResultSets=True;Application Name=EntityFramework";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT RECORDKEY, aAuthno, aCstNo, Addrl1, Addrl2, Addrl3, Addrl4, aFax, aLstno, aPin, Business, City, Code, CompCode, Country, Flag, Fri, Grp, LastBranch, LastUpdated, Licence2, LogIn, Mon, Name, PanNo, Sat, State, Sun, TDSAUTHORISE, TDSCir, TDSOffice, TDSReg, Tel1, Tel2, Tel3, Tel4, Thu, TINNumber, Tue, Users, VATReg, Wed, www, ENTEREDBY, LASTUPDATEDATE, AUTHORISE, AUTHIDS, GSTNo, Email, CINNo, LocationCode, TimeDiff, PCCode, CurrName, CurrDec, gp_AllowDiscAP, gp_AllowDiscAS, gp_AllowDiscPP, gp_AllowDiscPS, gp_AllowRateP, gp_AllowRateS, gp_BillStock, gp_BIN, gp_CashLimit, gp_CashLimitAmt, gp_CashLimitWarn, gp_CLStock, gp_DiscAP, gp_DiscAS, gp_DiscPP, gp_DiscPS, gp_EnableParty, gp_GINQty, gp_GSTSupply, gp_LocWiseTax, gp_NegStock, gp_NegStockAsOn, gp_NegWarn, gp_PostP, gp_PSP, gp_PurchPostTDS, gp_QtnA, gp_RCMDate, gp_RoundVAT, gp_SEZChargeParty, gp_SOPropagation, gp_SPAdjForce, gp_VatDecP, gp_VatDecS, gp_Holiday1, gp_Holiday2, gp_GSTStyle, ProxyServer, SMSCaption, SMSPass, SMSURL, SMSUserId, SMSPrefix, gp_AutoAccCode, gp_AutoAccLength, gp_AutoAccStyle, gp_MultiUnit, gp_Batch, gp_Serial, Account, gp_VATGST, PrintInfo, gp_AllowEditDelete FROM dbo.TfatBranch";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BranchDataSet.TfatBranchDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BranchDataSet.TfatBranchDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BranchDataSet.TfatBranchDataTable dataTable = new BranchDataSet.TfatBranchDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BranchDataSet.TfatBranchDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BranchDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TfatBranch");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Code) {
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string aAuthno, 
                    string aCstNo, 
                    string Addrl1, 
                    string Addrl2, 
                    string Addrl3, 
                    string Addrl4, 
                    string aFax, 
                    string aLstno, 
                    string aPin, 
                    string Business, 
                    string City, 
                    string Code, 
                    string CompCode, 
                    string Country, 
                    string Flag, 
                    bool Fri, 
                    string Grp, 
                    bool LastBranch, 
                    bool LastUpdated, 
                    string Licence2, 
                    bool LogIn, 
                    bool Mon, 
                    string Name, 
                    string PanNo, 
                    bool Sat, 
                    string State, 
                    bool Sun, 
                    string TDSAUTHORISE, 
                    string TDSCir, 
                    string TDSOffice, 
                    string TDSReg, 
                    string Tel1, 
                    string Tel2, 
                    string Tel3, 
                    string Tel4, 
                    bool Thu, 
                    string TINNumber, 
                    bool Tue, 
                    string Users, 
                    string VATReg, 
                    bool Wed, 
                    string www, 
                    string ENTEREDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATEDATE, 
                    string AUTHORISE, 
                    string AUTHIDS, 
                    string GSTNo, 
                    string Email, 
                    string CINNo, 
                    int LocationCode, 
                    global::System.Nullable<decimal> TimeDiff, 
                    global::System.Nullable<int> PCCode, 
                    int CurrName, 
                    global::System.Nullable<int> CurrDec, 
                    bool gp_AllowDiscAP, 
                    bool gp_AllowDiscAS, 
                    bool gp_AllowDiscPP, 
                    bool gp_AllowDiscPS, 
                    bool gp_AllowRateP, 
                    bool gp_AllowRateS, 
                    bool gp_BillStock, 
                    bool gp_BIN, 
                    bool gp_CashLimit, 
                    global::System.Nullable<double> gp_CashLimitAmt, 
                    bool gp_CashLimitWarn, 
                    bool gp_CLStock, 
                    bool gp_DiscAP, 
                    bool gp_DiscAS, 
                    bool gp_DiscPP, 
                    bool gp_DiscPS, 
                    bool gp_EnableParty, 
                    bool gp_GINQty, 
                    bool gp_GSTSupply, 
                    bool gp_LocWiseTax, 
                    bool gp_NegStock, 
                    bool gp_NegStockAsOn, 
                    bool gp_NegWarn, 
                    bool gp_PostP, 
                    bool gp_PSP, 
                    bool gp_PurchPostTDS, 
                    bool gp_QtnA, 
                    global::System.Nullable<global::System.DateTime> gp_RCMDate, 
                    global::System.Nullable<byte> gp_RoundVAT, 
                    bool gp_SEZChargeParty, 
                    bool gp_SOPropagation, 
                    bool gp_SPAdjForce, 
                    global::System.Nullable<byte> gp_VatDecP, 
                    global::System.Nullable<byte> gp_VatDecS, 
                    string gp_Holiday1, 
                    string gp_Holiday2, 
                    global::System.Nullable<int> gp_GSTStyle, 
                    string ProxyServer, 
                    string SMSCaption, 
                    string SMSPass, 
                    string SMSURL, 
                    string SMSUserId, 
                    bool SMSPrefix, 
                    bool gp_AutoAccCode, 
                    global::System.Nullable<byte> gp_AutoAccLength, 
                    global::System.Nullable<byte> gp_AutoAccStyle, 
                    bool gp_MultiUnit, 
                    bool gp_Batch, 
                    bool gp_Serial, 
                    string Account, 
                    string gp_VATGST, 
                    string PrintInfo, 
                    bool gp_AllowEditDelete) {
            if ((aAuthno == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(aAuthno));
            }
            if ((aCstNo == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(aCstNo));
            }
            if ((Addrl1 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Addrl1));
            }
            if ((Addrl2 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Addrl2));
            }
            if ((Addrl3 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Addrl3));
            }
            if ((Addrl4 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Addrl4));
            }
            if ((aFax == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(aFax));
            }
            if ((aLstno == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(aLstno));
            }
            if ((aPin == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(aPin));
            }
            if ((Business == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Business));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(City));
            }
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((CompCode == null)) {
                throw new global::System.ArgumentNullException("CompCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CompCode));
            }
            if ((Country == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Country));
            }
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Flag));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(Fri));
            if ((Grp == null)) {
                throw new global::System.ArgumentNullException("Grp");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Grp));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(LastBranch));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(LastUpdated));
            if ((Licence2 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Licence2));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(LogIn));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(Mon));
            if ((Name == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Name));
            }
            if ((PanNo == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(PanNo));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(Sat));
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(State));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(Sun));
            if ((TDSAUTHORISE == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(TDSAUTHORISE));
            }
            if ((TDSCir == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(TDSCir));
            }
            if ((TDSOffice == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(TDSOffice));
            }
            if ((TDSReg == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(TDSReg));
            }
            if ((Tel1 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Tel1));
            }
            if ((Tel2 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Tel2));
            }
            if ((Tel3 == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(Tel3));
            }
            if ((Tel4 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(Tel4));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(Thu));
            if ((TINNumber == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(TINNumber));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(Tue));
            if ((Users == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(Users));
            }
            if ((VATReg == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(VATReg));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(Wed));
            if ((www == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(www));
            }
            if ((ENTEREDBY == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(ENTEREDBY));
            }
            if ((LASTUPDATEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((System.DateTime)(LASTUPDATEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((AUTHORISE == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(AUTHORISE));
            }
            if ((AUTHIDS == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(AUTHIDS));
            }
            if ((GSTNo == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(GSTNo));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(Email));
            }
            if ((CINNo == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(CINNo));
            }
            this.Adapter.InsertCommand.Parameters[49].Value = ((int)(LocationCode));
            if ((TimeDiff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(TimeDiff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((PCCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((int)(PCCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((int)(CurrName));
            if ((CurrDec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((int)(CurrDec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(gp_AllowDiscAP));
            this.Adapter.InsertCommand.Parameters[55].Value = ((bool)(gp_AllowDiscAS));
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(gp_AllowDiscPP));
            this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(gp_AllowDiscPS));
            this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(gp_AllowRateP));
            this.Adapter.InsertCommand.Parameters[59].Value = ((bool)(gp_AllowRateS));
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(gp_BillStock));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(gp_BIN));
            this.Adapter.InsertCommand.Parameters[62].Value = ((bool)(gp_CashLimit));
            if ((gp_CashLimitAmt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((double)(gp_CashLimitAmt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[64].Value = ((bool)(gp_CashLimitWarn));
            this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(gp_CLStock));
            this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(gp_DiscAP));
            this.Adapter.InsertCommand.Parameters[67].Value = ((bool)(gp_DiscAS));
            this.Adapter.InsertCommand.Parameters[68].Value = ((bool)(gp_DiscPP));
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(gp_DiscPS));
            this.Adapter.InsertCommand.Parameters[70].Value = ((bool)(gp_EnableParty));
            this.Adapter.InsertCommand.Parameters[71].Value = ((bool)(gp_GINQty));
            this.Adapter.InsertCommand.Parameters[72].Value = ((bool)(gp_GSTSupply));
            this.Adapter.InsertCommand.Parameters[73].Value = ((bool)(gp_LocWiseTax));
            this.Adapter.InsertCommand.Parameters[74].Value = ((bool)(gp_NegStock));
            this.Adapter.InsertCommand.Parameters[75].Value = ((bool)(gp_NegStockAsOn));
            this.Adapter.InsertCommand.Parameters[76].Value = ((bool)(gp_NegWarn));
            this.Adapter.InsertCommand.Parameters[77].Value = ((bool)(gp_PostP));
            this.Adapter.InsertCommand.Parameters[78].Value = ((bool)(gp_PSP));
            this.Adapter.InsertCommand.Parameters[79].Value = ((bool)(gp_PurchPostTDS));
            this.Adapter.InsertCommand.Parameters[80].Value = ((bool)(gp_QtnA));
            if ((gp_RCMDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((System.DateTime)(gp_RCMDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((gp_RoundVAT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((byte)(gp_RoundVAT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((bool)(gp_SEZChargeParty));
            this.Adapter.InsertCommand.Parameters[84].Value = ((bool)(gp_SOPropagation));
            this.Adapter.InsertCommand.Parameters[85].Value = ((bool)(gp_SPAdjForce));
            if ((gp_VatDecP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((byte)(gp_VatDecP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((gp_VatDecS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((byte)(gp_VatDecS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((gp_Holiday1 == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(gp_Holiday1));
            }
            if ((gp_Holiday2 == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(gp_Holiday2));
            }
            if ((gp_GSTStyle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((int)(gp_GSTStyle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((ProxyServer == null)) {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = ((string)(ProxyServer));
            }
            if ((SMSCaption == null)) {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = ((string)(SMSCaption));
            }
            if ((SMSPass == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(SMSPass));
            }
            if ((SMSURL == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(SMSURL));
            }
            if ((SMSUserId == null)) {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(SMSUserId));
            }
            this.Adapter.InsertCommand.Parameters[96].Value = ((bool)(SMSPrefix));
            this.Adapter.InsertCommand.Parameters[97].Value = ((bool)(gp_AutoAccCode));
            if ((gp_AutoAccLength.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((byte)(gp_AutoAccLength.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((gp_AutoAccStyle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((byte)(gp_AutoAccStyle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[100].Value = ((bool)(gp_MultiUnit));
            this.Adapter.InsertCommand.Parameters[101].Value = ((bool)(gp_Batch));
            this.Adapter.InsertCommand.Parameters[102].Value = ((bool)(gp_Serial));
            if ((Account == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(Account));
            }
            if ((gp_VATGST == null)) {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = ((string)(gp_VATGST));
            }
            if ((PrintInfo == null)) {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = ((string)(PrintInfo));
            }
            this.Adapter.InsertCommand.Parameters[106].Value = ((bool)(gp_AllowEditDelete));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string aAuthno, 
                    string aCstNo, 
                    string Addrl1, 
                    string Addrl2, 
                    string Addrl3, 
                    string Addrl4, 
                    string aFax, 
                    string aLstno, 
                    string aPin, 
                    string Business, 
                    string City, 
                    string Code, 
                    string CompCode, 
                    string Country, 
                    string Flag, 
                    bool Fri, 
                    string Grp, 
                    bool LastBranch, 
                    bool LastUpdated, 
                    string Licence2, 
                    bool LogIn, 
                    bool Mon, 
                    string Name, 
                    string PanNo, 
                    bool Sat, 
                    string State, 
                    bool Sun, 
                    string TDSAUTHORISE, 
                    string TDSCir, 
                    string TDSOffice, 
                    string TDSReg, 
                    string Tel1, 
                    string Tel2, 
                    string Tel3, 
                    string Tel4, 
                    bool Thu, 
                    string TINNumber, 
                    bool Tue, 
                    string Users, 
                    string VATReg, 
                    bool Wed, 
                    string www, 
                    string ENTEREDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATEDATE, 
                    string AUTHORISE, 
                    string AUTHIDS, 
                    string GSTNo, 
                    string Email, 
                    string CINNo, 
                    int LocationCode, 
                    global::System.Nullable<decimal> TimeDiff, 
                    global::System.Nullable<int> PCCode, 
                    int CurrName, 
                    global::System.Nullable<int> CurrDec, 
                    bool gp_AllowDiscAP, 
                    bool gp_AllowDiscAS, 
                    bool gp_AllowDiscPP, 
                    bool gp_AllowDiscPS, 
                    bool gp_AllowRateP, 
                    bool gp_AllowRateS, 
                    bool gp_BillStock, 
                    bool gp_BIN, 
                    bool gp_CashLimit, 
                    global::System.Nullable<double> gp_CashLimitAmt, 
                    bool gp_CashLimitWarn, 
                    bool gp_CLStock, 
                    bool gp_DiscAP, 
                    bool gp_DiscAS, 
                    bool gp_DiscPP, 
                    bool gp_DiscPS, 
                    bool gp_EnableParty, 
                    bool gp_GINQty, 
                    bool gp_GSTSupply, 
                    bool gp_LocWiseTax, 
                    bool gp_NegStock, 
                    bool gp_NegStockAsOn, 
                    bool gp_NegWarn, 
                    bool gp_PostP, 
                    bool gp_PSP, 
                    bool gp_PurchPostTDS, 
                    bool gp_QtnA, 
                    global::System.Nullable<global::System.DateTime> gp_RCMDate, 
                    global::System.Nullable<byte> gp_RoundVAT, 
                    bool gp_SEZChargeParty, 
                    bool gp_SOPropagation, 
                    bool gp_SPAdjForce, 
                    global::System.Nullable<byte> gp_VatDecP, 
                    global::System.Nullable<byte> gp_VatDecS, 
                    string gp_Holiday1, 
                    string gp_Holiday2, 
                    global::System.Nullable<int> gp_GSTStyle, 
                    string ProxyServer, 
                    string SMSCaption, 
                    string SMSPass, 
                    string SMSURL, 
                    string SMSUserId, 
                    bool SMSPrefix, 
                    bool gp_AutoAccCode, 
                    global::System.Nullable<byte> gp_AutoAccLength, 
                    global::System.Nullable<byte> gp_AutoAccStyle, 
                    bool gp_MultiUnit, 
                    bool gp_Batch, 
                    bool gp_Serial, 
                    string Account, 
                    string gp_VATGST, 
                    string PrintInfo, 
                    bool gp_AllowEditDelete, 
                    string Original_Code) {
            if ((aAuthno == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(aAuthno));
            }
            if ((aCstNo == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(aCstNo));
            }
            if ((Addrl1 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Addrl1));
            }
            if ((Addrl2 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Addrl2));
            }
            if ((Addrl3 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Addrl3));
            }
            if ((Addrl4 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Addrl4));
            }
            if ((aFax == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(aFax));
            }
            if ((aLstno == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(aLstno));
            }
            if ((aPin == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(aPin));
            }
            if ((Business == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Business));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(City));
            }
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Code));
            }
            if ((CompCode == null)) {
                throw new global::System.ArgumentNullException("CompCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CompCode));
            }
            if ((Country == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Country));
            }
            if ((Flag == null)) {
                throw new global::System.ArgumentNullException("Flag");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Flag));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Fri));
            if ((Grp == null)) {
                throw new global::System.ArgumentNullException("Grp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Grp));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(LastBranch));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(LastUpdated));
            if ((Licence2 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Licence2));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(LogIn));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Mon));
            if ((Name == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Name));
            }
            if ((PanNo == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(PanNo));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Sat));
            if ((State == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(State));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Sun));
            if ((TDSAUTHORISE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(TDSAUTHORISE));
            }
            if ((TDSCir == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(TDSCir));
            }
            if ((TDSOffice == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(TDSOffice));
            }
            if ((TDSReg == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(TDSReg));
            }
            if ((Tel1 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Tel1));
            }
            if ((Tel2 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Tel2));
            }
            if ((Tel3 == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Tel3));
            }
            if ((Tel4 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Tel4));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Thu));
            if ((TINNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(TINNumber));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Tue));
            if ((Users == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Users));
            }
            if ((VATReg == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(VATReg));
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Wed));
            if ((www == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(www));
            }
            if ((ENTEREDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(ENTEREDBY));
            }
            if ((LASTUPDATEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(LASTUPDATEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((AUTHORISE == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(AUTHORISE));
            }
            if ((AUTHIDS == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(AUTHIDS));
            }
            if ((GSTNo == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(GSTNo));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Email));
            }
            if ((CINNo == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(CINNo));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(LocationCode));
            if ((TimeDiff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(TimeDiff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((PCCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(PCCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(CurrName));
            if ((CurrDec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(CurrDec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(gp_AllowDiscAP));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(gp_AllowDiscAS));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(gp_AllowDiscPP));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(gp_AllowDiscPS));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(gp_AllowRateP));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(gp_AllowRateS));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(gp_BillStock));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(gp_BIN));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(gp_CashLimit));
            if ((gp_CashLimitAmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(gp_CashLimitAmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(gp_CashLimitWarn));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(gp_CLStock));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(gp_DiscAP));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(gp_DiscAS));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(gp_DiscPP));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(gp_DiscPS));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(gp_EnableParty));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(gp_GINQty));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(gp_GSTSupply));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(gp_LocWiseTax));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(gp_NegStock));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(gp_NegStockAsOn));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(gp_NegWarn));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(gp_PostP));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((bool)(gp_PSP));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(gp_PurchPostTDS));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(gp_QtnA));
            if ((gp_RCMDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(gp_RCMDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((gp_RoundVAT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((byte)(gp_RoundVAT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(gp_SEZChargeParty));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((bool)(gp_SOPropagation));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(gp_SPAdjForce));
            if ((gp_VatDecP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((byte)(gp_VatDecP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((gp_VatDecS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((byte)(gp_VatDecS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((gp_Holiday1 == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(gp_Holiday1));
            }
            if ((gp_Holiday2 == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(gp_Holiday2));
            }
            if ((gp_GSTStyle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(gp_GSTStyle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((ProxyServer == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(ProxyServer));
            }
            if ((SMSCaption == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(SMSCaption));
            }
            if ((SMSPass == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(SMSPass));
            }
            if ((SMSURL == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(SMSURL));
            }
            if ((SMSUserId == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(SMSUserId));
            }
            this.Adapter.UpdateCommand.Parameters[96].Value = ((bool)(SMSPrefix));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(gp_AutoAccCode));
            if ((gp_AutoAccLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((byte)(gp_AutoAccLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((gp_AutoAccStyle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((byte)(gp_AutoAccStyle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(gp_MultiUnit));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((bool)(gp_Batch));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(gp_Serial));
            if ((Account == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Account));
            }
            if ((gp_VATGST == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(gp_VATGST));
            }
            if ((PrintInfo == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(PrintInfo));
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((bool)(gp_AllowEditDelete));
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string aAuthno, 
                    string aCstNo, 
                    string Addrl1, 
                    string Addrl2, 
                    string Addrl3, 
                    string Addrl4, 
                    string aFax, 
                    string aLstno, 
                    string aPin, 
                    string Business, 
                    string City, 
                    string CompCode, 
                    string Country, 
                    string Flag, 
                    bool Fri, 
                    string Grp, 
                    bool LastBranch, 
                    bool LastUpdated, 
                    string Licence2, 
                    bool LogIn, 
                    bool Mon, 
                    string Name, 
                    string PanNo, 
                    bool Sat, 
                    string State, 
                    bool Sun, 
                    string TDSAUTHORISE, 
                    string TDSCir, 
                    string TDSOffice, 
                    string TDSReg, 
                    string Tel1, 
                    string Tel2, 
                    string Tel3, 
                    string Tel4, 
                    bool Thu, 
                    string TINNumber, 
                    bool Tue, 
                    string Users, 
                    string VATReg, 
                    bool Wed, 
                    string www, 
                    string ENTEREDBY, 
                    global::System.Nullable<global::System.DateTime> LASTUPDATEDATE, 
                    string AUTHORISE, 
                    string AUTHIDS, 
                    string GSTNo, 
                    string Email, 
                    string CINNo, 
                    int LocationCode, 
                    global::System.Nullable<decimal> TimeDiff, 
                    global::System.Nullable<int> PCCode, 
                    int CurrName, 
                    global::System.Nullable<int> CurrDec, 
                    bool gp_AllowDiscAP, 
                    bool gp_AllowDiscAS, 
                    bool gp_AllowDiscPP, 
                    bool gp_AllowDiscPS, 
                    bool gp_AllowRateP, 
                    bool gp_AllowRateS, 
                    bool gp_BillStock, 
                    bool gp_BIN, 
                    bool gp_CashLimit, 
                    global::System.Nullable<double> gp_CashLimitAmt, 
                    bool gp_CashLimitWarn, 
                    bool gp_CLStock, 
                    bool gp_DiscAP, 
                    bool gp_DiscAS, 
                    bool gp_DiscPP, 
                    bool gp_DiscPS, 
                    bool gp_EnableParty, 
                    bool gp_GINQty, 
                    bool gp_GSTSupply, 
                    bool gp_LocWiseTax, 
                    bool gp_NegStock, 
                    bool gp_NegStockAsOn, 
                    bool gp_NegWarn, 
                    bool gp_PostP, 
                    bool gp_PSP, 
                    bool gp_PurchPostTDS, 
                    bool gp_QtnA, 
                    global::System.Nullable<global::System.DateTime> gp_RCMDate, 
                    global::System.Nullable<byte> gp_RoundVAT, 
                    bool gp_SEZChargeParty, 
                    bool gp_SOPropagation, 
                    bool gp_SPAdjForce, 
                    global::System.Nullable<byte> gp_VatDecP, 
                    global::System.Nullable<byte> gp_VatDecS, 
                    string gp_Holiday1, 
                    string gp_Holiday2, 
                    global::System.Nullable<int> gp_GSTStyle, 
                    string ProxyServer, 
                    string SMSCaption, 
                    string SMSPass, 
                    string SMSURL, 
                    string SMSUserId, 
                    bool SMSPrefix, 
                    bool gp_AutoAccCode, 
                    global::System.Nullable<byte> gp_AutoAccLength, 
                    global::System.Nullable<byte> gp_AutoAccStyle, 
                    bool gp_MultiUnit, 
                    bool gp_Batch, 
                    bool gp_Serial, 
                    string Account, 
                    string gp_VATGST, 
                    string PrintInfo, 
                    bool gp_AllowEditDelete, 
                    string Original_Code) {
            return this.Update(aAuthno, aCstNo, Addrl1, Addrl2, Addrl3, Addrl4, aFax, aLstno, aPin, Business, City, Original_Code, CompCode, Country, Flag, Fri, Grp, LastBranch, LastUpdated, Licence2, LogIn, Mon, Name, PanNo, Sat, State, Sun, TDSAUTHORISE, TDSCir, TDSOffice, TDSReg, Tel1, Tel2, Tel3, Tel4, Thu, TINNumber, Tue, Users, VATReg, Wed, www, ENTEREDBY, LASTUPDATEDATE, AUTHORISE, AUTHIDS, GSTNo, Email, CINNo, LocationCode, TimeDiff, PCCode, CurrName, CurrDec, gp_AllowDiscAP, gp_AllowDiscAS, gp_AllowDiscPP, gp_AllowDiscPS, gp_AllowRateP, gp_AllowRateS, gp_BillStock, gp_BIN, gp_CashLimit, gp_CashLimitAmt, gp_CashLimitWarn, gp_CLStock, gp_DiscAP, gp_DiscAS, gp_DiscPP, gp_DiscPS, gp_EnableParty, gp_GINQty, gp_GSTSupply, gp_LocWiseTax, gp_NegStock, gp_NegStockAsOn, gp_NegWarn, gp_PostP, gp_PSP, gp_PurchPostTDS, gp_QtnA, gp_RCMDate, gp_RoundVAT, gp_SEZChargeParty, gp_SOPropagation, gp_SPAdjForce, gp_VatDecP, gp_VatDecS, gp_Holiday1, gp_Holiday2, gp_GSTStyle, ProxyServer, SMSCaption, SMSPass, SMSURL, SMSUserId, SMSPrefix, gp_AutoAccCode, gp_AutoAccLength, gp_AutoAccStyle, gp_MultiUnit, gp_Batch, gp_Serial, Account, gp_VATGST, PrintInfo, gp_AllowEditDelete, Original_Code);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TfatBranchTableAdapter _tfatBranchTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TfatBranchTableAdapter TfatBranchTableAdapter {
            get {
                return this._tfatBranchTableAdapter;
            }
            set {
                this._tfatBranchTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tfatBranchTableAdapter != null) 
                            && (this._tfatBranchTableAdapter.Connection != null))) {
                    return this._tfatBranchTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tfatBranchTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(BranchDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tfatBranchTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TfatBranch.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tfatBranchTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(BranchDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tfatBranchTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TfatBranch.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tfatBranchTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(BranchDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tfatBranchTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TfatBranch.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tfatBranchTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(BranchDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tfatBranchTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tfatBranchTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tfatBranchTableAdapter != null)) {
                    revertConnections.Add(this._tfatBranchTableAdapter, this._tfatBranchTableAdapter.Connection);
                    this._tfatBranchTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tfatBranchTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tfatBranchTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tfatBranchTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tfatBranchTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tfatBranchTableAdapter != null)) {
                    this._tfatBranchTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tfatBranchTableAdapter]));
                    this._tfatBranchTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591