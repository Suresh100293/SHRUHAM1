
@model TFATERPWebApplication.Areas.Accounts.Models.PurchaseVM
@using Common;

<div class="modal-content">
    <div class="modal-header" style="background-color:#cccccc">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
        <h4 class="modal-title">Delivery Schedule</h4>
    </div>
    <div class="modal-body">
        <div class="grid" id="DeliveryGrid" style="max-height:350px;min-height:350px; width:100%; overflow: scroll;">
            Quantity: @Html.DisplayFor(x => x.ProductQty, new { @class = "form-control", @style = "text-align:right;font-weight:bold;" })  Quantity2: @Html.DisplayFor(x => x.ProductQty2)
            <table id="delyaddadd" class="zui-table">
                <thead>
                    <tr role="row">
                        <th>Sr.</th>
                        @*<th>Days</th>*@
                        <th>Dely.Date</th>
                        <th>Qty-1</th>
                        <th>Qty-2</th>
                        <th>Dly.Loc.</th>
                        <th>Issued Qty</th>
                        <th>Balance</th>
                        <th></th>
                    </tr>
                    <tr>
                        <td></td>
                        @*<td>@Html.TextBoxFor(x => x.Days, new { @type = "text", @id = "txtDays", @style = "width:99%;margin-top:2px;text-align:right;" })</td>*@
                        <td>@Html.TextBoxFor(x => x.StrDlyDate, new { @type = "text", @id = "txtDlyDate", @name = "txtDlyDate", @Value = DateTime.Now.ToString("dd-MM-yyyy") })</td>
                        <td>@Html.TextBoxFor(x => x.Qty1, new { @type = "text", @id = "txtDlyQty1", @style = "width:99%;margin-top:2px;text-align:right;" })</td>
                        <td>@Html.TextBoxFor(x => x.Qty2, new { @type = "text", @id = "txtDlyQty2", @style = "width:99%;margin-top:2px;text-align:right;" })</td>
                        <td>@Html.DropDownListFor(x => x.AltAddress, DropdownHelper.EmptyList(), new { @id = "txtAltAddress", @name = "txtAltAddress", @style = "width:99%;margin-top:2px;text-align:right;" })</td>
                        <td>@Html.TextBoxFor(x => x.ExecutedQty, new { @type = "text", @id = "txtExecutedQty", @style = "width:99%;margin-top:2px;text-align:right;" })</td>
                        <td>@Html.TextBoxFor(x => x.Pending, new { @type = "text", @id = "txtPending", @style = "width:99%;margin-top:2px;text-align:right;" })</td>
                        <td><a id="btnadddlysch" href="#" class="btn btn-primary btn-sm" title="Add"><i class="fa fa-plus"></i></a></td>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.DelyScheList != null)
                    {
                        foreach (var item in @Model.DelyScheList.Where(x => x.tempIsDeleted == false).ToList())
                        {
                            <tr style="font-family:Tahoma;font-size:9pt;">
                                <td>@item.tempId</td>
                                @*<td contenteditable="true">@item.Days</td>*@
                                <td contenteditable="true"><input id="typedate" class="dlyadddtclass" type="text" value="@item.StrDlyDate" /></td>
                                <td contenteditable="true">@item.Qty1</td>
                                <td contenteditable="true">@item.Qty2</td>
                                <td>@item.AltAddress</td>
                                <td>@item.ExecutedQty</td>
                                <td>@item.Pending</td>
                                <td hidden="hidden">@item.Code</td>
                                <td hidden="hidden">@item.Store</td>
                                <td><button type="button" action="DeleteDelySch" class="btn btn-danger btn-sm" value="@item.tempId" title="Delete"><i class="fa fa-trash-o"></i></button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="modal-footer" style="background-color:#cccccc">
        <button type="button" class="btn btn-success" id="SaveDelySche">Save</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        GetAddrSnoList1()

        $('#txtDlyDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,

        });

        $('.dlyadddtclass').datepicker({ format: 'dd-mm-yyyy',  autoclose: true});

        $('#btnadddlysch').click(function (event) {
            event.preventDefault(event);
            if (CheckDelayValidationOnFirstAdd() == false) {
                return;
            }
            var myBatchArray = []
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    SrNo: tds.eq(0).text(),
                    StrDlyDate: tds.find("input[id='typedate']").val(),
                    Qty1: tds.eq(2).text(),
                    Qty2: tds.eq(3).text(),
                    AltAddress: tds.eq(4).text(),
                    ExecutedQty: tds.eq(5).text(),
                    Pending: tds.eq(6).text(),
                    Code: tds.eq(7).text(),
                    Store: tds.eq(8).text(),
                    tempId: tds.eq(0).text()

                }
                myBatchArray.push(myDets);
            })
            var ModelData = {};
            //ModelData["Days"] = $("#txtDays").val();
            ModelData["StrDlyDate"] = $("#txtDlyDate").val();
            ModelData["Qty1"] = $('#txtDlyQty1').val();
            ModelData["Qty2"] = $('#txtDlyQty2').val();
            ModelData["AltAddress"] = $("#txtAltAddress").val();
            ModelData["ExecutedQty"] = $("#txtExecutedQty").val();
            ModelData["Pending"] = $("#txtPending").val();
            ModelData["SubType"] = $("#HdnDSubType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Code"] = $("#HdnDCode").val();
            ModelData["Store"] = $("#HdnDStore").val();
            ModelData["DelyScheList"] = myBatchArray;
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["ProductQty"] = $("#hdnAddDlyProductQty").val();
            ModelData["ProductQty2"] = $("#hdnAddDlyProductQty2").val();
            ModelData["ProductRateOn2"] = $("#hdnAddDlyProductRateOn2").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("AddDelivarySche")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#delaysche').modal('show');
                    $('#DelaySche').html(data.Html);
                    GetDlyRemainOfQtyAdd()
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $("#SaveDelySche").click(function (event) {
            event.preventDefault();
            var rowCount =  $('#delyaddadd tbody tr').length;
            if (rowCount < 1) {
                alert('Please Add Delivery Schedule Record')
                return;
            }
            CheckDelayValidation()

        });



        $('button[action|="DeleteDelySch"]').click(function (event) {
            event.preventDefault();
            var myBatchArray = []
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    SrNo: tds.eq(0).text(),
                    StrDlyDate: tds.find("input[id='typedate']").val(),
                    Qty1: tds.eq(2).text(),
                    Qty2: tds.eq(3).text(),
                    AltAddress: tds.eq(4).text(),
                    ExecutedQty: tds.eq(5).text(),
                    Pending: tds.eq(6).text(),
                    Code: tds.eq(7).text(),
                    Store: tds.eq(8).text(),
                    tempId: tds.eq(0).text()
                }
                myBatchArray.push(myDets);
            })

            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["DelyScheList"] = myBatchArray;
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["ProductQty"] = $("#hdnAddDlyProductQty").val();
            ModelData["ProductQty2"] = $("#hdnAddDlyProductQty2").val();
            ModelData["ProductRateOn2"] = $("#hdnAddDlyProductRateOn2").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteDeliverySchInAddMode")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#delaysche').modal('show');
                    $('#DelaySche').html(data.Html);
                    GetDlyRemainOfQtyAdd()
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

    });
    function GetAddrSnoList1() {
        var url = '@Url.Action("GetAddrSnoList")?Code=' + $("#Account").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#txtAltAddress").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('select[name="txtAltAddress"] option:first').prop('selected', 'selected');
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function CheckDelayValidation() {
        var adjsum1 = 0;
        var adjsum2 = 0;
        var rateonbool = $('#hdnAddDlyProductRateOn2').val();
        var batchqty2 = $('#hdnAddDlyProductQty2').val();
        var batchqty1 = $('#hdnAddDlyProductQty').val();
        if (rateonbool == "False") {
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var Qty = tds.eq(2).text();
                adjsum1 += (parseFloat(Qty));
            })
            if (batchqty1 < adjsum1) {
                alert('Product Qty1 is less than Dely Schedule Qty1')

                $('#hdnDelySchSaved').val('0');

            }
            else {
                $('#hdnDelySchSaved').val('1');
            }


        }
        else {
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var Qty2 = tds.eq(3).text();
                adjsum2 += (parseFloat(Qty2));
            })
            if (batchqty2 < adjsum2) {
                alert('Product Qty2 is less than Dely Schedule Qty2')

                $('#hdnDelySchSaved').val('0');
            }
            else {
                $('#hdnDelySchSaved').val('1');
            }

        }
        if ($('#hdnDelySchSaved').val() == "1") {

            $('#delaysche').modal('hide');
        }
    }

    function CheckDelayValidationOnFirstAdd() {
        var adjsum1 = 0;
        var adjsum2 = 0;
        var rateonbool = $('#hdnAddDlyProductRateOn2').val();
        var batchqty2 = $('#hdnAddDlyProductQty2').val();
        var batchqty1 = $('#hdnAddDlyProductQty').val();
        if (rateonbool == "False") {
            adjsum1 = parseFloat($('#txtDlyQty1').val());
            if (batchqty1 < adjsum1) {
                alert('Product Qty1 is less than Dely Schedule Qty1')

                return false;

            }
            else {
                return true;
            }

        }
        else {
            adjsum2 = parseFloat($('#txtDlyQty2').val());

            if (batchqty2 < adjsum2) {
                alert('Product Qty2 is less than Dely Schedule Qty2')

                return false;
            }
            else {
                return true;
            }

        }

    }

    function GetDlyRemainOfQtyAdd() {
        var adjsum1 = 0;
        var adjsum2 = 0;
        var rem1 = 0;
        var rem2 = 0;
        var rateonbool = $('#hdnAddDlyProductRateOn2').val();
        var batchqty2 = $('#hdnAddDlyProductQty2').val();
        var batchqty1 = $('#hdnAddDlyProductQty').val();
        if (rateonbool == "False") {
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var Qty = tds.eq(2).text();
                adjsum1 += (parseFloat(Qty));
            })
            rem1 = batchqty1 - adjsum1;
            $('#txtDlyQty1').val(parseFloat(rem1).toFixed(2));
        }
        else {
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var Qty2 = tds.eq(3).text();
                adjsum2 += (parseFloat(Qty2));
            })
            rem2 = batchqty2 - adjsum2;
            $('#txtDlyQty2').val(parseFloat(rem2).toFixed(2));
        }

    }

    //function SetDate() {
    //    var ab = parseInt($("#txtDays").val());
    //    var c = $('#txtDlyDate').val();
    //    var bnewDate = c.split('-');
    //    c = bnewDate[1] + "/" + bnewDate[0] + "/" + bnewDate[2];
    //    var MaxDate = new Date(c);

    //    MaxDate.setDate(MaxDate.getDate() + ab);
    //    var dd = MaxDate.getDate();
    //    var mm = MaxDate.getMonth() + 1;
    //    var y = MaxDate.getFullYear();

    //    var someFormattedDate = (dd < 10 ? '0' + dd : dd) + '-' + (mm < 10 ? '0' + mm : mm) + '-' + y;
    //    $('#txtDlyDate').val(someFormattedDate);

    //}
</script>

@Html.HiddenFor(x => x.Code, new
{
    @Id = "HdnDCode"
})
@Html.HiddenFor(x => x.Store, new { @Id = "HdnDStore" })
@Html.HiddenFor(x => x.SubType, new { @Id = "HdnDSubType" })
@*@Html.HiddenFor(x => x.Type, new { @Id = "HdnDType" })*@
@Html.HiddenFor(x => x.hdnDelySchSaved, new { @Id = "hdnDelySchSaved" })
@Html.HiddenFor(x => x.ProductQty, new { @id = "hdnAddDlyProductQty" })
@Html.HiddenFor(x => x.ProductQty2, new { @id = "hdnAddDlyProductQty2" })
@Html.HiddenFor(x => x.ProductRateOn2, new { @id = "hdnAddDlyProductRateOn2" })