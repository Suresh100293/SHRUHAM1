
@model TFATERPWebApplication.Areas.Accounts.Models.PurchaseVM
@using Common;

<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
            <h4 class="modal-title"><b>Posting Account Change</b></h4>
        </div>
        <div class="modal-body" style="min-height:100px;">
            <div class="form-group">
                <label class="col-sm-3 control-label">Posting Account:</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.PostAccount, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "PostAccount", @name = "PostAccount" })
                </div>
            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
            <button type="button" class="btn btn-warning" id="btnLedgerPostingEdt">Save</button>
            <button id="btncledtpostledger" class="btn btn-danger" type="button">Close</button>
        </div>
    </div>
</div>
@Html.HiddenFor(x => x.tempId, new { @Id = "LedgerPosttempId" })

<script>
    $(document).ready(function () {

        loadPostingAccount()
        $('#btncledtpostledger').click(function (event) {
            event.preventDefault();
            $('#ledgerpostshowmodel').modal('hide');
        });

        $('#btnLedgerPostingEdt').click(function (event) {
            event.preventDefault();
            var myLederArray = [];
            $('#LedgerPostgrid tbody').find('tr').each(function () {
                var tds = $(this).find('td');

                var myDets = { tempId: tds.eq(0).text(), Code: tds.eq(1).text(),AccountName: tds.eq(2).text(), Debit: tds.eq(3).text(), Credit: tds.eq(4).text(),Branch:tds.eq(5).text() }
                myLederArray.push(myDets);
            });
            var ModelData = {};
            ModelData["tempId"] = $("#LedgerPosttempId").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["LedgerPostList"] = myLederArray;
            ModelData["Controller2"] = $('#Controller2').val();
            ModelData["Module"] =  $('#Module').val();
            ModelData["ViewDataId"] = $('#hdnViewDataId').val();
            ModelData["TableName"] = $('#TableName').val();
            ModelData["Header"] =  $('#Header').val();
            ModelData["optiontype"] =  $('#optiontype').val();
            ModelData["OptionCode"] = $('#OptionCode').val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["PostAccount"] = $("#PostAccount").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("UpdatePostingList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                },
                success: function (data) {
                    $('#ledgerpostshowmodel').modal('hide');
                    $('#ledpostingmodel').html(data.Html);
                },
                error: function (er) {
                    alert("Error occured while processing your request.");
                }
            });
        });

    });
    function loadPostingAccount() {
        var url = '@Url.Action("GetPostingAccounts")';
        $('#PostAccount').select2({
            minimumInputLength: @Session["MinAcc"],
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: @Session["MinAcc"],
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.PostAccount', text: '@Model.PostAccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>