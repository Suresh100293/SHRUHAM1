@model TFATERPWebApplication.Areas.Accounts.Models.PurchaseVM
@using Common;

<style>
    .span6 {
        display: none !important;
    }
</style>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        loadItem();
        loadStore()
        $(".NCalculationTxt").constrain({ allow: { regex: "[0-9]" } });
        $(".NCalculationTxt").focus(function () {
            this.value = "";
        });
        $(".NCalculationTxt").blur(function () {
            debugger;
            if (this.value == "") {
                $(this).val("0");
            };
        });
        debugger;
        $('#example2').DataTable();

        $('.editrow').click(function () {
            debugger;
            var Row = $(this).closest('tr');
            var Lrno = Row.find(".GetLRNO").text();

            if (Lrno != "") {

                var url = '@Url.Action("GetSingleLR")';
                var DTO = { LRno: Lrno, AutoSelect: false };

                $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                    $('.spinner').show();
                    },
                    success: function (data) {
                        var LoadDownLoadFiles = $("#FetchSingleLRDiv");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $('#FetchSingleLR').modal('show');
                    },
                });
            }
        });



        $("#txtGetLRNo").blur(function () {
            debugger;
            if ($("#txtGetLRNo").val() != "") {

                var url = '@Url.Action("GetSingleLR")';
                var DTO = { LRno: $("#txtGetLRNo").val()};

                $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                    $('.spinner').show();
                    },
                    success: function (data) {
                    var LoadDownLoadFiles = $("#FetchSingleLR");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    },
                });
            }
        });



        if ($('#hdnLockAddon').val() == "True" || $('#hdnLockAddon').val() == "true") {
            $('#btnitemAddon').attr("disabled", "disabled");
        }
        if ($('#hdnHideAddlCharges').val() == "True" || $('#hdnHideAddlCharges').val() == "true") {
            $('#btndiscchargesAdd').hide();
        }


        if ($('#hdnVATGSTApp').val() == "V") {
            $('.sgtvatlbl').html('Tax Code');
            $('.igstlbl').html('Tax');
            $('.cgstlbl').html('Add.Tax');
            $('.sgstlbl').html('Surcharge');

        }

        if ($('#hdnSType').val() != "IM") {
            $('#cvdext').hide();
            $('#cvdamt').hide();
            $('#cvdcess').hide();
            $('#cvdscess').hide();
            $('#txtCVDExtra').hide();
            $('#txtCVDAmt').hide();
            $('#txtCVDCessAmt').hide();
            $('#txtCVDSCessAmt').hide();
        }

        if ($('#hdnBinConcept').val() == "False" && $('#hdnMultiUnit').val() == "False") {

            if ($('#hdnBinConcept').val() == "False") {
                $(".Bintdcl").hide();
            }
            if ($('#hdnMultiUnit').val() == "False") {
                $(".MultiUnitCl").hide();
            }

            $('#tabledata thead tr:first').each(function () {
                var tds = $(this).find('th');
                tds.eq(2).css('width', '23%');
                tds.eq(3).css('width', '12%');
                tds.eq(5).css('width', '10%');
                tds.eq(6).css('width', '10%');
                tds.eq(12).css('width', '10%');
                tds.eq(14).css('width', '10%');

            });

            $('#tabledata thead tr.3rdrow').each(function () {
                var tds = $(this).find('td');
                tds.eq(1).attr('colspan', '10');

            });

            $('#Inntabledata2 tr:nth-child(odd)').each(function () {
                var tds = $(this).find('td');
                tds.eq(0).css('width', '35%');
                tds.eq(1).css('width', '18%');
                tds.eq(3).css('width', '15%');
                tds.eq(4).css('width', '10%');
                tds.eq(6).css('width', '10%');
                tds.eq(8).css('width', '10%');
                tds.eq(8).attr('colspan', '5');
            });

            $('#Inntabledata2 tr:nth-child(2n)').each(function () {
                var tds = $(this).find('td');
                tds.eq(0).css('width', '10%');
                tds.eq(1).css('width', '10%');
                tds.eq(2).css('width', '15%');
                tds.eq(3).attr('colspan', '3');
                tds.eq(4).css('width', '15%');
                tds.eq(5).css('width', '15%');

            });
        }

        if ($('#hdnBinConcept').val() == "False") {
            if ($('#hdnBinConcept').val() == "False") {
                $(".Bintdcl").hide();
            }

            $('#tabledata thead tr.2ndrow').each(function () {
                var tds = $(this).find('td');
                tds.eq(15).attr('colspan', '4');

            });
        }

        if ($("#hdnLockDiscount").val() == "True") {

            $('#txtDisc').prop("disabled", true);
            $('#txtDiscAmt').prop("disabled", true);
        }

        if ($("#hdnLockRate").val() == "True") {
            $('#txtRate').prop("disabled", true);
        }

        if ($("#hdnLockStore").val() == "True" || $("#hdnLockStore").val() == "true") {
            $('#Store').prop("disabled", true);
        }
        if ($("#hdnLockFactor").val() == "True" || $("#hdnLockFactor").val() == "true") {
            $('#txtFactor').prop("disabled", true);
        }
        if ($("#hdnLockTax").val() == "True" || $("#hdnLockTax").val() == "true") {
            $('#txtGSTCode').prop("disabled", true);
        }
        if ($("#hdnLockHSN").val() == "True" || $("#hdnLockHSN").val() == "true")
        {
            $('#txtHSN').prop("disabled", true);
        }

        $("#txtIGSTAmt").val(0);
        $("#txtCGSTAmt").val(0);
        $("#txtSGSTAmt").val(0);
        $('#txtitemdesc').change(function () {

            if ($('#Account').val() == "") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Account.');
            }
            else if ($('#DelyCode').val() == "") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Shipp Party.');
            }
            else {

                $("#txtitemcode").removeClass('error');
                var acc = $('#txtitemdesc').val();
                $('#txtitemcode').val(acc);

                loadProductDetails();
                CheckItemBatch();
                CheckBatchSerial();
                GetGSTCalculation();
                Calculation();
                $(':input[id="btnadddata"]').prop('disabled', false);
            }

        });
        $('#txtQty').focusout(function () {
            loadPopulateQty2()

        });
        $('#txtRate').focusout(function () {
            GetGSTCalculation();
            CalcAddlDiscChargesOnTab()

        });

        $('#txtUnit2').change(function () {
            loadFactorOnUnit2();
            loadPopulateQty2()
        });

        $('#txtGSTCode').change(function () {
            GetGSTCalculation();
        });

        $('#Store').change(function () {
            loadProductDetails();
        });

        if ($("#hdnSType").val() == "IM") {
            $('#txtCVDExtra').focusout(function () {
                Calculation();
            });
            $('#txtCVDAmt').focusout(function () {
                Calculation();
            });
            $('#txtCVDCessAmt').focusout(function () {
                Calculation();
            });
            $('#txtCVDSCessAmt').focusout(function () {
                Calculation();
            });
        }

        $('#txtDisc').focusout(function () {
            CalTaxableOnDisc();
            Calculation();
        });


        $('#txtDiscAmt').focusout(function () {
            Calculation();
        });


        $('#txtQty2').focusout(function () {
            loadQty1byQty2();

        });

        $("#btnadddata").click(function (event) {
            event.preventDefault();
            $('#ErrorMessage').hide();

            var myStockSerialArray = [];
            var ProductAddonArray = [];
            var myBatchArray = [];
            var PackArray = [];
            if ($('#txtitemcode').val() == '') {
                $('#ErrorMessage').show();
                $('#ErrorMessage').text('Please Select Product.')
                $("#txtitemcode").addClass('error');
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;

            }
            if ($('#txtQty').val() == 0) {
                $('#ErrorMessage').show();
                $('#ErrorMessage').text('Please Select Quantity.')
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;

            }
            if ($('#Store').val() == '' || $('#Store').val() == '0' || $('#Store').val() == null) {
                $('#ErrorMessage').show();
                $('#ErrorMessage').text('Please Select Store.')
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;

            }
            if ($('#txtHSN').val() == '0' || $('#txtHSN').val() == null) {
                $('#ErrorMessage').show();
                $('#ErrorMessage').text('Please Select HSN.')
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;

            }
            if ($('#txtGSTCode').val() == '0' || $('#txtGSTCode').val() == null) {
                $('#ErrorMessage').show();
                $('#ErrorMessage').text('Please Select GST Code.')
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;

            }
            $(':input[id="btnadddata"]').prop('disabled', true);

            if (MadidateSerial() == true) {
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;
            }

            if (MadidateBatch() == true) {
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;
            }

            if (CheckDuplBatch() == true) {
                $(':input[id="btnadddata"]').prop('disabled', false);
                return;
            }
            Calculation();
            var taxableperqty;
            if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "OS") {
                if (($('#hdnNegStock').val() == "True" || $('#hdnNegStock').val() == "true") && $("#hdnSType").val() != "OS") {
                    if (parseFloat($('#txtStock').val()) <= parseFloat(0)) {
                        alert('Stock is Zero or Negative Cant Add')
                        $(':input[id="btnadddata"]').prop('disabled', false);
                        return;
                    }
                }


                if (parseFloat($('#hdnMinSaleRate').val()) == parseFloat(0)) {

                }
                else {
                    if ($('#RateOn2').is(':checked')) {
                        taxableperqty = parseFloat($('#txtTaxable').val()) / (parseFloat($('#txtQty2').val()));
                        if (taxableperqty < parseFloat($('#hdnMinSaleRate').val())) {
                            alert('Price Cant Be Less Than Min Sales Rate')
                            $(':input[id="btnadddata"]').prop('disabled', false);
                            return;
                        }
                    }
                    else {
                        taxableperqty = parseFloat($('#txtTaxable').val()) / (parseFloat($('#txtQty').val()));
                        if (taxableperqty < parseFloat($('#hdnMinSaleRate').val())) {
                            alert('Price Cant Be Less Than Min Sales Rate')
                            $(':input[id="btnadddata"]').prop('disabled', false);
                            return;
                        }
                    }


                }
            }

            var itemname = $('#txtitemdesc').select2('data').text;

            $('#prodaddongrid').find('tr[id="productcharge"]').each(function () {
                var $tds = $(this).find('td');
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode:  $tds.find(".txtpaddvalue").val(),
                    FldType: $tds.eq(4).text()
                }
                ProductAddonArray.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                $('#ItemSerialPR tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    var myDets = {
                        tempId: tds.eq(0).text(),
                        SerialNumber: tds.eq(1).find("input[class='txtserialinp']").val(),
                        GrossWt: tds.eq(2).text(),
                        NettWt: tds.eq(3).text(),
                        Code: tds.eq(4).text(),
                        Store: tds.eq(5).text()
                    }
                    myStockSerialArray.push(myDets);
                })
            }
            if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "OS") {
                $('#ItemSerialSL tbody tr').each(function () {
                    if ($(this).find('input[type="checkbox"]').is(':checked')) {
                        var tds = $(this).find('td');
                        var myDets = {
                            tempId: tds.eq(1).text(),
                            SerialNumber: tds.eq(2).text(),
                            GrossWt: tds.eq(3).text(),
                            NettWt: tds.eq(4).text(),
                            Code: tds.eq(5).text(),
                            Store: tds.eq(6).text()
                        }
                        myStockSerialArray.push(myDets);
                    }
                })
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                $('#ItmBtPR tbody tr').each(function () {
                    var tds = $(this).find('td');
                    var myDets = {
                        tempId: tds.eq(0).text(),
                        Batch: tds.eq(1).text(),
                        Qty: tds.eq(2).text(),
                        Qty2: tds.eq(3).text(),
                        MRP: tds.eq(4).text(),
                        Rate: tds.eq(5).text(),
                        StrMfgDate: tds.find("input[id='typemfgdate']").val(),
                        StrExpDate: tds.find("input[id='typeexpdate']").val(),
                        Code: tds.eq(8).text(),
                        MainType: tds.eq(9).text(),
                        SubType: tds.eq(10).text(),
                        Store: tds.eq(11).text(),
                    }
                    myBatchArray.push(myDets);
                })
            }
            if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX") {
                $('#itembatchSL tr:not(:first)').each(function () {
                    if ($(this).find('input[type="checkbox"]').is(':checked')) {
                        var tds = $(this).find('td');
                        var myDets = {
                            tempId: tds.eq(1).text(),
                            Batch: tds.eq(2).text(),
                            UseQty: tds.eq(3).text(),
                            Qty2: tds.eq(4).text(),
                            Balance: tds.eq(5).text(),
                            MRP: tds.eq(6).text(),
                            Rate: tds.eq(7).text(),
                            StrMfgDate: tds.eq(8).text(),
                            StrExpDate: tds.eq(9).text(),
                            Code: tds.eq(10).text(),
                            MainType: tds.eq(11).text(),
                            SubType: tds.eq(12).text(),
                            Store: tds.eq(13).text(),
                        }
                        myBatchArray.push(myDets);
                    }
                })
            }

            var myDelySchedule = []
            $('#delyaddadd tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    SrNo: tds.eq(0).text(),
                    StrDlyDate: tds.find("input[id='typedate']").val(),
                    Qty1: tds.eq(2).text(),
                    Qty2: tds.eq(3).text(),
                    AltAddress: tds.eq(4).text(),
                    ExecutedQty: tds.eq(5).text(),
                    Pending: tds.eq(6).text(),
                    Code: tds.eq(7).text(),
                    Store: tds.eq(8).text(),
                    tempId: tds.eq(0).text()
                }
                myDelySchedule.push(myDets);
            })

            var AddlDiscCharges = []
            $('#addldiscchargesgrid tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    Disc: tds.eq(2).text(),
                    AddLess: tds.eq(3).text(),
                    CalcOn: tds.eq(4).text(),
                    DiscAmt: tds.eq(5).text()
                }
                AddlDiscCharges.push(myDets);
            });

            if ($("#hdnSType").val() == "PK") {
                $('#PackingSlipGridAdd').find('tr[id="datacharge"]').each(function () {
                    var $tds = $(this).find('td');
                    var myDets = {
                        CaseNumber: $tds.eq(0).text(),
                        Container: $tds.find(".packingdrpdwnadd").val(),
                        ContainerNo: $tds.eq(2).text(),
                        Mark: $tds.eq(3).text(),
                        PackQty: $tds.eq(4).text(),
                        PackQty2: $tds.eq(5).text(),
                        GrossWt: $tds.eq(6).text(),
                        NettWt: $tds.eq(7).text(),
                        TareWt: $tds.eq(8).text(),
                        Narr: $tds.eq(9).text(),
                        tempid: $tds.eq(10).text(),
                    }
                    PackArray.push(myDets);
                });
            }
            var ModelData = {};

            ModelData["Code"] = $('#txtitemcode').val();
            ModelData["ItemName"] = itemname;
            ModelData["Unit"] = $('#txtUnit').val();
            ModelData["HSN"] = $('#txtHSN').val();
            ModelData["GSTCode"] = $('#txtGSTCode').val();
            ModelData["Qty"] = $('#txtQty').val();
            ModelData["Factor"] = $('#txtFactor').val();
            ModelData["Qty2"] = $('#txtQty2').val();
            ModelData["Rate"] = $('#txtRate').val();
            ModelData["Disc"] = $('#txtDisc').val();
            ModelData["DiscAmt"] = $('#txtDiscAmt').val();
            ModelData["DiscPerAmt"] = $('#txtDiscPerAmt').val();
            ModelData["Taxable"] = $('#txtTaxable').val();
            ModelData["SGSTAmt"] = $('#txtSGSTAmt').val();
            ModelData["CGSTAmt"] = $('#txtCGSTAmt').val();
            ModelData["IGSTAmt"] = $('#txtIGSTAmt').val();
            ModelData["IGSTRate"] = $('#PIgst').val();
            ModelData["CGSTRate"] = $('#PCgst').val();
            ModelData["SGSTRate"] = $('#PSgst').val();
            ModelData["Val1"] = $('#txtVal1').val();
            ModelData["Narr"] = $('#txtNarr').val();
            ModelData["PAddOnList"] = ProductAddonArray;
            ModelData["StockSerialList"] = myStockSerialArray;
            ModelData["ItemBatchListPS"] = myBatchArray;
            ModelData["DelyScheList"] = myDelySchedule;
            ModelData["Store"] = $('#Store').val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $('#hdnchangelog').val();
            ModelData["RateOn2"] = $('#RateOn2').is(':checked');
            ModelData["Unit2"] = $('#txtUnit2').val();
            ModelData["BinNumber"] = $('#BinNumber').val();
            ModelData["PackingList"] = PackArray;
            ModelData["CVDExtra"] = $('#txtCVDExtra').val();
            ModelData["CVDAmt"] = $('#txtCVDAmt').val();
            ModelData["CVDCessAmt"] = $('#txtCVDCessAmt').val();
            ModelData["CVDSCessAmt"] = $('#txtCVDSCessAmt').val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["RateType"] = $('#hdnRateType').val();
            ModelData["RateCalcType"] = $('#hdnRateCalcType').val();
            ModelData["DiscChargeList"] = AddlDiscCharges;
            ModelData["DiscChargeAmt"] = $('#hdnDiscChargeAmt').val();
            ModelData["SourceDoc"] = $('#RefDoc').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("AddItemlist")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforesend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#errormessage').hide();
                    if (data.Status == "Duplicate") {
                        alert(" Cant Save Duplicate Batch are " + data.Message)
                        $(':input[id="btnadddata"]').prop('disabled', false);
                    }
                    else {

                        $('#ItemListTable').html(data.Html);
                        $('#txtf_F001').val(data.Taxable.toFixed(2));
                        $('#txtb_F001').val(data.Taxable.toFixed(2));
                        $('#txttottxable').val(data.Taxable.toFixed(2));
                        $('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                        $('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                        $('#txttotigst').val(data.IGSTAmt.toFixed(2));
                        if ($('#hdnSType').val() == "RP") {
                            $('#TDSAble').val(data.Taxable.toFixed(2));
                        }
                        SetValuesInTable()
                        //$('#hdnIsLedgerPostSv').val("False");
                        if ($('#hdnEnableParty').val() == "False") {
                            $('#divLedgerTable :input').prop('disabled', true);
                            //$('#CurrDiv :input').prop('disabled', true);
                        }
                        if ($('#hdnSType').val() == "RP") {
                            loadValuesTdsAble()
                        }
                    }


                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });

        $('button[action|="EditItem"]').click(function (event) {
            event.preventDefault(event);
            $('#itemlistupdate').modal({
                backdrop: 'static',
                keyboard: false
            });

            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["Account"] = $('#Account').val();
            ModelData["DelyCode"] = $('#DelyCode').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetItemListforUpdate")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                },
                success: function (data) {
                    $('#itemlistupdate').modal('show');
                    $('#ItemListUpdate').html(data.Html);
                },
                error: function (er) {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('button[action|="DeleteItem"]').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteItemList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#ErrorMessage').hide();
                    $('#ItemListTable').html(data.Html);
                    $('#txtf_F001').val(data.Taxable.toFixed(2));
                    $('#txtb_F001').val(data.Taxable.toFixed(2));
                    $('#txttottxable').val(data.Taxable.toFixed(2));
                    $('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                    $('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                    $('#txttotigst').val(data.IGSTAmt.toFixed(2));
                    if ($('#hdnSType').val() == "RP") {
                        $('#TDSAble').val(data.Taxable.toFixed(2));
                    }
                    SetValuesInTable()
                    var tab2size = $('#tabledata2 tbody tr').length;
                    if (tab2size == 0 && $('#hdnEnableParty').val() == "False") {
                        $('#divLedgerTable :input').prop('disabled', false);
                        //$('#CurrDiv :input').prop('disabled', false);
                    }
                    if ($('#hdnSType').val() == "RP") {
                        loadValuesTdsAble()
                    }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#btnbatch').click(function (event) {
            event.preventDefault();
            $('#itembatch').modal({
                backdrop: 'static',
                keyboard: false
            });

            if ($('#hdnBatchSaved').val() == "1") {
                $('#itembatch').modal('show');
            }
            else {
                var ModelData = {};
                ModelData["Store"] = $("#Store").val();
                ModelData["Party"] = $("#Store").val();
                ModelData["Code"] = $('#txtitemcode').val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $("#hdnchangelog").val();
                ModelData["Qty"] = $("#txtQty").val();
                ModelData["Qty2"] = $("#txtQty2").val();
                ModelData["RateOn2"] = $("#RateOn2").is(':checked');
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetItemBatchList")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#itembatch').modal('show');
                        $('#ItemBatch').html(data.Html);

                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $('#btnstksrl').click(function (event) {
            event.preventDefault();
            if ($('#Store').val() == '' || $('#Store').val() == '0' || $('#Store').val() == null) {
                alert('Please Select Store.')
                return;
            }
            if ($('#txtitemcode').val() == '' || $('#txtitemcode').val() == null) {
                alert('Please Select Item.')
                return;
            }
            $('#serialbatch').modal({
                backdrop: 'static',
                keyboard: false
            });
            if ($('#hdnStockSerialSaved').val() == "1") {
                $('#serialbatch').modal('show');
            }
            else {
                var ModelData = {};
                ModelData["Store"] = $("#Store").val();
                ModelData["Party"] = $("#Store").val();
                ModelData["Code"] = $('#txtitemcode').val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Qty"] = $("#txtQty").val();
                ModelData["Qty2"] = $("#txtQty2").val();
                ModelData["RateOn2"] = $("#RateOn2").is(':checked');
                ModelData["ChangeLog"] = $("#hdnchangelog").val();
                ModelData["LocationCode"] = $('#LocationCode').val();
                ModelData["SerialReq"] = $('#hdnSerialReq').val();
                ModelData["IsStockSerial"] = $('#hdnIsStockSerial').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetBatchSerialList")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#serialbatch').modal('show');
                        $('#SerialBatch').html(data.Html);
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $('#btnpack').click(function (event) {
            event.preventDefault();
            $('#PackingListAdd').modal({
                backdrop: 'static',
                keyboard: false
            });
            if ($('#hdnPackSaved').val() == "1") {
                $('#PackingListAdd').modal('show');
            }
            else {
                var ModelData = {};
                ModelData["Code"] = $('#txtitemcode').val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $("#hdnchangelog").val();

                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPackingList")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#PackingListAdd').modal('show');
                        $('#packinglistadddiv').html(data.Html);

                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $("#btnitemAddon").click(function (event) {
            event.preventDefault();
            $('#prodaddonmodel').modal({
                backdrop: 'static',
                keyboard: false
            });
            if ($('#hdnProductAddonSaved').val() == "1") {
                $('#prodaddonmodel').modal('show');
            }
            else {
                var url = '@Url.Action("GetProductAddOnList")?Code=' + $("#hdnProductAddOn").val() + '&Type=' + $("#hdnType").val();
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    type: "GET",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#prodaddonmodel').modal('show');
                        $('#prodDialog').html(data.Html);
                        $('#controllername').val(data.Controller);

                    },
                });
            }
            $('#prodaddongrid input[id=txtpadd_F001]').focus();
        });

        $('#btndelaysch').click(function (event) {
            event.preventDefault();
            $('#delaysche').modal({
                backdrop: 'static',
                keyboard: false
            });
            if ($('#hdnDelySchSaved').val() == "1") {
                $('#delaysche').modal('show');
            }
            else {
                var ModelData = {};
                ModelData["Store"] = $("#Store").val();
                ModelData["Party"] = $("#Store").val();
                ModelData["Code"] = $('#txtitemcode').val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["ChangeLog"] = $("#hdnchangelog").val();
                ModelData["Qty"] = $("#txtQty").val();
                ModelData["Qty2"] = $("#txtQty2").val();
                ModelData["RateOn2"] = $("#RateOn2").is(':checked');
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetDelivaryScheduled")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#delaysche').modal('show');
                        $('#DelaySche').html(data.Html);
                        GetDlyRemainOfQtyAdd()
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });



        $('button[action|="ShowDelayAddSess"]').click(function (event) {
            event.preventDefault();
            $('#shwdelaysche').modal({
                backdrop: 'static',
                keyboard: false
            });
            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetAddSessSaveSDelSch")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#shwdelaysche').modal('show');
                    $('#ShwDelaySche').html(data.Html);

                    GetDlyRemainOfQtyEdt();
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });


        $('#btndiscchargesAdd').click(function (event) {
            event.preventDefault();

            if ($('#hdnAddDisChgSvd').val() == "1") {
                $('#disccalcmodel').modal('show');
            }
            else {
                if ($('#hdnDiscNotAllowed').val() == "True" || $('#hdnDiscNotAllowed').val() == "true") {
                    alert('Cant set Discount Charges since already PriceRate is set .')
                    return;
                }
                if ($('#txtitemcode').val() == '' || $('#txtitemcode').val() == null) {
                    alert('Please Select Item.')
                    return;
                }
                if ($('#txtitemcode').val() == '' || $('#txtitemcode').val() == null) {
                    alert('Please Select Item.')
                    return;
                }
                var ModelData = {};
                ModelData["Code"] = $("#txtitemcode").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["DiscNotAllowed"] = $("#hdnDiscNotAllowed").val();
                ModelData["DocuDate"] = $("#DocuDate").val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetDiscountCharges")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#disccalcmodel').modal('show');
                        $('#discchargeDialog').html(data.Html);


                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });



        $('button[action|="ShowPackListSess"]').click(function (event) {
            event.preventDefault();
            $('#PackingListEdit').modal({
                backdrop: 'static',
                keyboard: false
            });
            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetEditPackingList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#PackingListEdit').modal('show');
                    $('#packinglistedit').html(data.Html);
                    $('#controllername').val(data.Controller);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
    });

    function loadProductDetails() {
        var url = '@Url.Action("GetProductDetails")?Code=' + $('#txtitemcode').val() + '&MainType=' + $('#hdnMType').val() + '&Store=' + $('#Store').val() + '&Account=' + $('#Account').val() + '&Type=' + $("#hdnType").val() + '&DocuDate=' + $("#DocuDate").val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#txtUnit').val(result.Unit);
                $('#hdnGSTCode').val(result.GSTCode);
                $('#hdnHSN').val(result.HSN);
                $('#hdnUnit2').val(result.Unit2);
                $('#txtDiscAmt').val(parseFloat(result.DiscAmt));
                $('#txtDisc').val(parseFloat(result.Disc));
                $('#hdnBinNumber').val(result.BinNumber);
                $('#txtStock').val(result.Stock);
                $('#txtStock2').val(result.Stock2);
                $('#hdnMinSaleRate').val(result.MinSaleRate);
                $('#txtNarr').text(result.Narr);
                $('#hdnRateType').val(result.RateType);
                $('#hdnRateCalcType').val(result.RateCalcType);
                $('#hdnDiscNotAllowed').val(result.DiscNotAllowed);
                loadHSN();
                loadGSTCode();
                loadUnit2();
                //loadStore();
                loadBinNumber();
                $('#txtRate').val(parseFloat(result.Rate));
                $('#txtFactor').val(parseFloat(result.Factor));
                if (result.RateOn2 == true) {
                    $('#RateOn2').prop('checked', true);
                }
                else {
                    $('#RateOn2').prop('checked', false);
                }
                $('#hdnSerialReq').val(result.SerialReq);
                $('#hdnIsStockSerial').val(result.IsStockSerial);
                if ($('#hdnIsStockSerial').val() == "False" || $('#hdnIsStockSerial').val() == "false") {
                    $('#btnstksrl').hide();
                }
                else {
                    $('#btnstksrl').show();
                }
                if(result.DiscNotAllowed == false){
                    DiscChargesPopulateOnProdSelection()
                }
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("1-An error occurred while processing the request.");
            }
        });
    }
    function CalTaxableOnDisc() {
        var taxable;
        if ($('#RateOn2').is(':checked')) {
            taxable = (parseFloat($('#txtQty2').val()) * parseFloat($('#txtRate').val()));
        }
        else {
            taxable = (parseFloat($('#txtQty').val()) * parseFloat($('#txtRate').val()));
        }
        if ($('#hdnInclusive').val() == "false" || $('#hdnInclusive').val() == "False") {
            //(parseFloat($('#txtTaxable').val(taxable)));
            var pa = (parseFloat($('#txtDisc').val()));
            //var sper = (parseFloat($('#txtTaxable').val()));

            var samt = (pa * taxable) / 100;
            $('#txtDiscPerAmt').val(samt.toFixed(2));
        }
        else {
            //(parseFloat($('#txtVal1').val(taxable)));
            var pa = parseFloat($('#txtDisc').val());
            //var sper = parseFloat($('#txtVal1').val());

            var samt = (pa * taxable) / 100;
            $('#txtDiscPerAmt').val(samt.toFixed(2));
        }
    }
    function loadItem() {
        var url = '@Url.Action("GetItemList")'
        $('#txtitemdesc').select2({
            minimumInputLength: @Session["MinItem"],
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: @Session["MinItem"],
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $('#hdnType').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: "[" + item.Code + "] " + item.Name, id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var elementText = $(element).attr('data-init-text');
                xcallback({ "term": elementText });
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadStore() {
        var url = '@Url.Action("GetStoreCode")?Type=' + $('#hdnType').val() + '&SubType=' + $('#hdnSType').val() + '&LocationCode=' + '@Model.LocationCode';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Store").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Store').val($('#hdnStore').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("2-An error occurred while processing the request.");
            }
        });
    };

    function loadBinNumber() {
        var url = '@Url.Action("GetBinNumber")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#BinNumber").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#BinNumber').val($('#hdnBinNumber').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("2-An error occurred while processing the request.");
            }
        });
    };

    function loadHSN() {
        var url = '@Url.Action("GetHSN")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $("#txtHSN").empty();
                $.each(result, function (i, item) {
                    $("#txtHSN").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#txtHSN').val($('#hdnHSN').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("2-An error occurred while processing the request.");
            }
        });
    };

    function loadUnit2() {
        var url = '@Url.Action("GetUnit")?Code=' + $('#txtitemcode').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
            },
            success: function (result) {
                $("#txtUnit2").empty();
                $.each(result, function (i, item) {
                    $("#txtUnit2").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#txtUnit2').val($('#hdnUnit2').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("3-An error occurred while processing the request.");
            }
        });
    };

    function loadGSTCode() {
        var url = '@Url.Action("GetGSTCode")?MainType=' + $("#hdnMType").val() + '&VATGSTApp=' + $('#hdnVATGSTApp').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $("#txtGSTCode").empty();
                $.each(result, function (i, item) {
                    $("#txtGSTCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#txtGSTCode').val($('#hdnGSTCode').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("4-An error occurred while processing the request.");
            }
        });
    };

    function CheckItemBatch() {
        $('#ErrorMessage').hide();
        var url = '@Url.Action("CheckItemBatch")' + '?Store=' + $('#Store').val() + '&Code=' + $('#txtitemcode').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.IsBatchReqd == false) {
                    $('#btnbatch').removeClass('btn btn-primary btn-sm disabled');
                    $('#btnbatch').addClass('btn btn-primary btn-sm');
                }
                else {
                    $('#btnbatch').removeClass('btn btn-primary btn-sm');
                    $('#btnbatch').addClass('btn btn-primary btn-sm disabled');
                }
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("5-An error occurred while processing the request.");
            }
        });
    }

    function CheckBatchSerial() {
        $('#ErrorMessage').hide();
        var url = '@Url.Action("CheckBatchSerial")' + '?Store=' + $('#Store').val() + '&Code=' + $('#txtitemcode').val() + '&LocationCode=' + $('#LocationCode').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {

                if (result.IsStockSerial == false) {
                    $('#btnstksrl').removeClass('btn btn-primary btn-sm disabled');
                    $('#btnstksrl').addClass('btn btn-primary btn-sm');
                }
                else {
                    $('#btnstksrl').removeClass('btn btn-primary btn-sm');
                    $('#btnstksrl').addClass('btn btn-primary btn-sm disabled');
                }
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("6-An error occurred while processing the request.");
            }
        });
    }

    function GetGSTCalculation() {
        $('#ErrorMessage').hide();
        if ($('#DelyCode').val() == '') {
            $('#ErrorMessage').show();
            $('#ErrorMessage').text('Please Select Shipping party.')
            return;
        }
        //$("#PCgst").val(0);
        //$("#PSgst").val(0);
        //$("#PIgst").val(0);
        //$("#txtIGSTAmt").val(0);
        //$("#txtCGSTAmt").val(0);
        //$("#txtSGSTAmt").val(0);
        var ModelData = {};
        ModelData["DelyCode"] = $('#DelyCode').val();
        ModelData["HSN"] = $('#txtHSN').val();
        ModelData["GSTCode"] = $('#txtGSTCode').val();
        ModelData["Code"] = $('#txtitemcode').val();
        ModelData["MainType"] = $('#hdnMType').val();
        ModelData["LocationCode"] = $('#LocationCode').val();
        ModelData["Sno"] = $('#DelyAltAdd').val();
        ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
        ModelData["GSTType"] = $('#GSTType').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetGSTCalculation")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                $("#ErrorMessage").hide();
                if (result != null) {
                    $("#PCgst").val(result.CGSTRate);
                    $("#PSgst").val(result.SGSTRate);
                    $("#PIgst").val(result.IGSTRate);
                    $("#hdnInclusive").val(result.Inclusive);
                }

                Calculation()
            },
            error: function () {
                $('.spinner').hide();
                alert("7-An error occurred while processing the request.");
            }
        });
    }

    function Calculation() {
        CalTaxableOnDisc()

        if ($('#hdnRateType').val() == "P" || $('#hdnRateType').val() == "V") {
            var url = '@Url.Action("GetRateByRatePercent")?RateCalcType=' + $('#hdnRateCalcType').val() + '&Rate=' + $('#txtRate').val() + '&RateType=' + $('#hdnRateType').val();
            $.ajax({
                async: false,
                cache: false,
                url: url,
                type: "GET",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                },
                success: function (data) {
                    $('#hdnRateTypeTaxable').val(data.Taxable);
                },
            });
        }
        var taxable;
        var value;
        if ($('#hdnInclusive').val() == "false" || $('#hdnInclusive').val() == "False") {

            if ($('#hdnRateType').val() == "P" || $('#hdnRateType').val() == "V") {
                if ($('#RateOn2').is(':checked')) {
                    $('#txtQty2').val(parseFloat(1));
                    taxable = (parseFloat($('#hdnRateTypeTaxable').val()));
                }
                else {
                    $('#txtQty').val(parseFloat(1));
                    taxable = (parseFloat($('#hdnRateTypeTaxable').val()));
                }
            }
            else {

                if ($('#RateOn2').is(':checked')) {
                    taxable = (parseFloat($('#txtQty2').val()) * parseFloat($('#txtRate').val()));
                }
                else {
                    taxable = (parseFloat($('#txtQty').val()) * parseFloat($('#txtRate').val()));
                }
            }

            var samt = parseFloat($('#txtDiscAmt').val());
            var dicpamt = parseFloat($('#txtDiscPerAmt').val());
            var prodchargeamt = parseFloat($('#hdnDiscChargeAmt').val());

            var discval;
            if ($('#hdnSType').val() == "IM") {
                discval = (taxable - samt - dicpamt + prodchargeamt) + parseFloat($('#txtCVDExtra').val()) + parseFloat($('#txtCVDAmt').val()) + parseFloat($('#txtCVDCessAmt').val()) + parseFloat($('#txtCVDSCessAmt').val());
            }
            else {
                discval = (taxable - samt - dicpamt + prodchargeamt);
            }
            var taxablewithcurr = discval * parseFloat($('#CurrRate').val());

            $('#txtTaxable').val(taxablewithcurr.toFixed(2));

            var sper1 = (parseFloat($("#txtTaxable").val()));
            var PCgst = (parseFloat($("#PCgst").val()));
            var AmtCgst = (PCgst * sper1) / 100;
            $('#txtCGSTAmt').val(AmtCgst.toFixed(2));


            var sper2 = (parseFloat($("#txtTaxable").val()));
            var PSgst = (parseFloat($("#PSgst").val()));
            var AmtSgst = (PSgst * sper2) / 100;
            $('#txtSGSTAmt').val(AmtSgst.toFixed(2));


            var sper3 = (parseFloat($("#txtTaxable").val()));
            var PIgst = (parseFloat($("#PIgst").val()));
            var AmtIgst = (PIgst * sper3) / 100;
            $('#txtIGSTAmt').val(AmtIgst.toFixed(2));

            var FTval = (parseFloat($("#txtTaxable").val()));
            var FIval = (parseFloat($("#txtIGSTAmt").val()));
            var FCval = (parseFloat($("#txtCGSTAmt").val()));
            var FSval = (parseFloat($("#txtSGSTAmt").val()));
            var Fval = FTval + FIval + FCval + FSval
            $('#txtVal1').val(Fval.toFixed(2));
        }
        else {
            var prodchargeamt = parseFloat($('#hdnDiscChargeAmt').val());
            if ($('#hdnRateType').val() == "P" || $('#hdnRateType').val() == "V") {
                if ($('#RateOn2').is(':checked')) {
                    $('#txtQty2').val(parseFloat(1));
                    value = (parseFloat($('#hdnRateTypeTaxable').val()));
                }
                else {
                    $('#txtQty').val(parseFloat(1));
                    value = (parseFloat($('#hdnRateTypeTaxable').val()));
                }
            }
            else {
                if ($('#RateOn2').is(':checked')) {
                    value = (parseFloat($('#txtQty2').val()) * parseFloat($('#txtRate').val()));
                }
                else {
                    value = (parseFloat($('#txtQty').val()) * parseFloat($('#txtRate').val()));
                }
            }
            var val1 = value;
            var samt = parseFloat($('#txtDiscAmt').val());
            var dicpamt = parseFloat($('#txtDiscPerAmt').val());

            var discval;
            if ($('#hdnSType').val() == "IM") {
                discval = (val1 - samt - dicpamt + prodchargeamt) + parseFloat($('#txtCVDExtra').val()) + parseFloat($('#txtCVDAmt').val()) + parseFloat($('#txtCVDCessAmt').val()) + parseFloat($('#txtCVDSCessAmt').val());
            }
            else {
                discval = (val1 - samt - dicpamt + prodchargeamt);
            }
            var taxablewithcurr = discval * parseFloat($('#CurrRate').val());

            $('#txtVal1').val(taxablewithcurr.toFixed(2));
            var gstintaxable = parseFloat($("#PIgst").val()) + parseFloat($("#PCgst").val()) + parseFloat($("#PSgst").val());
            taxable = (taxablewithcurr * 100) / (gstintaxable + 100);
            $('#txtTaxable').val(parseFloat(taxable.toFixed(2)));

            var sper1 = taxable;
            var PCgst = (parseFloat($("#PCgst").val()));
            var AmtCgst = (PCgst * sper1) / 100;
            $('#txtCGSTAmt').val(AmtCgst.toFixed(2));
            var sper2 = taxable;
            var PSgst = (parseFloat($("#PSgst").val()));
            var AmtSgst = (PSgst * sper2) / 100;
            $('#txtSGSTAmt').val(AmtSgst.toFixed(2));
            var sper3 = taxable;
            var PIgst = (parseFloat($("#PIgst").val()));
            var AmtIgst = (PIgst * sper3) / 100;
            $('#txtIGSTAmt').val(AmtIgst.toFixed(2));
        }

    }

    function MadidateSerial() {
        var url = '@Url.Action("MandiDateSerial")?Code=' + $('#txtitemcode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $('#hdnSerialReq').val(data.SerialReq);
            },
        });
        if($("#NonStock").val() == "False" || $("#NonStock").val() == "false"){
            if ($('#hdnSerialReq').val() == "true" || $('#hdnSerialReq').val() == "True") {
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                    var checkedSerialPR = 0;
                    $('#ItemSerialPR tr:not(:first)').each(function () {
                        var tds = $(this).find('td');
                        if (tds.eq(1).find("input[class='txtserialinp']").val() != null && tds.eq(1).find("input[class='txtserialinp']").val().trim() != '') {
                            var SerialPR = 1;
                            checkedSerialPR += (parseInt(SerialPR));
                        }
                    })

                    if ($("#RateOn2").is(':checked')) {
                        if (parseInt(checkedSerialPR) != parseInt($('#txtQty2').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        if (parseInt(checkedSerialPR) != parseInt($('#txtQty').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                }
                if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX") {
                    var checkedSerialSl = 0;
                    $('#ItemSerialSL tr:not(:first)').each(function () {
                        if ($(this).find('input[type="checkbox"]').is(':checked')) {
                            var CheckSL = 1;
                            checkedSerialSl += (parseInt(CheckSL));
                        }
                    })

                    if ($("#RateOn2").is(':checked')) {
                        if (parseInt(checkedSerialSl) != parseInt($('#txtQty2').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        if (parseInt(checkedSerialSl) != parseInt($('#txtQty').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                }
            }
        }
        else{
            return false;
        }

    }

    function MadidateBatch() {
        var url = '@Url.Action("CheckItemBatch")?Code=' + $('#txtitemcode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $('#hdnIsBatchReqd').val(data.IsBatchReqd);
            },
        });
        if($("#NonStock").val() == "False" || $("#NonStock").val() == "false"){
            if ($('#hdnIsBatchReqd').val() == "true" || $('#hdnIsBatchReqd').val() == "True") {
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                    var checkedBatchPR = 0;
                    if ($("#RateOn2").is(':checked')) {
                        $('#ItmBtPR tbody tr').each(function () {
                            var tds = $(this).find('td');
                            var BatchPR = tds.eq(3).text();
                            checkedBatchPR += (parseInt(BatchPR));
                        }
                        )
                    }
                    else {
                        $('#ItmBtPR tbody tr').each(function () {
                            var tds = $(this).find('td');
                            var BatchPR = tds.eq(2).text();
                            checkedBatchPR += (parseInt(BatchPR));
                        })
                    }
                    if ($("#RateOn2").is(':checked')) {
                        if (parseInt(checkedBatchPR) != parseInt($('#txtQty2').val())) {
                            alert('Please Enter Batch Qty2 Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        if (parseInt(checkedBatchPR) != parseInt($('#txtQty').val())) {
                            alert('Please Enter Batch Qty Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }
                }
                if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX") {
                    var checkedBatchSl = 0;
                    if ($("#RateOn2").is(':checked')) {
                        $('#itembatchSL tr:not(:first)').each(function () {
                            if ($(this).find('input[type="checkbox"]').is(':checked')) {
                                var tds = $(this).find('td');
                                var CheckSL = parseFloat(tds.eq(4).text());
                                checkedBatchSl += (parseInt(CheckSL));
                            }
                        })
                    }
                    else {
                        $('#itembatchSL tr:not(:first)').each(function () {
                            if ($(this).find('input[type="checkbox"]').is(':checked')) {
                                var tds = $(this).find('td');
                                var CheckSL = parseFloat(tds.eq(3).text());
                                checkedBatchSl += (parseInt(CheckSL));
                            }
                        })
                    }

                    if ($("#RateOn2").is(':checked')) {
                        if (parseInt(checkedBatchSl) != parseInt($('#txtQty2').val())) {
                            alert('Please Enter Batch Qty2 Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        if (parseInt(checkedBatchSl) != parseInt($('#txtQty').val())) {
                            alert('Please Enter Batch Qty Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }
                    }
                }
            }
        }
        else{
            return false;
        }
    }

    function CheckDuplBatch() {
        var actualdupl = false;
        var url = '@Url.Action("CheckNoDuplBatch")?Code=' + $('#txtitemcode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $("#hdnBatchNoDupl").val(data.BatchNoDupl);
            },
        });

        if ($('#hdnBatchNoDupl').val() == "Y") {
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                var DuplBatchArray = [];
                $('#ItmBtPR tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    DuplBatchArray.push(tds.eq(1).text());
                })
                for (var i = 0; i < DuplBatchArray.length - 1; i++) {

                    for (var ai = i; ai < DuplBatchArray.length - 1; ai++) {
                        if (ai != i && DuplBatchArray[ai] == DuplBatchArray[i]) {
                            alert('Duplicate Batch Found Pls Check')
                            actualdupl = true;
                            return;

                        }
                    }
                }
            }
        }
        return actualdupl;
    }

    function DiscChargesPopulateOnProdSelection(){
        var ModelData = {};
        ModelData["Code"] = $("#txtitemcode").val();
        ModelData["Account"] = $("#Account").val();
        ModelData["DiscNotAllowed"] = $("#hdnDiscNotAllowed").val();
        ModelData["DocuDate"] = $("#DocuDate").val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetDiscountCharges")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#discchargeDialog').html(data.Html);
            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }

    function CalcAddlDiscChargesOnTab(){
        var DCSerial = [];
        $('#addldiscchargesgrid tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Disc: tds.eq(2).text(),
                DiscCaption: tds.eq(1).text(),
                AddLess: tds.eq(3).text(),
                CalcOn: tds.eq(4).text(),
                DiscAmt: tds.eq(5).text()
            }
            DCSerial.push(myDets);
        });
        var ModelData = {};
        ModelData["DiscChargeList"] = DCSerial;
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["ChangeLog"] = $("#hdnchangelog").val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["Qty"] = $("#txtQty").val();
        ModelData["Rate"] = $("#txtRate").val();
        ModelData["RateOn2"] = $('#RateOn2').is(':checked');
        ModelData["Qty2"] = $('#txtQty2').val();
        ModelData["DiscNotAllowed"] = $('#hdnDiscNotAllowed').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("CalDiscountCharges")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforesend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#discchargeDialog').html(data.Html);
                $('#hdnDiscChargeAmt').val(data.DiscAmt.toFixed(2))
                Calculation()
            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }

    function loadPopulateQty2() {
        var ModelData = {};
        ModelData["Code"] = $('#txtitemcode').val();
        ModelData["Unit"] = $('#txtUnit').val();
        ModelData["Unit2"] = $('#txtUnit2').val();
        ModelData["Factor"] = $('#txtFactor').val();
        ModelData["Qty"] = $('#txtQty').val();
        ModelData["Qty2"] = $('#txtQty2').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("PopulateQty2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#txtQty2').val(parseFloat(result.Qty2).toFixed(2));
                $('.spinner').hide();
                GetGSTCalculation()
                CalcAddlDiscChargesOnTab()
            },
            error: function () {
                $('.spinner').hide();
                alert("8-An error occurred while processing the request.");
            }
        });
    }

    function loadFactorOnUnit2() {
        var ModelData = {};
        ModelData["Code"] = $('#txtitemcode').val();
        ModelData["Unit"] = $('#txtUnit').val();
        ModelData["Unit2"] = $('#txtUnit2').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("LoadFactorByUnit2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#txtFactor').val(result.Factor);
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("9-An error occurred while processing the request.");
            }
        });
    }

    function loadQty1byQty2() {
        var ModelData = {};
        ModelData["Code"] = $('#txtitemcode').val();
        ModelData["Unit"] = $('#txtUnit').val();
        ModelData["Unit2"] = $('#txtUnit2').val();
        ModelData["Factor"] = $('#txtFactor').val();
        ModelData["Qty2"] = $('#txtQty2').val();
        ModelData["Qty"] = $('#txtQty').val();
        ModelData["RateOn2"] = $("#RateOn2").is(':checked');
        var DTO = { Model: ModelData };
        var url = '@Url.Action("PopulateQty1byQty2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#txtQty').val(parseFloat(result.Qty).toFixed(2));
                GetGSTCalculation()
                CalcAddlDiscChargesOnTab()
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("10-An error occurred while processing the request.");
            }
        });
    }
</script>


<div class="container-fluid" style="margin-top:8px;margin-left:-5px;">
    @if (Model.LorryReceipt != null)
    {
        <div>
            <table id="example2" class="table-bordered example" style="width:145%!important;">
                <thead>
                    <tr>
                        <th class="hidden">Reco</th>
                        <th>Delete</th>
                        <th>Edit</th>
                        <th>LRNo</th>
                        <th>LR Date</th>
                        <th>Total Qty</th>
                        <th>Unbill Qty</th>
                        <th>Bill Qty</th>
                        <th>From</th>
                        <th>To</th>
                        <th>Consigner</th>
                        <th>Consignee</th>
                        @if (Model.LorryReceipt != null)
                        {
                            if (Model.LorryReceipt.ChargeName != null)
                            {
                                var ChargeName = Model.LorryReceipt.ChargeName;
                                for (int i = 0; i < ChargeName.Length; i++)
                                {
                                    if (ChargeName[i] != null)
                                    {
                                        <th>@ChargeName[i]</th>
                                    }
                                }
                            }
                        }
                        <th>Description</th>
                        <th>Narr</th>
                        <th>Bill Narr</th>
                        
                    </tr>
                </thead>
                <tbody style="max-height:400px;min-height:400px;width:100%; overflow-x:hidden;overflow-y:auto">
                    @if (Model.NewItemListLR!=null)
                    {
                        foreach (var item in Model.NewItemListLR.ToList())
                        {
                            <tr id="@item.LRno">
                                <td class="hidden RecordeK">@item.RECORDKEY</td>
                                <td>
                                    <center>
                                        <button class="btn btn-danger deletebtn" style="font-size: 13px;padding:3px 13px;" id="@("btnDelete"+item.LRno)"><i class="glyphicon glyphicon-trash" style="font-size: 1.2em;"></i></button>
                                    </center>
                                </td>
                                <td>
                                    <center>
                                        <button class="btn btn-primary editrow" style="font-size: 13px;padding:3px 13px;" id="@("btnEdit"+item.LRno)"><i class="glyphicon glyphicon-edit" style="font-size: 1.2em;"></i></button>
                                        <button class="btn btn-primary Saverow hidden" style="font-size: 13px;padding:3px 13px;" id="@("btnEdit"+item.LRno)"><i class="glyphicon glyphicon-floppy-saved" style="font-size: 1.2em;"></i></button>
                                    </center>
                                </td>
                                <td class="GetLRNO">@item.LRno</td>
                                <td>@item.LRDate.ToString("dd/MM/yyyy")</td>
                                <td>@item.TotalQty</td>
                                <td>@item.UnbillQty</td>
                                <td>@item.BillQty</td>
                                <td id="@item.FromCode">@item.From</td>
                                <td id="@item.ToCode">@item.To</td>
                                <td id="@item.ConsignerCode">@item.Consigner</td>
                                <td id="@item.ConsigneeCode">@item.Consignee</td>
                                @if (Model.NewItemListLR.Select(x => x.ChargeName).FirstOrDefault() != null)
                                {
                                    var ChargeName = Model.NewItemListLR.Select(x => x.ChargeName).FirstOrDefault();
                                    var FLD = Model.NewItemListLR.Select(x => x.Fld).FirstOrDefault();
                                    for (int i = 0; i < ChargeName.Length; i++)
                                    {
                                        if (ChargeName[i] != null)
                                        {
                                            <td id="@FLD[i]" class="UniqueCharge">@item.ChargeValue[i]</td>
                                        }
                                    }
                                }
                                <td id="@item.DescriptionsCode">@item.Descriptions</td>
                                <td>@item.LrNarr</td>
                                <td>@item.NewNarr</td>
                            </tr>
                        }
                    }


                </tbody>

            </table>
        </div>
    }
</div>



<div class="example-modal">
    <div id="itemlistupdate" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;overflow:unset">
            <div id="ItemListUpdate">
                @*@Html.Partial("UpdateItemList")*@
            </div>
        </div>
    </div>
</div>



@Html.HiddenFor(x => x.HSN, new
{
    @Id = "hdnHSN"
})
@Html.HiddenFor(x => x.GSTCode, new
{
    @Id = "hdnGSTCode"
})
@Html.HiddenFor(x => x.Unit2, new
{
    @Id = "hdnUnit2"
})

@Html.HiddenFor(x => x.BinNumber, new
{
    @Id = "hdnBinNumber"
})
@Html.HiddenFor(x => x.Inclusive, new
{
    @Id = "hdnInclusive"
})
@Html.HiddenFor(x => x.SerialReq, new
{
    @Id = "hdnSerialReq"
})
@Html.HiddenFor(x => x.MinSaleRate, new
{
    @Id = "hdnMinSaleRate"
})
@Html.HiddenFor(x => x.IsBatchReqd, new { @Id = "hdnIsBatchReqd" })
@Html.HiddenFor(x => x.BatchNoDupl, new { @Id = "hdnBatchNoDupl" })
@Html.HiddenFor(x => x.RateType, new { @Id = "hdnRateType" })
@Html.HiddenFor(x => x.RateTypeTaxable, new { @Id = "hdnRateTypeTaxable" })
@Html.HiddenFor(x => x.RateCalcType, new { @Id = "hdnRateCalcType" })
@Html.HiddenFor(x => x.DiscChargeAmt, new { @Id = "hdnDiscChargeAmt" })
@Html.HiddenFor(x => x.hdnAddDisChgSvd, new { @Id = "hdnAddDisChgSvd" })
@Html.HiddenFor(x => x.DiscNotAllowed, new { @Id = "hdnDiscNotAllowed" })
@Html.HiddenFor(x => x.IsStockSerial, new { @Id = "hdnIsStockSerial" })


@functions{
    string GetFixedTwo(decimal dcb)
    {
        decimal d = Math.Floor(100 * dcb) / 100;
        string s = d.ToString("N2");
        return s;
    }
}