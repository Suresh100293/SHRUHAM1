@model TFATERPWebApplication.Areas.Accounts.Models.PurchaseVM
@using Common;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_NewLayoutMenu.cshtml";
}
<style>
    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }

    .SearchRow {
        background-color: coral;
    }
</style>
<style>
    .form-horizontal .control-label {
        padding-top: 6px;
        color: black;
        text-align: left;
    }

    .headername {
        font-size: medium;
        font-family: Tahoma;
        font-weight: 700;
    }

    /*.fixhead {
        text-transform: uppercase;
    }*/

    .modal-dialog {
        /*margin: 124px auto;*/
        align-self: center;
    }

    .form-group {
        margin-bottom: 5px;
    }

    .btnsaveclass {
        background-color: #95b75d;
        border-color: #95b75d;
        color: #FFFFFF;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .tabcontent {
        overflow: scroll;
        height: 360px;
        padding: 0px 0px;
    }
</style>
<script>
    $(document).ready(function () {
        $(".panel").height(560);
        $('#DocuDate').focus();
        $('#DocuDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#OrdDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        loadParty();
        if ( ($("#hdnSType").val() == "RS") ) {
            $("#lblDate").text('Order Date:');
            $("#lblNo").text('Order No.:');
        }
        $('#FetchSingleLR').modal('hide');

        $('#txttottxable').val(parseFloat(@Model.Taxable).toFixed(2))
        $('#txttotcgst').val(parseFloat(@Model.CGSTAmt).toFixed(2))
        $('#txttotsgst').val(parseFloat(@Model.SGSTAmt).toFixed(2))
        $('#txttotigst').val(parseFloat(@Model.IGSTAmt).toFixed(2))
        $('#txtinvamt').val(parseFloat(@Model.InvoiceAmt).toFixed(2))

    });

    function loadParty() {
        var url = '@Url.Action("GetPartyList")?BaseGr=' + $("#hdnMType").val() + '&Code=' + $("#hdnType").val();
        $('#Account').select2({
            minimumInputLength: @Session["MinAcc"],
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: @Session["MinAcc"],
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1, term: term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name, id: item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Account', text: '@Model.AccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>
<header class="header fixed-top" id="headerdiv" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt" id="headercaption">@Model.id (@Model.Type)</b>
        <span class="tools pull-right">
            <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.ChangeLog Mode</b>
        </span>
    </div>
</header>
<div class="panel">
    <div class="panel-body" style="padding:18px 3px 5px 3px;">
        <div class="form-horizontal" id="frmpurchase" role="form" style="margin-top:32px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none;padding:2px;"></div>
            <div class="form-group" style="padding-left:10px;width:98%;">
                <label class="col-sm-1 control-label" style="padding-right:0px;width:7.3%">Invoice Dt:</label>
                <div class="col-sm-2" style="width:150px;">
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.DocuDate, new { @type = "text", @class = "form-control", @id = "DocuDate", @Name = "DocuDate", @Value = Model.DocDate.ToString("dd-MM-yyyy"), @style = "text-align:center;font-weight:bolder;font-size:14px;" })
                    </div>
                </div>
                <label class="col-sm-1 control-label" style="padding-right:0px;width:6.3%;padding-left:0px;">BillNumber :</label>
                <div class="col-sm-2" style="width:150px;">
                    @Html.TextBoxFor(x => x.BillNumber, new { @class = "form-control", @id = "BillNumber", @Name = "BillNumber", @disabled = "disabled", @Value = Model.BillNumber, @style = "font-weight:bolder;font-size:14px;" })
                </div>
                <label class="col-sm-1 control-label" style="padding-left:25px;">Bill-To Party:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Account, new { @class = "input-large search-query", @style = "width:100%;margin-top:2px;font-weight:bold;background-color:lightgray;", @id = "Account", @name = "Account" })
                </div>
                <div class="col-sm-2" style="width:150px;padding-left:3px;">
                    <button type="button" style="height:28px;padding-top:4px;" class="btn btn-primary" id="PickData">Source Document</button>
                </div>
            </div>
            <div class="form-horizontal" role="form" style="padding-right:0px;">
                <header class="panel-heading" style="margin-left:0px; background-color:lightgray;color:black;height:22px;padding-top:1px;border-radius:0px;">
                    LR Details
                </header>
                <div class="form-group" style="margin-top:5px;margin-left: 1px;margin-right: 1px;overflow:auto;">
                    <div class="col-sm-12" id="ItemListTable" style="height:300px;">
                        @Html.Partial("ItemList", Model)
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@Html.HiddenFor(x => x.SubType, new { @id = "hdnSType" })

<div class="footer-section" style="position:fixed;background-color:whitesmoke;padding:2px;color:unset;height:70px;border:solid 1px black;">
    <div class="row" style="margin-top:2px;">
        <label class="col-sm-1 control-label" style="padding-left:20px;">Taxable:</label>
        <div class="col-sm-1">
            <input type="text" id="txttottxable" alt="" class="form-control" style="width:110px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" id="igstfootlbl" style="padding-top:4px;">IGST Amt:</label>
        <div class="col-sm-1">
            <input type="text" id="txttotigst" alt="" class="form-control" style="width:110px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" id="sgstfootlbl" style="padding-top:4px;">SGST Amt:</label>
        <div class="col-sm-1">
            <input type="text" id="txttotsgst" alt="" class="form-control" style="width:110px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" id="cgstfootlbl" style="padding-top:4px;">CGST Amt:</label>
        <div class="col-sm-1">
            <input type="text" id="txttotcgst" alt="" class="form-control" style="width:110px;text-align:right;font-weight:bold;border-color:gray;background-color:lightgray;" disabled="disabled" />
        </div>
        <label class="col-sm-1 control-label" style="padding-top:4px;">Inv.Amount:</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.InvoiceAmt, new
       {
           @class = "form-control",
           @style = "width:160px;text-align:right;font-weight:bolder;background-color:gray;color:white;padding-right:5px;font-size:15pt;",
           @Name = "txtinvamt",
           @Id = "txtinvamt",
           @readonly = "readonly"
       })
        </div>
    </div>
</div>

<footer id="fixedbottom" class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        @if (Model.ChangeLog == "Edit" || Model.ChangeLog == "View" || Model.ChangeLog == "Delete")
        {
            <div class="col-sm-3">
                @*<button class="btn btn-warning" id="EditbtnAddOns" style="font-size: 13px;padding:3px 12px;" name="Command">AddOns</button>
                    <button class="btn btn-warning" id="btnAddDoc" style="font-size: 13px;padding:3px 12px;" name="Command">Attach Doc</button>*@

            </div>
            <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                T.FAT ERP-iX9, Suchan Software Private Limited
            </div>
            <div class="col-sm-6">
                <div class="pull-right">
                    @if (Model.ChangeLog != "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="JustPrint" formtarget="_blank">Print Only</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="JustEmail" formtarget="_blank">Email Only</button>
                    }
                    @if (Model.ChangeLog == "Edit")
                    {
                        if (@Model.SubType == "OP" || @Model.SubType == "OS" || @Model.SubType == "QP" || @Model.SubType == "QS" || @Model.SubType == "ES" || @Model.SubType == "EP")
                        {
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveCopy" formtarget="_blank">Save As</button>
                        }
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="BothSaveEmail" formtarget="_blank">Save & Email</button>
                    }
                    @if (Model.ChangeLog == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="DeleteData">Delete</button>
                    }
                    <a href="~/Transactions/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" style="font-size: 13px;padding:3px 12px;margin-right:10px;" class="btn btn-danger" id="Cancel">Cancel</a>
                </div>
            </div>
            <input type="hidden" id="controllername" />
            @Html.HiddenFor(x => x.ChangeLog, new
       {
           @id = "hdnchangelog"
       })
            <input type="hidden" id="hdnnarrval" />
            <input type="hidden" id="hdnperid" />
            @Html.HiddenFor(x => x.ValueLast, new
       {
           @id = "hdnValueLast"
       })
        }
        else
        {
            <div class="col-sm-5">
                @*<button class="btn btn-warning" style="font-size: 13px;padding:3px 12px;" id="btnAddOns" name="Command">AddOns</button>
                    <button class="btn btn-warning" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" name="Command">Attach Doc</button>*@
                @*<button class="btn btn-warning" id="btnAddLedPost" name="Command">Ledger Post</button>*@
            </div>
            <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                T.FAT ERP-iX9, Suchan Software Private Limited
            </div>
            <div class="col-sm-4">
                <div class="pull-right">
                    @if (Model.AllowDraftSave == true)
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveDraft">Save Draft and Preview</button>
                    }
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Print" formtarget="_blank">Save & Print</button>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveData">Save Data</button>
                    <a href="~/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2" class="btn btn-danger" style="font-size: 13px;margin-right:10px;padding:3px 12px;" id="Cancel">Cancel</a>
                </div>
            </div>
            <input type="hidden" id="controllername" />
            @Html.HiddenFor(x => x.ChangeLog, new
       {
           @id = "hdnchangelog"
       })
            <input type="hidden" id="hdnnarrval" />
            <input type="hidden" id="hdnperid" />
        }
    </div>
</footer>

<div class="example-modal">
    <div id="ledpostmodel" class="modal modal-primary">
        <div class="modal-dialog" style="width:700px;">
            <div id="ledpostingmodel">
                @Html.Partial("LedgerPosting")
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="pickuplist" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;height:500px;">
            <div id="PickUpList">
                @Html.Partial("PickUp")
            </div>
        </div>
    </div>
</div>
<div class="example-modal">
    <div id="FetchSingleLR" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;height:500px;">
            <div id="FetchSingleLRDiv">
                
            </div>
        </div>
    </div>
</div>
<div class="example-modal">
    <div id="multiprint" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;">
            <div id="MultiPrintDiv">
                @Html.Partial("MultiPrint")
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".panel").height(560);
        //var mheight = $(window).height() - 300;
        //alert(mheight);
        //$("#divLedgerTable2.height").height = mheight;
        document.getElementById("headerdiv").style.backgroundColor = '@Session["headerdivcolor"]';
        document.getElementById("headercaption").style.color = '@Session["headercaptioncolor"]';
        document.getElementById("fixedbottom").style.backgroundColor = '@Session["bottomcolor"]';

        loadGstType();
        GetSourceDocument();
        GetCurrencyCode();
        loadLocationCodes();
        if ($('#hdnSkipStock').val() == "Y" || $('#hdnSkipStock').val() == "y") {
            $('#btntabitem').hide();
            $('#RefDoc').hide();
            $('#PickData').hide();
            $('#divLedgerTable2').hide();
        }

        if ($('#hdnSType').val() == "EP") {
            $('#btnMultiParty').show();
        }

        $('#LocationCode').change(function () {
            $("#Store").empty();
            var url = '@Url.Action("GetStoreCode")?Type=' + $('#hdnType').val() + '&SubType=' + $('#hdnSType').val() + '&LocationCode=' + $('#LocationCode').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                },
                success: function (result) {
                    $.each(result, function (i, item) {
                        $("#Store").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                    });
                },
                error: function () {
                    $('.spinner').hide();
                    alert("2-An error occurred while processing the request.");
                }
            });
        });

        if ($('#hdnVATGSTApp').val() == "V") {
            $('#igstfootlbl').html('Tax');
            $('#sgstfootlbl').html('Surcharge');
            $('#cgstfootlbl').html('Add.Tax');
            $('#gsttyplbl').hide();
            $('#gsttypdiv').hide();
        }
        if ($('#hdnCurrConv').val() != "Y") {
            $('#CurrDiv').hide();
        }
        $("#txttotid").val($("#hdnValueLast").val());
        var CGL = $('#hdnchangelog').val();
        if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
            $('#Srl').prop('disabled', false);
        }
        if (CGL == "Delete" || CGL == "View") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            $('#btnAddDoc').prop('disabled', false);
            $('#btnAddDocument').prop('disabled', true);
        }
        var CDP = $('#hdnCheckMode').val();
        if (CDP == "True" || CDP == "true") {
            $('#frmpurchase :input').prop("disabled", true);
            $('.form-horizontal :input').prop("disabled", true);
            $('#ItemListTable :input').prop('disabled', true);
            $('#Print').prop('disabled', true);
            $('#SaveData').prop('disabled', true);
            $('#EditbtnAddOns').prop('disabled', true);
            $('#DeleteData').prop('disabled', true);
            $('#BothSaveEmail').prop('disabled', true);
            $('#btnAddDocument').prop('disabled', true);
            alert('@Model.Message')
        }

        if ($('#hdnIsDraftSave').val() == "True" || $('#hdnIsDraftSave').val() == "true") {
            $('#Print').prop('disabled', true);
            $('#SaveData').prop('disabled', false);
            $('#JustEmail').prop('disabled', true);
            $('#DeleteData').prop('disabled', false);
            $('#BothSaveEmail').prop('disabled', true);
            $('#SaveCopy').prop('disabled', true);
        }

        $('#CurrName').change(function () {
            var url = '@Url.Action("GetCurrencyRate")?Code=' + $('#CurrName').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var currRateI = parseFloat(data);
                    $('#CurrRate').val(currRateI.toFixed(2));
                    CurrRateChange();
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $("#CurrRate").change(function (event) {
            event.preventDefault();
            CurrRateChange();
        });

        $('#BarCode').focusout(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["BarCode"] = $(this).val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["DelyCode"] = $("#DelyCode").val();
            ModelData["Sno"] = $('#DelyAltAdd').val();
            ModelData["CurrRate"] = $('#CurrRate').val();
            ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("ScanAndAddItem")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforesend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#errormessage').hide();

                    if (data.Status == "NoItem") {
                        alert(data.Message)
                    }
                    //$('#ItemListTable').html(data.Html);
                    $('#txtf_F001').val(data.Taxable.toFixed(2));
                    $('#txtb_F001').val(data.Taxable.toFixed(2));
                    $('#txttottxable').val(data.Taxable.toFixed(2));
                    $('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                    $('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                    $('#txttotigst').val(data.IGSTAmt.toFixed(2));
                    if ($('#hdnSType').val() == "RP") {
                        $('#TDSAble').val(data.Taxable.toFixed(2));
                    }
                    SetValuesInTable()

                    if ($('#hdnEnableParty').val() == "False") {
                        $('#divLedgerTable :input').prop('disabled', true);
                        //$('#CurrDiv :input').prop('disabled', true);
                    }
                    if ($('#hdnSType').val() == "RP") {
                        loadValuesTdsAble()
                    }

                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });

        $('#SaveData').click(function (event) {
            event.preventDefault();

            var tab2size = $('#tabledata2 tbody tr').length;
            
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            
           
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            

            

            if ($("#hdnSType").val() == "EP") {
                var divText = [];
                $("#MultiVendorList :selected").each(function () {
                    divText.push("" + $(this).val() + "");
                });
                $('#hdnmultivendorarray').val(divText)
            }
            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text()
                }

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {
                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};
                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                debugger;
                var myTableArray = [];
                var ChargesTxtbox = $('.UniqueCharge').length;
                var rowCount = $('#example2 tbody tr').length;
                var SingleRowCharges = ChargesTxtbox / rowCount;
                //var StartChargesPosition = 10;
                var ChargeName = [];
                var htmlTableTdPostion = 12;
                $('#example2 > thead  > tr').each(function () {
                    
                    var tds = $(this).find('th');
                    for (var i = 0; i < SingleRowCharges; i++) {
                        ChargeName.push(tds.eq(htmlTableTdPostion).text());
                        ++htmlTableTdPostion;
                    }
                });
                $('#example2 > tbody  > tr').each(function () {
                    var tds = $(this).find('td');
                    

                    debugger;
                    var ChargeValue = [];
                    var FLD = [];
                    htmlTableTdPostion = 12;

                    for (var i = 0; i < SingleRowCharges; i++)
                    {
                        ChargeValue.push(tds.eq(htmlTableTdPostion).text());
                        FLD.push(tds.eq(htmlTableTdPostion).attr("id"));
                        ++htmlTableTdPostion;
                    }

                        //var JumpNewTD =  htmlTableTdPostion + 1;
                        debugger;
                        var myDets = {
                            RECORDKEY: tds.find(".RecordeK").text(),
                            LRno: tds.eq(3).text(),
                            LRDate: tds.eq(4).text(),
                            TotalQty: tds.eq(5).text(),
                            UnbillQty: tds.eq(6).text(),
                            BillQty: tds.find(".BillQty").val(),
                            From: tds.eq(8).text(),
                            FromCode: tds.eq(8).attr("id"),
                            To: tds.eq(9).text(),
                            ToCode: tds.eq(9).attr("id"),
                            Consigner: tds.eq(10).text(),
                            ConsignerCode: tds.eq(10).attr("id"),
                            Consignee: tds.eq(11).text(),
                            ConsigneeCode: tds.eq(11).attr("id"),
                            ChargeName: ChargeName,
                            ChargeValue: ChargeValue,
                            Fld: FLD,
                            Descriptions: tds.eq(htmlTableTdPostion).text(),
                            DescriptionsCode: tds.eq(htmlTableTdPostion++).attr("id"),
                            LrNarr: tds.eq(htmlTableTdPostion).text(),
                            NewNarr: tds.find(".BillNarr").val(),
                        }
                    
                    myTableArray.push(myDets);
                });


                ModelData["NewItemListLR"] = myTableArray;
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}

            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
                //$('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                ModelData["MultiVendor"] = $('#hdnmultivendorarray').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            if ($('#hdnchangelog').val() != "Add") {
                                window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                            }
                            else {
                                window.location.href = "/Accounts/" + '@Model.Controller2' + "/Index?Type=" + '@Model.Type' + '&ChangeLog=Add&Mode=Add' + '&ViewDataId=' + '@Model.ViewDataId' + '&Header=' + '@Model.Header' + '&Module=' + '@Model.Module' + '&TableName=' + '@Model.TableName' + '&OptionType=' + '@Model.optiontype' + '&OptionCode=' + '@Model.OptionCode' + '&Controller2=' + '@Model.Controller2';
                            }

                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                    error: function (ex) {
                        alert(JSON.stringify(ex))
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $('#PickData').click(function (event) {
            event.preventDefault();
            //if ($("#RefDoc").val() == '') {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Select Source Doc.');
            //    return;
            //}
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Account.');
                return;
            }
            //if ($("#LocationCode").val() == '' || $("#LocationCode").val() == '0') {
            //    alert('Select WareHouse/Location.');
            //    return;
            //}
            $('#pickuplist').modal({
                backdrop: 'static',
                keyboard: false
            });

            var ModelData = {};
            ModelData["SourceDoc"] = $("#RefDoc").val();
            ModelData["Code"] = $("#Account").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["LocationCode"] = $("#LocationCode").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["MileStoneReqd"] = $("#hdnMileStoneReqd").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#PickUpList').html('');
                    $('#PickUpList').html(data.Html);
                    $('#pickuplist').modal('show');
                    
                   
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#Print').click(function (event) {
            event.preventDefault();
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS" || $("#hdnSType").val() == "OP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }
            else {

            }

            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }
            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('Y');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text()
                }

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
               // $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            //location.href = "/Transactions/Purchase/PrintData?Document=" + data.NewSrl + "";
                            var ModelData = {};
                            ModelData["Type"] = $("#hdnType").val();
                            ModelData["Document"] = data.NewSrl;
                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("GetMultiPrint")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data1) {
                                    $("#ErrorMessage").hide();
                                    $('.spinner').hide();
                                    $('#multiprint').modal('show');
                                    $('#MultiPrintDiv').html(data1.Html);
                                    $('#PrintDocument').val(data1.Document);
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }
                            });
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                         //   $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });


        $('#SaveDraft').click(function (event) {
            event.preventDefault();
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS" || $("#hdnSType").val() == "OP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }

            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }
            $("#hdnSaveAsDraft").val('Y');
            $("#hdnSendEmail").val('N');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text()
                }

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();

                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Authorise"] = 'X00';
                ModelData["SaveAsDraft"] = 'Y';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);

                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            $('#hdnIsDraftSave').val('True');
                            alert("Draft saved as " + data.NewSrl + "");
                            var ModelData = {};
                            ModelData["Type"] = $("#hdnType").val();
                            ModelData["Document"] = data.NewSrl;
                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("GetMultiPrint")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data1) {
                                    $("#ErrorMessage").hide();
                                    $('.spinner').hide();
                                    $('#multiprint').modal('show');
                                    $('#MultiPrintDiv').html(data1.Html);
                                    $('#PrintDocument').val(data1.Document);
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }
                            });
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                          //  $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                           // $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });


        $('#BothSaveEmail').click(function (event) {
            event.preventDefault();
            var tab2size = $('#tabledata2 tbody tr').length;
            if ($("#Account").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Party.');
                return;
            }
            if ($("#LocationCode").val() == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Select Warehouse/Location.');
                return;
            }
            if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Add Product.');
                return;
            }
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Bill Number.');
                    return;
                }
            }
            else if ($("#hdnSType").val() == "OS" || $("#hdnSType").val() == "OP") {
                if ($("#BillNumber").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Enter Order Number.');
                    return;
                }
            }
            if ($("#hdnForceChln").val() == "True" || $("#hdnForceChln").val() == "true") {
                if ($("#RefDoc").val() != "Challans") {
                    alert('PLease Pickup From Challan')
                    return;
                }
            }
            if ($("#hdnForceOrderS").val() == "True" || $("#hdnForceOrderS").val() == "true") {
                if ($("#RefDoc").val() != 'Orders' && $("#RefDoc").val() != 'Blanket Order') {
                    alert('PLease Pickup From Orders')
                    return;
                }
            }
            $("#hdnSaveAsDraft").val('N');
            $("#hdnSendEmail").val('Y');
            $("#hdnIsPrint").val('N');
            $("#ErrorMessage").hide();
            var ChargeList = [];
            var AddonSerial = [];
            var TermList = [];

            $('#addongrid').find('tr[id="datacharge"]').each(function () {
                var $tds = $(this).find('td');
                var myDets = {
                    Fld: $tds.eq(0).text(),
                    ApplCode: $tds.find(".addontxtfvalue").val(),
                    FldType: $tds.eq(4).text()
                }

                AddonSerial.push(myDets);
            });

            $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                var tds = $(this).find('td');
                var chgs = {
                    Code: tds.eq(0).text(),
                    AddLess: tds.eq(1).text(),
                    Amt: tds.find("input[class='txtfvalue']").val(),
                    Val1: tds.find("input[class='txt_row']").val(),
                    ChgPostCode: tds.eq(4).text(),
                    Fld: tds.eq(5).text()
                }
                ChargeList.push(chgs);
            });


            $('#TermTbl tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(0).text(),
                    TermId: tds.eq(1).text(),
                    TermName: tds.eq(2).text(),

                }
                TermList.push(myDets);
            });

            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NS") {

                $('#ledpostmodel').modal({
                    backdrop: 'static',
                    keyboard: false
                });
                var ModelData = {};

                ModelData["Account"] = $("#Account").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["Charges"] = ChargeList;
                ModelData["IGSTAmt"] = $("#txttotigst").val();
                ModelData["CGSTAmt"] = $("#txttotcgst").val();
                ModelData["SGSTAmt"] = $("#txttotsgst").val();
                ModelData["Taxable"] = $("#txttottxable").val();
                ModelData["IsRoundOff"] = $("#hdnIsRoundOff").val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["Controller2"] = '@Model.Controller2';
                ModelData["Module"] = '@Model.Module';
                ModelData["ViewDataId"] = '@Model.ViewDataId';
                ModelData["TableName"] = '@Model.TableName';
                ModelData["Header"] = '@Model.Header';
                ModelData["optiontype"] = '@Model.optiontype';
                ModelData["OptionCode"] = '@Model.OptionCode';
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetPostingNew")';
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    data: JSON.stringify(DTO),
                    type: "POST",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#ledpostmodel').modal('show');
                        $('#ledpostingmodel').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
                //}
            }
            else {
                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
               // $('#ItemListTable :input').prop('disabled', true);

                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = $('#hdnchangelog').val();
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["CutTDS"] = $('#CutTDS').is(':checked');
                ModelData["TDSCode"] = $('#TDSCode').val();
                ModelData["TDSAble"] = $('#TDSAble').val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
                ModelData["TDSSchg"] = $('#TDSSchg').val();
                ModelData["TDSCess"] = $('#TDSCess').val();
                ModelData["TDSSHECess"] = $('#TDSSHECess').val();
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["NonStock"] = $('#NonStock').val();
                ModelData["InterBranch"] = $('#InterBranch').val();
                ModelData["InterSrl"] = $('#InterSrl').val();
                ModelData["ITFKey"] = $('#ITFKey').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                ModelData["RevBool"] = $('#RevBool').is(':checked');
                ModelData["RevNo"] = $('#RevNo').val();
                ModelData["RevDate"] = $('#RevDate').val();
                ModelData["RevNarr"] = $('#RevNarr').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                         //   $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                        //    $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            //location.href = "/Transactions/Purchase/PrintData?Document=" + data.NewSrl + "";
                            var ModelData = {};
                            ModelData["Type"] = $("#hdnType").val();
                            ModelData["Document"] = data.NewSrl;
                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("EmailData")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data1) {
                                    $("#ErrorMessage").hide();
                                    $('.spinner').hide();
                                    alert('Saved and Emailed Successfully')
                                },
                                error: function () {
                                    alert("Error occured while processing your request.");
                                }
                            });
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                         //   $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                         //   $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });


        $('#SaveCopy').click(function (event) {
            event.preventDefault();
            var confrm = confirm("Do You Really want to Save As !");
            if (confrm == false) {
                return;
            } else {

                var tab2size = $('#tabledata2 tbody tr').length;
                if ($('#hdnIsManual').val() == "True" && CGL == "Add") {
                    if ($("#Srl").val() == '') {
                        alert('Enter Document Number.');
                        return;
                    }
                }
                if ($("#Account").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Select Party.');
                    return;
                }
                if ($("#LocationCode").val() == 0) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Select Warehouse/Location.');
                    return;
                }
                if (tab2size == 0 && $('#hdnSkipStock').val() != "Y") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Add Product.');
                    return;
                }
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "GP") {
                    if ($("#BillNumber").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Enter Bill Number.');
                        return;
                    }
                }
                else if ($("#hdnSType").val() == "OP") {
                    if ($("#BillNumber").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Enter Order Number.');
                        return;
                    }
                }
                else {

                }

                $("#ErrorMessage").hide();
                var ChargeList = [];
                var AddonSerial = [];
                var TermList = [];

                $('#addongrid').find('tr[id="datacharge"]').each(function () {
                    var $tds = $(this).find('td');
                    var myDets = {
                        Fld: $tds.eq(0).text(),
                        ApplCode: $tds.find(".addontxtfvalue").val(),
                        FldType: $tds.eq(4).text()
                    }
                    AddonSerial.push(myDets);
                });
                $('#sample-table-1').find('tr[id="datacharge"]').each(function () {
                    var tds = $(this).find('td');
                    var chgs = {
                        Code: tds.eq(0).text(),
                        AddLess: tds.eq(1).text(),
                        Amt: tds.find("input[class='txtfvalue']").val(),
                        Val1: tds.find("input[class='txt_row']").val(),
                        ChgPostCode: tds.eq(4).text(),
                        Fld: tds.eq(5).text()
                    }
                    ChargeList.push(chgs);
                });
                $('#TermTbl tbody tr').each(function () {
                    var tds = $(this).find('td');
                    var myDets = {
                        tempId: tds.eq(0).text(),
                        TermId: tds.eq(1).text(),
                        TermName: tds.eq(2).text(),
                    }
                    TermList.push(myDets);
                });

                $("#ErrorMessage").hide();
                $('#fixedbottom :input').prop("disabled", true);
                $('#frmpurchase :input').prop("disabled", true);
                $('.form-horizontal :input').prop("disabled", true);
              //  $('#ItemListTable :input').prop('disabled', true);
                var url = '@Url.Action("SaveData")';
                var ModelData = {};
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["PDocNo"] = $("#PDocNo").val();
                ModelData["OrdDate"] = $("#OrdDate").val();
                ModelData["BillNumber"] = $("#BillNumber").val();
                ModelData["RefDoc"] = $("#RefDoc").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["Store"] = $("#Store").val();
                ModelData["CrPeriod"] = $("#CrPeriod").val();
                ModelData["Account"] = $("#Account").val();
                //Billing/Shipto
                ModelData["AltAddress"] = $("#AltAddress").val();
                ModelData["DelyCode"] = $("#DelyCode").val();
                ModelData["DelyAltAdd"] = $("#DelyAltAdd").val();
                ModelData["BillContact"] = $("#BillContact").val();
                ModelData["DelyContact"] = $("#DelyContact").val();
                //links
                ModelData["WONumber"] = $("#WONumber").val();
                ModelData["Reference"] = $("#Reference").val();
                //SaleMan
                ModelData["SalesmanCode"] = $("#SalesmanCode").val();
                ModelData["SCommOn"] = $("#SCommOn").val();
                ModelData["SCommission"] = $("#SCommission").val();
                ModelData["SAmt"] = $("#SAmt").val();
                //Broker
                ModelData["Broker"] = $("#BrokerName").val();
                ModelData["BrokerOn"] = $("#BrokerOn").val();
                ModelData["Brokerage"] = $("#Brokerage").val();
                ModelData["BrokerAmt"] = $("#BrokerAmt").val();
                //Transporter
                ModelData["Transporter"] = $("#TransporterN").val();
                ModelData["NoPkg"] = $("#NoPkg").val();
                ModelData["FreightType"] = $("#FreightType").val();
                ModelData["NoteNo"] = $("#NoteNo").val();
                ModelData["NotuDate"] = $("#NotuDate").val();
                ModelData["VehicleNo"] = $("#VehicleNo").val();
                ModelData["DeliveryType"] = $("#DeliveryType").val();
                ModelData["Remark"] = $("#Remark").val();
                ModelData["TransMode"] = $("#TransMode").val();
                ModelData["ContactPerson"] = $("#ContactPerson").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Charges"] = ChargeList;
                //ModelData["RichNote"] = $("#hdnNavRich").val();
                ModelData["GSTType"] = $("#GSTType").val();
                ModelData["ChangeLog"] = "Add";
                ModelData["TableName"] = '@Model.TableName';
                ModelData["ParentKey"] = $("#hdnParentKey").val();
                ModelData["Srl"] = $("#Srl").val();//while edit mode
                ModelData["Prefix"] = $("#hdnPrefix").val();//while edit mode
                ModelData["Amt"] = $("#txtinvamt").val();
                ModelData["PayTerms"] = $("#PayTerms").val();
                ModelData["IncoPlace"] = $("#IncoPlace").val();
                ModelData["EwBillNo"] = $("#EwBillNo").val();
                ModelData["IncoTerms"] = $("#IncoTerms").val();
                ModelData["TransportType"] = $("#TransportType").val();
                ModelData["TrxWeight"] = $("#TrxWeight").val();
                ModelData["RichNote"] = $('#RichNote').val();
                //ModelData["AllFileStr"] = $('#hdnAllFileStr').val();
                //ModelData["FileContStr"] = $('#hdnFileContStr').val();
                //ModelData["FileNameStr"] = $('#hdnFileNameStr').val();
                ModelData["AddOnList"] = AddonSerial;
                ModelData["InsuranceNo"] = $('#InsuranceNo').val();
                ModelData["RoundOff"] = $('#txtRoundOffVal').val();
                ModelData["TermList"] = TermList;
                ModelData["CrPeriod"] = $('#CrPeriod').val();
                ModelData["LCNo"] = $('#LCNo').val();
                ModelData["AdvLicence"] = $('#AdvLicence').val();
                ModelData["SourceDoc"] = $('#RefDoc').val();
                ModelData["Authorise"] = $('#hdnAuthorise').val();
                ModelData["AuthLock"] = $('#hdnAuthLock').val();
                ModelData["AuthNoPrint"] = $('#hdnAuthNoPrint').val();
                ModelData["AuthReq"] = $('#hdnAuthReq').val();
                ModelData["AuthAgain"] = $('#hdnAuthAgain').val();
                ModelData["IsManual"] = $('#hdnIsManual').val();
                ModelData["CurrName"] = $('#CurrName').val();
                ModelData["CurrRate"] = $('#CurrRate').val();
                ModelData["CrLimit"] = $('#CrLimit').text();
                ModelData["Header"] = '@Model.Header';
                ModelData["MLSAmount"] = $('#txtMLSAmount').val();
                ModelData["MLSPercent"] = $('#txtMLSPercent').val();
                ModelData["IsSaveAs"] = "Yes";
                ModelData["PrevInvAmt"] = $('#PrevInvAmt').val();
                ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
                ModelData["SaveAsDraft"] = 'N';
                ModelData["IsDraftSave"] = $('#hdnIsDraftSave').val();
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'CancelError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                     //       $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'PrimaryKeyError') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                    //        $('#ItemListTable :input').prop('disabled', false);
                        }
                        else if (data.Status == 'Success') {
                            alert("Document saved as " + data.NewSrl + "");
                            window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                        }
                        else if (data.Status == 'Error') {
                            alert(data.Message);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                     //       $('#ItemListTable :input').prop('disabled', false);
                        }
                        else {
                            $('.spinner').hide();
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").html(data.html);
                            $('#fixedbottom :input').prop("disabled", false);
                            $('#frmpurchase :input').prop("disabled", false);
                            $('.form-horizontal :input').prop("disabled", false);
                       //     $('#ItemListTable :input').prop('disabled', false);
                        }
                    },
                });
            }
        });

        $('#JustPrint').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["Type"] = $("#hdnType").val();
            ModelData["Document"] = $("#hdnEditDocument").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetMultiPrint")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#multiprint').modal('show');
                    $('#MultiPrintDiv').html(data.Html);
                    $('#PrintDocument').val($("#hdnEditDocument").val());
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#JustEmail').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["Document"] = $("#hdnEditDocument").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("EmailData")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    alert('Email Sent')
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#DeleteData').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["Header"] = '@Model.Header';
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Amt"] = $("#txtinvamt").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteData")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == 'Success') {
                        window.location.href = "/Accounts/TransactionMaintenanceGrid?Type=@Model.Type&Module=@Model.Module&ViewDataId=@Model.ViewDataId&TableName=@Model.TableName&Header=@Model.Header&optiontype=@Model.optiontype&OptionCode=@Model.OptionCode&MainType=@Model.MainType&SubType=@Model.SubType&Controller2=@Model.Controller2"
                    }
                    else {
                        alert(data.Message);
                    }
                },
                error: function (data) {
                    alert(data.Message);
                }
            });
        });

        $("#EditbtnAddOns").click(function (event) {
            event.preventDefault();
            $('#addonmodel').modal({
                backdrop: 'static',
                keyboard: false
            });

            if ($('#hdnAddonSaved').val() == "1") {
                $('#addonmodel').modal('show');
            }
            else {
                var url = '@Url.Action("GetEditAddOnList")?Code=' + $("#hdnMType").val() + '&ParentKey=' + $("#hdnParentKey").val() + '&Type=' + $("#hdnType").val();
                $.ajax({
                    async: false,
                    cache: false,
                    url: url,
                    type: "GET",
                    dataType: "json",
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#addonmodel').modal('show');
                        $('#Dialog').html(data.Html);
                        $('#controllername').val(data.Controller);
                    },
                });
            }
            $('#addongrid input[id=txtf_F001]').focus();
        });

        $("#btnAddDoc").click(function (event) {
            event.preventDefault();
            $('#attachdoc').modal({
                backdrop: 'static',
                keyboard: false
            });
            var url = '@Url.Action("UploadFile")';
            $.ajax({
                async: false,
                cache: false,
                url: url,
                type: "POST",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#attachdoc').modal('show');
                    $('#controllername').val(data.Controller);
                },
            });
        });
    });

    function loadGstType() {
        var url = '@Url.Action("GetGSTType")'
        $('#GSTType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Text,
                                id: item.Value
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.GSTType', text: '@Model.GstTypeName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function GetSourceDocument() {
        $("#RefDoc").empty();
        var url = '@Url.Action("GetSourceDocument")?SubType=' + $('#hdnSType').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#RefDoc").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#RefDoc').val('@Model.SourceDoc').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function GetCurrencyCode() {
        $("#CurrName").empty();
        var url = '@Url.Action("GetCurrencyName")?SubType=' + $('#hdnSType').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#CurrName").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#CurrName').val('@Model.CurrName').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadLocationCodes() {
        var url = '@Url.Action("GetLocationCode")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#LocationCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#LocationCode').val('@Model.LocationCode').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function CurrRateChange() {
        var ModelData = {};
        ModelData["SubType"] = $('#hdnSType').val();
        ModelData["CurrRate"] = $('#CurrRate').val();
        ModelData["LocationCode"] = $('#LocationCode').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("UpdateItemByCurrConv")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforesend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#errormessage').hide();
             //   $('#ItemListTable').html(data.Html);
                $('#txtf_F001').val(data.Taxable.toFixed(2));
                $('#txtb_F001').val(data.Taxable.toFixed(2));
                $('#txttottxable').val(data.Taxable.toFixed(2));
                $('#txttotcgst').val(data.CGSTAmt.toFixed(2));
                $('#txttotsgst').val(data.SGSTAmt.toFixed(2));
                $('#txttotigst').val(data.IGSTAmt.toFixed(2));
                if ($('#hdnSType').val() == "RP") {
                    $('#TDSAble').val(data.Taxable.toFixed(2));
                }
                SetValuesInTable()

                if ($('#hdnSType').val() == "RP") {
                    loadValuesTdsAble()
                }

            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }
</script>

@Html.HiddenFor(x => x.ProductAddOn, new
{
    @id = "hdnProductAddOn"
})
@Html.HiddenFor(x => x.ViewDataId, new
{
    @id = "hdnViewDataId"
})
@Html.HiddenFor(x => x.Controller2, new
{
    @id = "Controller2"
})
@Html.HiddenFor(x => x.Header, new
{
    @id = "Header"
})
@Html.HiddenFor(x => x.OptionCode, new
{
    @id = "OptionCode"
})
@Html.HiddenFor(x => x.optiontype, new
{
    @id = "optiontype"
})
@Html.HiddenFor(x => x.TableName, new
{
    @id = "TableName"
})
@Html.HiddenFor(x => x.Module, new
{
    @id = "Module"
})
@Html.HiddenFor(x => x.hdnAddonSaved, new
{
    @Id = "hdnAddonSaved"
})
@Html.HiddenFor(x => x.IsRoundOff, new
{
    @Id = "hdnIsRoundOff"
})
@Html.HiddenFor(x => x.CheckMode, new
{
    @id = "hdnCheckMode"
})
@Html.HiddenFor(x => x.LockRate, new
{
    @Id = "hdnLockRate"
})
@Html.HiddenFor(x => x.LockDiscount, new
{
    @Id = "hdnLockDiscount"
})
@Html.HiddenFor(x => x.Authorise, new
{
    @Id = "hdnAuthorise"
})
@Html.HiddenFor(x => x.AuthLock, new
{
    @Id = "hdnAuthLock"
})
@Html.HiddenFor(x => x.AuthNoPrint, new
{
    @Id = "hdnAuthNoPrint"
})
@Html.HiddenFor(x => x.AuthReq, new
{
    @Id = "hdnAuthReq"
})
@Html.HiddenFor(x => x.AuthAgain, new
{
    @Id = "hdnAuthAgain"
})
@Html.HiddenFor(x => x.IsManual, new
{
    @Id = "hdnIsManual"
})

@Html.HiddenFor(x => x.CurrConv, new
{
    @Id = "hdnCurrConv"
})

@Html.HiddenFor(x => x.AllowCurr, new
{
    @Id = "hdnAllowCurr"
})

@Html.HiddenFor(x => x.EnableParty, new
{
    @Id = "hdnEnableParty"
})
@Html.HiddenFor(x => x.Store, new
{
    @Id = "hdnStore"
})

@Html.HiddenFor(x => x.BinConcept, new
{
    @Id = "hdnBinConcept"
})

@Html.HiddenFor(x => x.MultiUnit, new
{
    @Id = "hdnMultiUnit"
})
@Html.HiddenFor(x => x.MileStoneReqd, new
{
    @Id = "hdnMileStoneReqd"
})
@Html.HiddenFor(x => x.NegStock, new { @Id = "hdnNegStock" })
@Html.HiddenFor(x => x.IsBarCodeScan, new { @Id = "hdnIsBarCodeScan" })
@Html.HiddenFor(x => x.PrevInvAmt, new { @Id = "PrevInvAmt" })
@Html.HiddenFor(x => x.NonStock, new { @Id = "NonStock" })
@Html.HiddenFor(x => x.InterBranch, new { @Id = "InterBranch" })
@Html.HiddenFor(x => x.ITFKey, new { @Id = "ITFKey" })
@Html.HiddenFor(x => x.InterSrl, new { @Id = "InterSrl" })
@Html.HiddenFor(x => x.LockAddon, new { @Id = "hdnLockAddon" })
@Html.HiddenFor(x => x.VATGSTApp, new { @Id = "hdnVATGSTApp" })
@Html.HiddenFor(x => x.ForceChln, new { @Id = "hdnForceChln" })
@Html.HiddenFor(x => x.SkipStock, new { @Id = "hdnSkipStock" })
@Html.HiddenFor(x => x.SaveAsDraft, new { @Id = "hdnSaveAsDraft" })
@Html.HiddenFor(x => x.Document, new { @id = "hdnEditDocument" })
@Html.HiddenFor(x => x.ParentKey, new { @id = "hdnParentKey" })
@Html.HiddenFor(x => x.IsDraftSave, new { @id = "hdnIsDraftSave" })
@Html.HiddenFor(x => x.IsPickUp, new { @id = "IsPickUp" })
@Html.HiddenFor(x => x.SendEmail, new { @id = "hdnSendEmail" })
@Html.HiddenFor(x => x.TableName, new { @id = "hdnTableName" })
@Html.HiddenFor(x => x.IsPrint, new { @id = "hdnIsPrint" })
@Html.HiddenFor(x => x.HideAddlCharges, new { @id = "hdnHideAddlCharges" })
@Html.HiddenFor(x => x.LockStore, new { @id = "hdnLockStore" })
@Html.HiddenFor(x => x.LockFactor, new { @id = "hdnLockFactor" })
@Html.HiddenFor(x => x.LockTax, new { @id = "hdnLockTax" })
@Html.HiddenFor(x => x.LockHSN, new { @id = "hdnLockHSN" })
@Html.HiddenFor(x => x.ForceOrderS, new { @id = "hdnForceOrderS" })
@Html.HiddenFor(x => x.FIFOOrder, new { @id = "hdnFIFOOrder" })
@Html.HiddenFor(x => x.MainType, new
       {
           @id = "hdnMType"
       })
@Html.HiddenFor(x => x.SubType, new
{
@id = "hdnSType"
})
@Html.HiddenFor(x => x.Type, new
{
@id = "hdnType"
})
@Html.HiddenFor(x => x.Prefix, new
{
@id = "hdnPrefix"
})