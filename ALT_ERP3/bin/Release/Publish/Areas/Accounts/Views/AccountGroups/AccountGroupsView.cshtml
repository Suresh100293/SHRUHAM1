
@model TFATERPWebApplication.Areas.Accounts.Models.AccountGroupsVM
@using Common;
@{
    ViewBag.Title = "Account Groups";
    Layout = null;
}

<script type="text/javascript">
    $(document).ready(function () {
        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }

        @* iX9: Load List for Autocomplete Inputs i.e. ControlType='A' *@
        LoadGrp()
        LoadRevGroup()

        @* iX9: set the selected value to fixed combos *@
        $('#MasterGroups_BaseGr').val('@Model.MasterGroups_BaseGr').attr("selected", "selected");
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function LoadGrp() {
        var url = '@Url.Action("AutoCompleteGrp")'
        $('#MasterGroups_Grp').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.MasterGroups_Grp', text: '@Model.GrpName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadRevGroup() {
        var url = '@Url.Action("AutoCompleteRevGroup")'
        $('#MasterGroups_RevGroup').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.MasterGroups_RevGroup', text: '@Model.RevGroupName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>

<section class="panel" style="margin-bottom:0px;">
    <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
    <div class="col-sm-9" style="    margin-top: 3%;">
        @* iX9: -- Code for Header Starts -- *@
        @* iX9: Tab Body Panels *@
        <div class="form-group">
            <label class="col-sm-2 control-label">Code:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Code, new { @maxlength = "9", @class = "form-control", @readonly = "readonly", @Name = "MasterGroups_Code", @Value = Model.MasterGroups_Code, @Id = "MasterGroups_Code" })
            </div>
            <label class="col-sm-2 control-label">Name:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Name, new { @maxlength = "70", @class = "form-control", @Name = "MasterGroups_Name", @Value = Model.MasterGroups_Name, @Id = "MasterGroups_Name" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <label class="col-sm-2 control-label">Grp:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Grp, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @readonly = "readonly", @id = "MasterGroups_Grp", @Value = Model.MasterGroups_Grp, @Name = "MasterGroups_Grp" })
            </div>
            <label class="col-sm-2 control-label">Reverse Grp:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_RevGroup, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "MasterGroups_RevGroup", @Value = Model.MasterGroups_RevGroup, @Name = "MasterGroups_RevGroup" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">BaseGr:</label>
            <div class="col-sm-2">
                @Html.DropDownListFor(m => m.MasterGroups_BaseGr, Model.BaseGrList, new { @class = "form-control", @Id = "MasterGroups_BaseGr", @Name = "MasterGroups_BaseGr", @style = "border-color:black;height:24px;padding:2px 4px;" })
            </div>
            <label class="col-sm-2 control-label">Seq:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Seq, new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "MasterGroups_Seq", @Value = Model.MasterGroups_Seq, @Id = "MasterGroups_Seq" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Prefix for Auto Code:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Prefix, new { @maxlength = "3", @class = "form-control", @Name = "MasterGroups_Prefix", @Value = Model.MasterGroups_Prefix, @Id = "MasterGroups_Prefix" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Hide:</label>
            <div class="col-sm-2">
                @Html.CheckBoxFor(x => x.MasterGroups_Hide, new { @value = Model.MasterGroups_Hide, @id = "MasterGroups_Hide", @name = "MasterGroups_Hide", @style = "height:16px;width:16px;" })
            </div>
            <label class="col-sm-2 control-label">DisplayOrder:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_DisplayOrder, new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "MasterGroups_DisplayOrder", @Value = Model.MasterGroups_DisplayOrder, @Id = "MasterGroups_DisplayOrder" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Force CC:</label>
            <div class="col-sm-2">
                @Html.CheckBoxFor(x => x.MasterGroups_ForceCC, new { @value = Model.MasterGroups_ForceCC, @id = "MasterGroups_ForceCC", @name = "MasterGroups_ForceCC", @style = "height:16px;width:16px;" })
            </div>
            <label class="col-sm-2 control-label">Sch:</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.MasterGroups_Sch, new { @maxlength = "5", @class = "form-control", @Name = "MasterGroups_Sch", @Value = Model.MasterGroups_Sch, @Id = "MasterGroups_Sch" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">System Default:</label>
            <div class="col-sm-2">
                @Html.CheckBoxFor(x => x.MasterGroups_SystemCode, new { @value = Model.MasterGroups_SystemCode, @id = "MasterGroups_SystemCode", @name = "MasterGroups_SystemCode", @style = "height:16px;width:16px;" })
            </div>
        </div>
        @* iX9: -- Code for Header Ends -- *@
    </div>
</section>

<style>
    .tabcontent {
        height: 475px;
        overflow: scroll;
    }
</style>


<input type="hidden" id="controllername" />
@Html.HiddenFor(x => x.Mode, new { @id = "hdnMode" })
@Html.HiddenFor(x => x.MasterGroups_Grp, new { @id = "hdnGrpCode" })
@Html.HiddenFor(x => x.GrpName, new { @id = "hdnGrpName" })
@*
    Code Auto Generated on Tue 30-Apr-2019 07:58 PM
    Engine: iX9Generator, ver: 3.7 Revision: 32
    by Team Suchan, T.FAT *@
