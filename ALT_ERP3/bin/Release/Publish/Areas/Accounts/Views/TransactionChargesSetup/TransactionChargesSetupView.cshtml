@model TFATERPWebApplication.Areas.Accounts.Models.TransactionChargesSetupVM
@using Common;
@{
    ViewBag.Title = "Transaction Charges Setup";
    Layout = null;
}

<script type="text/javascript">
    $(document).ready(function () {
        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }

        @* iX9: Load List for Autocomplete Inputs i.e. ControlType='A' *@
        LoadCode()
        LoadHSNCode()
        LoadTaxCode()

        @* iX9: set the selected value to fixed combos *@
        $('#Charges_EqAmt').val('@Model.Charges_EqAmt').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#Charges_EqCost').val('@Model.Charges_EqCost').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#Charges_EqSale').val('@Model.Charges_EqSale').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#Charges_EqBro').val('@Model.Charges_EqBro').attr("selected", "selected");
        @* iX9: set the selected value to fixed combos *@
        $('#Charges_EqTax').val('@Model.Charges_EqTax').attr("selected", "selected");
        @* iX9: Validation rules for the fields where AllowBlank is False in Definition *@
        $('#TransactionChargesSetup').validate({
            onfocusout: false,
            errorLabelContainer: $('#ErrorMessage'),
            wrapper: "li",
            rules: {
                Charges_Head: {required: true,},
                Charges_EqAmt: {required: true,},
                Charges_EqCost: {required: true,},
                Charges_EqSale: {required: true,},
                Charges_EqBro: {required: true,},
                Charges_EqTax: {required: true,},
                Charges_Equation: {required: true,},
                Charges_Code: {required: true,},
               },
            messages: {
                Charges_Head: {required: 'Head is Required',},
                Charges_EqAmt: {required: 'EqAmt is Required',},
                Charges_EqCost: {required: 'EqCost is Required',},
                Charges_EqSale: {required: 'EqSale is Required',},
                Charges_EqBro: {required: 'EqBro is Required',},
                Charges_EqTax: {required: 'EqTax is Required',},
                Charges_Equation: {required: 'Equation is Required',},
                Charges_Code: {required: 'Code is Required',},
            }
        });

        @* iX9: Input Contraints to limit the inputs to required Input Type i.e. String, Numeric etc. *@
        $("#Charges_Head").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_RoundOff").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Charges_EqAmt").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_EqCost").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_EqSale").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_EqBro").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_EqTax").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_Equation").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_Code").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Charges_PostNo").constrain({ allow: { regex: "[0-9.-]" } });

        @* iX9: Executed when Save/Submit button is Pressed *@
        $('#Submit').click(function (event) {
            event.preventDefault();
            //if ($("#TransactionChargesSetup").validate().form() == false)
            //    return;

            if ($("#Charges_Head").val() == null || $("#Charges_Head").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Head is Required..');
                return;
            }
            if ($("#Charges_EqAmt").val() == null || $("#Charges_EqAmt").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Doc.Amount is Required..');
                return;
            }
            if ($("#Charges_EqCost").val() == null || $("#Charges_EqCost").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Item Cost is Required..');
                return;
            }
            if ($("#Charges_EqSale").val() == null || $("#Charges_EqSale").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('EqSale is Required..');
                return;
            }
            if ($("#Charges_EqBro").val() == null || $("#Charges_EqBro").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Brokerage is Required..');
                return;
            }
            if ($("#Charges_EqTax").val() == null || $("#Charges_EqTax").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Tax Amt is Required..');
                return;
            }
            if ($("#Charges_Equation").val() == null || $("#Charges_Equation").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Equation is Required..');
                return;
            }
            if ($("#Charges_Code").val() == null || $("#Charges_Code").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Account is Required..');
                return;
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Charges_RECORDKEY"] = $("#Charges_RECORDKEY").val();
            ModelData["Charges_Type"] = $("#Charges_Type").val();
            ModelData["Charges_Fld"] = $("#Charges_Fld").val();
            ModelData["Charges_Head"] = $("#Charges_Head").val();
            ModelData["Charges_AfterTax"] = $("#Charges_AfterTax").is(':checked');
            ModelData["Charges_RoundOff"] = $("#Charges_RoundOff").val();
            ModelData["Charges_EqAmt"] = $("#Charges_EqAmt").val();
            ModelData["Charges_EqCost"] = $("#Charges_EqCost").val();
            ModelData["Charges_EqSale"] = $("#Charges_EqSale").val();
            ModelData["Charges_EqBro"] = $("#Charges_EqBro").val();
            ModelData["Charges_EqTax"] = $("#Charges_EqTax").val();
            ModelData["Charges_Equation"] = $("#Charges_Equation").val();
            ModelData["Charges_Post"] = $("#Charges_Post").is(':checked');
            ModelData["Charges_Code"] = $("#Charges_Code").val();
            ModelData["Charges_HSNCode"] = $("#Charges_HSNCode").val();
            ModelData["Charges_PostNo"] = $("#Charges_PostNo").val();
            ModelData["Charges_TaxCode"] = $("#Charges_TaxCode").val();
            ModelData["Charges_ToPrint"] = $("#Charges_ToPrint").is(':checked');
            ModelData["Charges_ToHide"] = $("#Charges_ToHide").is(':checked');
            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Accounts/TransactionChargesSetup/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function LoadCode() {
        var url = '@Url.Action("AutoCompleteCode")'
        $('#Charges_Code').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Charges_Code', text: '@Model.CodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadHSNCode() {
        var url = '@Url.Action("AutoCompleteHSNCode")'
        $('#Charges_HSNCode').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Charges_HSNCode', text: '@Model.HSNCodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadTaxCode() {
        var url = '@Url.Action("AutoCompleteTaxCode")'
        $('#Charges_TaxCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Charges_TaxCode', text: '@Model.TaxCodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>

@* iX9: Form Design *@
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            <a href="~/Accounts/TransactionChargesSetup/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="TransactionChargesSetup" role="form" style="margin-top:15px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Body Panels *@
            <div class="form-group">
                <label class="col-sm-1 control-label">REC#:</label>
                <div class="col-sm-3">
                    @if (Model.Mode != "Add")
                    {
                        @Html.TextBoxFor(x => x.Charges_RECORDKEY, new { @maxlength = "10", @readonly = "readonly", @class = "form-control", @Name = "Charges_RECORDKEY", @Value = Model.Charges_RECORDKEY, @Id = "Charges_RECORDKEY" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Charges_RECORDKEY, new { @maxlength = "10", @class = "form-control", @readonly = "readonly", @Name = "Charges_RECORDKEY", @Value = Model.Charges_RECORDKEY, @Id = "Charges_RECORDKEY" })
                    }
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Type:</label>
                <div class="col-sm-3">
                    @if (Model.Mode != "Add")
                    {
                        @Html.TextBoxFor(x => x.Charges_Type, new { @maxlength = "5", @readonly = "readonly", @class = "form-control", @Name = "Charges_Type", @Value = Model.Charges_Type, @Id = "Charges_Type" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Charges_Type, new { @maxlength = "5", @class = "form-control", @readonly = "readonly", @Name = "Charges_Type", @Value = Model.Charges_Type, @Id = "Charges_Type" })
                    }
                </div>
                <label class="col-sm-1 control-label">Fld:</label>
                <div class="col-sm-3">
                    @if (Model.Mode != "Add")
                    {
                        @Html.TextBoxFor(x => x.Charges_Fld, new { @maxlength = "4", @readonly = "readonly", @class = "form-control", @Name = "Charges_Fld", @Value = Model.Charges_Fld, @Id = "Charges_Fld" })
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.Charges_Fld, new { @maxlength = "4", @class = "form-control", @readonly = "readonly", @Name = "Charges_Fld", @Value = Model.Charges_Fld, @Id = "Charges_Fld" })
                    }
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Head:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Charges_Head, new { @maxlength = "30", @class = "form-control", @Name = "Charges_Head", @Value = Model.Charges_Head, @Id = "Charges_Head" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">After Tax:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Charges_AfterTax, new { @value = Model.Charges_AfterTax, @id = "Charges_AfterTax", @name = "Charges_AfterTax", @style = "height:16px;width:16px;" })
                </div>
                <label class="col-sm-1 control-label">Round Off Dec:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.Charges_RoundOff, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "Charges_RoundOff", @Value = Model.Charges_RoundOff, @Id = "Charges_RoundOff" })
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="form-group">
                <label class="col-sm-3 control-label" style="font-size:13px;text-decoration: underline;font-weight:bold;">used to calculate:</label>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Doc.Amount:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Charges_EqAmt, Model.EqAmtList, new { @class = "form-control", @Id = "Charges_EqAmt", @Name = "Charges_EqAmt", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Item Cost:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Charges_EqCost, Model.EqCostList, new { @class = "form-control", @Id = "Charges_EqCost", @Name = "Charges_EqCost", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
                <label class="col-sm-1 control-label">EqSale:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Charges_EqSale, Model.EqSaleList, new { @class = "form-control", @Id = "Charges_EqSale", @Name = "Charges_EqSale", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Brokerage:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Charges_EqBro, Model.EqBroList, new { @class = "form-control", @Id = "Charges_EqBro", @Name = "Charges_EqBro", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
                <label class="col-sm-1 control-label">Tax Amt:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Charges_EqTax, Model.EqTaxList, new { @class = "form-control", @Id = "Charges_EqTax", @Name = "Charges_EqTax", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <label class="col-sm-1 control-label">Equation:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Charges_Equation, new { @maxlength = "150", @class = "form-control", @Name = "Charges_Equation", @Value = Model.Charges_Equation, @Id = "Charges_Equation" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Post to Accounts?:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Charges_Post, new { @value = Model.Charges_Post, @id = "Charges_Post", @name = "Charges_Post", @style = "height:16px;width:16px;" })
                </div>
                <label class="col-sm-1 control-label">Account:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Charges_Code, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Charges_Code", @Value = Model.Charges_Code, @Name = "Charges_Code" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">HSNCode:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Charges_HSNCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Charges_HSNCode", @Value = Model.Charges_HSNCode, @Name = "Charges_HSNCode" })
                </div>
                <label class="col-sm-1 control-label">PostNo:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.Charges_PostNo, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "Charges_PostNo", @Value = Model.Charges_PostNo, @Id = "Charges_PostNo" })
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">TaxCode:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Charges_TaxCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Charges_TaxCode", @Value = Model.Charges_TaxCode, @Name = "Charges_TaxCode" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">ToPrint:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Charges_ToPrint, new { @value = Model.Charges_ToPrint, @id = "Charges_ToPrint", @name = "Charges_ToPrint", @style = "height:16px;width:16px;" })
                </div>
                <label class="col-sm-1 control-label">Hide:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Charges_ToHide, new { @value = Model.Charges_ToHide, @id = "Charges_ToHide", @name = "Charges_ToHide", @style = "height:16px;width:16px;" })
                </div>
            </div>
            @* iX9: -- Code for Header Ends -- *@
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                }
                <a href="~/Accounts/TransactionChargesSetup/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

<input type="hidden" id="controllername" />
@*
    Code Auto Generated on Wed 03-Apr-2019 12:26 PM
    Engine: iX9Generator, ver: 3.7 Revision: 24
    by Team Suchan, T.FAT *@


