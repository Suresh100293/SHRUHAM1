@model TFATERPWebApplication.Areas.Accounts.Models.EmployeeMastersVM
@using Common;
@{
    ViewBag.Title = "Employee / Operators";
    Layout = null;
}

<script type="text/javascript">
    $(document).ready(function () {
        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }

        $('#Employee_Dob').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doc').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doj').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doi').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Dol').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Dor').datepicker({
            format:'dd-mm-yyyy',
            autoclose: true,
        });
        @* iX9: Load List for Autocomplete Inputs i.e. ControlType='A' *@
        LoadDept()
        LoadCateNo()
        LoadEmpGrade()

        @* iX9: set the selected value to fixed combos *@
        $('#Employee_OTUnit').val('@Model.Employee_OTUnit').attr("selected", "selected");
        @* iX9: Date Picker Code *@
        $('#Employee_Dob').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doc').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doj').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Doi').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Dol').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Employee_Dor').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        @* iX9: Validation rules for the fields where AllowBlank is False in Definition *@
        $('#EmployeeMasters').validate({
            onfocusout: false,
            errorLabelContainer: $('#ErrorMessage'),
            wrapper: "li",
            rules: {
                Employee_EmpID: {required: true,},
                Employee_Name: {required: true,},
                Employee_EmpCompId: {required: true,},
                Employee_CateNo: {required: true,},
                Employee_Doj: {required: true,},
                Employee_EmpGrade: {required: true,},
                Employee_Basic: {required: true,},
               },
            messages: {
                Employee_EmpID: {required: 'EmpID is Required',},
                Employee_Name: {required: 'Name is Required',},
                Employee_EmpCompId: {required: 'EmpCompId is Required',},
                Employee_CateNo: {required: 'CateNo is Required',},
                Employee_Doj: {required: 'Doj is Required',},
                Employee_EmpGrade: {required: 'EmpGrade is Required',},
                Employee_Basic: {required: 'Basic is Required',},
            }
        });

        @* iX9: Input Contraints to limit the inputs to required Input Type i.e. String, Numeric etc. *@
        $("#Employee_EmpID").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Employee_Name").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Employee_EmpCompId").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        $("#Employee_Dept").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Employee_CateNo").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Employee_EmpGrade").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Employee_EmpType").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Employee_Basic").constrain({ allow: { regex: "[0-9.-]" } });
        $("#Employee_OTRate").constrain({ allow: { regex: "[0-9.-]" } });

        @* iX9: Executed when Save/Submit button is Pressed *@
        $('#Submit').click(function (event) {
            event.preventDefault();
            //if ($("#EmployeeMasters").validate().form() == false)
            //    return;

            if ($("#Employee_EmpID").val() == null || $("#Employee_EmpID").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Emp. ID is Required..');
                return;
            }
            if ($("#Employee_Name").val() == null || $("#Employee_Name").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Name is Required..');
                return;
            }
            if ($("#Employee_EmpCompId").val() == null || $("#Employee_EmpCompId").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Comp. ID is Required..');
                return;
            }
            if ($("#Employee_CateNo").val() == null || $("#Employee_CateNo").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Category is Required..');
                return;
            }
            if ($("#Employee_Doj").val() == null || $("#Employee_Doj").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Join Date is Required..');
                return;
            }
            if ($("#Employee_EmpGrade").val() == null || $("#Employee_EmpGrade").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Grade is Required..');
                return;
            }
            if ($("#Employee_Basic").val() == null || $("#Employee_Basic").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Basic is Required..');
                return;
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Employee_EmpID"] = $("#Employee_EmpID").val();
            ModelData["Employee_Name"] = $("#Employee_Name").val();
            ModelData["Employee_EmpCompId"] = $("#Employee_EmpCompId").val();
            ModelData["Employee_CitizenId"] = $("#Employee_CitizenId").val();
            ModelData["Employee_AadharNo"] = $("#Employee_AadharNo").val();
            ModelData["Employee_Dept"] = $("#Employee_Dept").val();
            ModelData["Employee_CateNo"] = $("#Employee_CateNo").val();
            ModelData["Employee_DobVM"] = $("#Employee_Dob").val();
            ModelData["Employee_DocVM"] = $("#Employee_Doc").val();
            ModelData["Employee_DojVM"] = $("#Employee_Doj").val();
            ModelData["Employee_DoiVM"] = $("#Employee_Doi").val();
            ModelData["Employee_DolVM"] = $("#Employee_Dol").val();
            ModelData["Employee_DorVM"] = $("#Employee_Dor").val();
            ModelData["Employee_EmpGrade"] = $("#Employee_EmpGrade").val();
            ModelData["Employee_EmpType"] = $("#Employee_EmpType").val();
            ModelData["Employee_GradeNo"] = $("#Employee_GradeNo").val();
            ModelData["Employee_BasicType"] = $("#Employee_BasicType").val();
            ModelData["Employee_Basic"] = $("#Employee_Basic").val();
            ModelData["Employee_Monthly"] = $("#Employee_Monthly").is(':checked');
            ModelData["Employee_MonthlyBasic"] = $("#Employee_MonthlyBasic").is(':checked');
            ModelData["Employee_OTRate"] = $("#Employee_OTRate").val();
            ModelData["Employee_OTUnit"] = $("#Employee_OTUnit").val();
            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function LoadDept() {
        var url = '@Url.Action("AutoCompleteDept")'
        $('#Employee_Dept').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Employee_Dept', text: '@Model.DeptName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadCateNo() {
        var url = '@Url.Action("AutoCompleteCateNo")'
        $('#Employee_CateNo').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Employee_CateNo', text: '@Model.CateNoName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadEmpGrade() {
        var url = '@Url.Action("AutoCompleteEmpGrade")'
        $('#Employee_EmpGrade').select2({
            minimumInputLength: 2,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 2,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Employee_EmpGrade', text: '@Model.EmpGradeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

</script>

@* iX9: Form Design *@
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            <a href="~/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="EmployeeMasters" role="form" style="margin-top:15px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Body Panels *@
            <div class="form-group">
                <label class="col-sm-1 control-label">Emp. ID:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_EmpID, new { @maxlength = "25", @class = "form-control", @Name = "Employee_EmpID", @Value = Model.Employee_EmpID, @Id = "Employee_EmpID" })
                </div>
                <label class="col-sm-1 control-label">Name:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_Name, new { @maxlength = "75", @class = "form-control", @Name = "Employee_Name", @Value = Model.Employee_Name, @Id = "Employee_Name" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Comp. ID:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_EmpCompId, new { @maxlength = "25", @class = "form-control", @Name = "Employee_EmpCompId", @Value = Model.Employee_EmpCompId, @Id = "Employee_EmpCompId" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Citizen ID:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_CitizenId, new { @maxlength = "35", @class = "form-control", @Name = "Employee_CitizenId", @Value = Model.Employee_CitizenId, @Id = "Employee_CitizenId" })
                </div>
                <label class="col-sm-1 control-label">Aadhar No:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_AadharNo, new { @maxlength = "12", @class = "form-control", @Name = "Employee_AadharNo", @Value = Model.Employee_AadharNo, @Id = "Employee_AadharNo" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Dept:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_Dept, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Employee_Dept", @Value = Model.Employee_Dept, @Name = "Employee_Dept" })
                </div>
                <label class="col-sm-1 control-label">Category:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_CateNo, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Employee_CateNo", @Value = Model.Employee_CateNo, @Name = "Employee_CateNo" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Birth Date:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DobVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Dob", @id = "Employee_Dob", @Value = Model.Employee_Dob.ToString("dd/MM/yyyy") })
                </div>
                <label class="col-sm-1 control-label">DOC:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DocVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Doc", @id = "Employee_Doc", @Value = Model.Employee_Doc.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Join Date:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DojVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Doj", @id = "Employee_Doj", @Value = Model.Employee_Doj.ToString("dd/MM/yyyy") })
                </div>
                <label class="col-sm-1 control-label">Last Increment:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DoiVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Doi", @id = "Employee_Doi", @Value = Model.Employee_Doi.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Leaving Date:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DolVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Dol", @id = "Employee_Dol", @Value = Model.Employee_Dol.ToString("dd/MM/yyyy") })
                </div>
                <label class="col-sm-1 control-label">Retirement:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_DorVM, new { @type = "text", @class = "form-control", @style = "width:125px;", @Name = "Employee_Dor", @id = "Employee_Dor", @Value = Model.Employee_Dor.ToString("dd/MM/yyyy") })
                </div>
            </div>
            <br />
            <div class="form-group">
                <label class="col-sm-1 control-label">Grade:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_EmpGrade, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @id = "Employee_EmpGrade", @Value = Model.Employee_EmpGrade, @Name = "Employee_EmpGrade" })
                </div>
                <label class="col-sm-1 control-label">Type:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.Employee_EmpType, new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "Employee_EmpType", @Value = Model.Employee_EmpType, @Id = "Employee_EmpType" })
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">GradeNo:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_GradeNo, new { @maxlength = "6", @class = "form-control", @Name = "Employee_GradeNo", @Value = Model.Employee_GradeNo, @Id = "Employee_GradeNo" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">BasicType:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Employee_BasicType, new { @maxlength = "1", @class = "form-control", @Name = "Employee_BasicType", @Value = Model.Employee_BasicType, @Id = "Employee_BasicType" })
                </div>
                <label class="col-sm-1 control-label">Basic:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.Employee_Basic, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "Employee_Basic", @Value = Model.Employee_Basic, @Id = "Employee_Basic" })
                </div>
                <div class="col-sm-2"></div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Monthly?:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Employee_Monthly, new { @value = Model.Employee_Monthly, @id = "Employee_Monthly", @name = "Employee_Monthly", @style = "height:16px;width:16px;" })
                </div>
                <label class="col-sm-1 control-label">Monthly Basic:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Employee_MonthlyBasic, new { @value = Model.Employee_MonthlyBasic, @id = "Employee_MonthlyBasic", @name = "Employee_MonthlyBasic", @style = "height:16px;width:16px;" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">OT Rate:</label>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.Employee_OTRate, "{0:n2}", new { @maxlength = "12", @class = "form-control", @style = "width:100px;text-align:right;", @Name = "Employee_OTRate", @Value = Model.Employee_OTRate, @Id = "Employee_OTRate" })
                </div>
                <div class="col-sm-2"></div>
                <label class="col-sm-1 control-label">OTUnit:</label>
                <div class="col-sm-3">
                    @Html.DropDownListFor(m => m.Employee_OTUnit, Model.OTUnitList, new { @class = "form-control", @Id = "Employee_OTUnit", @Name = "Employee_OTUnit", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
            </div>
            @* iX9: -- Code for Header Ends -- *@
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/Accounts/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>

<input type="hidden" id="controllername" />
@*
    Code Auto Generated on Sat 30-Mar-2019 03:48 PM
    Engine: iX9Generator, ver: 3.7 Revision: 24
    by Team Suchan, T.FAT *@

