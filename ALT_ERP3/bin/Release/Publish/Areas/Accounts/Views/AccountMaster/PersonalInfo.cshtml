
@model TFATERPWebApplication.Areas.Accounts.Models.MasterVM
@using Common;

<script type="text/javascript">
    $(document).ready(function () {
        $('#SpouseBudate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        $('#Budate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#StrAnndate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        $('#StrChildBdate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        loadDesignation()
        loadlanguage()
        loadDepartments()
        loadReligion()
        loadDivisions()
    });

    function loadDesignation() {
        event.preventDefault();
        var url = '@Url.Action("GetDesignation")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#Designation').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#Designation").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Designation').val('@Model.Designation').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };

    function loadlanguage() {

        var url = '@Url.Action("Getlanguage")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#language').val() },
            success: function (result) {
                //alert(JSON.stringify(result));
                $.each(result, function (i, item) {
                    $("#Language").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Language').val('@Model.Language').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };

    function loadDepartments() {
        event.preventDefault();
        var url = '@Url.Action("GetDepartments")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#Dept').val() },
            success: function (result) {
                //alert(JSON.stringify(result));
                $.each(result, function (i, item) {
                    $("#Dept").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Dept').val('@Model.Dept').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };


    function loadReligion() {
        event.preventDefault();
        var url = '@Url.Action("GetReligion")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: { Country: $('#Religion').val() },
            success: function (result) {
                //alert(JSON.stringify(result));
                $.each(result, function (i, item) {
                    $("#Religion").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Religion').val('@Model.Religion').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };


    function loadDivisions() {
        event.preventDefault();
        var url = '@Url.Action("GetDivisions")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: {},
            success: function (result) {
                //alert(JSON.stringify(result));
                $.each(result, function (i, item) {
                    $("#Division").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#Division').val('@Model.Division').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };

</script>
<div>
    <div class="form-horizontal" method="get" id="accountmaster" role="form">

        <br />
        <div class="form-group">
            <label class="col-sm-2 control-label">Designation:</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(m => m.Designation, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @Id = "Designation",
               @Name = "Designation"
           })
            </div>
            <label class="col-sm-2 control-label">Language:</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(m => m.Language, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @Id = "Language",
               @Name = "Language"
           })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Department:</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(m => m.Dept, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @Id = "Dept",
               @Name = "Dept"
           })
            </div>
            <label class="col-sm-2 control-label">Religion:</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(m => m.Religion, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @Id = "Religion",
               @Name = "Religion"
           })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Division:</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(m => m.Division, DropdownHelper.EmptyList(), new
           {
               @class = "form-control",
               @Id = "Division",
               @Name = "Division"
           })
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Birth Date:</label>
            <div class="col-sm-3">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.Budate, new
               {
                   @type = "text",
                   @class = "form-control",
                   @id = "Budate",
                   @Name = "Budate",
                   @Value = Model.Bdate.ToString("dd-MM-yyyy")
               })
                </div>
            </div>
            <label class="col-sm-2 control-label">Anniversary:</label>
            <div class="col-sm-3">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.StrAnndate, new
               {
                   @type = "text",
                   @class = "form-control",
                   @id = "StrAnndate",
                   @Name = "StrAnndate",
                   @Value = Model.Anndate.ToString("dd-MM-yyyy")
               })
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Spouse Name:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.SpouseName, new
           {
               @class = "form-control",
               @Name = "SpouseName",
               @Id = "SpouseName",
               @Value = Model.SpouseName
           })
            </div>
            <label class="col-sm-2 control-label">Birth Date:</label>
            <div class="col-sm-3">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.SpouseBudate, new
               {
                   @type = "text",
                   @class = "form-control",
                   @id = "SpouseBudate",
                   @Name = "SpouseBudate",
                   @Value = Model.SpouseBdate.ToString("dd-MM-yyyy")
               })
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Child Name:</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.ChildName, new
           {
               @class = "form-control",
               @Name = "ChildName",
               @Id = "ChildName",
               @Value = Model.ChildName
           })
            </div>
            <label class="col-sm-2 control-label">Birth Date:</label>
            <div class="col-sm-3">
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </div>
                    @Html.TextBoxFor(x => x.StrChildBdate, new
               {
                   @type = "text",
                   @class = "form-control",
                   @id = "StrChildBdate",
                   @Name = "StrChildBdate",
                   @Value = Model.ChildBdate.ToString("dd-MM-yyyy")
               })
                </div>
            </div>
        </div>
    </div>
</div>