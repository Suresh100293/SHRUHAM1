@model TFATERPWebApplication.Areas.Logistics.Models.LRSetupVM
@using Common;
@{
    ViewBag.Title = "LRSetupVM";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        LoadChargeType();
        LoadUnit();
        //LoadParticular();
        LoadBillAt();
        LoadLRType();
        LoadServiceType();
        LoadToPay();
        LoadPaid();

        
        $("#Days").constrain({ allow: { regex: "[0-9]" } });

        if ('@Model.Days'=='0') {
            $("#AllList").prop("checked", true);
            $("#Days").attr("disabled", "disabled");
        } else {
            $("#DaysList").prop("checked", true);
            $("#Days").removeAttr("disabled");
        }
        $("input[name='ListBy'").change(function () {
            if (this.id == "AllList") {
                $("#Days").attr("disabled", "disabled");
            } else {
                $("#Days").removeAttr("disabled");
            }
        });


        // Edit/View/Delete Time USe Below Code
        if ('@Model.LR_Date' == 'True') {
            $("#Before_LR_Date").removeAttr("disabled");
            $("#After_LR_Date").removeAttr("disabled");
        } else {
            $("#Before_LR_Date").attr("disabled", "disabled");
            $("#After_LR_Date").attr("disabled", "disabled");
        }
        if ('@Model.CurrentBranch'=='True') {
            $("#CurrentBranch").prop("checked", true);
        } else {
            $("#AllBranch").prop("checked", true);
        }
        if ('@Model.Asc'=="True") {
            $("#Asc").prop("checked", true);
        } else {
            $("#Desc").prop("checked", true);
        }

        if ('@Model.Colln'=="G" ) {
            $("#Godown1").prop("checked", true);
        }
        else if ('@Model.Colln'=="D") {
            $("#Direct").prop("checked", true);
        }
        else {
            $("#Crossing").prop("checked", true);
        }

        if ('@Model.Del'=="D") {
            $("#Door").prop("checked", true);
        } else {
            $("#Godown").prop("checked", true);
        }
        // End Edit/View/Delete Mode Code


        //All Time USe Below Code

        $('#LrAutomatic').change(function () {
            if (this.checked) {
                $("#LrManual").prop('checked', false)
                $("#Both").prop('checked', false)
            }
        });
        
        $("input[name='TOPAY'").change(function () {
            if (this.value == "No") {
                $("#TopayCustomer").attr("disabled", "disabled");
                $("#DefaultToPay").attr("disabled", "disabled");
                $("#chkDefaultTopay").attr("disabled", "disabled");
            } else {
                $("#TopayCustomer").removeAttr("disabled");
                $("#DefaultToPay").removeAttr("disabled");
                $("#chkDefaultTopay").removeAttr("disabled");
            }
        });
        $("#chkDefaultTopay").change(function () {
            if (this.checked) {
                $("#DefaultToPay").attr("disabled", "disabled");

            } else {
                $("#DefaultToPay").removeAttr("disabled");
            }
        });

        if ('@Model.Topay'=='False') {
            $("#ToPayNO").prop('checked', true);
            $("#TopayCustomer").attr("disabled", "disabled");
            $("#DefaultToPay").attr("disabled", "disabled");
            $("#chkDefaultTopay").attr("disabled", "disabled");
        } else {
            $("#ToPayYes").prop('checked', true);
            if ($("#DefaultToPay").val()=="") {
                $("#chkDefaultTopay").prop('checked', true);
                $("#DefaultToPay").attr("disabled", "disabled");
            }
        }
        if ('@Model.Paid'=='False') {
            $("#PaidNO").prop('checked', true);
            $("#PaidCustomer").attr("disabled", "disabled");
            $("#DefaultPaid").attr("disabled", "disabled");
            $("#chkDefaultPaid").attr("disabled", "disabled");
        } else {
            $("#PaidYes").prop('checked', true);
            if ($("#DefaultPaid").val() == "") {
                $("#chkDefaultPaid").prop('checked', true);
                $("#DefaultPaid").attr("disabled", "disabled");
            }
        }
        $("input[name='Paid'").change(function () {
            if (this.value == "No") {
                $("#PaidCustomer").attr("disabled", "disabled");
                $("#DefaultPaid").attr("disabled", "disabled");
                $("#chkDefaultPaid").attr("disabled", "disabled");
            } else {
                $("#PaidCustomer").removeAttr("disabled");
                $("#DefaultPaid").removeAttr("disabled");
                $("#chkDefaultPaid").removeAttr("disabled");
            }
        });
        $("#chkDefaultPaid").change(function () {
            if (this.checked) {
                $("#DefaultPaid").attr("disabled", "disabled");
            } else {
                $("#DefaultPaid").removeAttr("disabled");
            }
        });
        $('#LrManual').change(function () {
            if (this.checked) {
                $("#LrAutomatic").prop('checked', false)
                $("#Both").prop('checked', false)
            }
        });
        $('#Both').change(function () {
            if (this.checked) {
                $("#LrAutomatic").prop('checked', false)
                $("#LrManual").prop('checked', false)
            }
        });

        $('#LR_Date').change(function () {
            if (this.checked) {
                $("#Before_LR_Date").removeAttr("disabled");
                $("#After_LR_Date").removeAttr("disabled");

            } else {
                //$("#Before_LR_Date").val("0");
                //$("#AfterDays").val("0");
                $("#Before_LR_Date").attr("disabled", "disabled");
                $("#After_LR_Date").attr("disabled", "disabled");
            }

        });



        $('#Branch_Area').change(function () {
            if (this.checked) {
                $("#All").prop('checked', false)
                $("#Ap_Per_User").prop('checked', false)
            }
        });
        $('#All').change(function () {
            if (this.checked) {
                $("#Branch_Area").prop('checked', false)
                $("#Ap_Per_User").prop('checked', false)
            }
        });
        $('#Ap_Per_User').change(function () {
            if (this.checked) {
                $("#Branch_Area").prop('checked', false)
                $("#All").prop('checked', false)
            }
        });

        $('#Submit').click(function (event) {
            event.preventDefault();

            if (($("#LrAutomatic").is(":checked") == false) && ($("#LrManual").is(":checked") == false) && ($("#Both").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select LR Generate');
                return;
            }
            if ($("#LR_Date").is(":checked") == true) {
                if (($("#Before_LR_Date").val() == "0" || $("#Before_LR_Date").val() == null || $("#Before_LR_Date").val() == "") && ($("#After_LR_Date").val() == "0" || $("#After_LR_Date").val() == null || $("#After_LR_Date").val() == "")) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('LR Date Range Required.');
                    return;
                }
            }
            if ($("#LRType").val() == '') {
                
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LRType is required..');
                return;
            }
            if ($("#ServiceType").val() == '') {
                
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ServiceType is required..');
                return;
            }
            if (($("#Branch_Area").is(":checked") == false) && ($("#All").is(":checked") == false) && ($("#Ap_Per_User").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select From Destination');
                return;
            }

            if ($("#DeclareValueZero").is(":checked") == false) {
                if (($("#Declare_Value").val() == null) || ($("#Declare_Value").val() == "0")) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Please Enter Declare Value');
                    return;
                }
            }
            if ($("#AllList").is(":checked") == false) {
                if (($("#Days").val() == '') || ($("#Days").val() == "0")) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Please Enter Days');
                    return;
                }
            }
            
            //if ($("#ParticularFlag").is(":checked") == true) {
            //    if (($("#Particular").val() == "")) {
            //        $("#ErrorMessage").show();
            //        $("#ErrorMessage").text('Please select Particular Value');
            //        return;
            //    }
            //}


            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};

            ModelData["SelectColumn"] = $("#SelectColumn").val();

            if (($("#Asc").is(":checked") == true)) {
                ModelData["Asc"] = true;
            } else {
                ModelData["Asc"] = false;
            }

            if (($("#AllList").is(":checked") == true)) {
                ModelData["Days"] = "0";
            } else {
                ModelData["Days"] = $("#Days").val();
            }

            ModelData["ParticularFlag"] = $("#ParticularFlag").is(":checked");
            
            if (($("#Both").is(":checked") == true)) {
                ModelData["Both"] = true;
            } else {
                if (($("#LrAutomatic").is(":checked") == true)) {
                    ModelData["LrAutomatic"] = true;
                } else {
                    ModelData["LrAutomatic"] = false;
                }
            }


            if (($("#LR_Date").is(":checked") == true)) {
                ModelData["LR_Date"] = true;
                if ($("#Before_LR_Date").val()=='') {
                    ModelData["Before_LR_Date"] = "0";
                } else {
                    ModelData["Before_LR_Date"] = $("#Before_LR_Date").val();
                }
                if ($("#After_LR_Date").val() == '') {
                    ModelData["After_LR_Date"] = "0";
                } else {
                    ModelData["After_LR_Date"] = $("#After_LR_Date").val();
                }
                
            } else {
                ModelData["LR_Date"] = false;
                ModelData["Before_LR_Date"] = "0";
                ModelData["After_LR_Date"] = "0";
            }

            ModelData["LRType"] = $("#LRType").val();
            ModelData["ServiceType"] = $("#ServiceType").val();
            ModelData["Unit"] = $("#Unit").val();
            ModelData["BillBranch"] = $("#BillBranch").val();
            ModelData["ChrType"] = $("#ChrType").val();
            ModelData["CurrentBranch"] = $("#CurrentBranch").is(":checked");



            if (($("#Branch_Area").is(":checked") == true)) {
                ModelData["Branch_Area"] = true;
            }
            if (($("#All").is(":checked") == true)) {
                ModelData["All"] = true;
            }
            if (($("#Ap_Per_User").is(":checked") == true)) {
                ModelData["Ap_Per_User"] = true;
            }

            if (($("#Direct").is(":checked") == true)) {
                ModelData["Colln"] = "D";
            } else if (($("#Godown1").is(":checked") == true)) {
                ModelData["Colln"] = "G";
            }
            else {
                ModelData["Colln"] = "C";
            }

            if (($("#Door").is(":checked") == true)) {
                ModelData["Del"] = "D";
            } else {
                ModelData["Del"] = "G";
            }

            if (($("#DeclareValueZero").is(":checked") == true)) {
                ModelData["DeclareValueZero"] = true;
            } else {
                ModelData["DeclareValueZero"] = false;
            }

            if (($("#Charges").is(":checked") == true)) {
                ModelData["Charges"] = true;
            } else {
                ModelData["Charges"] = false;
            }

            ModelData["Declare_Value"] = $("#Declare_Value").val();

            if (($("#GST").is(":checked") == true)) {
                ModelData["GST"] = true;
            }

            if (($("#Eway_Bill").is(":checked") == true)) {
                ModelData["Eway_Bill"] = true;
            }

            if (($("#Vehicle").is(":checked") == true)) {
                ModelData["Vehicle"] = true;
            }

            if (($("#Party_Challan").is(":checked") == true)) {
                ModelData["Party_Challan"] = true;
            }

            if (($("#Party_Invoice").is(":checked") == true)) {
                ModelData["Party_Invoice"] = true;
            }

            ModelData["CustomerCompulsory"] = $("#CustomerCompulsory").is(":checked");


            if ($("#ToPayNO").is(":checked") == true)
            {
                ModelData["Topay"] = false;
                ModelData["TopayCustomer"] = "0";
                ModelData["DefaultToPay"] = "";
            }
            else
            {
                ModelData["Topay"] = true;
                ModelData["TopayCustomer"] = $("#TopayCustomer").val();
                ModelData["DefaultToPay"] = $("#DefaultToPay").val();
                if ($("#chkDefaultTopay").is(":checked") == true) {
                    ModelData["DefaultToPay"] = "";
                }
            }
            if ($("#PaidNO").is(":checked") == true) {
                ModelData["Paid"] = false;
                ModelData["PaidCustomer"] = "0";
                ModelData["DefaultPaid"] = "";
            }
            else {
                ModelData["Paid"] = true;
                ModelData["PaidCustomer"] = $("#PaidCustomer").val();
                ModelData["DefaultPaid"] = $("#DefaultPaid").val();
                if ($("#chkDefaultPaid").is(":checked") == true) {
                    ModelData["DefaultPaid"] = "";
                }
            }
            
            

            ModelData["Mode"] = '@Model.Mode';

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/DashBoard/SetUP";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    function LoadChargeType() {

        var url = '@Url.Action("ChargeType")'
        $('#ChrType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ChrType', text: '@Model.ChrType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadUnit() {

        var url = '@Url.Action("GetUnit")'
        $('#Unit').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Unit', text: '@Model.Unit_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadBillAt() {
        var url = '@Url.Action("BillatBranch")'
        $('#BillBranch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillBranch', text: '@Model.BillBranch_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadLRType() {
        
        var url = '@Url.Action("GetLRType")'
        $('#LRType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.LRType', text: '@Model.LRType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    

    function LoadServiceType() {
        
        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadToPay() {
        
        var url = '@Url.Action("LoadToPay")'
        $('#DefaultToPay').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DefaultToPay', text: '@Model.DefaultToPay_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadPaid() {
        
        var url = '@Url.Action("LoadToPay")'
        $('#DefaultPaid').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DefaultPaid', text: '@Model.DefaultPaid_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>
<style>

    hr {
        margin-top: 15px;
        margin-bottom: 15px;
        border: 0;
        border-top: 2px solid #e0cbcb !important;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    legend {
        /*margin-left: 30%;
        text-align: center;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #dec0c0;*/
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color:red;
    }
</style>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">Lorry Receipt</b>

        <span class="tools pull-right">
            <a href="~/DashBoard/SetUP" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            @*<b class="CodeSt">@Model.Mode Mode</b>*@
            <b class="CodeSt">Setup Mode</b>
        </span>
        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:30px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-sm-12" style="margin-top: 15px;">
                <legend>Lorry Receipts</legend>

                <div class="panel panel-default" style="height:450px;overflow:auto;">
                    <div class="panel-body">
                        <hr />
                        <div class="form-group ">
                            <label class="col-sm-2 control-label" style="width:210px;font-size: 14px;font-weight: bold;">List Sort By :</label>
                            <div class="col-sm-2">
                                @Html.EnumDropDownListFor(x => x.SelectColumn, new { @class = "form-control", @Value = Model.SelectColumn })
                            </div>
                            <div class="col-sm-2">
                                <div class="col-sm-12" style="display: flex;">
                                    <input type="radio" class="form-control" name="SortOperation" id="Asc" value="Asc" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Ascending</label>
                                    <input type="radio" class="form-control" name="SortOperation" id="Desc" value="Desc" style="height:20px;width:35px;" /><label class=" bold control-label"> Descending</label>
                                </div>
                            </div>
                            <label class="col-sm-1 control-label" style="width:auto;font-size: 14px;font-weight: bold;">Display List :</label>
                            <div class="col-sm-2" style="width:auto;">
                                <div class="col-sm-12" style="display: flex;">
                                    <input type="radio" class="form-control" name="ListBy" id="AllList"  style="height:20px;width:35px;" checked /><label class=" bold control-label"> All</label>
                                    <input type="radio" class="form-control" name="ListBy" id="DaysList"  style="height:20px;width:35px;" /><label class=" bold control-label"> NO-OF-Days</label>
                                </div>
                            </div>
                            <div class="col-sm-1" style="width: 80px;">
                                @Html.TextBoxFor(x => x.Days, new { @class = " form-control col-sm-12", @Value = Model.Days, style = "width: 100%;" })
                            </div>
                            <label class="col-sm-1 control-label" style="width:auto;font-size: 14px;font-weight: bold;">Days</label>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <label class="col-sm-2 control-label" style="width:210px;font-size: 14px;font-weight: bold;">LR Generate :</label>
                            <div class="col-sm-3" style="padding-left: 0px;padding-right:0px;">
                                <div class="col-sm-3" style="padding-left: 0px;padding-right:0px;">
                                    @Html.CheckBoxFor(x => x.LrAutomatic, new { @class = "", @Value = Model.LrAutomatic, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Auto :</label>
                                </div>
                                <div class="col-sm-4" style="padding-left: 0px;padding-right:0px;">
                                    @Html.CheckBoxFor(x => x.LrManual, new { @class = "", @Value = Model.LrManual, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Manual :</label>
                                </div>
                                <div class="col-sm-3" style="padding-left: 0px;padding-right:0px;">
                                    @Html.CheckBoxFor(x => x.Both, new { @class = "", @Value = Model.Both, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Both :</label>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group " style="">
                            <label class="col-sm-2 control-label" style="width:210px;font-size: 14px;font-weight: bold;">LR Date Allow To Edit :</label>
                            <div class="col-sm-1" style="width: 35px;padding-right:0px;padding-left:7px;">
                                @Html.CheckBoxFor(x => x.LR_Date, new { @class = "", @Value = Model.LR_Date, style = "height: 20px;width: 35px;" })
                            </div>
                            <label class="col-sm-1 control-label" style="font-weight:100;width: auto;">LR Date Edit Bfore </label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(x => x.Before_LR_Date, new { @class = " col-sm-1", @Value = Model.Before_LR_Date, @disabled = "Disabled", style = "width: 40px;margin-left: 0px;" })
                                <label class="col-sm-3 control-label" style="margin-left: 0px;">Days And After</label>
                                @Html.TextBoxFor(x => x.After_LR_Date, new { @class = " col-sm-1", @Value = Model.After_LR_Date, @disabled = "Disabled", style = "width: 40px;margin-left: 0px;" })
                                <label class="col-sm-5 control-label" style="width: 185px;margin-left: 0px;">Days From The Current Date.</label>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">LR Type By Default :</label>
                            </div>
                            <div class="col-sm-2" style="padding-right:0px;padding-left:15px;">
                                @Html.TextBoxFor(x => x.LRType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.LRType })
                            </div>
                            <div class="col-sm-offset-2 col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Service Type By Default :</label>
                            </div>
                            <div class=" col-sm-2" style="padding-right:0px;padding-left:12px;">
                                @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ServiceType })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Consignor/Consignee :</label>
                            </div>
                            <div class="col-sm-3">
                                <div class="col-sm-12" style="display: flex;">
                                    <input type="radio" class="form-control" name="ConsignerRadiobtn" id="CurrentBranch" value="Asc" style="height:20px;width:35px;"  /><label class=" bold control-label"> Current-Branch</label>
                                    <input type="radio" class="form-control" name="ConsignerRadiobtn" id="AllBranch" value="Desc" style="height:20px;width:35px;" /><label class=" bold control-label"> All-Branch</label>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Bill Branch By Default :</label>
                            </div>
                            <div class="col-sm-2" style="padding-right:0px;padding-left:15px;">
                                @Html.TextBoxFor(x => x.BillBranch, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.BillBranch })
                            </div>
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Unit  By Default :</label>
                            </div>
                            <div class=" col-sm-2" style="padding-right:0px;padding-left:12px;">
                                @Html.TextBoxFor(x => x.Unit, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Unit })
                            </div>
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Charge Type  By Default :</label>
                            </div>
                            <div class=" col-sm-2" style="padding-right:0px;padding-left:12px;">
                                @Html.TextBoxFor(x => x.ChrType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ChrType })
                            </div>


                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">From Destination :</label>
                            </div>
                            <div class="col-sm-4" style="padding-left: 0px;padding-right:0px;">
                                <div class="col-sm-4" style="padding-left: 0px;padding-right:0px;width:170px;">
                                    @Html.CheckBoxFor(x => x.Branch_Area, new { @class = "", @Value = Model.Branch_Area, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;padding-left:14px;">Current Branch Area :</label>
                                </div>
                                <div class="col-sm-3" style="padding-left: 0px;padding-right:0px;width:110px;">
                                    @Html.CheckBoxFor(x => x.All, new { @class = "", @Value = Model.All, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">All Area :</label>
                                </div>
                                <div class="col-sm-4" style="padding-left: 0px;padding-right:0px;" @*style="margin-left: -60px;"*@>
                                    @Html.CheckBoxFor(x => x.Ap_Per_User, new { @class = "", @Value = Model.Ap_Per_User, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">As Per User Allow :</label>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Collection By Default :</label>
                            </div>
                            <div class="col-sm-3" style="padding-left:0px;padding-right:0px;">
                                <div class="col-sm-12" style="display: flex;padding-left:7px;padding-right:0px;">
                                    <input type="radio" class="form-control" name="Collection" id="Direct" value="Direct" style="height:20px;width:35px;" /><label class=" bold control-label"> Direct</label>
                                    <input type="radio" class="form-control" name="Collection" id="Godown1" value="Godown" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                    <input type="radio" class="form-control" name="Collection" id="Crossing" value="Crossing" style="height:20px;width:35px;" /><label class=" bold control-label"> Crossing</label>
                                </div>
                            </div>
                            <div class="col-sm-offset-1 col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Delivery By Default :</label>
                            </div>
                            <div class="col-sm-3" style="padding-left:0px;padding-right:0px;">
                                <div class="col-sm-12" style="display: flex;padding-left:5px;padding-right:0px;">
                                    <input type="radio" class="form-control" name="Delivery" id="Door" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Door</label>
                                    <input type="radio" class="form-control" name="Delivery" id="Godown" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Declare Value Allow Zero :</label>
                            </div>
                            <div class="col-sm-1" style="padding-left:10px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.DeclareValueZero, new { @class = "", @Value = Model.DeclareValueZero, style = "height: 20px;width: 35px;" })
                            </div>
                            <div class="col-sm-offset-2 col-sm-1" style="width:210px;font-size: 14px;font-weight: bold;">
                                <label class="control-label" style="font-size: 14px;font-weight: bold;">Declare Value :</label>
                            </div>
                            <div class="col-sm-1" style="width:105px;padding-left:15px;padding-right:0px;">
                                <label class="control-label">More Than Rs.</label>
                            </div>
                            <div class="col-sm-1" style="width:100px;">
                                @Html.TextBoxFor(x => x.Declare_Value, new { @class = " form-control", @style = "", @Value = Model.Declare_Value })
                            </div>
                            <div class="col-sm-1" style="width:125px;">
                                <label class="control-label" style="">Then &nbsp;&nbsp;Compulsory</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                <div class="col-sm-5" style="padding-left:0px;padding-right:0px;">
                                    @Html.CheckBoxFor(x => x.GST, new { @class = "", @Value = Model.GST, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">GST :</label>
                                </div>
                                <div class="col-sm-6" style="padding-left:0px;padding-right:0px;">
                                    @Html.CheckBoxFor(x => x.Eway_Bill, new { @class = "", @Value = Model.Eway_Bill, style = "height: 20px;width: 35px;" })
                                    <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Eway Bill :</label>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Charges Allow Zero :</label>
                            </div>
                            <div class="col-sm-1" style="padding-left:10px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.Charges, new { @class = "", @Value = Model.Charges, style = "height: 20px;width: 35px;" })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">[LR Crossing] Vehicle :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.CrossingVehicle, new { @class = "", @Value = Model.CrossingVehicle, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                            <div class=" col-sm-offset-1 col-sm-2" style="width:130px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Vehicle :</label>
                            </div>
                            <div class=" col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.Vehicle, new { @class = "", @Value = Model.Vehicle, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Particular :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.ParticularFlag, new { @class = "", @Value = Model.ParticularFlag, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                            <div class="col-sm-offset-1 col-sm-2" style="width:130px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Party Challan :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.Party_Challan, new { @class = "", @Value = Model.Party_Challan, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Party Invoice :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.Party_Invoice, new { @class = "", @Value = Model.Party_Invoice, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                            <div class="col-sm-offset-1 col-sm-2" style="width:130px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Customer :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.CheckBoxFor(x => x.CustomerCompulsory, new { @class = "", @Value = Model.CustomerCompulsory, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label" style="font-weight:100;width: auto;">Mandatory :</label>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">ToPay -:</label>
                            </div>
                            <div class="col-sm-1" style="width: auto;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Bill Party Required :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;margin-right: -40px;">
                                <div class="col-sm-12" style="display: flex;padding-left:7px;padding-right:0px;">
                                    <input type="radio" class="form-control" name="TOPAY" id="ToPayYes" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Yes</label>
                                    <input type="radio" class="form-control" name="TOPAY" id="ToPayNO" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                                </div>
                            </div>
                            <label class=" control-label  col-sm-1" style="width: auto;font-size: 14px;font-weight: bold;">Auto Bill Party :</label>
                            <div class="col-sm-2" style="padding-right:0px;padding-left:15px;width:auto;">
                                @Html.EnumDropDownListFor(x => x.TopayCustomer, new { @class = "form-control", @Value = Model.TopayCustomer })
                            </div>
                            <label class=" control-label col-sm-offset-1 col-sm-1" style="width: auto;font-size: 14px;font-weight: bold;">ByDefault Bill Party :</label>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.TextBoxFor(x => x.DefaultToPay, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.DefaultToPay })
                            </div>
                            <input type="checkbox" class="form-control" name="" id="chkDefaultTopay" value="" style="height:20px;width:35px;" />
                        </div>

                        <hr />
                        <div class="form-group">
                            <div class="col-sm-2" style="width:210px;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Paid -:</label>
                            </div>
                            <div class="col-sm-1" style="width: auto;">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Bill Party Required :</label>
                            </div>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;margin-right: -40px;">
                                <div class="col-sm-12" style="display: flex;padding-left:7px;padding-right:0px;">
                                    <input type="radio" class="form-control" name="Paid" id="PaidYes" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Yes</label>
                                    <input type="radio" class="form-control" name="Paid" id="PaidNO" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                                </div>
                            </div>
                            <label class=" control-label  col-sm-1" style="width: auto;font-size: 14px;font-weight: bold;">Auto Bill Party :</label>
                            <div class="col-sm-2" style="padding-right:0px;padding-left:15px;width:auto;">
                                @Html.EnumDropDownListFor(x => x.PaidCustomer, new { @class = "form-control", @Value = Model.PaidCustomer })
                            </div>
                            <label class=" control-label col-sm-offset-1 col-sm-1" style="width: auto;font-size: 14px;font-weight: bold;">ByDefault Bill Party :</label>
                            <div class="col-sm-2" style="padding-left:0px;padding-right:0px;">
                                @Html.TextBoxFor(x => x.DefaultPaid, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.DefaultPaid })
                            </div>
                            <input type="checkbox" class="form-control" name="" id="chkDefaultPaid" value="" style="height:20px;width:35px;" />
                        </div>
                        <hr />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/DashBoard/SetUP" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>


@Html.HiddenFor(x => x.Document)

