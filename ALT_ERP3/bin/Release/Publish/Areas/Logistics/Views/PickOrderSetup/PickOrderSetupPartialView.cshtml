@model TFATERPWebApplication.Areas.Logistics.Models.PickOrderSetupVM
@using Common;
@{
    ViewBag.Title = "PickOrderSetupVM";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<style>

    hr {
        margin-top: 20px;
        margin-bottom: 20px;
        border: 0;
        border-top: 2px solid #e0cbcb !important;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    legend {
        /*margin-left: 30%;
        text-align: center;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #dec0c0;*/
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: #dec0c0;
        width: auto;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {

        if ('@Model.Asc'=="True") {
            $("#Asc").prop("checked", true);
        } else {
            $("#Desc").prop("checked", true);
        }

        LoadOrderType();
        LoadServiceType();
        $("#From").change(function () {
            if ($("#From").is(":checked") == true) {
                
                $("#AutoSelctFromBasedOnOrderBranch").prop("disabled", false);
            } else {
                
                $("#AutoSelctFromBasedOnOrderBranch").prop("disabled", true);
            }
        });

        if ('@Model.From' =='True') {
            $("#AutoSelctFromBasedOnOrderBranch").prop("disabled", false);
        } else {
            $("#AutoSelctFromBasedOnOrderBranch").prop("disabled", true);
        }


        if ('@Model.Del'=='D') {
            $("#Door").prop("checked", true);
        } else {
            $("#Godown").prop("checked", true);
        }

        if ('@Model.Colln'=='Yes') {
            $("#Yes").prop("checked", true);
        } else {
            $("#No").prop("checked", true);
        }
        
        

        $("input[name$='Collection']").change(function () {

            if ($("#Yes").is(":checked") == true) {
                $("#No").prop("checked", false);
            }
            else {
                $("#Yes").prop("checked", false);
            }
        });

        $("input[name$='Delivery']").change(function () {
            if ($("#Door").is(":checked") == true) {
                $("#Godown").prop("checked", false);
            }
            else {
                $("#Door").prop("checked", false);
            }
        });

        $('#Submit').click(function (event) {
            event.preventDefault();

            
            if ($("#OrderType").val() == '') {
                
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('OrderType is required..');
                return;
            }
            if ($("#ServiceType").val() == '') {
                
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ServiceType is required..');
                return;
            }

            if (($("#Yes").is(":checked") == false) && ($("#No").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Collection is required..');
                return;
            }

            if (($("#Door").is(":checked") == false) && ($("#Godown").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Delivery is required..');
                return;
            }


            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["SelectColumn"] = $("#SelectColumn").val();

            if (($("#Asc").is(":checked") == true)) {
                ModelData["Asc"] = true;
            } else {
                ModelData["Asc"] = false;
            }

            ModelData["OrderType"] = $("#OrderType").val();
            ModelData["ServiceType"] = $("#ServiceType").val();

            if (($("#From").is(":checked") == true)) {
                ModelData["From"] = true;
            } else {
                ModelData["From"] = false;
            }

            if (($("#AutoSelctFromBasedOnOrderBranch").is(":checked") == true)) {
                ModelData["AutoSelctFromBasedOnOrderBranch"] = true;
            } else {
                ModelData["AutoSelctFromBasedOnOrderBranch"] = false;
            }

            if ($("#Yes").is(":checked") == true) {
                ModelData["Colln"] = "Yes";
            } else {
                ModelData["Colln"] = "No";
            }

           if ($("#Door").is(":checked") == true) {
               ModelData["Del"] = "D";
            } else {
               ModelData["Del"] = "G";
            }
           

            ModelData["Mode"] = '@Model.Mode';

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/DashBoard/SetUP";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });
    function LoadOrderType() {
        
        var url = '@Url.Action("GetOrderType")'
        $('#OrderType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.OrderType', text: '@Model.OrderType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadServiceType() {
        
        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            <a href="~/DashBoard/SetUP" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            @*<b class="CodeSt">@Model.Mode Mode</b>*@
            <b class="CodeSt">@Model.Header</b>
        </span>
        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:30px;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-md-12" style="margin-top: 15px;">
                <legend>@Model.Header</legend>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <hr />
                        <div class="form-group ">
                            <label class="col-sm-1 control-label" style="font-size: 14px;font-weight: bold;">Select Column :</label>
                            <div class="col-sm-2">
                                @Html.EnumDropDownListFor(x => x.SelectColumn, new { @class = "form-control", @Value = Model.SelectColumn })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-1">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Sort Operation :</label>
                            </div>
                            <div class="col-sm-2" style="display: flex;">
                                <input type="radio" class="form-control" name="SortOperation" id="Asc" value="Asc" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Ascending</label>
                                <input type="radio" class="form-control" name="SortOperation" id="Desc" value="Desc" style="height:20px;width:35px;" /><label class=" bold control-label"> Descending</label>
                            </div>

                        </div>
                        <hr />
                        <div class="form-group ">
                            <label class="col-sm-1 control-label" style="font-size: 14px;font-weight: bold;">Order Type :</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(x => x.OrderType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.OrderType })
                            </div>
                        </div>
                        <hr />
                        <div class="form-group ">
                            <label class="col-sm-1 control-label" style="font-size: 14px;font-weight: bold;">Service Type :</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ServiceType })
                            </div>
                        </div>

                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-1">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">From :</label>
                            </div>
                            <div class="col-sm-2" style="">
                                @Html.CheckBoxFor(x => x.From, new { @class = "", @Value = Model.From, style = "height: 20px;width: 35px;" })
                                <label class=" col-sm-1 control-label bold" style="font-weight:bold;width: auto;">Mandatory :</label>
                            </div>

                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-1">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Auto Select From (Order Branch) :</label>
                            </div>
                            <div class="col-sm-2" style="">
                                @Html.CheckBoxFor(x => x.AutoSelctFromBasedOnOrderBranch, new { @class = "", @Value = Model.AutoSelctFromBasedOnOrderBranch, style = "height: 20px;width: 35px;" })
                            </div>

                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-1">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Delivery :</label>
                            </div>
                            <div class="col-sm-2" style="display: flex;">
                                <input type="radio" class="form-control" name="Delivery" id="Door" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Door</label>
                                <input type="radio" class="form-control" name="Delivery" id="Godown" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                            </div>

                        </div>
                        <hr />
                        <div class="form-group ">
                            <div class="col-sm-1">
                                <label class=" control-label" style="font-size: 14px;font-weight: bold;">Collection :</label>
                            </div>
                            <div class="col-sm-2" style="display: flex;">
                                <input type="radio" class="form-control" name="Collection" id="Yes" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Yes</label>
                                <input type="radio" class="form-control" name="Collection" id="No" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                            </div>

                        </div>
                        <hr />

                    </div>
                </div>
            </fieldset>
        </div>

    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.FAT ERP-iX9, Suchan Software Private Limited
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/DashBoard/SetUP" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>


@Html.HiddenFor(x => x.Document)