@model TFATERPWebApplication.Areas.Logistics.Models.FMVM
@using Common;
@{
    ViewBag.Title = "FM Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>


<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>
<style>
    .circle {
        width: 38px;
        height: 84px;
        position: relative;
    }

    .SearchRow {
        background-color: coral;
    }

    .icon {
        position: absolute;
        top: 39%;
        left: 33%;
        transform: translate(-50%, -50%);
        width: 10px;
        height: 10px;
        display: block;
    }

    .multiselect {
        width: 205px !important;
        text-align: left !important;
    }

    /*.multiselect .dropdown-toggle .btn btn-default .disabled:hover{
        background-color:aqua !important;
    }*/
    .btn-group > .multiselect:hover {
        color: red !important;
    }

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    .GLR {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -40px;
    }

    .PickLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .TransLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 20px 5px 20px;
    }

    .AllLR {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .legend3 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -36px;
        height: 33px;
        padding: 5px 20px 5px 20px;
    }

    .legend5 {
        top: -0.0em;
        color: white !important;
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        background-color: #57c8f1;
        line-height: 1.2em;
        margin-top: -40px;
        padding: 5px 30px 5px 30px;
    }


    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }

        .toggle.btn {
            min-width: 77px !important;
            min-height: 34px;
        }

    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>

<script type="text/javascript">
    var value = 0;
    $(document).ready(function () {



        //FMDraft();
        LoadVehicleGroupStatus();
        LoadVehicle("");
        LoadBroker();
        LoadFrom();
        ComboDestination();
        LoadTo();
        LoadVehicleGroup();
        ShowRouteDest();
        LoadPayableAt();
        FooterButtonLoad();
        AddButtonValidation();

        $('#FM_Date,#ArrivalDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });
        if ('@Model.Mode'!='Add') {
            $("#FM_Date").datepicker("setDate", '@Model.FM_Date');
            $("#ArrivalDate").datepicker("setDate", '@Model.ArrivalDate');
        }

        $("#ArrivalKM").constrain({ allow: { regex: "[0-9]" } });
        $('#ScheduleRequired').change(function () {
            if (this.checked) {
                $("#ArrivalDate").datepicker("setDate", '@DateTime.Now.ToShortDateString()');
                $("#ArrivalDate").prop("disabled", false);
                $("#ArrivalTime").prop("disabled", false);
                $("#ArrivalKM").prop("disabled", false);
                $("#ArrivalRemark").prop("disabled", false);
            } else {
                $("#ArrivalDate").val("");
                $("#ArrivalDate").prop("disabled", true);
                $("#ArrivalTime").val("");
                $("#ArrivalTime").prop("disabled", true);
                $("#ArrivalKM").prop("disabled", true);
                $("#ArrivalRemark").prop("disabled", true);
            }
        });

        $("#FBothCHK").change(function () {
            debugger;
            if (this.checked) {
                $("#FMNO").removeAttr("disabled");
            } else {
                $("#FMNO").attr("disabled", "disabled");
            }
        });



        $('#btnRecentFM').click(function (event) {
            event.preventDefault();
            window.location.href = "/Logistics/FM/Index1?TableName=&MainType=&Mode=Add&getRecentFM=true&Header=Freight%20Memo&ViewDataId=FMMaster&Controller2=FM&Module=Transactions&optiontype=&optioncode=FM";
        });

        $("#VehicleNo").change(function (event) {
            LoadVehicleGrpStatus($("#VehicleNo").val());
        })

        $('#SaveDraftName').click(function (event) {
            if ($("#Draft_Name").val() == '' || $("#Draft_Name").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Draft_Name Required.');
                return;
            }
            else {
                CHeckLrNoExistOrNot("FMMaster_Draft");
            }
        });

        $("#btnNote").click(function (event) {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveNote")';
                var ModelData = {};

                ModelData["Document"] = $("#Document").val();
                ModelData["Note"] = $("#Note").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success') {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else {
                            $('.spinner').hide();
                            alert(data.Message);                    }
                    },
                    });
            }
        });
        $("#btnAttachSubmit").click(function (event) {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveAttachment")';
                var ModelData = {};

                ModelData["Document"] = $("#Document").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success') {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else {
                            $('.spinner').hide();
                            alert(data.Message);                    }
                    },
                    });
            }
        });
        $("#SaveLock").click(function (event) {
            event.preventDefault();
            if ($("#Document").val()!="")
            {
                var url = '@Url.Action("SaveLock")';
                var ModelData = {};

                if ($("#All").prop("checked") == true) {
                    ModelData["Dispach"] = true;
                    ModelData["Delivery"] = true;
                    ModelData["Billing"] = true;
                    ModelData["All"] = true;
                } else
                {
                    if ($("#Dispach").prop("checked") == true) {
                        ModelData["Dispach"] = true;
                    } else {
                        ModelData["Dispach"] = false;
                    }
                    if ($("#Delivery").prop("checked") == true) {
                        ModelData["Delivery"] = true;
                    } else {
                        ModelData["Delivery"] = false;
                    }
                    if ($("#Billing").prop("checked") == true) {
                        ModelData["Billing"] = true;
                    } else {
                        ModelData["Billing"] = false;
                    }
                }
                ModelData["Document"] = $("#Document").val();
                ModelData["LockRemark"] = $("#LockRemark").val();
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        if (data.Status == 'Success') {
                            $('.spinner').hide();
                            $("#ErrorMessage").hide();
                        }
                        else {
                            $('.spinner').hide();
                            alert(data.Message);                    }
                    },
                    });
            }
        });


        $('#All').change(function () {
            if (this.checked) {
                $("#Dispach").prop("checked", true);
                $("#Delivery").prop("checked", true);
                $("#Billing").prop("checked", true);
            } else {
                $("#Dispach").prop("checked", false);
                $("#Delivery").prop("checked", false);
                $("#Billing").prop("checked", false);
            }
        });

        $("#Dispach,#Delivery,#Billing").click(function () {
            $("#All").prop("checked", false);
        });

        $('#AddDest').click(function (event) {
            event.preventDefault();
            $("#DestCombo").prop("disabled", false);
        });

        $("#btnPhotoupload").click(function (event) {
            event.preventDefault();
            var size = 0;
            var formData = new FormData();
            var totalFiles = document.getElementById("Attachment_UploadFile").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("Attachment_UploadFile").files[i];
                size += file.size;
                if (file.size < 1048576) {
                    formData.append("UploadFile", file);
                }
                else {
                    alert('File Size Must Not Exceed 1 MB')
                    return;
                }
            }
            if (size > 1048576) {
                alert('File Size Must Not Exceed 1 MB')
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AttachDocument")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    $('#ShowAllFile').html(data.Html);
                    AttachMentList();
                    //hideorshowtable();
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });

        $('#btnDelete').click(function (event) {
            event.preventDefault();

            var result = confirm("Are you sure you want to delete?");
            if (result) {

                if ('@Model.Header' =="FMMaster_Draft") {
                    var url = '@Url.Action("SaveDraftData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};

            ModelData["Document"] = $("#Document").val();
            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                                    //<a href="~/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>

                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
                } else {


                    var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};

            ModelData["Document"] = $("#Document").val();
                    ModelData["Mode"] = '@Model.Mode';

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
                }
            } else {
                $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
            }


        });




        $('#Submit').click(function (event) {
            event.preventDefault();

            if ($("#VehicleGroup").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle Status is required..');
                return;
            }

            if ($("#VehicleNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('VehicleNo is required..');
                return;
            }

            if ($("#Broker").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Broker is required..');
                return;
            }

            if ($("#KM").val() == '' || $("#KM").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('KM is required..');
                return;
            }

            if ($("#From").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From is required..');
                return;
            }

            if ($("#To").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To is required..');
                return;
            }

            if ($("#VehicleCategory").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle Category is required..');
                return;
            }

            if ($("#PayLoad").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PayLoad is required..');
                return;
            }


            if ($("#DriverName").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DriverName is required..');
                return;
            }

            if ($("#LicenceNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LicenceNo is required..');
                return;
            }

            if ($("#LicenceExpDate").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LicenceExpDate is required..');
                return;
            }



            if ($("#ChallanNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ChallanNo is required..');
                return;
            }

            if ($("#ContactNo").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ContactNo is required..');
                return;
            }

            if ($("#PayableAt").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PayableAt is required..');
                return;
            }
            if ($("#ScheduleRequired").prop("checked") == true) {
                if ($("#ArrivalDate").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalDate is required..');
                    return;
                }
                if ($("#ArrivalTime").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalTime is required..');
                    return;
                }
                if ($("#ArrivalKM").val() == '' || $("#ArrivalKM").val() == '0') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('ArrivalKM is required..');
                    return;
                }
            }

            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["FMNO"] = $("#FMNO").val();
            ModelData["FM_Time"] = $("#FM_Time").val();
            ModelData["FM_Date"] = $("#FM_Date").val();
            ModelData["VehicleGroup"] = $("#VehicleGroup").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            ModelData["Broker"] = $("#Broker").val();
            ModelData["KM"] = $("#KM").val();
            ModelData["From"] = $("#From").val();
            ModelData["To"] = $("#To").val();
            //ModelData["ScheduleRequired"] = $("#ScheduleRequired").prop("checked");
            debugger;
            ModelData["ScheduleRequired"] = $("#ScheduleRequired").is(":checked");
            ModelData["ArrivalDate"] = $("#ArrivalDate").val();
            ModelData["ArrivalTime"] = $("#ArrivalTime").val();
            ModelData["ArrivalKM"] = $("#ArrivalKM").val();
            ModelData["ArrivalRemark"] = $("#ArrivalRemark").val();


            var From = "", To = "",seq="";
            $("#DestinationTable .RowData ").each(function () {
                var Row = $(this).closest("tr");
                var Sequence = $(this).find(".seqUenceRoute").val();

                seq = seq + Sequence + ",";
                 From = From + Row.find(".FromCode").attr('id') + ",";
            });
            From = From.substring(0, (From.length - 1));
            seq = seq.substring(0, (seq.length - 1));
            ModelData["DestCombo"] = From;
            ModelData["DestCombo_Sequence"] = seq;



            ModelData["VehicleCategory"] = $("#VehicleCategory").val();
            ModelData["PayLoad"] = $("#PayLoad").val();
            ModelData["ReceiptNo"] = $("#ReceiptNo").val();
            ModelData["DriverName"] = $("#DriverName").val();
            ModelData["LicenceNo"] = $("#LicenceNo").val();
            ModelData["LicenceExpDate"] = $("#LicenceExpDate").val();
            ModelData["Owner"] = $("#Owner").val();
            ModelData["ChallanNo"] = $("#ChallanNo").val();
            ModelData["ContactNo"] = $("#ContactNo").val();
            ModelData["Freight"] = $("#Freight").val();
            ModelData["Advance"] = $("#Advance").val();
            ModelData["PayableAt"] = $("#PayableAt").val();
            ModelData["Remark"] = $("#Remark").val();
            ModelData["SC_Date"] = $("#SC_Date").val();
            ModelData["SC_Time"] = $("#SC_Time").val();
            ModelData["SC_KM"] = $("#SC_KM").val();
            ModelData["Balance"] = $("#Balance").val();

            if ($("#All").prop("checked") == true) {
                ModelData["Dispach"] = true;
                ModelData["Delivery"] = true;
                ModelData["Billing"] = true;
                ModelData["All"] = true;
            } else {

                if ($("#Dispach").prop("checked") == true) {
                    ModelData["Dispach"] = true;
                } else {
                    ModelData["Dispach"] = false;
                }
                if ($("#Delivery").prop("checked") == true) {
                    ModelData["Delivery"] = true;
                } else {
                    ModelData["Delivery"] = false;
                }
                if ($("#Billing").prop("checked") == true) {
                    ModelData["Billing"] = true;
                } else {
                    ModelData["Billing"] = false;
                }
            }


            ModelData["LockRemark"] = $("#LockRemark").val();
            ModelData["Note"] = $("#Note").val();

            //ModelData["LrLIstByComma"] = LRNOLIST;
            //ModelData["LCLIstByComma"] = LCNOLIST;


            //var DelteLcListFromFm = $("#DeleteLc").val();
            //var DelteLcListFromFm1 = DelteLcListFromFm.substring(0, (DelteLcListFromFm.length) - 1);
            //ModelData["DeleteLCLIstByCommaFromFM"] = DelteLcListFromFm1;
            ModelData["Mode"] = '@Model.Mode';
            if ('@Model.Mode'=="Select") {
                        ModelData["Mode"] ="Add";
                    }


            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=Transactions&optioncode=FM&Header=FreightMemo&Controller2=FM";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });





    function FMDraftList() {

        var url = '@Url.Action("FMDraft")';
        var ModelData = {};
        var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                        $('.spinner').hide();
                    $('#FMDraft').html(data.Html);
                        $("#ErrorMessage").hide();

                },
            });

    }
    function AddViaRoute() {
        var url = '@Url.Action("StoreAllDestination")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = { ViaRoute: $("#DestCombo").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    var LoadDownLoadFiles = $("#GetDestView");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    //$('#GETDestMODAL').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#DestCombo").prop("disabled", true);
                    ShowRouteDest();
                },
            });
    }



    function AddButtonValidation() {

        var VehicleStatus = $("#VehicleGroup").val();
        if (VehicleStatus == "100001") {

            $("#HideHireBtn").hide();
            $("#ShowHireBtn").show();


        } else {
            $("#HideHireBtn").show();
            $("#ShowHireBtn").hide();
        }
    }
    function AttachMentList() {

        var url = '@Url.Action("AttachDocumentList")';

        var DTO = {  };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data)
                    {
                        var LoadDownLoadFiles = $("#AttachList");
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);

                    },
                    error: function (error) {
                        alert("errror");
                    }
                    });
    }

    function LoadVehicleGroupStatus() {

            var url = '@Url.Action("GetVehicleGroupStatus")'
            $('#VehicleGroup').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {

                    AddButtonValidation();
                    LoadVehicle($("#VehicleGroup").val());
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
    };


    //LoadVehicleGroup
    {
        function LoadVehicleGroup() {

            var url = '@Url.Action("GetVehicleGroup")'
            $('#VehicleCategory').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleCategory', text: '@Model.VehicleCategory_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
        };

    }

    function LoadVehicle(value) {


        var url = '@Url.Action("GetVehicle")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        TruckStatus: value,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNo' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })

    };
    function LoadVehicleGrpStatus(value) {

        //var VehicleNo = $('#VehicleNo').val();

        var url = '@Url.Action("FetChGrupStatus")';

            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { VehicleNo: value},
                success: function (result) {

                    $("#Owner").val(result.OwnerName);
                    $("#DriverName").val(result.DriverName);
                    $("#LicenceNo").val(result.LicenNo);
                    $("#LicenceExpDate").val(result.LicenceExpDate);
                    $("#PayLoad").val(result.Payload);
                    $("#KM").val(result.KM);


                    $('#VehicleGroup').select2('data', { id: result.VehicleGroupStatusCode, text: result.VehicleGroupStatusName });
                    $('#Broker').select2('data', { id: result.BroCode, text: result.BroNAme });
                    $('#VehicleCategory').select2('data', { id: result.VehicleCategoryCode, text: result.VehicleCategoryName });
                    $('#VehicleNo').select2('data', { id: result.VehicleNo, text: result.VehicleNo });
                }
            });
    }
    function LoadFrom() {

        var flag = false;
        @*if ('@Model.LRSetup.Branch_Area'== 'True') {
            flag = true;
        }*@

        var url = '@Url.Action("From")'
        $('#From').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        Flag: true
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.From', text: '@Model.From_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#To').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#From').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.To', text: '@Model.To_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function CHeckLrNoExistOrNot(tablename) {

        var url = '@Url.Action("CheckExistFM")';
        if (tablename =="FMMaster_Draft") {
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { TableName: tablename, Colfield: "[DraftName]", Value: $('#Draft_Name').val(), SkipColumnName: "[FmNo]", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        SaveDraftData();
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Draft_Name Exist Please CHange Draft_Name.');
                        return;
                    }
                }
            });
        } else {
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { TableName: tablename, Colfield: "[LRno]", Value: $('#LrNo').val(), SkipColumnName: "LRno", PKValue: '@Model.Document' },
                success: function (result) {

                    if (result.Message == "T") {
                        @*if('@Model.LRSetup.LR_Date' == 'True') {
                            CheckDate();
                        } else {
                            SaveLRBILL();
                        }*@

                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('LrNo Exist Please CHange Lr No.');
                        return;
                    }
                }
            });
        }
    }

    function SaveDraftData() {

        var url = '@Url.Action("SaveDraftData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};

        ModelData["Draft_Name"] = $("#Draft_Name").val();
        ModelData["Document"] = $("#Document").val();
            ModelData["FMNO"] = $("#FMNO").val();
            ModelData["FM_Time"] = $("#FM_Time").val();
            ModelData["FM_Date"] = $("#FM_Date").val();
            ModelData["VehicleGroup"] = $("#VehicleGroup").val();
            ModelData["VehicleNo"] = $("#VehicleNo").val();
            ModelData["Broker"] = $("#Broker").val();
            ModelData["KM"] = $("#KM").val();
            ModelData["From"] = $("#From").val();
            ModelData["To"] = $("#To").val();

            var From = "", To = "",seq="";
            $("#DestinationTable .RowData ").each(function () {
                var Row = $(this).closest("tr");
                var Sequence = $(this).find(".seqUenceRoute").val();

                seq = seq + Sequence + ",";
                 From = From + Row.find(".FromCode").attr('id') + ",";
            });
            From = From.substring(0, (From.length - 1));
            seq = seq.substring(0, (seq.length - 1));
            ModelData["DestCombo"] = From;
            ModelData["DestCombo_Sequence"] = seq;



            ModelData["VehicleCategory"] = $("#VehicleCategory").val();
            ModelData["PayLoad"] = $("#PayLoad").val();
            ModelData["ReceiptNo"] = $("#ReceiptNo").val();
            ModelData["DriverName"] = $("#DriverName").val();
            ModelData["LicenceNo"] = $("#LicenceNo").val();
            ModelData["LicenceExpDate"] = $("#LicenceExpDate").val();
            ModelData["Owner"] = $("#Owner").val();
            ModelData["ChallanNo"] = $("#ChallanNo").val();
            ModelData["ContactNo"] = $("#ContactNo").val();
            ModelData["Freight"] = $("#Freight").val();
            ModelData["Advance"] = $("#Advance").val();
            ModelData["PayableAt"] = $("#PayableAt").val();
            ModelData["Remark"] = $("#Remark").val();
            ModelData["SC_Date"] = $("#SC_Date").val();
            ModelData["SC_Time"] = $("#SC_Time").val();
            ModelData["SC_KM"] = $("#SC_KM").val();
            ModelData["Balance"] = $("#Balance").val();





            //ModelData["LrLIstByComma"] = LRNOLIST;
            //ModelData["LCLIstByComma"] = LCNOLIST;


            //var DelteLcListFromFm = $("#DeleteLc").val();
            //var DelteLcListFromFm1 = DelteLcListFromFm.substring(0, (DelteLcListFromFm.length) - 1);
            //ModelData["DeleteLCLIstByCommaFromFM"] = DelteLcListFromFm1;
            ModelData["Mode"] = '@Model.Mode';



            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Logistics/FM/Index?ViewDataId=FMMaster&Module=Transactions&optioncode=FM&Header=FreightMemo&Controller2=FM";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
    }
    function FooterButtonLoad() {

        if ('@Model.Mode' == "Select") {
            $('#btnFmDraftList').prop('disabled', false);
            $('#btnRecentFM').prop('disabled', false);
            $('#btnBlock').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", false);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);

        } else if ('@Model.Mode' == "Add")
        {
            $('#btnFmDraftList').prop('disabled', false);
            $('#btnRecentFM').prop('disabled', false);

            $('#btnBlock').prop('disabled', false);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
        } else if ('@Model.Mode' == "View")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnBlock").attr("disabled", true);
            $("#btnListPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Edit")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnBlock").attr("disabled", true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
            if ('@Model.Header' =="FMMaster_Draft") {
                $("#btnAttachment").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
            }
        } else if ('@Model.Mode' == "Delete")
        {
            $('#btnFmDraftList').prop('disabled', true);
            $('#btnRecentFM').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnBlock").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        }









        if ('@Model.Mode' == "Select") {
            $('#btnBlock').prop('disabled', true);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnDispachLC").attr("disabled", true);
            $("#btnDispachFM").attr("disabled", true);
            $("#Submit").attr("disabled", false);
            $("#SubmitPrint").attr("disabled", false);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);

        } else if ('@Model.Mode' == "Add") {
            $('#btnBlock').prop('disabled', false);
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnDispachLC").attr("disabled", true);
            $("#btnDispachFM").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", true);
            if ('@Model.ViewDataId' == "FMMaster_Draft") {

                $("#btnAttachment").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
                $("#btnDelete").attr("disabled", true);
            }
        } else if ('@Model.Mode' == "View") {
            if ( '@Model.Draft' == 'True') {
                $("#btnBlock").attr("disabled", true);
            }
            $("#btnListPrint").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Edit") {
            $("#btnListPrint").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            if ('@Model.ViewDataId' == "LorryDraft") {

                $("#btnBlock").attr("disabled", true);
                $("#btnAttachment").attr("disabled", true);
                $("#btnDispachLC").attr("disabled", true);
                $("#btnDispachFM").attr("disabled", true);
                $("#Submit").attr("disabled", true);
                $("#SubmitPrint").attr("disabled", true);
                $("#btnDelete").attr("disabled", true);
            }



            $("#Edit").attr("disabled", true);
        } else if ('@Model.Mode' == "Delete") {


            $("#btnListPrint").attr("disabled", true);
            $("#btnBlock").attr("disabled", true);
            $("#btnShare").attr("disabled", true);
            $("#btnDownload").attr("disabled", true);
            $("#btnAttachment").attr("disabled", true);
            $("#SaveDraft").attr("disabled", true);
            $("#btnPrint").attr("disabled", true);
            $("#Submit").attr("disabled", true);
            $("#SubmitPrint").attr("disabled", true);
            $("#Edit").attr("disabled", true);
            $("#btnDelete").attr("disabled", false);
        } else if ('@Model.Mode' == "View") {

        }
    }


    function ShowRouteDest() {
        var url = '@Url.Action("ShowListBox")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = {  };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {

                    var LoadDownLoadFiles = $("#ListBoxDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    //$('#GETDestMODAL').modal('show');
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);

                    $(".listbox").prop('disabled', 'disabled');
                },
            });
    }
    function ComboDestination() {
        var url = '@Url.Action("AddDestination")'
        $('#DestCombo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#From').val(),
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DestCombo', text: '@Model.DestCombo_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                AddViaRoute();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadBroker() {
        var url = '@Url.Action("GetBroker")'
        $('#Broker').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker', text: '@Model.Broker_Name' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadPayableAt() {
        var url = '@Url.Action("PayableAt")'
        $('#PayableAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.PayableAt', text: '@Model.PayableAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function CheckLCDateFormat() {
        $("#ErrorMessage").hide();
        var date = $("#Date").val();
        var regex = /(((0|1)[0-9]|2[0-9]|3[0-1])\.(0[1-9]|1[0-2])\.((19|20)\d\d))$/;
        if (!(regex.test(date))) {
            //$("#From_Date").css("background-color", "red");

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Please provide valid date in format dd.mm.yyyy, including leading zero. Exapmle: 01.02.2015');
            return;
        }
    }

</script>



<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:5px;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>

        <span class="tools pull-right">
            <a href="~/Logistics/FM/Index?ViewDataId=FMMaster&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=FM&Header=FMMaster&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>

        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <span class="tools pull-right" style="    margin-right: 15px;">

        </span>
    </div>
</header>

<form class="form-horizontal" id="frmaccountLedger" role="form" style="margin-top:32px;">
    <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
</form>
<section class="panel" id="FmDetailsPanel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="FreightMemo" role="form" style="margin-top:30px;">

            <fieldset class=" col-sm-12" style="margin-top: 15px;">
                @if (Model.FMSetup.FM_Both)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (Model.FMSetup.FM_Generate)
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="FBothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }

                <button class="btn btn-info legend2" id="FMDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="FMDraftList();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                @*<button class="btn btn-info legend2" id="btnFmDraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" data-toggle="modal" data-target="#LorryDraftmodal"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>*@
                <button class="btn btn-info legend2" id="btnRecentFM" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>

                <div class="panel panel-default">
                    <div class="panel-body " style="padding-left: 20px;">
                        <div class="col-sm-9">
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">F.M No:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.FMNO, new { @class = "form-control", @style = "width:100px;", @Value = Model.FMNO, @readonly = "readonly" })
                                </div>
                                <div class="col-sm-2">
                                    <label class=" bold   col-sm-3  control-label">Time:</label>
                                    <div class="col-sm-1 ">
                                        @Html.TextBoxFor(x => x.FM_Time, new { @class = "form-control", @type = "time", @style = "width:105px;", @Value = Model.FM_Time })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;">Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.FM_Date, new { @class = "form-control", @style = "width:236px;", @Value = Model.FM_Date })
                                </div>
                                <label class=" bold  col-sm-1 control-label">Vehicle Status:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleGroup })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">VehicleNo:</label>
                                <div class="col-sm-3 " style="padding-left: 0px;">
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="ShowHireBtn">
                                        <a href="~/Vehicles/VehicleMaster/Index?TableName=VehicleMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Vehicle%20Master&ViewDataId=VehicleMaster&Controller2=VehicleMaster&Module=Master&optiontype=M&optioncode=VehicleMaster" target="_blank" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle"><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-3" style="padding-right: 0px !important;" id="HideHireBtn">
                                        <a href="#" class="btn btn-info" style="font-size: 12px;padding:3px 15px;" id="AddHireVehicle" disabled><i class="glyphicon glyphicon-plus"></i></a>
                                    </div>
                                    <div class="col-sm-9" style="padding-left:0px !important;padding-right:0px !important;">
                                        @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleNo })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Broker:</label>
                                <div class="col-sm-3 " style="">
                                    @Html.TextBoxFor(x => x.Broker, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Broker, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">KM:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.KM, new { @class = "form-control", @style = "width:110px;", @Value = Model.KM })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">From:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.From, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.From })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Add-Dest.:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="AddDest"><i class="glyphicon glyphicon-plus"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;">
                                        @Html.TextBoxFor(x => x.DestCombo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.DestCombo, @disabled = "disabled" })
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Final-Dest:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.To, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.To })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Vehicle Cate.:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.VehicleCategory, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleCategory, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">View-Dest:</label>
                                <div class="col-sm-3 ">
                                    <div class="col-sm-2" style="padding-left:0px;">
                                        <button class="btn btn-primary" id="btnViewRoute" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#GETDestMODAL"><i class="glyphicon glyphicon-eye-open"></i></button>
                                    </div>
                                    <div class="col-sm-10" style="padding-left:0px;" id="ListBoxDiv">
                                    </div>
                                </div>
                                <label class=" bold   col-sm-1  control-label">Receipt No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ReceiptNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ReceiptNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Driver-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.DriverName, new { @class = "form-control", @style = "width:100%;", @Value = Model.DriverName, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1 control-label">Licence-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceNo, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Lic.Exp-Date:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.LicenceExpDate, new { @class = "form-control", @style = "width:236px;", @Value = Model.LicenceExpDate, @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Owner-Name:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Owner, new { @class = "form-control", @style = "width:100%;", @Value = Model.Owner, @disabled = "disabled" })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Challan-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ChallanNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ChallanNo })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Contact-No:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.ContactNo, new { @class = "form-control", @style = "width:236px;", @Value = Model.ContactNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Freight:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Freight, new { @class = "form-control", @style = "width:100%;", @Value = Model.Freight.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Advance:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.Advance, new { @class = "form-control", @style = "width:236px;", @Value = Model.Advance.ToString("0.00") })
                                </div>
                                <label class=" bold   col-sm-1  control-label">Payable-At:</label>
                                <div class="col-sm-3 ">
                                    @Html.TextBoxFor(x => x.PayableAt, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.PayableAt })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Remark:</label>
                                <div class="col-sm-11 ">
                                    @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.Remark })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">PayLoad:</label>
                                <div class="col-sm-1 " style="">
                                    @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @Value = Model.PayLoad, @readonly = "readonly" })
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width:auto;">Loaded :</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.Loaded, new { @class = "form-control", @style = "", @Value = Model.Loaded, @readonly = "readonly" })
                                </div>
                                <label class=" bold   col-sm-2  control-label" style="margin-left: 0px;width: auto;">Available PayLoad:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.AvailablePayload, new { @class = "form-control", @style = "", @Value = Model.AvailablePayload, @readonly = "readonly" })
                                </div>
                                <label class=" bold   col-sm-1  control-label" style="margin-left: 0px;width: auto;">Over Load:</label>
                                <div class="col-sm-1 ">
                                    @Html.TextBoxFor(x => x.OverLoadLoad, new { @class = "form-control", @style = "", @Value = Model.OverLoadLoad, @readonly = "readonly" })
                                </div>

                            </div>
                            <div class="form-group">
                                <label class=" bold   col-sm-1  control-label">Schedule:</label>
                                <div class="col-sm-1 ">
                                    @Html.CheckBoxFor(x => x.ScheduleRequired, new { @class = "form-control", @style = "width: 21px;height: 21px; ", @Value = Model.ScheduleRequired })
                                </div>
                                @if (Model.ScheduleRequired)
                                {
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Date:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Time:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival KM:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM })
                                    </div>
                                }
                                else
                                {
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Date:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalDate, new { @class = "form-control", @style = "", @Value = Model.ArrivalDate, @disabled = "disabled" })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival Time:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalTime, new { @class = "form-control", @type = "time", @Value = Model.ArrivalTime, @disabled = "disabled" })
                                    </div>
                                    <label class=" bold   col-sm-2  control-label" style="width:auto;">Arrival KM:</label>
                                    <div class="col-sm-2 ">
                                        @Html.TextBoxFor(x => x.ArrivalKM, new { @class = "form-control", @type = "", @Value = Model.ArrivalKM, @disabled = "disabled" })
                                    </div>
                                }



                            </div>
                            <div class="form-group">
                                @if (Model.ScheduleRequired)
                                {
                                    <label class=" bold   col-sm-1  control-label">Arrival Remark:</label>
                                    <div class="col-sm-10 ">
                                        @Html.TextAreaFor(x => x.ArrivalRemark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.ArrivalRemark })
                                    </div>
                                }
                                else
                                {
                                    <label class=" bold   col-sm-1  control-label">Arrival Remark:</label>
                                    <div class="col-sm-10 ">
                                        @Html.TextAreaFor(x => x.ArrivalRemark, new { @class = "form-control", @style = "width:100%;", @rows = "1", @maxlength = "100", @Value = Model.ArrivalRemark, @disabled = "disabled" })
                                    </div>
                                }
                                <div class="col-sm-1 " style="float:right;">
                                    <button class="btn btn-primary" id="btnViewSchedule" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleModal"><i class="glyphicon glyphicon-eye-open"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div style="border: 2px solid #d3d3d3;height:215px;">
                                <div class="form-group ">
                                    <label class=" bold   col-sm-12  control-label" style="text-align: center;font-size: 15px;color: red;text-decoration: underline;">Other Charges</label>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold  col-sm-offset-1 col-sm-11 control-label">Partial View:</label>
                                </div>
                                <div class="form-group ">
                                    <label class=" bold   col-sm-offset-1  col-sm-3 control-label">Balance:</label>
                                    <div class="col-sm-5">
                                        @Html.TextBoxFor(x => x.Balance, new { @class = "form-control", @style = "width:100%;", @Value = Model.Balance.ToString("0.00") })
                                    </div>
                                </div>
                                <br />
                            </div>
                            <div style="border: 2px solid #d3d3d3;height:88px;" id="AttachList">
                                @Html.Partial("_AttachmentList", Model)
                            </div>

                            @*<div class="form-group" style="margin-top:10px;">
                                    <div class="col-sm-offset-1">
                                        <span class="tools pull-left">
                                            <button class="btn btn-primary" id="btnViewSchedule" style="font-size: 13px;padding:5px 12px;" data-toggle="modal" data-target="#ScheduleModal"><i class="glyphicon glyphicon-eye-open"></i></button>
                                        </span>
                                    </div>
                                </div>*@
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>

<footer class="footer-section" style="height:60px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        @*@{
            var Category = Session["Category"].ToString();

            if (Category != "Zone" && Category != "0")
            {*@
                <div class="col-sm-5">
                    <div class="pull-left">

                        <button class="btn btn-danger" data-toggle="modal" data-target="#LockModal" style="font-size: 13px;padding:3px 12px;" id="btnBlock"><i class="glyphicon glyphicon-ban-circle" style="font-size: 2em;"></i><br />Lock</button>
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnListPrint"><i class="glyphicon glyphicon-print" style="font-size: 2em;"></i><br />List Print</button>
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnShare"><i class="glyphicon glyphicon-share" style="font-size: 2em;"></i><br />Share</button>
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnDownload"><i class="glyphicon glyphicon-download" style="font-size: 2em;"></i><br />Download</button>
                        <button class="btn btn-info Attachmentbutton" style="font-size: 13px;padding:3px 12px;" id="btnAttachment" data-toggle="modal" data-target="#Attachmentmodal"><i class="glyphicon glyphicon-paperclip" style="font-size: 2em;"></i><br />Attachment</button>
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnPrint"><i class="glyphicon glyphicon-print" style="font-size: 2em;"></i><br />Print</button>
                        <button class="btn btn-info " style="font-size: 13px;padding:3px 12px;" id="SaveDraft" data-toggle="modal" data-target="#SaveNamePopUp"><i class="glyphicon glyphicon-floppy-saved" style="font-size: 2em;"></i><br />Save Draft</button>
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="" data-toggle="modal" data-target="#Notemodal"><i class="glyphicon glyphicon-file" style="font-size: 2em;"></i><br />Save Note</button>
                    </div>
                </div>
                <div class="col-sm-offset-1 col-sm-2" style="">
                    <div class="pull-left">

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="pull-right">
                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="Submit"><i class="glyphicon glyphicon-floppy-saved" style="font-size: 2em;"></i><br />Save</button>
                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="SubmitPrint"><i class="glyphicon glyphicon-floppy-saved" style="font-size: 2em;"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon glyphicon-print" style="font-size: 2em;"></i><br />Save And Print</button>
                        <button class="btn btn-primary" style="font-size: 13px;padding:3px 12px;" id="Edit" onclick="EditEntry();"><i class="glyphicon glyphicon-edit" style="font-size: 2em;"></i><br /> Edit</button>
                        <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnDelete"><i class="glyphicon glyphicon-trash" style="font-size: 2em;"></i><br />Delete</button>
                        <a href="~/Logistics/FM/Index?ViewDataId=FMMaster&Module=Transactions&optioncode=FM&Header=FreightMemo&Controller2=FM" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel"><i class="glyphicon glyphicon-remove" style="font-size: 2em;"></i><br />Cancel</a>
                    </div>
                </div>
            @*}
        }*@
    </div>
</footer>

<input type="hidden" id="hdnAreaID" />
@Html.HiddenFor(x => x.Document)




<!--Attachment Modal -->
<div class="example-modal">
    <div id="Attachmentmodal" class="modal modal-default">
        <div class="modal-dialog " style="width:1080px;">
            <div id="AttachmentmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Attachment</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="max-height:600px;min-height:600px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group">
                                        <div class="col-sm-3" style="padding-top: 5px;">
                                            <label class="col-sm-12 control-label" style="font-weight:bold;color:black;">Upload File:</label>
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(x => x.Attachment.UploadFile, new { @type = "file", @class = "form-control"@*, @style = "font-size:12pt;font-weight:bolder;"*@})
                                        </div>
                                        <div class="col-sm-4">

                                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPhotoupload">Upload</button>
                                        </div>
                                    </div>
                                    <div class="form-group col-sm-12" id="ShowAllFile">
                                        <hr />
                                        @Html.Partial("FMAttachmentView", Model)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnAttachSubmit" data-dismiss="modal">Save</button>
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Note Modal -->
<div class="example-modal">
    <div id="Notemodal" class="modal modal-default">
        <div class="modal-dialog " style="width:1080px;">
            <div id="NotemodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Note</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="max-height:600px;min-height:600px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group">
                                        <div class="col-sm-1" style="padding-top: 5px;">
                                            <label class="col-sm-12 control-label" style="font-weight:bold;color:black;">Note:</label>
                                        </div>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(x => x.Note, new { @class = "form-control", @style = "", @maxlength = 100, @rows = "1", @Value = Model.Note })
                                        </div>

                                    </div>
                                    <div class="form-group col-sm-12" id="ShowAllFile" style="padding-top:5px;">
                                        <div class="col-sm-2" style="float:right;">
                                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnNote" data-dismiss="modal">Submit</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--View Modal -->
<div class="example-modal">
    <div id="updTfatsearch1" class="modal modal-default">
        <div class="modal-dialog" style="width:1080px;">
            <div id="updTfatsearchDiv1">
                @*@Html.Partial("ImageView")*@
            </div>
        </div>
    </div>
</div>
<!--Lock Modal -->
<div class="modal" id="LockModal" style="margin-top: 8%;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title" style="font-weight:bold;text-align:center;">Lock System</h4>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div class="form-group">
                    <label class=" bold  col-sm-1 control-label" style="color:black;">ALL </label>
                    <div class="col-sm-1" style="">
                        @Html.CheckBoxFor(x => x.All, new { @class = "form-control", @style = "margin-top: -1px;height: 18px;width: 20px;", @Value = Model.All })
                    </div>
                    <label class=" bold  col-sm-1 control-label" style="color:black;">Dispach </label>
                    <div class="col-sm-1" style="">
                        @Html.CheckBoxFor(x => x.Dispach, new { @class = "form-control", @style = "margin-top: -1px;height: 18px;width: 20px;", @Value = Model.Dispach })
                    </div>
                    <label class=" bold  col-sm-1 control-label" style="color:black;">Delivery </label>
                    <div class="col-sm-1" style="">
                        @Html.CheckBoxFor(x => x.Delivery, new { @class = "form-control", @style = "margin-top: -1px;height: 18px;width: 20px;", @Value = Model.Delivery })
                    </div>
                    <label class=" bold  col-sm-1 control-label" style="color:black;">Billing </label>
                    <div class="col-sm-1" style="">
                        @Html.CheckBoxFor(x => x.Billing, new { @class = "form-control", @style = "margin-top: -1px;height: 18px;width: 20px;", @Value = Model.Billing })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <label class=" bold  col-sm-1 control-label" style="color:black;">Remark </label>
                <div class="col-sm-11" style="margin-left: -15px;">
                    @Html.TextAreaFor(x => x.LockRemark, new { @class = "form-control", @style = "", @maxlength = 100, @rows = "2", @Value = Model.LockRemark })
                </div>
            </div>
            <br />
            <br />
            <br />
            <br />

            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SaveLock" data-dismiss="modal">Save</button>
                </div>
            </div>

        </div>
    </div>
</div>
<!--FMDetails Modal -->
<div class="modal right fade" id="FMDetailsModal" style="margin-top: 20px;" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl">
        <div class="modal-content" style="width: max-content;">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="form-group">
                    <h4 class="modal-title"><b>FM Details</b></h4>
                </div>
            </div>
            <div class="modal-body" style="padding: 0px !important;">
                <div class="grid" id="FormatTable">
                    <div class="form-group col-sm-12" id="WorkDetails" style="overflow: auto;width: 100%;display: block;">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--All Destination Modal -->
<div class="modal fade" id="GETDestMODAL" style="overflow:scroll;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" @*style="margin-top: 60px;"*@>
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: fit-content;margin: auto;margin-top: 5%;">
        <div class="modal-content">
            <div class="modal-body">
                <div id="GetDestView">
                    @Html.Partial("_Get_Destination_List", Model)
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Save Draft Name Modal -->
<div class="example-modal">
    <div id="SaveNamePopUp" class="modal modal-default">
        <div class="modal-dialog modal-md" @*style="width:1080px;"*@>
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Draft Name</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.Draft_Name, new { @class = "form-control", @maxlength = 30, @Value = Model.Draft_Name })
                                </div>
                                <div class="col-sm-offset-4 col-sm-8">

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                            <button class="btn btn-info" id="SaveDraftName">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Draft Modal -->
<!--LorryDraft Modal -->
<div class="example-modal">
    <div id="LorryDraftmodal" class="modal modal-default">
        <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 2%;">
            <div id="LorryDraftmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>FM Draft</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="margin-top: 0px;max-height:500px;min-height:500px; width:100%; overflow: scroll;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group col-sm-12" id="FMDraft">
                                        <hr />
                                        @*@Html.Partial("LorryDraftView")*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            @*<button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnAttachSubmit" data-dismiss="modal">Save</button>*@
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="hdnAddBranchListBoxArray" />
<input type="hidden" name="hdn" id="DeleteLc" />

<!--ScheduleModal Modal -->
<div class="example-modal">
    <div id="ScheduleModal" class="modal modal-default">
        <div class="modal-dialog modal-md" @*style="width:1080px;"*@>
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Schedule</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th style="width: 35px;">Branch</th>
                                            <th style="width: 120px;" colspan="1">Arrival Schedule</th>
                                            <th style="width: 120px;" colspan="1">Dispatch Schedule</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.ViewSchedule != null)
                                            {
                                                foreach (var item in Model.ViewSchedule)
                                                {
                                                    <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                        <td>@item.Branch</td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                        <th>KM</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ScheduleArrivalDate</td>
                                                                        <td>@item.ScheduleArrivalTime</td>
                                                                        <td>@item.ScheduleArrivalKM</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                        <td>
                                                            <table id="" class="zui-table editableTable" style="width:100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Time</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>@item.ScheduleDispatchDate</td>
                                                                        <td>@item.ScheduleDispatchTime</td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                }

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





