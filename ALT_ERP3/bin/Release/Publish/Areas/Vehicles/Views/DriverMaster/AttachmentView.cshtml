@model TFATERPWebApplication.Areas.Vehicles.Models.DriverMasterVM
@using Common;

<style>
    a:hover {
        cursor: pointer;
    }
</style>

<script src="~/Content/js/iCheck/jquery.icheck.js"></script>
<script src="~/Content/js/icheck-init.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        hideorshowtable();
        //$('#AcType').val('@Model.MainType').attr("selected", "selected");
        $("#btnPersonalPhotoupload").click(function (event) {

            var personaltable = $('#PersonalPhotos tr').length;
            if (personaltable == 5) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Only 3 Personal Photos Allows.....!');
                return;
            }


            event.preventDefault();
            var size = 0;
            var formData = new FormData();
            var totalFiles = document.getElementById("attachmentDocuments_PersonalPhoto").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("attachmentDocuments_PersonalPhoto").files[i];
                size += file.size;
                if (file.size < 1048576) {
                    formData.append("PersonalPhoto", file);
                    formData.append("TypeOfAttachment", "PersonalPhoto");
                }
                else {
                    alert('File Size Must Not Exceed 1 MB')
                    return;
                }
            }
            if (size > 1048576) {
                alert('File Size Must Not Exceed 1 MB')
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AttachDocument")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    $('#AttachTable').html(data.Html);
                    hideorshowtable();
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });

        $("#btnLicencePhotoupload").click(function (event) {
            var licencetable = $('#LicencePhotos tr').length;

            if (licencetable == 5) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Only 3 Licence Photos Allows.....!');
                return;
            }


            event.preventDefault();
            var size = 0;
            var formData = new FormData();
            var totalFiles = document.getElementById("attachmentDocuments_LicencePhoto").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("attachmentDocuments_LicencePhoto").files[i];
                size += file.size;
                if (file.size < 1048576) {
                    formData.append("LicencePhoto", file);
                    formData.append("TypeOfAttachment", "LicencePhoto");
                }
                else {
                    alert('File Size Must Not Exceed 1 MB')
                    return;
                }
            }
            if (size > 1048576) {
                alert('File Size Must Not Exceed 1 MB')
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AttachDocument")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    $('#AttachTable').html(data.Html);
                    hideorshowtable();
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });

        $("#btnDocumentPhotoupload").click(function (event) {
            var documenttable = $('#DocumentPhotos tr').length;
            if (documenttable == 5) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Only 3 Document Photos Allows.....!');
                return;
            }
            event.preventDefault();
            var size = 0;
            var formData = new FormData();
            var totalFiles = document.getElementById("attachmentDocuments_DocumentPhoto").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("attachmentDocuments_DocumentPhoto").files[i];
                size += file.size;
                if (file.size < 1048576) {
                    formData.append("DocumentPhoto", file);
                    formData.append("TypeOfAttachment", "DocumentPhoto");
                }
                else {
                    alert('File Size Must Not Exceed 1 MB')
                    return;
                }
            }
            if (size > 1048576) {
                alert('File Size Must Not Exceed 1 MB')
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("AttachDocument")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    $('#AttachTable').html(data.Html);
                    hideorshowtable();
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });


        $(".btnShow").click(function (event) {
             var url = '@Url.Action("ViewImage")';
            event.preventDefault();
            var ModelData = {};
            ModelData["AttachmentCode"] = this.id;

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#updTfatsearchDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#updTfatsearch').modal('show');
                    //$('#AllVehicleRate').html('');
                    //$('#AllVehicleRate').html(data.Html);
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    @*$("#ImageId").val('@Model.attachmentDocuments.AttachmentCode');*@
                   // $('#updTfatsearchDiv').html(data.Html);
                },
            });
        });
    });
    $(".btnDelete").click(function (event) {
        event.preventDefault();
        var result = confirm("Want to delete?");
        if (result) {
            var url = '@Url.Action("Delete")';
            var ModelData = {};
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { tempId: this.id },
                success: function (data) {
                    $('#AttachTable').html(data.Html);
                    hideorshowtable();
                }
            });
        }
    });

    function ShowImage() {
            var ModelData = {};
            //ModelData["ViewDataId"] = $("#Ratetype").val();
            var DTO = { Model: ModelData };
           // var url = '@Url.Action("GetReportFormat")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
              //  url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#updTfatsearch').modal('show');
                    $('#updTfatsearchDiv').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });

    }
    function hideorshowtable() {
        var personaltable = $('#PersonalPhotos tr').length;
        var licencetable = $('#LicencePhotos tr').length;
        var documenttable = $('#DocumentPhotos tr').length;
        if (personaltable <= 2) {
            $('#PersonalPhotos').hide();
        } if (licencetable <= 2) {
            $('#LicencePhotos').hide();
        } if (documenttable <= 2) {
            $('#DocumentPhotos').hide();
        }
    }

</script>

<div class="form-horizontal" id="AttachTable" role="form" style="margin-top:15px; overflow-x:hidden; ">
    <div class="form-group">
        <label class="col-sm-2 control-label">Personal Photo:</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.attachmentDocuments.PersonalPhoto, new { @type = "file", @class = "form-control"@*, @style = "font-size:12pt;font-weight:bolder;"*@})
        </div>

        @*<label class="col-sm-2 control-label">Licence Photo:<span class="red">*</span></label>*@
        <div class="col-sm-4">
            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPersonalPhotoupload">Upload</button>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">Licence Photo:</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.attachmentDocuments.LicencePhoto, new { @type = "file", @class = "form-control"@*, @style = "font-size:12pt;font-weight:bolder;"*@})
        </div>

        @*<label class="col-sm-2 control-label">Licence Photo:<span class="red">*</span></label>*@
        <div class="col-sm-4">
            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnLicencePhotoupload">Upload</button>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">Document Photo:</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(x => x.attachmentDocuments.DocumentPhoto, new { @type = "file", @class = "form-control"@*, @style = "font-size:12pt;font-weight:bolder;"*@})
        </div>

        @*<label class="col-sm-2 control-label">Licence Photo:<span class="red">*</span></label>*@
        <div class="col-sm-4">
            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDocumentPhotoupload">Upload</button>
        </div>
    </div>
    <div class="form-group"></div>
    <div class="form-group"></div>
    <div class="form-group"></div>

    @if (Model.AttachmentList != null)
    {

        <div class="form-group1" id="PersonalPhotos">
            <div class="col-md-4">
                @if (Model.AttachmentList.Where(x => x.TypeOfAttachment == "PersonalPhoto").ToList() != null)
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr><th colspan="2" style="text-align:center;font-weight:bold;color: black;">Profile Photo</th></tr>
                            <tr>
                                <th style="text-align:center;">FileName / Actions</th>
                                <th style="text-align:center;">View</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.AttachmentList.Where(x => x.TypeOfAttachment == "PersonalPhoto").ToList())
                            {
                                <tr>
                                    <td style="text-align-last: center;">
                                        @item.FileName<br /><br />
                                        <button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download" style="color:black;"></i></button>
                                        @if (Model.Mode == null)
                                        {
                                            <button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash" style="color:black;"></i></button>

                                        }


                                    </td>
                                    <td style="text-align-last: center;">

                                        @{
                                            string imageBase64 = Convert.ToBase64String(item.Image);
                                            string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                            @*<img src="@imageSrc" style="width:100%;height:330px;" />*@
                                            <a class="btnShow" id="@item.AttachmentCode"><img src="@imageSrc" alt=@item.FileName class="img-thumbnail" style="height:100px;width:140px;" /></a>
                                        }




                                        @*<button class="btn btn-info btnShow" id="@item.AttachmentCode"><i class="glyphicon glyphicon-eye-open"></i></button>*@
                                        @*<button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download"></i></button>*@
                                        @*<button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash"></i></button>*@
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                }

            </div>
        </div>

    }

    @if (Model.AttachmentList != null)
    {

        <div class="form-group1" id="LicencePhotos">
            <div class="col-md-4">
                @if (Model.AttachmentList.Where(x => x.TypeOfAttachment == "LicencePhoto").ToList() != null)
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr><th colspan="2" style="text-align:center;font-weight:bold;color: black;">Licence Photo</th></tr>
                            <tr>
                                <th style="text-align:center;">FileName</th>
                                <th style="text-align:center;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.AttachmentList.Where(x => x.TypeOfAttachment == "LicencePhoto").ToList())
                            {
                                @*<tr>
                                        <td style="text-align-last: center;">@item.FileName</td>
                                        <td style="text-align-last: center;">
                                            <button class="btn btn-info btnShow" id="@item.AttachmentCode"><i class="glyphicon glyphicon-eye-open"></i></button>
                                            <button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download"></i></button>
                                            <button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash"></i></button>
                                        </td>
                                    </tr>*@
                                <tr>
                                    <td style="text-align-last: center;">
                                        @item.FileName<br /><br />
                                        <button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download" style="color:black;"></i></button>
                                        @if (Model.Mode == null)
                                        {
                                            <button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash" style="color:black;"></i></button>
                                        }
                                    </td>
                                    <td style="text-align-last: center;">

                                        @{
                                            string imageBase64 = Convert.ToBase64String(item.Image);
                                            string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                            @*<img src="@imageSrc" style="width:100%;height:330px;" />*@
                                            <a class="btnShow" id="@item.AttachmentCode"><img src="@imageSrc" alt=@item.FileName class="img-thumbnail" style="height:100px;width:140px;" /></a>
                                        }




                                        @*<button class="btn btn-info btnShow" id="@item.AttachmentCode"><i class="glyphicon glyphicon-eye-open"></i></button>*@
                                        @*<button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download"></i></button>*@
                                        @*<button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash"></i></button>*@
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                }

            </div>
        </div>

    }
    @if (Model.AttachmentList != null)
    {

        <div class="form-group1" id="DocumentPhotos">
            <div class="col-md-4">
                @if (Model.AttachmentList.Where(x => x.TypeOfAttachment == "DocumentPhoto").ToList() != null)
                {
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr><th colspan="2" style="text-align:center;font-weight:bold;color: black;">Document Photo</th></tr>
                            <tr>
                                <th style="text-align:center;">FileName</th>
                                <th style="text-align:center;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.AttachmentList.Where(x => x.TypeOfAttachment == "DocumentPhoto").ToList())
                            {
                                @*<tr>
                                        <td style="text-align-last: center;">@item.FileName</td>
                                        <td style="text-align-last: center;">
                                            <button class="btn btn-info btnShow" id="@item.AttachmentCode"><i class="glyphicon glyphicon-eye-open"></i></button>
                                            <button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download"></i></button>
                                            <button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash"></i></button>
                                        </td>
                                    </tr>*@
                                <tr>
                                    <td style="text-align-last: center;">
                                        @item.FileName<br /><br />
                                        <button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download" style="color:black;"></i></button>
                                        @if (Model.Mode == null)
                                        {
                                            <button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash" style="color:black;"></i></button>
                                        }
                                    </td>
                                    <td style="text-align-last: center;">

                                        @{
                                            string imageBase64 = Convert.ToBase64String(item.Image);
                                            string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                            @*<img src="@imageSrc" style="width:100%;height:330px;" />*@
                                            <a class="btnShow" id="@item.AttachmentCode"><img src="@imageSrc" alt=@item.FileName class="img-thumbnail" style="height:100px;width:140px;" /></a>
                                        }




                                        @*<button class="btn btn-info btnShow" id="@item.AttachmentCode"><i class="glyphicon glyphicon-eye-open"></i></button>*@
                                        @*<button class="btn btn-info" onclick="location.href='@Url.Action("Download", "DriverMaster", new { tempId = item.AttachmentCode })';return false;"><i class="glyphicon glyphicon-download"></i></button>*@
                                        @*<button class="btn btn-info btnDelete" id="@item.AttachmentCode"><i class="glyphicon glyphicon-trash"></i></button>*@
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                }

            </div>
        </div>

    }


    @*<div class="form-group">
            <label class="col-sm-2 control-label">Account Type:<span class="red">*</span></label>
            <div class="col-sm-4">
                @Html.DropDownListFor(m => m.AcType, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "AcType", @Id = "AcType" })
            </div>
            <label class="col-sm-2 control-label">Member Of Group:</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(x => x.AcHeadCode, new { @class = "form-control", @Name = "AcHeadCode", @Id = "AcHeadCode", @Value = Model.AcHeadCode })
            </div>
        </div>*@

</div>



<div class="example-modal">
    <div id="updTfatsearch" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;">
            <div id="updTfatsearchDiv">
                @*@Html.Partial("ImageView")*@
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(x => x.attachmentDocuments.AttachmentCode, new { @id = "ImgID" })