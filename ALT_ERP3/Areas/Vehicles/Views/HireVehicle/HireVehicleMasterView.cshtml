@model ALT_ERP3.Areas.Vehicles.Models.VehicleMasterVM
@using Common;
@{
                /**/

                /**/

                ViewBag.Title = "Vehicle Master";
                Layout = null;
}
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<script src="~/Scripts/jquery.jstree.js"></script>

<style>
    .multiselect-search {
        height: 31px !important;
    }

    .jstree a {
        color: black !important;
        font-weight: bold !important;
    }

    .jstree-default a.jstree-search {
        color: #ff0779 !important;
        font-weight: bold !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        GetMyFavorites('@Model.ViewDataId');

        LoadCurrCategory();
        LoadBroker();
        LoadVehicleGroupStatus();
        LoadDebitAccount();
        debugger;
        if ('@Model.Mode'!="Add") {
            FillTreeView();
        } else {
            CheckUncheckTree('Check');
        }

        if ('@Model.Pick_Vehicle_Rate'== "True" || '@Model.PickDriverTripRate'== "True") {
            $("#Vehicle_Rate").removeAttr("disabled");
            $("#Category_Rate").removeAttr("disabled");
            if ('@Model.Pick_Vehicle_Rate'== "True") {
                $("#ChangeVehicleFreight_Advance").removeAttr("disabled");
            }
            else {
                $("#ChangeVehicleFreight_Advance").prop('checked', false);
                $("#ChangeVehicleFreight_Advance").attr("disabled", "disabled");
            }
            if ('@Model.PickDriverTripRate'== "True") {
                $("#ChangeDriverFreight_Advance").removeAttr("disabled");
            }
            else
            {
                $("#ChangeDriverFreight_Advance").prop('checked', false);
                $("#ChangeDriverFreight_Advance").attr("disabled", "disabled");
            }
        }
        else
        {
            $("#ChangeVehicleFreight_Advance").prop('checked', false);
            $("#ChangeVehicleFreight_Advance").attr("disabled", "disabled");
            $("#ChangeDriverFreight_Advance").prop('checked', false);
            $("#ChangeDriverFreight_Advance").attr("disabled", "disabled");

            $("#Vehicle_Rate").prop('checked', false);
            $("#Vehicle_Rate").attr("disabled", "disabled");
            $("#Category_Rate").prop('checked', false);
            $("#Category_Rate").attr("disabled", "disabled");
            $("#GetParentAlso").prop('checked', false);
            $("#GetParentAlso").attr("disabled", "disabled");
        }
        if ('@Model.GetParentAlso' == "True") {
            $("#GetParentAlso").prop('checked', true);
        }
        $("#Pick_Vehicle_Rate").change(function () {
            if (this.checked == true || $("#PickDriverTripRate").is(":checked") == true) {
                $("#Vehicle_Rate").prop('checked', true);
                $("#Category_Rate").prop('checked', true);
                $("#GetParentAlso").prop('checked', true);
                if (this.checked == true) {
                    $("#ChangeVehicleFreight_Advance").removeAttr("disabled");
                } else {
                    $("#ChangeVehicleFreight_Advance").prop('checked', false);
                    $("#ChangeVehicleFreight_Advance").attr("disabled", "disabled");
                }

                $("#Vehicle_Rate").removeAttr("disabled");
                $("#Category_Rate").removeAttr("disabled");
                $("#GetParentAlso").removeAttr("disabled");
            } else {
                $("#ChangeVehicleFreight_Advance").prop('checked', false);
                $("#ChangeVehicleFreight_Advance").attr("disabled", "disabled");

                $("#Vehicle_Rate").prop('checked', false);
                $("#Vehicle_Rate").attr("disabled", "disabled");
                $("#Category_Rate").prop('checked', false);
                $("#Category_Rate").attr("disabled", "disabled");
                $("#GetParentAlso").prop('checked', false);
                $("#GetParentAlso").attr("disabled", "disabled");
            }
        });

        $("#PickDriverTripRate").change(function () {
            if (this.checked == true || $("#Pick_Vehicle_Rate").is(":checked") == true) {
                $("#Vehicle_Rate").prop('checked', true);
                $("#Category_Rate").prop('checked', true);
                $("#GetParentAlso").prop('checked', true);

                if (this.checked == true) {
                    $("#ChangeDriverFreight_Advance").removeAttr("disabled");
                } else {
                    $("#ChangeDriverFreight_Advance").prop('checked', false);
                    $("#ChangeDriverFreight_Advance").attr("disabled", "disabled");
                }

                $("#Vehicle_Rate").removeAttr("disabled");
                $("#Category_Rate").removeAttr("disabled");
                $("#GetParentAlso").removeAttr("disabled");
            } else {
                $("#ChangeDriverFreight_Advance").prop('checked', false);
                $("#ChangeDriverFreight_Advance").attr("disabled", "disabled");
                $("#Vehicle_Rate").prop('checked', false);
                $("#Vehicle_Rate").attr("disabled", "disabled");
                $("#Category_Rate").prop('checked', false);
                $("#Category_Rate").attr("disabled", "disabled");
                $("#GetParentAlso").prop('checked', false);
                $("#GetParentAlso").attr("disabled", "disabled");
            }
        });
        $('#chkSelectAll').change(function () {
            if ($('#chkSelectAll').is(":checked")) {
                CheckUncheckTree('Check');
            }
            else {
                CheckUncheckTree('UnCheck');
            }
        });
        $('#search').keyup(function () {
            $('#treeviewcontrol').jstree('search', $(this).val());
        });

        //var values = $('#hdnAppBranch').val();
        //$("#hdnBranchCodeArray").val(values);
        //if (values == "") {
        //}
        //else {
        //    $.each(values.split(","), function (i, e) {
        //        $(".listbox option[value='" + e + "']").prop("selected", true);
        //    });
        //}

        //$(".listbox").change(function () {
        //    $('#hdnBranchCodeArray').val('');
        //    var selected = [];
        //    $(".listbox :selected").each(function () {
        //        selected.push($(this).val());
        //    });
        //    $('#hdnBranchCodeArray').val(selected)
        //    return false;
        //});
        //$('.listbox').multiselect({
        //    //includeSelectAllOption: true
        //    includeSelectAllOption: true,         /*To enable the Select all Option*/
        //    selectAllValue: 'multiselect-all',     /*The value used for the select all option can be configured using the selectAllValue*/
        //    enableFiltering: true,   /*A filter input will be added to dynamically filter all the options*/
        //    enableCaseInsensitiveFiltering: true,  /*To enable Case Insenstitive Filtering (Upper and Lower Case Letters)*/
        //    maxHeight: '300',
        //    buttonWidth: '235',
        //})

        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }
        $('#Vehicle_No').blur(function () {
            CheckName();
        });

        $("#SpecialRemarkReq").change(function () {
            debugger;
            if (this.checked) {
                $("#SpecialRemark").removeAttr("disabled");

            } else {
                $("#SpecialRemark").attr("disabled", "disabled");
            }
        });
       $("#BalckListReq").change(function () {
            debugger;
            if (this.checked) {
                $("#BalckListRemark").removeAttr("disabled");

            } else {
                $("#BalckListRemark").attr("disabled", "disabled");
            }
        });

        $("#PayLoad").constrain({ allow: { regex: "[0-9]" } });
        $("#KM").constrain({ allow: { regex: "[0-9]" } });

        $('#btnDelete').click(function (event) {
            event.preventDefault();
            var result = confirm("Are you sure you want to delete?");
            if (result) {
            var url = '@Url.Action("DeleteStateMaster")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();

            ModelData["Mode"] = '@Model.Mode';
                ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
            } else {
                $('.spinner').hide();
                window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        $("#ErrorMessage").hide();
            }


        });
        $('#expandall').click(function () {
            ExpandOrCollapse();
        });
        $('#Submit').click(function (event) {
            event.preventDefault();

            if ($("#Vehicle_No").val() == null || $("#Vehicle_No").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle_No is Required..');
                return;
            }



            if ($("#VehicleGroup").val() == null || $("#VehicleGroup").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Truck Type is Required..');
                return;

            }
            //if ($("#Vehicle_Category").val() == null || $("#Vehicle_Category").val() == '')
            //{
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Vehicle_Category is Required..');
            //    return;
            //}


            //if ($("#Driver_Name").val() == null || $("#Driver_Name").val() == '') {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('Driver is Required..');
            //    return;
            //}
            //if ($("#DriverContactNo").val() == null || $("#DriverContactNo").val() == '') {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('ContactNo is Required..');
            //    return;
            //}
            //if ($("#PayLoad").val() == null || $("#PayLoad").val() == '' || $("#PayLoad").val() == '0') {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('PayLoad is Required..');
            //    return;
            //}
            //if ($("#KM").val() == null || $("#KM").val() == '') {
            //    $("#ErrorMessage").show();
            //    $("#ErrorMessage").text('KM is Required..');
            //    return;
            //}
            if ($("#vehicleReportingSt").val() == null || $("#vehicleReportingSt").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Vehicle Current Status is Required..');
                return;
            }
            if ($("#SpecialRemarkReq").is(":checked") == true) {
                if ($("#SpecialRemark").val() == null || $("#SpecialRemark").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('SpecialRemark is Required..');
                    return;
                }
            }
            if ($("#BalckListReq").is(":checked") == true) {
                if ($("#BalckListRemark").val() == null || $("#BalckListRemark").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('BalckListRemark is Required..');
                    return;
                }
            }
            if ($("#Pick_Vehicle_Rate").is(":checked") == true || $("#PickDriverTripRate").is(":checked") == true) {
                if ($("#Vehicle_Rate").is(":checked") == false && $("#Category_Rate").is(":checked") == false) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PLease Select Rate Type..');
                    return;
                }
            }
            var BranchList = "";
            $('#treeviewcontrol').each(function () {
                $(this).find('li').each(function () {
                    var current = $(this);
                    if (current.hasClass("jstree-checked")) {
                        BranchList += current.context.id + ",";
                    }
                });
            });
            BranchList = BranchList.substr(0, BranchList.length - 1);
            if (BranchList == '' || BranchList == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select Branch.....!');
                return;
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["Vehicle_No"] = $("#Vehicle_No").val();
            ModelData["Driver_Name"] = $("#Driver_Name").val();
            ModelData["DriverContactNo"] = $("#DriverContactNo").val();
            ModelData["VehicleGroup"] = $("#VehicleGroup").val();
            ModelData["Vehicle_Category"] = $("#Vehicle_Category").val();
            ModelData["PayLoad"] = $("#PayLoad").val();
            ModelData["Broker_Name"] = $("#Broker_Name").val();
            ModelData["vehicleReportingSt"] = $("#vehicleReportingSt").val();
            ModelData["KM"] = $("#KM").val();
            ModelData["Branch"] = BranchList;
            ModelData["ShortName"] = $("#ShortName").val();
            ModelData["Acitve"] = $("#Acitve").is(":checked");
            ModelData["SpecialRemarkReq"] = $("#SpecialRemarkReq").is(":checked");
            ModelData["BalckListReq"] = $("#BalckListReq").is(":checked");
            ModelData["SpecialRemark"] = $("#SpecialRemark").val();
            ModelData["BalckListRemark"] = $("#BalckListRemark").val();
            ModelData["Remark"] = $("#Remark").val();
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            ModelData["DebitAcCode"] = $("#DebitAcCode").val();
            ModelData["CreditAccount"] = "B";
            ModelData["Pick_Vehicle_Rate"] = $("#Pick_Vehicle_Rate").is(":checked");
            ModelData["PickDriverTripRate"] = $("#PickDriverTripRate").is(":checked");
            ModelData["ChangeVehicleFreight_Advance"] = $("#ChangeVehicleFreight_Advance").is(":checked");
            ModelData["ChangeDriverFreight_Advance"] = $("#ChangeDriverFreight_Advance").is(":checked");
            if ($("#Pick_Vehicle_Rate").is(":checked") == false && $("#PickDriverTripRate").is(":checked") == false) {
                ModelData["Category"] = null;
            } else {
                var category = "";
                if ($("#Vehicle_Rate").is(":checked")) {
                    category += 'V,';
                }
                if ($("#Category_Rate").is(":checked")) {
                    category += 'C,';
                }
                ModelData["Category"] = category.substring(0, category.length - 1);
            }
            ModelData["GetParentAlso"] = $("#GetParentAlso").is(":checked");

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        if ('@Model.ShortCutKey'=="True") {
                            window.close();
                        } else {
                            window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        }
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);                    }
                },
            });
        });
    });

    function LoadBroker() {
        var url = '@Url.Action("GetBroker")'
        $('#Broker_Name').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Broker_Name', text: '@Model.Broker' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function ExpandOrCollapse() {

        if ($("#treeviewcontrol>ul>li").hasClass("jstree-open")) {
            $("#treeviewcontrol").jstree("close_all", "#0");
        }
        else {
            $("#treeviewcontrol").jstree("open_all", "#0");
        }
    }
    function FillTreeView() {
        var Document = $("#Document").val();
        var tree = $("#treeviewcontrol");
        tree.jstree({
            json_data: {
                "ajax": {
                    "url": "/HireVehicle/TreeView?Mode=@Model.Mode&Document=" + Document,
                    "type": "POST",
                    "dataType": "json",
                    "contentType": "application/json charset=utf-8"
                }
            },
            checkbox: {
                real_checkboxes: true,
                checked_parent_open: false
            },
            plugins: ["themes", "json_data", "ui", "checkbox", "search"]
        }).bind("loaded.jstree", function (event, data) {
            $('#treeviewcontrol').jstree('check_node', 'li[selected=selected]');
            $(this).jstree("open_all");
        });

    }
    function CheckUncheckTree(check) {
        var tree = $("#treeviewcontrol");
        tree.jstree({
            json_data: {
                "ajax": {
                    "url": "/HireVehicle/CheckUncheckTree?Check=" + check,
                    "type": "POST",
                    "dataType": "json",
                    "contentType": "application/json charset=utf-8"
                }
            },
            checkbox: {
                real_checkboxes: true,
                checked_parent_open: false
            },
            //search: {
            //    case_insensitive: true,
            //    show_only_matches: true
            //},
            plugins: ["themes", "json_data", "ui", "checkbox", "search"]
        }).bind("loaded.jstree", function (event, data) {
            $('#treeviewcontrol').jstree('check_node', 'li[selected=selected]');
            $(this).jstree("open_all");
        });

    }
    function LoadVehicleGroupStatus() {

            var url = '@Url.Action("GetVehicleGroupStatus")'
            $('#VehicleGroup').select2({
                minimumInputLength: 0,
                placeholder: 'Search',
                ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

                initSelection: function (element, callback) {
                    var data = { id: '@Model.VehicleGroup', text: '@Model.VehicleGroup_Name' };
                    callback(data);
                },

                formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

                formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            })
    };


    function LoadDebitAccount() {
        var url = '@Url.Action("DebitAccount")'
        $('#DebitAcCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DebitAcCode', text: '@Model.DebitAcName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    }
    function LoadCurrCategory() {
        var url = '@Url.Action("AutoCompleteVehicleCategory")'
        $('#Vehicle_Category').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Vehicle_Category', text: '@Model.Vehicle_Category_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function CheckName() {

            NameFlag = "False";
        var currValue = $('#Vehicle_No').val()
        var url = '@Url.Action("CheckExist")';
        if (currValue != null || currValue != "") {
            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { TableName: "HireVehicleMaster", Colfield: "[TruckNo]", Value: $('#Vehicle_No').val(), SkipColumnName: "RecordKey", PKValue: '@Model.Document' },
                success: function (result) {
                    if (result.Message == "F") {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Vehicle_No is Exist Please Change The Vehicle_No..');
                        $('#Submit').prop('disabled', true);
                        return;
                    } else {
                        $("#ErrorMessage").hide();
                        $('#Submit').prop('disabled', false);
                    }
                }
            });
        }
    }
</script>
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            @if (Model.ShortCutKey)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>
<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Body Panels *@
            <div id="DataEntry" class="col-sm-9" style="margin-bottom:20px;">
                <div class="panel-group">
                    @*Vehicle DETAILS*@
                    <div class="panel panel-default">
                        <div class="panel-heading" style="background-color: #346983;border-color: #DDDDDD;color: aqua;padding: 5px;">Vehicle Basic Details</div>
                        <div class="panel-body" style="padding: 5px 10px 1px 10px;background-color: #c4dfe1;">
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Vehicle No:<span style="color:red;">*</span></label>
                                <div class="col-sm-2">
                                    @if (Model.Mode == "Add")
                                    {
                                        @Html.TextBoxFor(x => x.Vehicle_No, new { @class = " form-control", @style = "width:100%;", @Value = Model.Vehicle_No })
                                        @Html.ValidationMessageFor(model => model.Vehicle_No, "", new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(x => x.Vehicle_No, new { @class = " form-control", @style = "width:100%;", @Value = Model.Vehicle_No, @maxlenght = "25" })
                                    }
                                </div>
                                <label class="col-sm-offset-1 col-sm-2 control-label">Truck Type:<span style="color:red;">*</span></label>
                                <div class="col-sm-2" style="display: flex;">
                                    @Html.TextBoxFor(x => x.VehicleGroup, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.VehicleGroup, @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Debit AC::<span style="color:red;">*</span></label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.DebitAcCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.DebitAcCode })
                                </div>
                                <label class="col-sm-offset-1 col-sm-2 control-label">Credit AC:<span style="color:red;">*</span></label>
                                <div class="col-sm-2" style="display:flex;">
                                    <input type="radio" class="form-control" name="OwnFM" id="FMBroker" value="Broker" style="height:20px;width:35px;" checked /><label class=" bold control-label" style="font-size: 14px;"> Broker</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Vehicle Category:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Vehicle_Category, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Vehicle_Category })
                                </div>
                                <label class=" col-sm-2 control-label">Broker Name:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Broker_Name, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Broker_Name })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Driver Name:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.Driver_Name, new { @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.Driver_Name })
                                </div>
                                <label class=" col-sm-2 control-label">Contact No:</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(x => x.DriverContactNo, new { @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.DriverContactNo })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" col-sm-2 control-label">Starting KM:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.KM, new { @class = " form-control", @style = "width:100%;", @Value = Model.KM })
                                </div>
                                <label class="col-sm-offset-1 col-sm-2 control-label">Pay Load(Kg):</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.PayLoad, new { @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.PayLoad })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Status:</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.Acitve, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Acitve })
                                </div>
                                <label class="col-sm-offset-1 col-sm-2 control-label">Vehicle Current Status<span style="color:red;">*</span></label>
                                <div class="col-sm-2">
                                    @Html.EnumDropDownListFor(model => model.vehicleReportingSt, "- Please select your Vehicle Status -", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" col-sm-2 control-label">ShortName :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.ShortName, new { @class = " form-control", @style = "width:100%;", @Value = Model.ShortName, @maxlength = "5" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Activity Remark Req:</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.SpecialRemarkReq, new { @class = "checkbox", @style = "width:20px;", @Value = Model.SpecialRemarkReq })
                                </div>
                                <label class="col-sm-offset-1  col-sm-2 control-label">Activity Remark:</label>
                                <div class="col-sm-4">
                                    @if (Model.SpecialRemarkReq)
                                    {
                                        @Html.TextAreaFor(x => x.SpecialRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.SpecialRemark, @maxlength = "100", @rows = "2" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(x => x.SpecialRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.SpecialRemark, @maxlength = "100", @rows = "2", @disabled = "disabled" })
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Hold Remark Req:</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.BalckListReq, new { @class = "checkbox", @style = "width:20px;", @Value = Model.BalckListReq })
                                </div>
                                <label class="col-sm-offset-1  col-sm-2 control-label">Hold Remark:</label>
                                <div class="col-sm-4">
                                    @if (Model.BalckListReq)
                                    {
                                        @Html.TextAreaFor(x => x.BalckListRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.BalckListRemark, @maxlength = "100", @rows = "2" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(x => x.BalckListRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.BalckListRemark, @maxlength = "100", @rows = "2", @disabled = "disabled" })
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group hidden">
                        <label class=" col-sm-2 control-label">Pick Vehicle Freight Charges :</label>
                        <div class="col-sm-1">
                            @Html.CheckBoxFor(x => x.Pick_Vehicle_Rate, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Pick_Vehicle_Rate })
                        </div>
                        <label class=" col-sm-2 control-label">Pick Driver Trip Charges :</label>
                        <div class="col-sm-1">
                            @Html.CheckBoxFor(x => x.PickDriverTripRate, new { @class = "checkbox", @style = "width:20px;", @Value = Model.PickDriverTripRate })
                        </div>
                        <label class="col-sm-2 control-label">Select Rate Type:</label>
                        <div class="col-sm-5" style="width:auto;">
                            <div style="display:flex;">
                                @Html.CheckBoxFor(x => x.Vehicle_Rate, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Vehicle_Rate })
                                <label class="col-sm-1   control-label" style="width:auto;">Vehicle Rate</label>
                                @Html.CheckBoxFor(x => x.Category_Rate, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Category_Rate })
                                <label class="col-sm-1   control-label" style="width:auto;">Category Rate</label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group hidden">
                        <label class="col-sm-2 control-label" title="Allow To Change Vehicle Charges In Freight Memo.">Change Vehicle Charges:</label>
                        <div class="col-sm-1">
                            @Html.CheckBoxFor(x => x.ChangeVehicleFreight_Advance, new { @class = "checkbox", @style = "width:20px;", @Value = Model.ChangeVehicleFreight_Advance })
                        </div>
                        <label class="col-sm-2 control-label" title="Allow To Change Driver Charges In Freight Memo.">Change Driver Charges:</label>
                        <div class="col-sm-1">
                            @Html.CheckBoxFor(x => x.ChangeDriverFreight_Advance, new { @class = "checkbox", @style = "width:20px;", @Value = Model.ChangeDriverFreight_Advance })
                        </div>
                        <label class=" col-sm-2 control-label">Get Parent Rate Also :</label>
                        <div class="col-sm-1">
                            <input title='Branch Only' type="checkbox" id="GetParentAlso" name="GetParentAlso" style="margin-top: 0px;width:20px;height:20px;" />
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-sm-3" style="font-family:Tahoma;font-size:12px;border-left:double;">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="input-group" style="display:flex;">
                            <label class="control-label" style="font-size: 14px;font-weight: bold;padding-right:10px;">Select All</label>
                            <div style="padding-right:40px;"><input type="checkbox" class="checkbox" id="chkSelectAll" style="width:22px;" /></div>
                            <input type="text" class="form-control" style="width:150px;" placeholder="Search Node ..." id="search" />
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div id="treeviewcontrol" style=" min-height:400px;overflow-y:auto;max-height:400px;position: relative;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right" style="padding-left:5px;">
                <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="expandall">Expand All / Collapse All</button>
            </div>
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                @if (Model.ShortCutKey)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>
@Html.HiddenFor(x => x.Document)


