@model ALT_ERP3.Areas.Vehicles.Models.TruckExpensesDueVM
@using Common;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<style>
    .disabled-link {
        pointer-events: none;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        GetMyFavorites('@Model.ViewDataId');
        $('#Fromdate').val('@Model.FromDate');
        $('#ToDate').val('@Model.ToDate');
        $("#hdnformatname").val("");
        $("#Days").constrain({ allow: { regex: "[0-9]" } });
        //$("#Days").val("15");
        LoadSavedParamentersType();
        $("#chkExtendDays").change(function () {
            if (this.checked) {
                $("#Days").removeAttr("disabled");
                $("#ToDate").prop("disabled", true);
            }
            else {
                $("#Days").attr("disabled", "disabled");
                $("#ToDate").prop("disabled", false);
            }
        });



        //$('#Vehicle').val('');
        //var selected = "";
        //$("#VehicleL").find("option").each(function () {
        //    $(this).attr('selected', true);
        //    selected += ("'" + $(this).val() + "',");
        //});
        //selected = selected.toString().substring(0, selected.length - 1);
        //$('#Vehicle').val(selected);

        //$('#Expenses').val('');
        //var selected1 = "";
        //$("#ExpensesL").find("option").each(function () {
        //    $(this).attr('selected', true);
        //    selected1 += ("'" + $(this).val() + "',");
        //});
        //selected1 = selected1.toString().substring(0, selected1.length - 1);
        //$('#Expenses').val(selected1);

        $('#Fromdate,#ToDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });

        $("#Submit").click(function () {
            $('#tblDetails').jqGrid('clearGridData');
            $("#tblDetails").jqGrid("GridUnload");
            $('#tblDetails').trigger('reloadGrid');
            GridReload("Due");
            //ParameterReset();
        });
        $(".ReportName").change(function (event) {
            event.preventDefault();
            debugger;
            if ($(".ReportName").val() != "" && $(".ReportName").val() != null) {
                $("#txtReportName").val($(".ReportName option:selected").text());
            } else {
                $("#txtReportName").val("");
                $("#btnReset").trigger("click");
            }

        });
        $('#btnReportParam').click(function (event) {
            event.preventDefault();
            $('.spinner').show();
            if ($("#txtReportName").val() == "" || $("#txtReportName").val() == null) {
                alert("Please Enter The Report Name....!");
                $('.spinner').hide();
                return;
            }

            var url = '@Url.Action("SaveParameter")';

            var ModelData = {};
            //ModelData["FromDate"] = $("#Fromdate").val();
            ModelData["ToDate"] = $("#ToDate").val();

            ModelData["ViewDataId"] = '@Model.ViewDataId';
            ModelData["ReportTypeL"] ='@Model.ViewDataId';
            ModelData["ReportName"] = $("#txtReportName").val();


            ModelData["Days"] = $("#Days").val();
            ModelData["Vehicle"] = $("#Vehicle").val();

            ModelData["CostcenterReq"] = $('#CC').is(":checked");
            if ($('#CC').is(":checked")) {
                ModelData["Expenses"] = $("#Costcenter").val();
            } else {
                ModelData["Expenses"] = $("#Expenses").val();
            }


            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    alert("Save Report Sucessfully..........");
                    $('#SaveReportName').modal('hide');
                    $("#btnReset").trigger("click");

                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });

        });
        $('#btnDeleteReportParam').click(function (event) {
            event.preventDefault();
            $('.spinner').show();
            if ($("#txtReportName").val() == "" || $("#txtReportName").val() == null) {
                alert("Please Enter The Report Name....!");
                return;
            }

            var url = '@Url.Action("SaveParameter")';

            var ModelData = {};
            ModelData["ReportTypeL"] = '@Model.ViewDataId';
            ModelData["ReportName"] = $("#txtReportName").val();


            ModelData["ViewDataId"] = '@Model.ViewDataId';
            ModelData["Mode"] = "Delete";


            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    alert("Delete Report Sucessfully..........");
                    $('#SaveReportName').modal('hide');
                    $("#btnReset").trigger("click");

                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });

        });
        $("#btnReset").click(function (event) {
            event.preventDefault();
           $("#Submit").prop("disabled", true);

           $('#acledger').jqGrid("clearGridData");
           $("#acledger").jqGrid("GridUnload");
           $('#acledger').trigger("reloadGrid");

            var url = '@Url.Action("ParameterReset")';
            var ModelData = {};
           ModelData["ViewDataId"] = '@Model.ViewDataId';
           ModelData["ReportTypeL"] = '@Model.ViewDataId';
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $("#Submit").prop("disabled", false);

                    if (data.Status == "Success") {
                        var LoadDownLoadFiles = $("#ParameterDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $('#Optionsmodal').modal('show');
                        LoadSavedParamentersType();
                    }
                    else {
                        alert("Some Error Occured...!");
                    }
                },
            });
        });
        //$('.VehicleL,.ExpensesL').multiselect({
        //    includeSelectAllOption: true,
        //    enableFiltering: true,
        //    enableCaseInsensitiveFiltering: true,
        //    filterPlaceholder: 'Search for something...',
        //})
    });
    function GetSaveParameter()
    {
        if ($("#ReportName").val() == "" || $("#ReportName").val() == null) {
            alert("Please Select First Reports From The Combo....!");
            return;
        }

        var url = '@Url.Action("GetParameterAuto")';
        var ModelData = {};
        ModelData["ReportTypeL"] = '@Model.ViewDataId';
        ModelData["ReportName"] = $("#txtReportName").val();
        ModelData["ViewDataId"] = '@Model.ViewDataId';

        $("#GetReportParameter").val(false);
        if ($(".ReportName").val() != "" && $(".ReportName").val() != null) {
            $("#GetReportParameter").val(true);
        }
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $("#Submit").prop("disabled", false);

                if (data.Status == "Success") {
                    debugger;
                    var LoadDownLoadFiles = $("#ParameterDiv");
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $('#Optionsmodal').modal('show');
                }
                else {
                    alert("Some Error Occured...!");
                }
            },
        });
    }
    function LoadSavedParamentersType() {
        event.preventDefault();
        var url = '@Url.Action("PopulateSaveReports")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { ViewDataId:'@Model.ViewDataId'},
            success: function (result) {
                $('#ReportName').empty();
                $('#ReportName').append($("<option></option>").attr("value", "").text(" -- Select Saved Reports -- "));
                $.each(result, function (i, item) {
                    $("#ReportName").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function SetDates(value)
    {
        if (value == 1)
        {
            $('#Fromdate').datepicker("setDate", '@Session["StartDate"].ToString().Trim()');
            $('#ToDate').datepicker("setDate", '@Session["LastDate"].ToString().Trim()');
        }
        else if (value == 2)
        {
            var d = new Date();
            var Month = d.getMonth() + 1;
            var LastDate = "";
            var days = daysInMonth();
            if (days < 9) {
                LastDate = "0" + days.toString().trim() + "/";
            } else {
                LastDate = days.toString().trim() + "/";
            }
            var SDD = "01/" + Month + "/" + d.getFullYear();
            var LDD = LastDate + Month + "/" + d.getFullYear();
            $('#Fromdate').datepicker("setDate", SDD);
            $('#ToDate').datepicker("setDate", LDD);
        }
        else if (value == 3)
        {
            var d = new Date();
            var Month = d.getMonth() + 1;
            var day = d.getDate();
            var LastDate = "";
            if (day < 9) {
                LastDate = "0" + day.toString().trim() + "/";
            } else {
                LastDate = day.toString().trim() + "/";
            }
            var SDD = LastDate + Month + "/" + d.getFullYear();
            $('#Fromdate').prop("disabled", false);
            $('#ToDate').prop("disabled", false);
            $('#Fromdate').datepicker("setDate", SDD);
            $('#ToDate').datepicker("setDate", SDD);
        }
    }
    function daysInMonth() {

        var d = new Date();
        var month = d.getMonth() + 1;
        var year = d.getFullYear();

        return new Date(year, month, 0).getDate();
    }
    function clickPrint(mwhat) {
        var mformat=$("#hdnformatname").val();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var Expenses = "";
        if ($('#CC').is(":checked")) {
            Expenses = $("#Costcenter").val();
        } else {
            Expenses = $("#Expenses").val();
        }
        var sUrlpath = window.open('@Url.Action("GetGridData")?Fromdate=' + $("#Fromdate").val() + '&page=' + $('#pager1') + '&rows= @Session["GridRows"]' + '&ViewDataId=@Model.ViewDataId &ToDate=' + $("#ToDate").val() + '&Vehicle=' + $("#Vehicle").val() + '&Expenses=' + Expenses  + '&mWhat=' + mwhat, '_blank');
    };
    function PrintReport() {
        var mformat=$("#hdnformatname").val();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var murl="/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=@Model.ViewDataId &mopening="+ $('#openb').val()+"&mRunning=true&mParaString=Code^" + $('#Account').val()+ '&Code=' + $('#Account').val();
        window.open(murl,'_blank');
    };

    @*$('#btnPDF').click(function () {
        var mformat=$("#hdnformatname").val();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sUrlpath = window.open('@Url.Action("GetGridData")?Date=' + mDate + '&ViewDataId=' + mformat + '&Code=' + $('#Account').val()+'&mWhat='+'EPDF', '_blank');
    });

    $('#btnPDL').click(function () {
        var mformat=$("#hdnformatname").val();
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var sUrlpath = window.open('@Url.Action("GetGridData")?Date=' + mDate + '&ViewDataId=' + mformat + '&Code=' + $('#Account').val()+'&mWhat='+'PDL', '_blank');
    });*@

    function clickRefresh()
    {
        $('#tblDetails').jqGrid('clearGridData');
        $("#tblDetails").jqGrid("GridUnload");
        $('#tblDetails').trigger('reloadGrid');

        $('#tblTruckLedgerSummary').jqGrid('clearGridData');
        $("#tblTruckLedgerSummary").jqGrid("GridUnload");
        $('#tblTruckLedgerSummary').trigger('reloadGrid');

        GridReload("Due");
        document.getElementById("Details").click();
    }
    function GetURL(mdocument)
    {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var mURL = '@Url.Action("GetURL")?mDate=' + mDate + '&mdocument=' + mdocument;
        $.ajax({
            type: 'POST',
            url: mURL,
            dataType: 'json',
            data: {},
            success: function (result) {
                $('.spinner').hide();
                if (result.url != "") {
                    window.open(result.url, '_blank');
                } else {
                    alert("Error! Can't Zoom into the Transaction!");
                }
            },
            error: function (ex) {
                alert("Error! Can't Open the Transaction" + ex);
            }
        });
        return false;
    };
    function GridReload(Status)
    {
        debugger;
        //if ($("#Vehicle").val() == "" || $("#Vehicle").val() == null) {
        //    alert("Please Select Vehicle...");
        //    return false;
        //}
        //if ($("#Expenses").val() == "" || $("#Expenses").val() == null) {
        //    alert("Please Select Expenses...");
        //    return false;
        //}

        
        event.preventDefault();
        $('.spinner').show();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        $("#hdnformatname").val($("#viewcode").val());
        var Days = 0;
        if ($('#chkExtendDays').is(':checked')) {
            Days = ($("#Days").val());
        }
        var sPathUrl1 = '@Url.Action("GetGridStructureRecords")?Date=' + mDate + '&ViewDataId=TruckExpensesDueReports';
        var sUrlpath1 = '@Url.Action("GetGridData")?Fromdate=' + $("#Fromdate").val() + '&ViewDataId=TruckExpensesDueReports&ToDate=' + $("#ToDate").val() + ' &Days=' + Days + '&Status=' + Status;

        var sPathUrl = '@Url.Action("GetGridStructureRecords")';
        var ModelData = {};
        ModelData["Fromdate"] = $("#Fromdate").val();
        ModelData["ViewDataId"] ="TruckExpensesDueReports";
        ModelData["ToDate"] = $("#ToDate").val();
        ModelData["Vehicle"] = $("#Vehicle").val();
        if ($('#CC').is(":checked"))
        {
            ModelData["Expenses"] = $("#Costcenter").val();
        } else {
            ModelData["Expenses"] = $("#Expenses").val();
        }
        
        ModelData["ItemMaster"] = $("#ItemMaster").val();
        ModelData["ItemGroup"] = $("#ItemGroup").val();
        ModelData["Days"] = Days;
        var DTO = { Model: ModelData };


        $.ajax({
            data: JSON.stringify(DTO),
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                $('#openb').val(obj[2]);
                $('#closeb').val(obj[3]);
                $('#tcredit').val(obj[4]);
                $('#tdebit').val(obj[5]);
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });
        function CreateGridData() {
            $('#tblDetails').jqGrid({
                //data: JSON.stringify(DTO),
                url: sUrlpath1,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: true,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager1'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 235,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                ondblClickRow: function (id) {
                    event.preventDefault();
                    var myGrid = $('#tblDetails');
                    var cellVal = myGrid.jqGrid('getCell', id, 'LrNo');
                    GetURL(cellVal);
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                loadComplete: function () {
                    
                    var ids = jQuery("#tblDetails").jqGrid('getDataIDs');
                    for (var i = 0; i < ids.length - 1; i++) {
                        debugger;
                        var rowId = ids[i];
                        if (jQuery("#tblDetails").getCell(rowId, "Status") == "Pending") {
                            //$("#tblDetails").jqGrid('setCell', rowId, 'Edit', '1');
                            var btn = "<button type='button' id='btnProcessed" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Click To Processed' , title='Click To Processed' , attr='" + rowId + "'>Pending</button>";
                            jQuery("#tblDetails").jqGrid('setRowData', rowId, { Status: btn });
                        }
                        else {
                           // $("#tblDetails").jqGrid('setCell', rowId, 'Edit', '0');
                            var btn = "<button type='button' id='btnUnProcessed" + rowId + "' value='" + rowId + "' style='padding:3px 8px;border-radius:15px;' class='btn btn-danger' tooltip='Click To Pending' , title='Click To Pending' , attr='" + rowId + "'>Processed</button>";
                            jQuery("#tblDetails").jqGrid('setRowData', rowId, { Status: btn });
                        }
                        if (jQuery("#tblDetails").getCell(rowId, "Active") == "UnActive") {
                            //$("#tblDetails").jqGrid('setCell', rowId, 'Delete', '0');
                            var btn = "<button type='button' id='btnUnActive" + rowId + "' value='" + rowId + "'  style='padding:4px 12px;border-radius:15px;' class='btn btn-info' tooltip='Click To Active' , title='Click To Active' , attr='" + rowId + "'>Un-Active</button>";
                            jQuery("#tblDetails").jqGrid('setRowData', rowId, { Active: btn });
                        }
                        else {
                            //$("#tblDetails").jqGrid('setCell', rowId, 'Delete', '1');
                            var btn = "<button type='button' id='btnActive" + rowId + "' value='" + rowId + "' style='padding:3px 8px;border-radius:15px;' class='btn btn-danger' tooltip='Click To Un-Active' , title='Click To Un-Active For Not Consider In Due Report.' , attr='" + rowId + "'>Active</button>";
                            jQuery("#tblDetails").jqGrid('setRowData', rowId, { Active: btn });
                        }
                    }

                    $("button").click(function (event) {

                        event.preventDefault();
                        var btnname = this.id;
                        var curRowId = this.value;
                        var btntype = btnname.replace(/[0-9]/g, "");
                        var myGrid = $('#tblDetails');
                        selectedRowId = myGrid.jqGrid('getGridParam', 'selrow');
                        var cellVal = myGrid.jqGrid('getCell', curRowId, 'Document');

                        switch (btntype) {
                            case "btnProcessed":
                                btnProcessed(cellVal);
                                break;
                            case "btnUnProcessed":
                                btnUnProcessed(cellVal);
                                break;
                            case "btnUnActive":
                                btnUnActive(cellVal);
                                break;
                            case "btnActive":
                                btnActive(cellVal);
                                break;
                        }
                    });

                    //SVGActive();


                    $('.spinner').hide();
                    $('#pager1').height = 5;
                },
            });
            jQuery("#tblDetails").jqGrid('navGrid', "#pager1",
                { edit: false, add: false, del: false, search: true, refresh: true, searchtext: "filter"});
            jQuery("#tblDetails").jqGrid("setFrozenColumns");
        };
        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    function GridReloadLicence()
    {
        event.preventDefault();
        $('.spinner').show();
        var ColName, Coldata;
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        $("#hdnformatname").val($("#viewcode").val());

        var sPathUrl = '@Url.Action("GetGridStructureRecords")?Date=' + mDate + '&ViewDataId=DriverLicenceDueReports' ;
        var sUrlpath = '@Url.Action("GetGridData")?Fromdate=' + $("#Fromdate").val() + '&ViewDataId=DriverLicenceDueReports&ToDate=' + $("#ToDate").val();
        $.ajax({
            url: sPathUrl,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('.spinner').show();
                var obj = $.parseJSON(data);
                ColName = obj[0].split(",");
                Coldata = obj[1];
                $('#openb').val(obj[2]);
                $('#closeb').val(obj[3]);
                $('#tcredit').val(obj[4]);
                $('#tdebit').val(obj[5]);
                CreateGridData();
                $('.spinner').hide();
            },
            error: function () {
                alert("Error with AJAX callback");
            }
        });
        function CreateGridData() {
            $('#tblTruckLedgerSummary').jqGrid({
                url: sUrlpath,
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                cellEdit: true,
                mtype: 'POST',
                sortable: true,
                colNames: ColName,
                colModel: Coldata,
                pager: $('#pager2'),
                rowNum: @Session["GridRows"],
                rowList: [10, 15, 20, 50, 100, 500, 1000, 5000, 10000],
                //sortname: 'Ledger.Docdate',
                height: $(window).height() - 235,
                frozen: false,
                sortorder: 'asc',
                gridview: true,
                viewrecords: true,
                scroll: false,
                autoencode: true,
                search: true,
                recordtext: "View {0} - {1} of <span style='font-weight:bold;font-size: 13px;'>{2}</span>",
                ondblClickRow: function (id) {
                    event.preventDefault();
                    var myGrid = $('#tblTruckLedgerSummary');
                    var cellVal = myGrid.jqGrid('getCell', id, 'LrNo');
                    GetURL(cellVal);
                },
                beforeRequest: function () {
                    responsive_jqgridData($(".jqGrid"));
                },
                loadComplete: function () {
                    $('.spinner').hide();
                    $('#pager2').height = 5;
                },
            });
            jQuery("#tblTruckLedgerSummary").jqGrid('navGrid', "#pager2",
                { edit: false, add: false, del: false, search: true, refresh: true, searchtext: "filter"});
            jQuery("#tblTruckLedgerSummary").jqGrid("setFrozenColumns");
        };
        function responsive_jqgridData(jqgrid) {
            jqgrid.find('.ui-jqgrid').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-view > div').eq(1).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-view > div').eq(2).addClass('clear-margin span12').css('width', '').css('min-height', '0').css('display', 'grid');
            jqgrid.find('.ui-jqgrid-sdiv').addClass('clear-margin span12').css('width', '');
            jqgrid.find('.ui-jqgrid-pager').addClass('clear-margin span12').css('width', '');
            jqgrid.find('#pager_right').css('width', '180px');
            jqgrid.find('.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default').css('background', '#e7e4e4');
            jqgrid.find('.ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus .ui-state-hover').css('background', 'skyblue');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-family', 'Tahoma');
            jqgrid.find('.ui-jqgrid tr.jqgrow').css('font-size', '9pt');
        };
    }

    function DueReport() {
        debugger;

        $('#tblDetails').jqGrid('clearGridData');
        $("#tblDetails").jqGrid("GridUnload");
        $('#tblDetails').trigger('reloadGrid');

        $('#tblTruckLedgerSummary').jqGrid('clearGridData');
        $("#tblTruckLedgerSummary").jqGrid("GridUnload");
        $('#tblTruckLedgerSummary').trigger('reloadGrid');

        GridReload("Due");


        //var ids = jQuery("#tblDetails").jqGrid('getDataIDs');
        //for (var i = 0; i < ids.length; i++) {
        //    debugger;
        //    var rowId = ids[i];
        //    if (jQuery("#tblDetails").getCell(rowId, "DeleteF") == "True") {
        //        $('#' + $.jgrid.jqID(rowId)).addClass('hidden');
        //    } else {
        //        $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
        //    }
        //}
    }
    function ProcessedReport() {
        $('#tblDetails').jqGrid('clearGridData');
        $("#tblDetails").jqGrid("GridUnload");
        $('#tblDetails').trigger('reloadGrid');

        $('#tblTruckLedgerSummary').jqGrid('clearGridData');
        $("#tblTruckLedgerSummary").jqGrid("GridUnload");
        $('#tblTruckLedgerSummary').trigger('reloadGrid');

        GridReload("Processed");

        //var ids = jQuery("#tblDetails").jqGrid('getDataIDs');
        //for (var i = 0; i < ids.length; i++) {

        //    var rowId = ids[i];
        //    if ((jQuery("#tblDetails").getCell(rowId, "EditF") == "True") && (jQuery("#tblDetails").getCell(rowId, "DeleteF") == "False"))  {
        //        $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
        //    } else {
        //        $('#' + $.jgrid.jqID(rowId)).addClass('hidden');
        //    }
        //}
    }
    function InActiveReport() {
        $('#tblDetails').jqGrid('clearGridData');
        $("#tblDetails").jqGrid("GridUnload");
        $('#tblDetails').trigger('reloadGrid');

        $('#tblTruckLedgerSummary').jqGrid('clearGridData');
        $("#tblTruckLedgerSummary").jqGrid("GridUnload");
        $('#tblTruckLedgerSummary').trigger('reloadGrid');

        GridReload("InActive");
        //var ids = jQuery("#tblDetails").jqGrid('getDataIDs');
        //for (var i = 0; i < ids.length; i++) {

        //    var rowId = ids[i];
        //    if ((jQuery("#tblDetails").getCell(rowId, "DeleteF") == "True"))  {
        //        $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
        //    } else {
        //        $('#' + $.jgrid.jqID(rowId)).addClass('hidden');
        //    }
        //}
    }
    function AllDueReport() {

        $('#tblDetails').jqGrid('clearGridData');
        $("#tblDetails").jqGrid("GridUnload");
        $('#tblDetails').trigger('reloadGrid');

        $('#tblTruckLedgerSummary').jqGrid('clearGridData');
        $("#tblTruckLedgerSummary").jqGrid("GridUnload");
        $('#tblTruckLedgerSummary').trigger('reloadGrid');

        GridReload("AllDue");

        //var myGrid = $('#tblDetails');
        //var ids = jQuery("#tblDetails").jqGrid('getDataIDs');
        //for (var i = 0; i < ids.length; i++) {
        //    var rowId = ids[i];
        //    $('#' + $.jgrid.jqID(rowId)).removeClass('hidden');
        //}
    }

    function btnProcessed(value) {
        var url = '@Url.Action("Processed")';

        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //location.reload();
                    clickRefresh();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }

    function btnUnProcessed(value) {
        var url = '@Url.Action("UnProcessed")';

        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //location.reload();
                    clickRefresh();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }

    function btnUnActive(value) {
        var url = '@Url.Action("Active")';

        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //location.reload();
                    clickRefresh();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }

    function btnActive(value) {
        var url = '@Url.Action("UnActive")';

        var ModelData = {};
        ModelData["Document"] = value;
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //location.reload();
                    clickRefresh();
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }



    

    function ClickPara() {
        $('#Optionsmodal').modal('show');
    }
</script>

<header class="header fixed-top" id="infofooter" style="position:fixed;background-color:lightgray;padding:5px;width:100%;margin-top:0%;height:41px;">
    <div class="fixhead">
        <div class="col-md-3" style="padding-left:unset;padding:1px;width:auto;">
            <b class="CodeSt">@Model.Header</b>
        </div>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Due :</label>
            <svg width="20" height="20">
                <title>Due</title>
                <a onclick="DueReport();">
                    <rect width="20" height="20" style="fill:rgb(163,228,180);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Processed :</label>
            <svg width="20" height="20">
                <title>Processed</title>
                <a onclick="ProcessedReport();">
                    <rect width="20" height="20" style="fill:rgb(157,210,218);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">Un-Active :</label>
            <svg width="20" height="20">
                <title>Un-Active</title>
                <a onclick="InActiveReport();">
                    <rect width="20" height="20" style="fill:rgb(224,155,155);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>
        <div class="col-md-1" style="font-family:Tahoma;padding-top:2px;font-size:9pt;display:flex;width: auto;padding-right: 0px;padding-left: 0px;">
            <label class="col-sm-12 control-label" style="width:auto;color:black;">All :</label>
            <svg width="20" height="20">
                <title>All</title>
                <a onclick="AllDueReport();">
                    <rect width="20" height="20" style="fill:rgb(201,201,199);stroke-width:3;stroke:rgb(0,0,0)" />
                </a>
            </svg>
        </div>

        <div class="col-sm-1" style="display:flex;width:auto;">
            <input type="checkbox" class="form-control" style="width:25px;height:20px;" id="chkExtendDays" />
            &nbsp;&nbsp;
            <label class="col-sm-7 control-label boldlabel" style="color:black;margin-top:5px;margin-left:-10px;">Due Within:</label>
            @Html.TextBoxFor(x => x.Days, new { @class = "form-control", @style = "height:28px;font:size:13pt;font-weight:bolder;width:45px;", @Value = Model.Days, @disabled = "disabled" })
            <label class="col-sm-4 control-label boldlabel" style="color:black;margin-top:5px;">Days.</label>
        </div>

        <div class="col-md-2 pull-right" style="padding-right:0px; padding-top:-3px;float:right;align-items:flex-end;">
            <div class="col-sm-1" style="padding-right:1px;font-family:Tahoma;padding-top:5px;font-size:9pt; width:unset;text-align:right">
                <a onclick="clickRefresh()" class="fa fa-refresh" style="font-size:20px;cursor:pointer" title="Refresh the Report"></a>
            </div>
            <div class="col-sm-1" style="padding-right:1px;font-family:Tahoma;padding-top:5px;padding-right:15px;font-size:9pt; width:unset;text-align:right">
                <a onclick="ClickPara()" class="fa fa-cogs" style="font-size:20px;cursor:pointer" title="Parameters"></a>
            </div>
            <div class="btn-group" style="float:left;">
                <button data-toggle="dropdown" class="btn btn-primary dropdown-toggle" type="button">Report  <span class="caret"></span></button>
                <ul class="dropdown-menu" style="font-family:Tahoma; border-left:1px thin;box-shadow:3px 3px 15px 1px rgba(0,0,0,0.2) !important; margin-top:2px;min-height:322px;padding-top:10px; max-height:322px;width:205px;left:-75px;background-color:whitesmoke;">
                    <li><a onclick="PrintReport()">&nbsp;&nbsp;&nbsp;Report Viewer</a></li>
                    <li><a onclick="clickPrint('RPDF')" class="disabled-link">&nbsp;&nbsp;&nbsp;Export to PDF-Portrait</a></li>
                    <li><a onclick="clickPrint('RPDL')" class="disabled-link">&nbsp;&nbsp;&nbsp;Export to PDF-Landscape</a></li>
                    <li><a onclick="clickPrint('RXLS')" class="disabled-link">&nbsp;&nbsp;&nbsp;Export to Excel</a></li>
                    <li><a onclick="clickPrint('RWRD')" class="disabled-link">&nbsp;&nbsp;&nbsp;Export to Word</a></li>
                    <li><a onclick="clickPrint('CRPDF')" class="disabled-link">&nbsp;&nbsp;&nbsp;Report to PDF-Crystal</a></li>
                    <li class="divider"></li>
                    <li><a onclick="clickPrint('PDF')">&nbsp;&nbsp;&nbsp;Export Data to PDF-Portrait</a></li>
                    <li><a onclick="clickPrint('PDL')">&nbsp;&nbsp;&nbsp;Export Data to PDF-Landscape</a></li>
                    <li><a onclick="clickPrint('XLS')">&nbsp;&nbsp;&nbsp;Export Data to Excel</a></li>
                    <li class="divider"></li>
                    <li><a onclick="clickPrint('EPDF')">&nbsp;&nbsp;&nbsp;Send PDF in Email</a></li>
                    <li><a onclick="clickPrint('EXLS')">&nbsp;&nbsp;&nbsp;Send Excel in Email</a></li>
                    <li><a onclick="clickPrint('EWRD')">&nbsp;&nbsp;&nbsp;Send Word in Email</a></li>
                </ul>
            </div>
        </div>

        <div class="col-md-2  pull-right" style="padding-right:unset;">
            <div class="col-md-1" style="color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                As on:
            </div>
            <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                @*<input type="text" class="form-control dpd1" name="from" id="Fromdate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">*@
                @*<span class="input-group-addon">to</span>*@
                <input type="text" class="form-control dpd2" name="to" id="ToDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
            </div>
        </div>
    </div>
</header>

<section class="panel">
    <div class="panel-body" style="margin-top:2%;height:500px;padding-left:0px;padding-right:5px;">
        <div class="tab">
            <button class="tablinks" style="width:150px;" onclick="openTab(event, 'divLedgerTable')" id="Details">Expenses Due</button>
            <button class="tablinks" style="width:150px;" onclick="openTab(event, 'divLedgerTable2')">Licence Due</button>
            @*<button class="tablinks" style="width:150px;" onclick="openTab(event, 'divLedgerTable3')">Stock Due </button>*@
        </div>

        <div id="divLedgerTable" class="tabcontent" style="height:485px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                <table id="tblDetails" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager1" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="divLedgerTable2" class="tabcontent" style="height:485px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                <table id="tblTruckLedgerSummary" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager2" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <div id="divLedgerTable3" class="tabcontent" style="height:485px;padding:0px 0px 0px 0px;">
            <div class="jqGrid" style="padding-left:0px;padding-right:0px;width:100%;overflow:scroll;">
                <table id="tblstok" class="scroll" cellpadding="0" cellspacing="0" style="border-collapse:unset;margin-top:0px;"></table>
                <div id="pager3" style="height:32px;width:100%;"></div>
            </div>
        </div>
        <script>

            function openTab(evt, tabName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(tabName).style.display = "block";
                evt.currentTarget.className += " active";
                if (tabName == "divLedgerTable1")
                {
                    $('#tblDetails').jqGrid('clearGridData');
                    $("#tblDetails").jqGrid("GridUnload");
                    $('#tblDetails').trigger('reloadGrid');

                    $('#tblTruckLedgerSummary').jqGrid('clearGridData');
                    $("#tblTruckLedgerSummary").jqGrid("GridUnload");
                    $('#tblTruckLedgerSummary').trigger('reloadGrid');

                    GridReload("Due");
                }
                else if (tabName == "divLedgerTable2")
                {
                    $('#tblDetails').jqGrid('clearGridData');
                    $("#tblDetails").jqGrid("GridUnload");
                    $('#tblDetails').trigger('reloadGrid');

                    $('#tblTruckLedgerSummary').jqGrid('clearGridData');
                    $("#tblTruckLedgerSummary").jqGrid("GridUnload");
                    $('#tblTruckLedgerSummary').trigger('reloadGrid');

                    GridReloadLicence();
                }
            }
            document.getElementById("Details").click();

            function ParameterReset() {
                var url = '@Url.Action("ParameterReset")';
                var ModelData = {};
                var DTO = { Model: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        var AttachDoc = $("#ParameterDiv");
                        AttachDoc.html('');
                        AttachDoc.html(data.Html);
                    },
                });
            }
        </script>
    </div>
</section>

<div id="myfooter" class="footer-section" style="position:fixed;background-color:rgb(235, 235, 235);padding:2px;color:unset;height:30px;border:solid 1px black;">
    <center><label class="col-sm-12 control-label" style="padding-top:2px;color:black;">ALT AIR-3.0, Shruham Software</label></center>

</div>

<div class="modal fade" id="Optionsmodal" style="z-index:auto;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-sm modal-xl" role="document" style="width: 70%;margin: auto;margin-top: 7%;">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <div class="col-md-4">
                </div>
                <div class="col-md-3">
                    <h4 class="modal-title">
                        <b>Report Query Options</b>
                    </h4>
                </div>
            </div>
            <div class="modal-body">
                <div class="grid" id="FormatTable" style="max-height:350px;min-height:350px; width:100%;overflow:auto;">
                    <div id="" class="" style="width:100%;">
                        <div class="col-md-12" id="ParameterDiv">
                            @Html.Partial("_OptionsView", Model)
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                <button class="btn btn-danger" style="float:left; font-size: 13px;padding:3px 12px;" id="btnReset">Reset</button>
                <button class="btn btn-warning" style="float:left;font-size: 13px;padding:3px 12px;" id="btnopnFormat" data-toggle="tooltip" data-placement="top" title="Which Column U Want In The List Page.">Column-View</button>

                <div class="col-sm-offset-1 col-sm-6" style="display:flex;">

                    @Html.DropDownListFor(m => m.ReportName, DropdownHelper.EmptyList(), new { @class = "form-control ReportName", @Name = "ReportName", @Id = "ReportName" })
                    <a onclick="GetSaveParameter();" class="btn btn-warning" style="padding:4px 10px;">
                        <span class="glyphicon glyphicon-refresh"></span>
                    </a>
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="SubmitSaveReport">Save Report</button>
                </div>
                <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-dismiss="modal">GetReport</button>
                <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="example-modal">
    <div id="SaveReportName" class="modal modal-default">
        <div class="modal-dialog" style="width:1000px;">
            <div id="SaveReportNameDiv">
                <div class="modal-body" style="margin-top:4%;">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Save Report Format</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <div class="col-sm-2">
                                    <label class=" ModalLabel  control-label" style="width:auto;">Report Name :</label>
                                </div>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(x => x.ReportName, new { @maxlength = "100", @class = "form-control", @id = "txtReportName", @style = "display: inline-table;float: initial;" })
                                </div>
                            </div>
                            <br />

                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button id="btnDeleteReportParam" class="btn btn-danger" type="button">Delete</button>
                            <button id="btnReportParam" class="btn btn-success" type="button">Update</button>
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="updTfatsearch" class="modal modal-default" style="margin-top:4%;">
        <div class="modal-dialog" style="width:840px;">
            <div id="updTfatsearchDiv">
                @*@Html.Partial("TfatSearchUpdate")*@
            </div>
        </div>
    </div>
</div>


<input type="hidden" id="hdnformatname" />
@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.Vehicle)
@Html.HiddenFor(x => x.Expenses)
@Html.HiddenFor(x => x.ItemGroup)
@Html.HiddenFor(x => x.ItemMaster)
@Html.HiddenFor(x => x.Costcenter)





