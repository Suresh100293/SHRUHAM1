@model ALT_ERP3.Areas.Vehicles.Models.ItemMasterVM
@{
    ViewBag.Title = "SystemFlow";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }
        GetMyFavorites('@Model.ViewDataId');

        @* iX9: Load List for Autocomplete Inputs i.e. ControlType='A' *@
        LoadHSN();
        LoadProductGroup();
        LoadPosting();
        LoadGST();

        $('#AppBranch').val('');
        if ('@Model.AppBranch' != "") {
            $.each('@Model.AppBranch'.split(','), function (idx, val) {
                $(".AppBranchL option[value='" + val + "']").attr("selected", true);
            });
            $('#AppBranch').val('@Model.AppBranch');
        }
        $(".AppBranchL").change(function () {
            debugger;
            $('#AppBranch').val('');
            var selected = "";
            $(".AppBranchL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#AppBranch').val(selected);
            return false;
        });

        $('.AppBranchL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Branch',
        })

        @* iX9: Input Contraints to limit the inputs to required Input Type i.e. String, Numeric etc. *@
        $("#Name").constrain({ allow: { regex: "[a-zA-Z0-9()\/:- ]" } });

        $("#Rate").constrain({ allow: { regex: "[0-9.]" } });
        $("#ExpiryDays,#ExpiryKm").constrain({ allow: { regex: "[0-9]" } });
        //$("#TfatCountry_Name").constrain({ allow: { regex: "[a-zA-Z0-9()#!%$*,.\/:-+<>; ]" } });
        //$("#TfatCountry_CountryCode").constrain({ allow: { regex: "[0-9.-]" } });
        //$("#TfatCountry_CurrName").constrain({ allow: { regex: "[0-9.-]" } });
        //$("#TfatCountry_CurrDec").constrain({ allow: { regex: "[0-9.-]" } });
        //$("#TfatCountry_Language").constrain({ allow: { regex: "[0-9.-]" } });
        //$("#TfatCountry_CurrRate").constrain({ allow: { regex: "[0-9.-]" } });

        @* iX9: Executed when Save/Submit button is Pressed *@
        $('#Submit').click(function (event) {
            event.preventDefault();
            if ($("#Name").val() == null || $("#Name").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Item Name is Required..');
                return;
            }
            if ($("#BaseGr").val() == null || $("#BaseGr").val() == 0)
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Product Group is Required..');
                return;
            }
            var url = '@Url.Action("SaveData")';
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["Name"] = $("#Name").val();
            ModelData["Rate"] = $("#Rate").val();
            ModelData["BaseGr"] = $("#BaseGr").val();
            ModelData["Posting"] = $("#Posting").val();
            ModelData["GSTCode"] = $("#GSTCode").val();
            ModelData["HSNCode"] = $("#HSNCode").val();
            ModelData["AppBranch"] = $("#AppBranch").val();
            ModelData["ExpiryDays"] = $("#ExpiryDays").val();
            ModelData["ExpiryKm"] = $("#ExpiryKm").val();
            ModelData["Narr"] = $("#Narr").val();
            ModelData["Active"] = $("#Active").is(":checked");
            ModelData["StockMaintain"] = $("#StockMaintain").is(":checked");
            ModelData["Header"] = '@Model.Header';
            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Success")
                    {
                        if ('@Model.ShortCutKey' == "True") {
                            window.close();
                        }
                        else
                        {
                            window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        }
                    } else {
                        alert(data.Message);
                    }
                },
            });
        });
        $('#Delete').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("DeleteUnitofMeasurementMaster")';
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["Header"] = '@Model.Header';
            ModelData["Mode"] = '@Model.Mode';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Success")
                    {
                        window.location.href = "/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                    } else {
                        alert(data.Message);
                    }
                },
            });
        });
    });
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function LoadHSN() {
        var url = '@Url.Action("GetHSNList")'
        $('#HSNCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.HSNCode', text: '@Model.HSNCodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadProductGroup() {
        var url = '@Url.Action("GetProductGroupList")'
        $('#BaseGr').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BaseGr', text: '@Model.BaseGrName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadPosting() {
        var url = '@Url.Action("GetPostingList")'
        $('#Posting').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Posting', text: '@Model.PostingName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadGST() {
        var url = '@Url.Action("GetGSTList")'
        $('#GSTCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.GSTCode', text: '@Model.GSTCodeName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
</script>
@* iX9: Form Design *@
<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            @if (Model.ShortCutKey)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="CountryMaster" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            @* iX9: -- Code for Header Starts -- *@
            @* iX9: Tab Body Panels *@
            <div class="form-group">
                <label class="col-sm-1 control-label">Code:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Code, new { @maxlength = "10", @class = "form-control", @style = "text-align:right;", @Value = Model.Code, @disabled = "disabled" })
                </div>
                <label class="col-sm-offset-1 col-sm-1 control-label">Name:<span style="color:red;">*</span></label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Name, new { @maxlength = "100", @class = "form-control", @Value = Model.Name })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Group Code:<span style="color:red;">*</span></label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.BaseGr, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.BaseGr })
                </div>
                <label class="col-sm-offset-1 col-sm-1 control-label">Post A/C:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Posting, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Posting })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">GST Code:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.GSTCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.GSTCode })
                </div>
                <label class="col-sm-offset-1 col-sm-1 control-label">HSN Code:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.HSNCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.HSNCode })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Active:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.Active, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Active })
                </div>
                <label class="col-sm-1 control-label">Stock Maintain:</label>
                <div class="col-sm-3">
                    @Html.CheckBoxFor(x => x.StockMaintain, new { @class = "checkbox", @style = "width:20px;", @Value = Model.StockMaintain })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Rate:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Rate, new { @class = "form-control", @style = "text-align:right;", @Value = Model.Rate })
                </div>
                <label class="col-sm-offset-1 col-sm-1 control-label">Expiry Days:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.ExpiryDays, new { @class = "form-control", @style = "text-align:right;", @Value = Model.ExpiryDays })
                </div>
                <label class="col-sm-offset-1 col-sm-1 control-label">Expiry KM:</label>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.ExpiryKm, new { @class = "form-control", @style = "text-align:right;", @Value = Model.ExpiryKm })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Description:</label>
                <div class="col-sm-7">
                    @Html.TextAreaFor(m => m.Narr, new { @class = "form-control", @style = "width:100%;", @Value = Model.Narr, @maxlength = "250" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label">Branch:</label>
                <div class="col-sm-7">
                    @Html.ListBoxFor(x => x.AppBranchL, Model.BranchList, new { @class = "AppBranchL", @id = "AppBranchL" })
                </div>
            </div>

            @* iX9: -- Code for Header Ends -- *@
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Delete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                @if (Model.ShortCutKey)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Vehicles/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>





@Html.HiddenFor(x => x.Controller2)
@Html.HiddenFor(x => x.Header)
@Html.HiddenFor(x => x.OptionCode)
@Html.HiddenFor(x => x.OptionType)
@Html.HiddenFor(x => x.TableName)
@Html.HiddenFor(x => x.Module)
@Html.HiddenFor(x => x.ViewDataId)

@Html.HiddenFor(x => x.AppBranch)
@Html.HiddenFor(x => x.Document)
