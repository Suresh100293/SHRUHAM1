@model ALT_ERP3.Areas.Accounts.Models.MasterVM
@using Common

<link href="~/Content/js/iCheck/skins/minimal/minimal.css" rel="stylesheet" />
<script src="~/Content/js/iCheck/jquery.icheck.js"></script>
<script src="~/Content/js/icheck-init.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        loadAccountOwner();
        loadnatureofpay();
        loadHSN();
        loadOptGstType();
        loadGetGSTItemType();
        loadBankName();
        loadmoreCurrency();
        $('#Form15HDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#Form15HCITDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $("#TDSCode").change(function () {
            GetTDSRate();
        });
    });
    function loadHSN() {
        var url = '@Url.Action("GetHSNList")'
        $('#HSN').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax:
                {
                    url: url,
                    dataType: 'json',
                    quietMillis: 100,
                    enableFiltering: true,
                    allowClear: true,
                    minimumInputLength: 0,
                    multiple: true,
                    width: 300,
                    data: function (term, page) {
                        return {
                            types: ["exercise"],
                            limit: -1,
                            term:
                                term
                        };
                    },
                    results: function (data, page) {
                        clientObj = JSON.stringify(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.Name,
                                    id:
                                        item.Code
                                }
                            })
                        };
                    }
                },
            initSelection: function (element, callback) {
                var data = { id: '@Model.HSN', text: '@Model.HSNName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                GetHSNRate();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadAccountOwner() {
        event.preventDefault();
        var url = '@Url.Action("GetAccountOwner")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: {},
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#AdminUser").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#AdminUser').val('@Model.AdminUser').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };

    function loadmoreCurrency() {
        var url = '@Url.Action("AutoCompleteCurrency")'
        $('#CurrCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.CurrCode', text: '@Model.CurrName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function loadnatureofpay() {
        event.preventDefault();
        var url = '@Url.Action("GetTdsMaster")';
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            data: {},
            success: function (result) {
                //alert(JSON.stringify(result));
                $.each(result, function (i, item) {
                    $("#TDSCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#TDSCode').val('@Model.TDSCode').attr("selected", "selected");
                GetTDSRate();
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;

    };

    function loadOptGstType() {
        var url = '@Url.Action("GetGSTType")'
        $('#OptionGstType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Text,
                                id: item.Value
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.OptionGstType', text: '@Model.OptionGSTName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadBankName() {
        event.preventDefault();
        var url = '@Url.Action("GetBankname")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: { Country: $('#BankName').val() },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#DraweeBank").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#DraweeBank').val('@Model.DraweeBank').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function loadGetGSTItemType() {
        event.preventDefault();
        var url = '@Url.Action("GetGSTItemType")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: {},
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ItemType").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ItemType').val('@Model.ItemType').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function GetTDSRate() {
        var url = '@Url.Action("GetTDSDetails")';
        var ModelData = {};
        ModelData["TDSCode"] = $("#TDSCode").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $("#TDSPercent").val(data.TdsAmtPerc);
            },
        });
    }
    function GetHSNRate() {
        var url = '@Url.Action("GetGSTDetails")';
        var ModelData = {};
        ModelData["HSN"] = $("#HSN").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                $('#IGST').val(data.IGST);
                $('#SGST').val(data.SGST);
                $('#CGST').val(data.CGST);
            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }
</script>

<div class="form-horizontal" id="fOption" role="form" style="margin-top:0%; overflow-x:hidden;">
    <div class="row">
        <div class="col-sm-12" style="padding-left:6px;">
            <div class="col-sm-6">

                <div class="form-group">
                    <label class="col-sm-4 control-label"><b>GST Details:</b></label>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">GST Applicable?:</label>
                    <div class="col-sm-6">
                        @Html.CheckBoxFor(x => x.GstApplicable, new
                   {
                       @class = "checkbox",
                       @id = "GstApplicable",
                       @name = "GstApplicable",
                       @style = "height:16px;width:16px;"
                   })
                    </div>
                </div>
                <div class="form-group hidden">
                    <label class="col-sm-3 control-label">Item Type:</label>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(x => x.ItemType, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "ItemType",
                       @Name = "ItemType"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">HSN:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.HSN, new
                   {
                       @class = "input-large search-query",
                       @style = "width: 100%;height:26px;",
                       @id = "HSN",
                       @name = "HSN"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">GST Rates:</label>
                    <label class="col-sm-1 control-label">IGST:</label>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(x => x.IGST, new
                   {
                       @class = "form-control",
                       @id = "IGST",
                       @name = "IGST",
                       @value = Model.IGST,
                       @disabled = "disabled"
                   })
                    </div>
                    <label class="col-sm-1 control-label">SGST:</label>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(x => x.SGST, new
                   {
                       @class = "form-control",
                       @id = "SGST",
                       @name = "SGST",
                       @value = Model.SGST,
                       @disabled = "disabled"
                   })
                    </div>
                    <label class="col-sm-1 control-label">CGST:</label>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(x => x.CGST, new
                   {
                       @class = "form-control",
                       @id = "CGST",
                       @name = "CGST",
                       @value = Model.CGST,
                       @disabled = "disabled"
                   })
                    </div>
                </div>
                <div class="form-group hidden">
                    <label class="col-sm-3 control-label">GST Type:</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(x => x.OptionGstType, new
                   {
                       @class = "input-large search-query",
                       @id = "OptionGstType",
                       @Name = "OptionGstType",
                       @Style = "width:100%;height:26px;"
                   })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-3 control-label">Default Currency:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.CurrCode, new { @class = "input-large search-query", @Name = "CurrCode", @Id = "CurrCode", @Style = "width:100%;height:26px;" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Bank Name:</label>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(x => x.DraweeBank, DropdownHelper.EmptyList(), new { @class = "form-control", @Id = "DraweeBank", @Name = "DraweeBank" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Bank Account No:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.AcCode, new { @class = "form-control", @Name = "AcCode", @Id = "AcCode", @Value = Model.AcCode })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">RTGS:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.RTGS, new { @class = "form-control", @Name = "RTGS", @Id = "RTGS", @Value = Model.RTGS })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">BSRCode:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.BSRCode, new { @class = "form-control", @Name = "BSRCode", @Id = "BSRCode", @Value = Model.BSRCode })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-3 control-label">ODLimit:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.ODLimit, new { @class = "form-control", @Name = "ODLimit", @Id = "ODLimit", @Value = Model.ODLimit })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label class="col-sm-3 control-label">TDS/TCS Option:</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.CutTDS, new
                   {
                       @id = "CutTDS",
                       @name = "CutTDS",
                       @value = Model.CutTDS,
                       @style = "height:16px;width:16px;"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Nature Of Payment:</label>
                    <div class="col-sm-6">
                        @Html.DropDownListFor(m => m.TDSCode, DropdownHelper.EmptyList(), new
                   {
                       @class = "form-control",
                       @Id = "TDSCode",
                       @Name = "TDSCode"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">TDS (%):</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.TDSPercent, new
                   {
                       @class = "form-control",
                       @id = "TDSPercent",
                       @Name = "TDSPercent",
                       @value = Model.TDSPercent,
                       @disabled = "disabled"
                   })
                    </div>
                </div>
                <div class="form-group hidden">
                    <label class="col-sm-3 control-label">TCS Applicable?:</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.CutTCS, new
                   {
                       @id = "CutTCS",
                       @name = "CutTCS",
                       @value = Model.CutTCS,
                       @style = "height:16px;width:16px;"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Lower/Differ Rate Cert?:</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.IsDifferRate, new
                   {
                       @class = "checkbox",
                       @id = "IsDifferRate",
                       @name = "IsDifferRate",
                       @value = Model.IsDifferRate,
                       @style = "height:16px;width:16px;"
                   })
                    </div>
                    <label class="col-sm-3 control-label">Applicable Rate(%):</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.DifferRate, new
                   {
                       @class = "form-control",
                       @id = "DifferRate",
                       @Name = "DifferRate",
                       @value = Model.DifferRate
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Ass.Officer's Cert.Ref:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(x => x.DifferRateCertNo, new
                   {
                       @class = "form-control",
                       @id = "DifferRateCertNo",
                       @Name = "DifferRateCertNo",
                       @value = Model.DifferRateCertNo
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Form 15H Produced?:</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.IsForm15H, new
                   {
                       @id = "IsForm15H",
                       @name = "IsForm15H",
                       @value = Model.IsForm15H,
                       @style = "height:16px;width:16px;"
                   })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Declaration Date:</label>
                    <div class="col-sm-6">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.TextBoxFor(x => x.StrForm15HDate, new
                       {
                           @type = "text",
                           @class = "form-control",
                           @id = "Form15HDate",
                           @Name = "Form15HDate",
                           @Value = Model.Form15HDate.ToString("dd-MM-yyyy")
                       })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Furnished to CIT Date:</label>
                    <div class="col-sm-6">
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            @Html.TextBoxFor(x => x.StrForm15HCITDate, new
                       {
                           @type = "text",
                           @class = "form-control",
                           @id = "Form15HCITDate",
                           @Name = "Form15HCITDate",
                           @Value = Model.Form15HCITDate.ToString("dd-MM-yyyy")
                       })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
