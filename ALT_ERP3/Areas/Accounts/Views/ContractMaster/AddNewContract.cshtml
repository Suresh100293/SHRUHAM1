@model ALT_ERP3.Areas.Accounts.Models.ContractMasterVM
@using Common;
<script>
    $(document).ready(function () {

        debugger;
        if ('@Model.Mode' == "Add") {
            $(".slabwisediv").show();
            $("#ChargeOfChrgWT").prop('checked', true);
            $("#ChargeType").prop('checked', true);
            $('#ShowChargeType').show();
            $('#ShowItemType').hide();
        }
        else
        {
            if ('@Model.contract.ChargeOfChrgWT' =="True") {
                $("#ChargeOfChrgWT").prop('checked', true);
                $("#ChargeOfActWT").prop('checked', false);

            } else {
                $("#ChargeOfActWT").prop('checked', true);
                $("#ChargeOfChrgWT").prop('checked', false);
            }
            $(".slabwisediv").show();

            if ('@Model.contract.ContractType' =="ChargeType") {
                
                if ('@Model.contract.Service' == "100001")
                {
                    $("#lblKG").html("Carton");
                    $("#lblFromWT").html("From Carton:<span class='red'>*</span>");
                    $("#lblToWT").html("To Carton:<span class='red'>*</span>");
                }
                else
                {
                    $("#lblKG").html("KG");
                    $("#lblFromWT").html("From WT:<span class='red'>*</span>");
                    $("#lblToWT").html("To WT:<span class='red'>*</span>");
                }
                $('#ShowChargeType').show();
                $('#ShowItemType').hide();
                $("#ChargeType").prop('checked', true);
                $("#ItemType").prop('checked', false);
            }
            else
            {
                $("#lblKG").html("KG");
                $("#lblFromWT").html("From WT:<span class='red'>*</span>");
                $("#lblToWT").html("To WT:<span class='red'>*</span>");
                $('#ShowChargeType').hide();
                $('#ShowItemType').show();
                $("#ChargeType").prop('checked', false);
                $("#ItemType").prop('checked', true);
            }
            if ('@Model.contract.TypeOfChrg'=="KG") {
                $("#KG").prop('checked', true);
                $("#Slab").prop('checked', false);
                $("#Fix").prop('checked', false);
            } else if ('@Model.contract.TypeOfChrg' =="Slab")  {
                $("#Slab").prop('checked', true);
                $("#KG").prop('checked', false);
                $("#Fix").prop('checked', false);
            }
            else
            {
                $("#Slab").prop('checked', false);
                $("#KG").prop('checked', false);
                $("#Fix").prop('checked', true);
                $('#FromWT').prop("disabled", true);
                $('#ToWT').prop("disabled", true);
            }

        }
        $("#txtf_F001").prop("disabled", true);
        $("#txtT_F001").prop("disabled", true);
        $(".txtfvalue").constrain({ allow: { regex: "[0-9.]" } });
        $(".txtftype").constrain({ allow: { regex: "[1-4]" } });

        $("input[name$='TypeOfChrg']").change(function () {

            var GetChrgesName = this.value;
            if (GetChrgesName == "Fix") {
                $('#FromWT').prop("disabled", true);
                $('#ToWT').prop("disabled", true);
            }
            else {
                $('#FromWT').prop("disabled", false);
                $('#ToWT').prop("disabled", false);
            }
        });

        $("#ChargeOfChrgWT").change(function (event) {
            event.preventDefault();
            $("#ChargeOfActWT").prop('checked', false);
        });
        $("#ChargeOfActWT").change(function (event) {
            event.preventDefault();
            $("#ChargeOfChrgWT").prop('checked', false);
        });
        $("input[name$='ContractType']").change(function () {

            var GetChrgesName = this.value;
            if (GetChrgesName == "ChargeType") {
                $('#ShowChargeType').show();
                $('#ShowItemType').hide();
            }
            else  {
                $('#ShowChargeType').hide();
                $('#ShowItemType').show();
            }
        });
        $("#Service").change(function (event) {
            event.preventDefault();

            //if (($("#Service option:selected").text().toString().toUpperCase().indexOf("CART") != -1) || ($("#Service option:selected").text().toString().toUpperCase().indexOf("WEIGHT") != -1)   ) {
            //    $(".slabwisediv").show();
            //} else {
            //    $(".slabwisediv").hide();
            //}
            if ($("#Service").val() == "100001") {
                $("#lblKG").html("Carton");
                $("#lblFromWT").html("From Carton:<span class='red'>*</span>");
                $("#lblToWT").html("To Carton:<span class='red'>*</span>");
            } else {
                $("#lblKG").html("KG");
                $("#lblFromWT").html("From WT:<span class='red'>*</span>");
                $("#lblToWT").html("To WT:<span class='red'>*</span>");
            }
        });
        $("#ItemService").change(function (event) {
            event.preventDefault();

            
            
                $("#lblKG").html("KG");
                $("#lblFromWT").html("From WT:<span class='red'>*</span>");
                $("#lblToWT").html("To WT:<span class='red'>*</span>");
            
        });

        $("#Rate").blur(function (event) {
            event.preventDefault();

            $("#txtf_F001").val($("#Rate").val());


            if ($("input[name=ContractType]:checked").val() == "ChargeType")
            {
                if ($("#Service").val() == "100001")
                {
                    if ($("input[name=TypeOfChrg]:checked").val() == "KG") {
                        $("#txtT_F001").val("3");
                    } else {
                        $("#txtT_F001").val("4");
                    }
                }
                else
                {
                    if ($("input[name=TypeOfChrg]:checked").val() == "KG") {
                        $("#txtT_F001").val("1");
                    } else {
                        $("#txtT_F001").val("4");
                    }
                }
            }
            else
            {
                if ($("input[name=TypeOfChrg]:checked").val() == "KG")
                {
                    $("#txtT_F001").val("1");
                } else {
                    $("#txtT_F001").val("4");
                }
            } 

            
        });



        $("#InvNumber").blur(function (event) {
            event.preventDefault();
            if ($('#InvNumber').val() == '' || $('#InvNumber').val() == null) {
                alert('Enter Invoice Number')
                return;
            }
            var ModelData = {};
            ModelData["InvNumber"] = $('#InvNumber').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("CheckInvoiceNo")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforesend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message)
                        $('#InvNumber').val("");
                        //$('#InvNumber').focus();
                        return;
                    }
                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });

        $("#btnAddSave").click(function (event) {
            event.preventDefault();
            var Status = true;
            if ($("input[name=ContractType]:checked").val() == "ChargeType") {
                if ($('#Service').val() == '' || $('#Service').val() == null) {
                    alert('Select Service');
                    Status = false;
                    return;
                }
            } else {
                if ($('#ItemService').val() == '' || $('#ItemService').val() == null) {
                    alert('Select Service');
                    Status = false;
                    return;
                }
            }
            
            


            if ($("input[name=TypeOfChrg]:checked").val() == "KG" || $("input[name=TypeOfChrg]:checked").val() == "Slab") {
                if ($('#FromWT').val() == '' || $('#FromWT').val() == null) {
                    alert('Enter FromWT');
                    Status = false;
                    return;
                }
                if ($('#ToWT').val() == '' || $('#ToWT').val() == null || $('#ToWT').val() == '0') {
                    alert('Enter ToWT');
                    Status = false;
                    return;
                }

                if (!(parseInt($('#ToWT').val()) >= parseInt($('#FromWT').val()))) {
                    alert('To WT always Grater Than From WT');
                    Status = false;
                    return;
                }

            }
            if ($('#Rate').val() == '0' || $('#Rate').val() == '' || $('#Rate').val() == null) {
                alert('Enter Rate');
                Status = false;
                return;
            }
            if ($("#ChargeOfChrgWT").prop('checked') && $("#ChargeOfActWT").prop('checked')) {
                alert('Select Charge On');
                Status = false;
                return;
            }

            $('#tabledata tbody tr').each(function () {
                debugger;
                var tds = $(this).find('td');
                if (tds.find(".txtfvalue").val() != '' && tds.find(".txtfvalue").val() != '0' && tds.find(".txtfvalue").val() != null) {
                    if (tds.find(".txtftype").val() == "" || tds.find(".txtftype").val()==null) {
                        alert(tds.eq(0).text() + '  Type Required');
                        Status = false;
                        return false;
                    }
                }
            });




            if (Status) {
                var ModelData = {};
                var ModelData = {};
                var contract = {};
                var ChargeList = [];
                $('#tabledata tbody tr').each(function () {
                    debugger;
                    var tds = $(this).find('td');
                    var myDets = {
                        Code: tds.eq(0).text(),
                        AddLess: tds.eq(1).text(),
                        Val1: tds.find(".txtfvalue").val(),
                        Fld: tds.eq(3).text(),
                        Type: tds.find(".txtftype").val(),
                    }
                    ChargeList.push(myDets);
                });
                contract["Charges"] = ChargeList;
                if ($("input[name=ContractType]:checked").val() == "ChargeType") {
                    contract["Service"] = $('#Service').val();
                } else {
                    contract["Service"] = $('#ItemService').val();
                }
                
                contract["ContractType"] = $("input[name=ContractType]:checked").val();
                contract["FromWT"] = $('#FromWT').val();
                contract["ToWT"] = $('#ToWT').val();
                contract["Rate"] = $('#Rate').val();
                contract["ChargeOfChrgWT"] = $("#ChargeOfChrgWT").is(":checked");
                contract["ChargeOfActWT"] = $("#ChargeOfActWT").is(":checked");
                contract["TypeOfChrg"] = $("input[name=TypeOfChrg]:checked").val()
                contract["Sno"] = $('#Sno').val();
                contract["Mode"] = $("#hdnSessionFlag").val();
                contract["UniqueKey"] = '@Model.contract.UniqueKey';
                ModelData["contract"] = contract;
                ModelData["Mode"] = $("#hdnSessionFlag").val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("AddEditSelectedLedger")';

                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforesend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        debugger;
                        $('.spinner').hide();
                        if (data.Status == "CancelError") {
                            alert(data.Message)
                            return;
                        }

                        $('#ErrorMessage1').hide();
                        $('#addnewledger').modal('hide');
                        $('#ContractListDiv').html(data.Html);
                    },
                    error: function () {
                        $('.spinner').hide();
                        alert("error occured while processing your request.");
                    }
                });

            }
        });

        $('#addCurrName').change(function () {
            var url = '@Url.Action("GetCurrencyRate")?Code=' + $('#addCurrName').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    if (data == parseFloat(0)) {
                        $('#addCurrRate').val(1)
                    }
                    else {
                        var currRateI = parseFloat(data);
                        $('#addCurrRate').val(currRateI.toFixed(2));
                    }

                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

    })
</script>
<style>
    .red{color:red;}
</style>
<div class="modal-content">
    <div class="modal-header" style="background-color:#cccccc">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
        <h4 class="modal-title">@Model.Mode Record</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal" id="ProListupdate">
            <div class="form-group">
                <div class="col-sm-2 control-label">Contract Type<span class="red">*</span></div>
                <div class="col-sm-3" style="display: flex;">
                    <input type="radio" class="form-control" name="ContractType" id="ChargeType" value="ChargeType" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:red;"> Charge Wise</label>
                    <input type="radio" class="form-control" name="ContractType" id="ItemType" value="ItemType" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:green;"> Item Wise</label>
                </div>
                <div class="col-sm-offset-1 col-sm-6 control-label" style="color:blue;">Select In Customer Master For Execute ChargeType Wise Or Item Wise</div>
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">Services<span class="red">*</span></div>
                <div class="col-sm-3" id="ShowChargeType">
                    @Html.DropDownListFor(m => m.contract.Service, Model.contract.ServiceList, "--Select Service--", new { @class = "form-control", @id = "Service", @name = "Service", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>
                <div class="col-sm-3 " id="ShowItemType">
                    @Html.DropDownListFor(m => m.contract.Service, Model.contract.ItemListList, "--Select Service--", new { @class = "form-control", @id = "ItemService", @name = "Service", @style = "border-color:black;height:24px;padding:2px 4px;" })
                </div>



                <div class="col-sm-offset-1 col-sm-1 control-label">SR NO</div>
                <div class="col-sm-1">
                    @Html.TextBoxFor(x => x.contract.Sno, new { @class = "form-control", @id = "Sno", @name = "Sno", @style = "width:100%;text-align:right", @disabled = "disabled" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">
                    <div class="form-group slabwisediv">
                        <div class="col-sm-4 control-label">Type Of Charges</div>
                        <div class="col-sm-4" style="display:flex;margin-left:-6px;">
                            <input type="radio" class="form-control" name="TypeOfChrg" id="KG" value="KG" style="height:20px;width:35px;" checked /><label class=" bold control-label" id="lblKG"> KG</label>
                            <input type="radio" class="form-control" name="TypeOfChrg" id="Slab" value="Slab" style="height:20px;width:35px;" /><label class=" bold control-label"> Slab</label>
                            <input type="radio" class="form-control" name="TypeOfChrg" id="Fix" value="Fix" style="height:20px;width:35px;" /><label class=" bold control-label"> Fixed</label>
                        </div>
                    </div>
                    <div class="form-group slabwisediv">
                        <label class="col-sm-2 control-label" id="lblFromWT" style="width:auto;">From WT:<span class="red">*</span></label>
                        <div class="col-sm-offset-2 col-sm-3">
                            @Html.TextBoxFor(x => x.contract.FromWT, new { @class = "form-control", @id = "FromWT", @name = "FromWT", @style = "text-align:right" })
                        </div>

                    </div>
                    <div class="form-group slabwisediv">
                        <label class="col-sm-2 control-label" id="lblToWT">To WT:<span class="red">*</span></label>
                        <div class="col-sm-offset-2 col-sm-3">
                            @Html.TextBoxFor(x => x.contract.ToWT, new { @class = "form-control", @id = "ToWT", @name = "ToWT", @style = "text-align:right" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Rate:<span class="red">*</span></label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(x => x.contract.Rate, new { @class = "form-control", @id = "Rate", @name = "Rate", @style = "text-align:right" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Charge On Charged WT:</label>
                        <div class="col-sm-3">
                            @Html.RadioButtonFor(x => x.contract.ChargeOfChrgWT, "ChrgWT", new { @id = "ChargeOfChrgWT", @name = "ChargeOfChrgWT", @style = "height:20px;width:20px;", @Value = Model.contract.ChargeOfChrgWT })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Charge On Actual WT:</label>
                        <div class="col-sm-3">
                            @Html.RadioButtonFor(x => x.contract.ChargeOfActWT, "ActWT", new { @id = "ChargeOfActWT", @name = "ChargeOfActWT", @style = "height:20px;width:20px;", @Value = Model.contract.ChargeOfActWT })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6" style="min-height:410px;max-height:410px;overflow:auto;">
                    <table id="tabledata" class="zui-table" style="width:100%">
                        <thead>
                            <tr role="row" style="font-family:Tahoma;font-size:9pt;width:100%">
                                <th style="width:65%">Charges Name</th>
                                <th style="width:20%">Amount</th>
                                <th style="width:15%">Type</th>
                            </tr>

                        </thead>

                        <tbody>
                            @if (Model.contract.Charges != null)
                            {
                                foreach (var item in @Model.contract.Charges.ToList())
                                {
                                    <tr id="datacharge" style="font-family:Tahoma;font-size:9pt;">
                                        <td style="vertical-align:inherit;">@item.Code</td>
                                        <td hidden="hidden">@item.AddLess</td>
                                        <td><center><input type="text" id="txtf_@item.Fld" alt="@item.Fld" value="@item.Val1" class="txtfvalue form-control" style="text-align:right;" /></center></td>
                                        @*<td hidden="hidden">@item.ChgPostCode</td>*@
                                        <td hidden="hidden">@item.Fld</td>
                                        <td><center><input type="text" id="txtT_@item.Fld" maxlength="1" alt="@item.Fld" value="@item.Type" class="txtftype form-control" style="text-align:right;" /></center></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer" style="background-color:#cccccc">
        <label class=" control-label" style="color:red;float:left;margin-right: 10px;">PreFix For Charge Type :</label>
        <label class=" control-label" style="color:blue;float:left;">1-KG 2-MT 3-Cartoon 4-Fixed</label>
        <button type="button" class="btn btn-success" id="btnAddSave">Save</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>
</div>
@Html.HiddenFor(x => x.Mode, new { @Id = "hdnSessionFlag" })
@Html.HiddenFor(x => x.contract.Sno, new { @Id = "hdnledtEmpID" })


