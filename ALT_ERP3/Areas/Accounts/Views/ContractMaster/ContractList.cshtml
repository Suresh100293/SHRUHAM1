@model ALT_ERP3.Areas.Accounts.Models.ContractMasterVM
@using Common;

<style>
    .main-table {
        border: solid 1px;
        border-color: dimgray;
        border-collapse: separate;
        border-spacing: inherit;
    }

        .main-table thead th {
            background: linear-gradient(white,lightgray);
            border-right: solid 1px dimgray;
            border-bottom: solid 1px dimgray;
            color: black;
            text-align: center;
            font-family: Verdana;
            font-size: 9pt;
            font-weight: normal;
        }

        .main-table tbody td {
            border-right: solid 1px dimgray;
            border-top: solid 1px dimgray;
            color: black;
            /*padding: 5px;*/
            font-family: Verdana;
            font-size: 9pt;
        }

        .main-table tbody tr {
            font-family: Verdana;
            font-size: 9pt;
        }

    .table-scroll {
        position: relative;
        overflow: hidden;
        /*border: 1px solid #000;*/
    }

    .table-wrap {
        width: 100%;
        overflow: auto;
    }

    .table-scroll table {
        width: 100%;
        margin: auto;
        border-collapse: separate;
        border-spacing: 0;
    }

    .table-scroll th, .table-scroll td {
        padding: 5px 10px;
        /*border: 1px solid #000;*/
        background: #fff;
        white-space: nowrap;
        vertical-align: top;
    }

    .table-scroll thead, .table-scroll tfoot {
        background: #f9f9f9;
    }

    .clone {
        position: absolute;
        top: 0;
        left: 0;
        pointer-events: none;
    }

        .clone th, .clone td {
            visibility: hidden
        }

        .clone td, .clone th {
            border-color: transparent;
        }

        .clone tbody th {
            visibility: visible;
            color: red;
        }

        .clone .fixed-side th {
            /*border: 1px solid #000;*/
            background: linear-gradient(white,lightgray);
            border-right: solid 1px dimgray;
            border-bottom: solid 1px dimgray;
            color: black;
            text-align: center;
            font-family: Verdana;
            font-size: 9pt;
            font-weight: normal;
        }

        .clone .fixed-side td {
            border-right: solid 1px dimgray;
            border-top: solid 1px dimgray;
            color: black;
            padding: 5px;
            font-family: Verdana;
            font-size: 9pt;
        }

        .clone .fixed-side {
            visibility: visible;
        }

        .clone thead, .clone tfoot {
            background: transparent;
        }
</style>
<div class="grid" id="SelectedledgerTable" style="max-height:455px;min-height:455px; min-width:100%;max-width:100%; overflow: scroll;">

    <div id="table-scroll" class="table-scroll">
        <div class="table-wrap">
            <table class="main-table">
                <thead>
                    <tr>
                        <th class="fixed-side" scope="col" rowspan="2"><button type="button" id="btnadddata" class="btn btn-primary btn-sm" title="Add" style="margin-top:0%;width:100%;height:30px;border:1px solid black"><i class="fa fa-plus" style="color:black;"></i></button></th>
                        <th class="fixed-side" scope="col">Service Type.</th>
                        <th class="fixed-side" scope="col">Sr.</th>
                        <th class="fixed-side" scope="col">Type Of Charges</th>
                        <th class="fixed-side" scope="col">WT From</th>
                        <th class="fixed-side" scope="col">WT To</th>
                        <th class="fixed-side" scope="col">Rate</th>
                        @{
                            var i = 0;
                            foreach (var item in Model.ChargesHead)
                            {
                                <th colspan="2" scope="col">@($"{"Charge"} {++i}")</th>
                            }
                        }
                    </tr>
                    <tr>
                        <th class="fixed-side" scope="col"></th>
                        <th class="fixed-side" scope="col"></th>
                        <th class="fixed-side" scope="col"></th>
                        <th class="fixed-side" scope="col"></th>
                        <th class="fixed-side" scope="col"></th>
                        <th class="fixed-side" scope="col"></th>
                        @foreach (var item in Model.ChargesHead)
                        {
                            <th scope="col">@item.Code</th>
                            <th scope="col">Per</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @*<tr>
                            <td class="fixed-side" rowspan="2" style="width:6%">
                                <button type="button" action="EditLedger" class="btn btn-warning btn-sm" value="dfs" title="Edit"><i class="fa fa-edit"></i></button>
                                <button type="button" action="DeleteLedger" class="btn btn-danger btn-sm" value="sf" title="Delete"><i class="fa fa-trash-o"></i></button>
                            </td>
                            <td class="fixed-side">Service Type.</td>
                            <td class="fixed-side">Sr.</td>
                            <td class="fixed-side">Type Of Charges</td>
                            <td class="fixed-side">WT From</td>
                            <td class="fixed-side">WT To</td>
                            <td class="fixed-side">Rate</td>
                            @foreach (var item in Model.Charges)
                            {
                                <td>@item.Code</td>
                                <td>Per</td>
                            }

                        </tr>*@
                    @if (Model.ContractList != null)
                    {
                        foreach (var item in @Model.ContractList.ToList())
                        {
                            <tr role="row" style="font-family:Tahoma;font-size:9pt;">
                                <td class="fixed-side">
                                    <button type="button" action="EditLedger" class="btn btn-warning btn-sm" value="@item.UniqueKey" title="Edit"><i class="fa fa-edit"></i></button>
                                    <button type="button" action="DeleteLedger" class="btn btn-danger btn-sm" value="@item.UniqueKey" title="Delete"><i class="fa fa-trash-o"></i></button>
                                </td>
                                <td class="fixed-side">@item.ServiceN</td>
                                <td class="fixed-side">@item.Sno</td>
                                <td class="fixed-side">@item.TypeOfChrg</td>
                                <td class="fixed-side">@item.FromWT</td>
                                <td class="fixed-side" style="text-align:right">@item.ToWT</td>
                                <td class="fixed-side" style="text-align:right">@item.Rate</td>
                                @foreach (var item1 in item.Charges)
                                {
                                    <td>@item1.Val1</td>
                                    <td>@item1.Type</td>
                                }

                            </tr>
                        }
                    }


                </tbody>
            </table>
        </div>
    </div>

</div>
<div>

</div>


<div class="example-modal">
    <div id="addnewledger" class="modal modal-default">
        <div class="modal-dialog modal-lg" style="width:1040px;overflow:unset">
            <div id="AddnNewLedgerList">
                @Html.Partial("AddNewContract")
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        jQuery(".main-table").clone(true).appendTo('#table-scroll').addClass('clone');



        $("#btnadddata").click(function (event) {
            debugger;
            if ($("#Customer").val() == '' || $("#Customer").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Customer is Required..');
                return;
            }
            if ($("#FromBranch").val() == '' || $("#FromBranch").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From-Branch is Required..');
                return;
            }
            if ($("#ToBranch").val() == '' || $("#ToBranch").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To-Branch is Required..');
                return;
            }
            if ($("#FromDate").val() == '' || $("#FromDate").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From-Date is Required..');
                return;
            }
            if ($("#ToDate").val() == '' || $("#ToDate").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To-Date is Required..');
                return;
            }




            event.preventDefault();
            $('#ErrorMessage').hide();
            var ModelData = {};

            ModelData["Customer"] = $("#Customer").val();
            ModelData["FromBranch"] = $("#FromBranch").val();
            ModelData["ToBranch"] = $("#ToBranch").val();
            ModelData["FromDate"] = $("#FromDate").val();
            ModelData["ToDate"] = $("#ToDate").val();
            ModelData["Document"] = '@Model.Document';
            if ($("#MA").prop("checked")) {
                ModelData["CustomerType"] ="MA";
            } else {
                ModelData["CustomerType"] = "CU";
            }
            

            ModelData["Mode"] = "Add";
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetBreakLedger")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    if (data.Status == "CancelError") {
                        alert(data.Message)
                        return;
                    } else {
                        $('#addnewledger').modal('show');
                        var LoadDownLoadFiles = $("#AddnNewLedgerList");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                    }

                    //$('#AddnNewLedgerList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });


        $('button[action|="EditLedger"]').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            var contract = {};
            contract["UniqueKey"] = $(this).val();
            contract["Mode"] = "Edit";
            ModelData["Mode"] = "Edit";
            ModelData["contract"] = contract;
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetBreakLedger")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    debugger;
                    $('.spinner').hide();
                    if (data.Status == "CancelError") {
                        alert(data.Message)
                        return;
                    } else {
                        $('#addnewledger').modal('show');
                        $('#AddnNewLedgerList').html(data.Html);
                    }
                    
                    
                },
                error: function (err) {
                    alert(JSON.stringify(err))
                    alert("Error occured while processing your request.");
                }
            });
        });


        $('button[action|="DeleteLedger"]').click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            var contract = {};
            contract["UniqueKey"] = $(this).val();
            ModelData["contract"] = contract;
            var DTO = { Model: ModelData };
            var url = '@Url.Action("DeleteLedger")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#ContractListDiv').html(data.Html);
                },
                error: function (err) {
                    alert(JSON.stringify(err))
                    alert("Error occured while processing your request.");
                }
            });
        });
    })
</script>

