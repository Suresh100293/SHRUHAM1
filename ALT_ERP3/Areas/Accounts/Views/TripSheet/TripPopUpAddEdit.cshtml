@model ALT_ERP3.Areas.Accounts.Models.TripSheetModel
@using Common

<div class="modal-content">
    <div class="modal-header" style="background-color:#cccccc">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
        <h4 class="modal-title">@Model.SessionFlag Record</h4>
    </div>
    <div class="modal-body" style="height:470px;padding-left:0px;">
        <div class="form-horizontal" id="ledgerupdate" style="margin-left:30px;">
            <div id="ErrorMessage1" name="ErrorMessage1" class="alert alert-danger" style="display: none; padding:3px;"></div>
            <div class="form-group">
                <div class="col-sm-1 control-label">Related To:</div>
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.RelateTo, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "RelateTo", @Name = "RelateTo" })
                </div>

                <div class="col-sm-1 control-label">Trip Charges:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.ChargeTrip, new { @class = "form-control", @id = "ChargeTrip", @Name = "ChargeTrip", @style = "width:100%;", @Value = Model.ChargeTrip })

                </div>
                <div class="col-sm-1 control-label">Rate:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.Rate, new { @class = "form-control", @id = "Rate", @Name = "Rate", @type = "number", @Value = Model.Rate, @style = "text-align:right;width:100%;" })

                </div>
                <div class="col-sm-1 control-label">Chargeable Kr:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.ChargeKM, new { @class = "form-control", @id = "ChargeKM", @Name = "ChargeKM", @style = "width:100%;", @Value = Model.ChargeKM })

                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-1 control-label">Trip Start:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.StartDateStr, new { @class = "form-control", @id = "StartDateStr", @Name = "StartDateStr", @style = "width:100%;", @Value = Model.StartDate.ToString("dd-MM-yyyy") })
                </div>

                <div class="col-sm-1 control-label">Start KMS:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.StartKM, new { @class = "form-control", @id = "StartKM", @Name = "StartKM", @style = "width:100%;", @Value = Model.StartKM })

                </div>
                <div class="col-sm-1 control-label">Trip End:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.EndDateStr, new { @class = "form-control", @id = "EndDateStr", @Name = "EndDateStr", @style = "width:100%;", @Value = Model.EndDate.ToString("dd-MM-yyyy") })
                </div>
                <div class="col-sm-1 control-label">End KMS:</div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.EndKM, new { @class = "form-control", @id = "EndKM", @Name = "EndKM", @Value = Model.EndKM })
                </div>

            </div>


            <table style="border:solid;">
                <tbody style="width:100%;">
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div class="col-sm-1 control-label" style="padding-left:0px;">From:</div>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(x => x.FromLocation, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "FromLocation", @Name = "FromLocation", @style = "width:100%;", @Value = Model.FromLocation })

                            </div>

                            <div class="col-sm-1 control-label">To:</div>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(x => x.ToLocation, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "ToLocation", @Name = "ToLocation", @style = "width:100%;", @Value = Model.ToLocation })

                            </div>
                        </td>
                        <td rowspan="4" style="width:50%">
                            <div id="divadvancelst" style="min-height:250px;max-height: 250px; overflow: scroll;">
                                @Html.Partial("AdvanceList", Model)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div class="col-sm-2 control-label" style="padding-left:0px;">Charges:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.ChargesAcc, new { @class = "input-large-query", @id = "ChargesAcc", @Name = "ChargesAcc", @style = "width:100%;" })

                            </div>
                            <div class="col-sm-2 control-label">Amount:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @id = "LCAmt", @Name = "LCAmt", @type = "number", @Value = Model.Amt, @style = "text-align:right;" })

                            </div>
                        </td>

                    </tr>
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div class="col-sm-2 control-label" style="padding-left:0px;">Description:</div>
                            <div class="col-sm-5">
                                @Html.TextAreaFor(x => x.Descr, new { @class = "form-control", @id = "LCDescr", @Name = "LCDescr", @style = "width:100%;", @Value = Model.Descr })

                            </div>

                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnaddLCDetails">Add</button>
                        </td>

                    </tr>
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div id="lcdetailsdiv" style="min-height:140px;max-height: 140px; overflow: scroll;">
                                @Html.Partial("LCDetails", Model)
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
            
            <table style="border:solid;">
                <tbody style="width:100%;">
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div class="col-sm-1 control-label" style="padding-left:0px;">Add Remark:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.AddNarr, new { @class = "form-control", @id = "AddNarr", @Name = "AddNarr", @style = "width:100%;" })
                            </div>
                            <div class="col-sm-1 control-label">Amount:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.AddAmt, new { @class = "form-control", @id = "AddAmt", @Name = "AddAmt", @type = "number", @style = "text-align:right;width:100;" })
                            </div>
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnaddNarrList">Add</button>
                        </td>
                        <td style="width:50%;border-right:solid;">

                            <div class="col-sm-1 control-label" style="padding-left:0px;">Less Remark:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.LessNarr, new { @class = "form-control", @id = "LessNarr", @Name = "LessNarr", @style = "width:100%;" })
                            </div>
                            <div class="col-sm-1 control-label">Amount:</div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(x => x.LessAmt, new { @class = "form-control", @id = "LessAmt", @Name = "LessAmt", @type = "number", @style = "text-align:right;width:100;" })
                            </div>
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnlessNarrList">Add</button>
                        </td>
                    </tr>
                    <tr>
                        <td style="width:50%;border-right:solid;">
                            <div id="divAddNarrList" style="min-height:80px;max-height: 80px; overflow: scroll;">
                                @Html.Partial("AddNarrList", Model)
                            </div>
                        </td>
                        <td style="width:50%;border-right:solid;">
                            <div id="divLessNarrList" style="min-height:80px;max-height: 80px; overflow: scroll;">
                                @Html.Partial("LessNarrList", Model)
                            </div>

                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="modal-footer" style="background-color:#cccccc">
        <div class="col-sm-6">
            <div class="col-sm-1 control-label" style="padding-left:0px;">Amount:</div>
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.TripFinalAmt, new { @class = "form-control", @id = "TripFinalAmt", @Name = "TripFinalAmt", @style = "width:100%;" })
            </div>
        </div>
        @if (Model.SessionFlag == "Edit")
        {
            <button type="button" class="btn btn-success" id="btnAddTripDetList">Update</button>
        }
        else
        {
            <button type="button" class="btn btn-success" id="btnAddTripDetList">Save</button>
        }
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>
</div>
@Html.HiddenFor(x => x.tempid, new { @id = "hdntempid" })
@Html.HiddenFor(x => x.SessionFlag, new { @id = "hdnSessionFlag" })
@Html.HiddenFor(x => x.hdnTripDetsSaved, new { @Id = "hdnTripDetsSaved" })

<script>
    $(document).ready(function () {
        $('#LCDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $('#StartDateStr').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        $('#EndDateStr').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });

        $('#btnAddTripDetList').click(function (event) {
            event.preventDefault();
            $('#hdnTripDetsSaved').val('Y');
            $('#addtripdiv').modal('hide');
        })

        $('#btnaddLCDetails').click(function (event) {
            event.preventDefault();
            var myTableArray = [];
            $('#tbllcdetails tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets2 = { tempid: tds.eq(0).text(), LCDate: tds.eq(1).text(), LCNo: tds.eq(2).text(), FromLocation: tds.eq(3).text(), ToLocation: tds.eq(4).text(), FromName: tds.eq(5).text(), ToName: tds.eq(6).text(), ChargesAcc: tds.eq(7).text(), ChargesAccName: tds.eq(8).text(), Amt: tds.eq(9).text(), Descr: tds.eq(10).text() }
                myTableArray.push(myDets2);
            })
            var mAddAmt = 0;
            $('#tbladdnarrlist tbody tr').each(function () {
                var tds = $(this).find('td');
                var AddAmt = parseFloat(tds.eq(2).text());
                mAddAmt = mAddAmt + AddAmt;
            })

            var mlESSAmt = 0;
            $('#tbllessnarrlist tbody tr').each(function () {
                var tds = $(this).find('td');
                var LessAmt = parseFloat(tds.eq(2).text());
                mlESSAmt = mlESSAmt + LessAmt;
            })
            var url = '@Url.Action("AddEditLCDetails")';

            var ModelData = {};
            ModelData["FromLocation"] = $("#FromLocation").val();
            ModelData["ToLocation"] = $("#ToLocation").val();
            ModelData["ChargesAcc"] = $("#ChargesAcc").val();
            ModelData["ChargesAccName"] = $("#ChargesAcc").select2('data').text;
            ModelData["Amt"] = $("#LCAmt").val();
            ModelData["Descr"] = $("#LCDescr").val();
            ModelData["SessionFlag"] = "Add";
            ModelData["LCDetailList"] = myTableArray;
            ModelData["Mode"] = '@Model.Mode';
            ModelData["AddAmt"] = mAddAmt;
            ModelData["LessAmt"] = mlESSAmt;
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        $("#lcdetailsdiv").html(data.Html)
                        $("#TripFinalAmt").val(data.TripFinalAmt)
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });


        $('#btnaddNarrList').click(function (event) {
            event.preventDefault();

            var url = '@Url.Action("AddEditAddNarrList")';
            var mLcAmt = [];
            $('#tbllcdetails tbody tr').each(function () {
                var tds = $(this).find('td');
                var mAmt = parseFloat(tds.eq(9).text());
                mLcAmt = mLcAmt + mAmt;
            })


            var myTableArray1 = [];
            $('#tbladdnarrlist tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets2 = { tempid: tds.eq(0).text(), AddNarr: tds.eq(1).text(), AddAmt: tds.eq(2).text() }
                myTableArray1.push(myDets2);
            })

            var mlESSAmt = 0;
            $('#tbllessnarrlist tbody tr').each(function () {
                var tds = $(this).find('td');
                var LessAmt = parseFloat(tds.eq(2).text());
                mlESSAmt = mlESSAmt + LessAmt;
            })
            var ModelData = {};
            ModelData["AddNarr"] = $("#AddNarr").val();
            ModelData["AddAmt"] = $("#AddAmt").val();
            ModelData["AddNarrList"] = myTableArray1;
            ModelData["SessionFlag"] = "Add";
            ModelData["Mode"] = '@Model.Mode';
            ModelData["LessAmt"] = mlESSAmt;
            ModelData["LCAmt"] = mLcAmt;
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        $("#divAddNarrList").html(data.Html)
                        $("#TripFinalAmt").val(data.TripFinalAmt)
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });


        $('#btnlessNarrList').click(function (event) {
            event.preventDefault();

            var url = '@Url.Action("AddEditLessNarrList")';
            var myTableArray2 = [];
            $('#tbllessnarrlist tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets2 = { tempid: tds.eq(0).text(), LessNarr: tds.eq(1).text(), LessAmt: tds.eq(2).text() }
                myTableArray2.push(myDets2);
            })
            var mLcAmt = [];
            $('#tbllcdetails tbody tr').each(function () {
                var tds3 = $(this).find('td');
                var mAmt = parseFloat(tds3.eq(9).text());
                mLcAmt = mLcAmt + mAmt;
            })
            var madditionAmt = 0;
            $('#tbladdnarrlist tbody tr').each(function () {
                var tds2 = $(this).find('td');
                var AddAmt = parseFloat(tds2.eq(2).text());
                madditionAmt = madditionAmt + AddAmt;
            })
            var ModelData = {};
            ModelData["LessNarr"] = $("#LessNarr").val();
            ModelData["LessAmt"] = $("#LessAmt").val();
            ModelData["LessNarrList"] = myTableArray2;
            ModelData["SessionFlag"] = "Add";
            ModelData["Mode"] = '@Model.Mode';
            ModelData["LCAmt"] = mLcAmt;
            ModelData["AddAmt"] = madditionAmt;
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        $("#divLessNarrList").html(data.Html)
                        $("#TripFinalAmt").val(data.TripFinalAmt)
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });


        loadRelateToList()
        loadAreaList()
        loadAreaListTo()
        loadExpenseAccount()
    });
    function loadRelateToList() {
        var url = '@Url.Action("GetRelateToList")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#RelateTo").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#RelateTo').val('@Model.RelateTo').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };


    function loadAreaList() {
        var url = '@Url.Action("GetAreaList")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#FromLocation").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#FromLocation').val('@Model.FromLocation').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

     function loadAreaListTo() {
        var url = '@Url.Action("GetAreaList")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#ToLocation").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#ToLocation').val('@Model.ToLocation').attr("selected", "selected");
                $('.spinner').hide();
            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadExpenseAccount() {
        $('#ErrorMessage1').hide();
        var url = '@Url.Action("GetExpenseList")';
        $('#ChargesAcc').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength:0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
             initSelection: function (element, callback) {
                var data = { id: '@Model.ChargesAcc', text: '@Model.ChargesAccName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

   
</script>