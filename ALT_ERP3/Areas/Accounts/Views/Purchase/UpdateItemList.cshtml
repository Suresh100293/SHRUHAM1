@model ALT_ERP3.PurchaseVM
@using Common;

<style>
    #UpdateQty:focus {
        border-color: #83eae4;
    }
</style>

<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding:7px;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
            <b class="CodeSt">Edit Record: @Model.tempId</b>
            @*<h4>Edit Record: @Model.tempId</h4>*@
        </div>
        <div class="modal-body">
            <div class="form-horizontal" id="ItemListupdate">
                <div class="form-group">
                    <div class="col-sm-1 control-label">Code:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @id = "UpdateCode", @Name = "UpdateCode", @disabled = "disabled" })
                    </div>
                    <div class="col-sm-1 control-label">Name:</div>
                    <div class="col-sm-7">
                        @Html.TextBoxFor(x => x.ItemName, new { @class = "input-large search-query", @id = "UpdateItemName", @Name = "UpdateItemName", @style = "width:100%" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="itempropth">
                        @Html.Partial("ItemPropertiesEditView")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-1 control-label">Store:</div>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(x => x.Store, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UpdateStore", @Name = "UpdateStore" })
                    </div>
                    <div id="BinDisableDiv">
                        <div class="col-sm-2 control-label">BIN Number:</div>
                        <div class="col-sm-2">
                            @Html.DropDownListFor(x => x.BinNumber, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UpdateBinNumber", @Name = "UpdateBinNumber" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-1 control-label">Unit:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Unit, new { @Type = "text", @class = "form-control", @id = "UpdateUnit", @Name = "UpdateUnit", @disabled = "disabled" })
                    </div>
                    <div class="col-sm-1 control-label">Qty:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Qty, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateQty", @Name = "UpdateQty" })
                    </div>
                </div>
                <div class="form-group" id="MultiUntDiv1">
                    <div class="col-sm-1 control-label">Factor:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Factor, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateFactor", @Name = "UpdateFactor" })
                    </div>
                    <div class="col-sm-1 control-label">RateOn:</div>
                    <div class="col-sm-2">
                        @Html.CheckBoxFor(x => x.RateOn2, new { @id = "UpdateRateOn2", @Name = "UpdateRateOn2" })
                    </div>
                    <div class="col-sm-1 control-label">Unit2:</div>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(x => x.Unit2, DropdownHelper.EmptyList(), new { @class = "form-control", @id = "UpdateUnit2", @Name = "UpdateUnit2" })
                    </div>
                    <div class="col-sm-1 control-label">Qty2:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Qty2, new { @style = "text-align:right;width:90%", @class = "form-control", @id = "UpdateQty2", @Name = "UpdateQty2" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-1 control-label">Rate:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Rate, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateRate", @Name = "UpdateRate" })
                    </div>
                    <div class="col-sm-1 control-label">Disc%:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Disc, new { @class = "form-control", @style = "text-align:right;", @id = "UpdateDisc", @Name = "UpdateDisc" })
                    </div>
                    <div class="col-sm-1 control-label">Disc. Amt:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.DiscAmt, new { @class = "form-control", @style = "text-align:right;", @id = "UpdateDiscAmt", @Name = "UpdateDiscAmt" })
                        @Html.TextBoxFor(x => x.DiscPerAmt, new { @id = "UpdateDiscPerAmt", @Name = "UpdateDiscPerAmt", @hidden = "hidden" })
                    </div>
                    <div class="col-sm-1 control-label">CostRate:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.NewRate, new { @class = "form-control", @style = "text-align:right;", @id = "UpdateNewRate", @Name = "UpdateNewRate" })
                    </div>
                </div>
                <div class="form-group">
                    <div id="updgsttaxdivlbl" class="col-sm-1 control-label">GST Code:</div>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(x => x.GSTCode, DropdownHelper.EmptyList(), new { @class = "form-control", @style = "width:100%;margin-bottom:2px;", @id = "UpdateGSTCode", @Name = "UpdateGSTCode" })
                    </div>
                    <div class="col-sm-1 control-label">HSN:</div>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(x => x.HSN, DropdownHelper.EmptyList(), new { @class = "form-control", @style = "width:100%;margin-bottom:2px;", @id = "UpdateHSN", @Name = "UpdateHSN" })
                    </div>
                </div>
                <div class="panel" style="background-color:rgb(215, 215, 214);padding-top:5px;padding-bottom:2px;padding-left:3px;border-radius:0px;margin-bottom:6px;">
                    <div class="form-group">
                        <div class="col-sm-1 control-label">Min Qty:</div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.MinQty, new { @class = "form-control", @style = "text-align:right;", @disabled = "disabled", @id = "UpdateMinQty", @Name = "UpdateMinQty" })
                        </div>
                        <div class="col-sm-1 control-label">Max Qty:</div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.MaxQty, new { @class = "form-control", @style = "text-align:right;", @id = "UpdateMaxQty", @disabled = "disabled", @Name = "UpdateMaxQty" })
                        </div>
                        <div class="col-sm-1 control-label">Group:</div>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(x => x.Grp, new { @class = "form-control", @id = "UpdateGrp", @disabled = "disabled", @Name = "UpdateGrp" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-1 control-label">Pack Size:</div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.PackSize, new { @style = "text-align:right;", @class = "form-control", @id = "UpdatePackSize", @disabled = "disabled", @Name = "UpdatePackSize" })
                        </div>
                        <div class="col-sm-1 control-label">MRP:</div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.MRP, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateMRP", @disabled = "disabled", @Name = "UpdateMRP" })
                        </div>
                        <div class="col-sm-1 control-label">Re-Order:</div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.ReOrderLevel, new { @style = "text-align:right;", @class = "form-control", @id = "UpdateReOrderLevel", @disabled = "disabled", @Name = "UpdateReOrderLevel" })
                        </div>
                    </div>
                </div>
                <div class="form-group" id="cvdupd1div">
                    <div class="col-sm-1 control-label">CVD Extra:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.CVDExtra, new { @class = "form-control", @id = "UpdateCVDExtra", @Name = "UpdateCVDExtra" })
                    </div>

                    <div class="col-sm-1 control-label">CVD Amt:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.CVDAmt, new { @class = "form-control", @id = "UpdateCVDAmt", @Name = "UpdateCVDAmt" })
                    </div>
                    <div class="col-sm-1 control-label">CVD Cess:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.CVDCessAmt, new { @class = "form-control", @id = "UpdateCVDCessAmt", @Name = "UpdateCVDCessAmt" })
                    </div>
                    <div class="col-sm-1 control-label">CVD SCess:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.CVDSCessAmt, new { @class = "form-control", @id = "UpdateCVDSCessAmt", @Name = "UpdateCVDSCessAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-1 control-label">Taxable:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Taxable, new { @type = "number", @class = "form-control", @id = "UpdateTaxable", @Name = "UpdateTaxable", @style = "text-align:right;font-weight:bold;background-color:lightgray;" })
                    </div>
                    <div id="updigstdivlbl" class="col-sm-1 control-label">IGST:</div>
                    <div class="col-sm-2" style="padding-right:0px;">
                        @Html.TextBoxFor(x => x.IGSTRate, new { @type = "number", @id = "UpdatePIgst", @style = "margin-top:0px;text-align:right;height:25px;width:50px;display:unset;", @disabled = "disabled", @class = "form-control" })
                        @Html.TextBoxFor(x => x.IGSTAmt, new { @type = "number", @id = "UpdateIGSTAmt", @style = "margin-top:0px;text-align:right;height:25px;width:95px;display:unset;", @disabled = "disabled", @class = "form-control" })
                    </div>
                    <div id="updcgstdivlbl" class="col-sm-1 control-label">CGST:</div>
                    <div class="col-sm-2" style="padding-right:0px;">
                        @Html.TextBoxFor(x => x.CGSTRate, new { @type = "number", @id = "UpdatePCgst", @style = "margin-top:0px;text-align:right;height:25px;width:50px;display:unset;", @disabled = "disabled", @class = "form-control" })
                        @Html.TextBoxFor(x => x.CGSTAmt, new { @type = "number", @id = "UpdateCGSTAmt", @style = "margin-top:0px;text-align:right;height:25px;width:95px;display:unset;", @disabled = "disabled", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div id="updsgstdivlbl" class="col-sm-1 control-label">SGST:</div>
                    <div class="col-sm-2" style="padding-right:0px;">
                        @Html.TextBoxFor(x => x.SGSTRate, new { @type = "number", @id = "UpdatePSgst", @style = "margin-top:0px;text-align:right;height:25px;width:50px;display:unset;", @disabled = "disabled", @class = "form-control" })
                        @Html.TextBoxFor(x => x.SGSTAmt, new { @type = "number", @id = "UpdateSGSTAmt", @style = "margin-top:0px;text-align:right;height:25px;width:95px;display:unset;", @disabled = "disabled", @class = "form-control" })
                    </div>
                    <div class="col-sm-1 control-label">Value:</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.Val1, new { @type = "number", @class = "form-control", @id = "UpdateVal1", @Name = "UpdateVal1", @style = "text-align:right;font-size:11pt;font-weight:bold;background-color:lightgray;", @disabled = "disabled" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-1 control-label">Narration:</div>
                    <div class="col-sm-10">
                        @Html.TextAreaFor(x => x.Narr, new { @class = "form-control", @id = "UpdateNarr", @Name = "UpdateNarr", @Style = "width:100%", @rows = 3 })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;padding:5px;">
            <button type="button" id="btnProdAddonEdit" action="ShowAddonLst" class="btn btn-primary" title="Item AddOn" value="@Model.tempId" style="border:1px solid rgb(120, 120, 120);float:left;"><i class="fa fa-shopping-cart" style="color:black"></i>&nbsp;&nbsp;&nbsp;Addons</button>
            @*<button type="button" id="btnProdAddonEdit" class="btn btn-primary" title="Item AddOn" action="ShowAddonLst" value="@Model.tempId" style="float:left;"><i class="fa fa-shopping-cart" style="color:black">&nbsp;&nbsp;&nbsp;Addons</i></button>*@
             <button type="button" class="btn btn-success" title="Additional Charges-Discount" id="btndiscchargesEdit"><i class="fa fa-keyboard-o" style="color:black"></i>&nbsp;&nbsp;&nbsp;Disc & Charges</button>
            
            @if ((Model.SubType == "RP" || Model.SubType == "CP" || Model.SubType == "IM" || Model.SubType == "NS" || Model.SubType == "IC" || Model.SubType == "SX" || Model.SubType == "RS" || Model.SubType == "CS" || Model.SubType == "XS" || Model.SubType == "NP" || Model.SubType == "OC" || Model.SubType == "PX" || Model.SubType == "OS"))
            {
                <button type="button" id="btnedtstksrl" action="ShowSerialAddSess" class="btn btn-warning" title="Stk Serial" value="@Model.tempId" style="border:1px solid rgb(120, 120, 120);float:left;"><i class="fa fa-list" style="color:black"></i>&nbsp;&nbsp;&nbsp;Stock Serial</button>
            }
            @if (Model.SubType == "RP" || Model.SubType == "CP" || Model.SubType == "IM" || Model.SubType == "NS" || Model.SubType == "IC" || Model.SubType == "SX" || Model.SubType == "RS" || Model.SubType == "CS" || Model.SubType == "XS" || Model.SubType == "NP" || Model.SubType == "OC" || Model.SubType == "PX")
            {
                <button type="button" id="btnedtbatch" action="ShowBatchAddSess" class="btn btn-success" title="Item Batch" value="@Model.tempId" style="border:1px solid rgb(120, 120, 120);float:left;"><i class="fa fa-file" style="color:black"></i>&nbsp;&nbsp;&nbsp;Batch</button>
            }
            @if (Model.SubType == "RS" || Model.SubType == "CS")
            {
                <button type="button" id="btnedtstkadjust" class="btn btn-success" title="Stock Adjust" value="@Model.tempId" style="border:1px solid rgb(120, 120, 120);float:left;"><i class="fa fa-list" style="color:black"></i>Stock Adjust</button>
            }
            <button type="button" class="btn btn-success" id="btnStkDetails">Stock </button>
            <button type="button" class="btn btn-success" onclick="btnStkHistory()">History</button>
            <button type="button" class="btn btn-success" id="updaterecord">Update</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        if ($('#hdnLockAddon').val() == "True" || $('#hdnLockAddon').val() == "true") {
            $('#btnProdAddonEdit').attr("disabled", "disabled");
        }
        if ($('#hdnSType').val() == "RP" || $('#hdnSType').val() == "CP" || $('#hdnSType').val() == "IM") {
            $("#UpdateIGSTAmt").prop("disabled", false);
            $("#UpdateSGSTAmt").prop("disabled", false);
            $("#UpdateCGSTAmt").prop("disabled", false);
        }
        if ($('#hdnHideAddlCharges').val() == "True" || $('#hdnHideAddlCharges').val() == "true") {
            $('#btndiscchargesEdit').hide();
        }
        if(($('#NonStock').val() == "True" || $('#NonStock').val() == "true") && $('#hdnSType').val() == "NS")
        {
             $('#btndiscchargesEdit').hide();
        }
        if ($('#hdnVATGSTApp').val() == "V") {
            $('#updgsttaxdivlbl').html('Tax Code');
            $('#updigstdivlbl').html('Tax');
            $('#updcgstdivlbl').html('Add.Tax');
            $('#updsgstdivlbl').html('Surcharge');
        }
        if ($('#hdnIsItemClass').val() == "false" || $('#hdnIsItemClass').val() == "False") {
            $(".itempropth").hide();
        }
        else {
            $('#UpdateClassValues1').val('@Model.ItemClass1');
            $('#UpdateClassValues2').val('@Model.ItemClass2');
        }

        if ($('#hdnuIsStockSerial').val() == "True" || $('#hdnuIsStockSerial').val() == "true") {
            $('#btnedtstksrl').show();
        }
        else {
            $('#btnedtstksrl').hide();
        }


        if ($('#hdnuIsBatchReqd').val() == "True" || $('#hdnuIsBatchReqd').val() == "true") {
            $('#btnedtbatch').show();
        }
        else {
            $('#btnedtbatch').hide();
        }

        if ($("#hdnLockDiscount").val() == "True") {
            $('#UpdateDisc').prop("disabled", true);
            $('#UpdateDiscAmt').prop("disabled", true);
        }

        if ($("#hdnLockRate").val() == "True") {
            $('#UpdateRate').prop("disabled", true);
        }
        if ($('#hdnBinConcept').val() == "False" && $('#hdnMultiUnit').val() == "False") {
            $('#BinDisableDiv').hide();
            $('#MultiUntDiv2').hide();
            $('#MultiUntDiv1').hide();
        }

        if ($('#hdnBinConcept').val() == "False") {
            $('#BinDisableDiv').hide();
        }

        if ($('#hdnSType').val() != "IM") {
            $('#cvdupd1div').hide();
            $('#cvdupd2div').hide();
        }

        if ($("#hdnLockStore").val() == "True" || $("#hdnLockStore").val() == "true") {
            $('#UpdateStore').prop("disabled", true);
        }
        if ($("#hdnLockFactor").val() == "True" || $("#hdnLockFactor").val() == "true") {
            $('#UpdateFactor').prop("disabled", true);
        }
        if ($("#hdnLockTax").val() == "True" || $("#hdnLockTax").val() == "true") {
            $('#UpdateGSTCode').prop("disabled", true);
        }
        if ($("#hdnLockHSN").val() == "True" || $("#hdnLockHSN").val() == "true") {
            $('#UpdateHSN').prop("disabled", true);
        }
        if($("#hdnLockItem").val() == "True" || $("#hdnLockItem").val() == "true"){
            $('#UpdateCode').prop("disabled", true);
        }
        if($("#hdnLockQty").val() == "True" || $("#hdnLockQty").val() == "true"){
            $('#UpdateQty').prop("disabled", true);
            $('#UpdateQty2').prop("disabled", true);
            $('#UpdateFactor').prop("disabled", true);
        }
        if ($("#hdnLockDiscCharges").val() == "True" || $("#hdnLockDiscCharges").val() == "true")
        {
            $('#btndiscchargesEdit').prop("disabled", true);
        }


        loadUpdateItem()
        loadUpdatedGST()
        loadUpdatedHSN()
        loadUpdatedStore()
        loadUpdatedUnit2()
        loadUpdatedBinNumber()
        loadClassValuesEdit1('@Model.Code')
        loadClassValuesEdit2('@Model.Code')
        $("#updaterecord").click(function (event) {
            event.preventDefault();
            if ($('#UpdateCode').val() == '') {
                alert('Please Select Product.')
                return;
            }
            if ($('#UpdateQty').val() == 0) {
                if ($('#IsGstDocType').val() == "false" || $('#IsGstDocType').val() == "False") {
                    alert('Please Select Quantity.')
                    return;
                }
            }
            if ($('#UpdateStore').val() == '0' || $('#UpdateStore').val() == '') {
                alert('Please Select Store.')
                return;
            }
            if ($('#UpdateHSN').val() == '0' || $('#UpdateHSN').val() == null) {
                alert('Please Select HSN.')
                return;
            }
            if ($('#UpdateGSTCode').val() == '0' || $('#UpdateGSTCode').val() == null) {
                alert('Please Select GST Code.')
                return;
            }

            if ($("#hdnuIsPickUp").val() == "True" || $("#hdnuIsPickUp").val() == "true") {
                var qty = parseFloat($('#hdnuQty').val());
                var updqty = parseFloat($('#UpdateQty').val());
                var hqtytole = parseFloat($("#hdnuQtyTolePlus").val());
                var qtytoleplus = (qty * parseFloat($("#hdnuQtyTolePlus").val())) / 100;
                var calqty = qty + qtytoleplus;
                if ('@Model.DocMoreQty' != 'Y') {
                    if (hqtytole > 0 && ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM")) {
                        if (updqty > calqty) {
                            alert('Cant Increase Qty more than: ' + calqty);
                            return;
                        }
                    }
                    else if ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM") {
                        if (updqty > qty) {
                            alert('Cant Increase Qty more than: ' + qty);
                            return;
                        }
                    }
                }
            }

            if ($("#hdnuIsPickUp").val() == "True" || $("#hdnuIsPickUp").val() == "true") {
                var qty2 = parseFloat($('#hdnuQty2').val());
                var updqty2 = parseFloat($('#UpdateQty2').val());
                var hqtytole = parseFloat($("#hdnuQtyTolePlus").val());
                var qtytoleplus = (qty2 * parseFloat($("#hdnuQtyTolePlus").val())) / 100;
                var calqty = qty2 + qtytoleplus;
                if ('@Model.DocMoreQty' != 'Y') {
                    if (hqtytole > 0 && ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM")) {
                        if (updqty2 > calqty) {
                            alert('Cant Increase Qty2 more than: ' + calqty);
                            return;
                        }
                    }
                    if ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM") {
                        if (updqty2 > qty2) {
                            alert('Cant Increase Qty2 more than: ' + qty2);
                            return;
                        }
                    }
                }
            }

            if ($('#hdnSType').val() == "RS" || $('#hdnSType').val() == "CS" || $('#hdnSType').val() == "XS" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "OS" || $('#hdnSType').val() == "QS" || $('#hdnSType').val() == "ES" || $('#hdnSType').val() == "DI" || $('#hdnSType').val() == "PI" || ($('#hdnSType').val() == "NS" && ($('#NonStock').val() == "False" || $('#NonStock').val() == "false"))) {
             var discchargestblsize = $('#addldiscchargesgridEdt tbody tr').length;
            if ($('#hdnuPriceDiscCode').val() != null && $('#hdnuPriceDiscCode').val() != "" && discchargestblsize == 0) {
                alert('DISCOUNT CHARGES STRUCTURE IS MISSING')
                return;
            }
            }
            var DCSerial = [];
            $('#addldiscchargesgridEdt tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    Disc: tds.eq(2).text(),
                    DiscCaption: tds.eq(1).text(),
                    AddLess: tds.eq(3).text(),
                    CalcOn: tds.eq(4).text(),
                    DiscAmt: tds.eq(5).text(),
                    PerValue: tds.eq(6).text()
                }
                DCSerial.push(myDets);
            });
            if (MadidateSerialInUpd() == true) {
                return;
            }

            if (MadidateBatchInUpd() == true) {
                return;
            }
            if (CheckDuplBatchInUpd() == true) {
                return;
            }
            Calculation1("T");

            var updtaxableperqty;
            if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX" || $("#hdnSType").val() == "OS") {
                if (parseFloat($('#hdnuMinSaleRate').val()) == parseFloat(0)) {

                }
                else {
                    if ($('#UpdateRateOn2').is(':checked')) {
                        updtaxableperqty = parseFloat($('#UpdateTaxable').val()) / (parseFloat($('#UpdateQty2').val()));
                        if (updtaxableperqty < parseFloat($('#hdnuMinSaleRate').val())) {
                            alert('Price Cant Be Less Than Min Sales Rate')
                            return;
                        }
                    }
                    else {
                        updtaxableperqty = parseFloat($('#UpdateTaxable').val()) / (parseFloat($('#UpdateQty').val()));
                        if (updtaxableperqty < parseFloat($('#hdnuMinSaleRate').val())) {
                            alert('Price Cant Be Less Than Min Sales Rate')
                            return;
                        }
                    }
                }
            }
            var StockAdjArray = []
            if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS") {
                $('#stkadjtableedt tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.find("input[class='txtfvalueedt']").val() > 0) {
                        var myDets = {
                            tempId: tds.eq(0).text(),
                            //Type: tds.eq(1).text(),
                            //Prefix: tds.eq(2).text(),
                            //Srl: tds.eq(3).text(),
                            //Sno: tds.eq(4).text(),
                            //DocuDate: tds.eq(5).text(),
                            //Account: tds.eq(6).text(),
                            Qty: tds.eq(9).text(),
                            Balance: tds.eq(10).text(),
                            CheckMode: tds.find("input[class='classstkadjedt']").is(':checked'),
                            AccAmt: tds.find("input[class='txtfvalueedt']").val(),
                            //Narr: tds.eq(11).text(),
                            //ParentKey: tds.eq(12).text(),
                            TableKey: tds.eq(15).text(),
                            //MainType: tds.eq(14).text(),
                            //SubType: tds.eq(15).text(),
                        }
                        StockAdjArray.push(myDets);
                    }
                })
            }

            var ModelData = {};
            ModelData["tempId"] = $('#hdnutempId').val();
            ModelData["Code"] = $('#UpdateCode').val();
            ModelData["ItemName"] = $('#UpdateItemName').select2('data').text;
            ModelData["Unit"] = $('#UpdateUnit').val();
            ModelData["HSN"] = $('#UpdateHSN').val();
            ModelData["GSTCode"] = $('#UpdateGSTCode').val();
            ModelData["Qty"] = $('#UpdateQty').val();
            ModelData["Factor"] = $('#UpdateFactor').val();
            ModelData["Qty2"] = $('#UpdateQty2').val();
            ModelData["Rate"] = $('#UpdateRate').val();
            ModelData["Disc"] = $('#UpdateDisc').val();
            ModelData["DiscAmt"] = $('#UpdateDiscAmt').val();
            ModelData["DiscPerAmt"] = $('#UpdateDiscPerAmt').val();
            ModelData["Taxable"] = $('#UpdateTaxable').val();
            ModelData["IGSTRate"] = $('#UpdatePIgst').val();
            ModelData["CGSTRate"] = $('#UpdatePCgst').val();
            ModelData["SGSTRate"] = $('#UpdatePSgst').val();
            ModelData["SGSTAmt"] = $('#UpdateSGSTAmt').val();
            ModelData["CGSTAmt"] = $('#UpdateCGSTAmt').val();
            ModelData["IGSTAmt"] = $('#UpdateIGSTAmt').val();
            ModelData["Val1"] = $('#UpdateVal1').val();
            ModelData["Narr"] = $('#UpdateNarr').val();
            ModelData["Store"] = $('#UpdateStore').val();
            ModelData["ChangeLog"] = $('#hdnchangelog').val();
            ModelData["SubType"] = $('#hdnSType').val();
            ModelData["RateOn2"] = $('#UpdateRateOn2').is(':checked');
            ModelData["Unit2"] = $('#UpdateUnit2').val();
            ModelData["BinNumber"] = $('#UpdateBinNumber').val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["CVDExtra"] = $('#UpdateCVDExtra').val();
            ModelData["CVDAmt"] = $('#UpdateCVDAmt').val();
            ModelData["CVDCessAmt"] = $('#UpdateCVDCessAmt').val();
            ModelData["CVDSCessAmt"] = $('#UpdateCVDSCessAmt').val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["RateType"] = $('#hdnuRateType').val();
            ModelData["RateCalcType"] = $('#hdnuRateCalcType').val();
            ModelData["DiscChargeList"] = DCSerial;
            ModelData["DiscChargeAmt"] = $('#hdnuDiscChargeAmt').val();
            ModelData["CurrRate"] = $("#CurrRate").val();
            ModelData["Inclusive"]= $('#hdnuInclusive').val();
            ModelData["RateTypeTaxable"]= $('#hdnuRateTypeTaxable').val();
            ModelData["DiscNotAllowed"]= $("#hdnuDiscNotAllowed").val();
            ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
            ModelData["DocuDate"]= $('#DocuDate').val();
            ModelData["Account"]= $('#Account').val();
            ModelData["DelyCode"]= $('#DelyCode').val();
            ModelData["DelyAltAdd"]= $('#DelyAltAdd').val();
            ModelData["Type"]= $('#hdnType').val();
            ModelData["PriceDiscCode"]= $('#hdnuPriceDiscCode').val();
            ModelData["GSTType"] = $("#GSTType").val();
            ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
            ModelData["ClassValues2"] = $("#UpdateClassValues2").val();
            ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
            ModelData["PriceRateCode"] = $('#hdnuPriceRateCode').val();
            ModelData["ItemSchemeCode"] = $('#hdnuItemSchemeCode').val();
            ModelData["StockAdjList"] = StockAdjArray;
            ModelData["NewRate"] = $("#UpdateNewRate").val();
            ModelData["IsGstDocType"] = $('#IsGstDocType').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("UpdateItemList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                    $('#SaveData').prop('disabled', true);
                    $('#BothSaveEmail').prop('disabled', true);
                    $('#Print').prop('disabled', true);
                },
                success: function (data) {
                    $('#ErrorMessage').hide();
                    $('#itemlistupdate').modal('hide');
                    $('#ItemListTable').html(data.Html);
                    $('#txttotitemqty').val(data.TotalQty.toFixed(2));
                    $('#txttottxable').val(data.Taxable.toFixed(2));
                    $('#txtf_F001').val(data.Taxable.toFixed(2));
                    $('#txtb_F001').val(data.Taxable.toFixed(2));
                    //if ($('#hdnSType').val() == "RP") {
                    //    $('#TDSAble').val(data.Taxable.toFixed(2));
                    //}
                    SetValuesInTable()

                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        });

        $('#UpdateUnit2').change(function () {
            UpdloadFactorOnUnit2();
        });

        $('#UpdateQty2').focusout(function () {
            if ($("#hdnuIsPickUp").val() == "True" || $("#hdnuIsPickUp").val() == "true") {
                var qty2 = parseFloat($('#hdnuQty2').val());
                var updqty2 = parseFloat($('#UpdateQty2').val());
                var hqtytole = parseFloat($("#hdnuQtyTolePlus").val());
                var qtytoleplus = (qty2 * parseFloat($("#hdnuQtyTolePlus").val())) / 100;
                var calqty = qty2 + qtytoleplus;
                if ('@Model.DocMoreQty' != 'Y') {
                    if (hqtytole > 0 && ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM")) {
                        if (updqty2 > calqty) {
                            alert('Cant Increase Qty2 more than: ' + calqty);
                            $('#UpdateQty2').val(qty2.toFixed(2));
                        }
                    }
                    if ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM") {
                        if (updqty2 > qty2) {
                            alert('Cant Increase Qty2 more than: ' + qty2);
                            $('#UpdateQty2').val(qty2.toFixed(2));
                        }
                    }
                }
              }
            UpdloadQty1byQty2();

        });

        $('#UpdateQty').focusout(function () {
            if ($("#hdnuIsPickUp").val() == "True" || $("#hdnuIsPickUp").val() == "true") {
                var qty = parseFloat($('#hdnuQty').val());
                var updqty = parseFloat($('#UpdateQty').val());
                var hqtytole = parseFloat($("#hdnuQtyTolePlus").val());
                var qtytoleplus = (qty * parseFloat($("#hdnuQtyTolePlus").val())) / 100;
                var calqty = qty + qtytoleplus;
                if ('@Model.DocMoreQty' != 'Y') {
                    if (hqtytole > 0 && ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM")) {
                        if (updqty > calqty) {
                            alert('Cant Increase Qty more than: ' + calqty);
                            $('#UpdateQty').val(qty.toFixed(2));
                        }
                    }
                    else if ($('#hdnSType').val() == "IC" || $('#hdnSType').val() == "OC" || $('#hdnSType').val() == "RS" || $('#hdnSType').val() == "RP" || $('#hdnSType').val() == "PK" || $('#hdnSType').val() == "NS" || $('#hdnSType').val() == "SX" || $('#hdnSType').val() == "NP" || $('#hdnSType').val() == "IM") {
                        if (updqty > qty) {
                            alert('Cant Increase Qty more than: ' + qty);
                            $('#UpdateQty').val(qty.toFixed(2));
                        }
                    }
                }
            }
            loadSchemeQtyDetailsUpd()
            UpdloadPopulateQty2()

        });
        $('#UpdateGSTCode').change(function () {
            GetGSTCalculation1()
        });

        if ($("#hdnSType").val() == "IM") {
            $('#UpdateCVDExtra').focusout(function () {
                Calculation1();
            });
            $('#UpdateCVDAmt').focusout(function () {
                Calculation1();
            });
            $('#UpdateCVDCessAmt').focusout(function () {
                Calculation1();
            });
            $('#UpdateCVDSCessAmt').focusout(function () {
                Calculation1();
            });
        }

        $('#UpdateRate').focusout(function () {
            GetGSTCalculation1()
            CalcAddlDiscChargesOnTabEdit()
        });

        $('#UpdateTaxable').focusout(function () {
            if ($('#IsGstDocType').val() == "true" || $('#IsGstDocType').val() == "True") {
                GetGSTCalculation1()
                CalcAddlDiscChargesOnTabEdit()
            }
        });

        $('#UpdateVal1').focusout(function () {
            if ($('#IsGstDocType').val() == "true" || $('#IsGstDocType').val() == "True") {
                GetGSTCalculation1()
                CalcAddlDiscChargesOnTabEdit()
            }
        });

        $('#UpdateDisc').focusout(function () {
            Calculation1();
        });

        $('#UpdateDiscAmt').focusout(function () {
            Calculation1();
        });

        $('#UpdateItemName').change(function (event) {
            event.preventDefault();
            $("#UpdateItemName").removeClass('error');
            var acc = $('#UpdateItemName').val();
            $('#UpdateCode').val(acc);

            loadProductDetails1();
            GetGSTCalculation1();

            Calculation1();
            CleanSalesSerial()
            loadStockAdjustEdit()
        });

        $('#UpdateStore').change(function () {
            CleanSalesSerial()
            loadStockAdjustEdit()
        });

        $('button[action|="ShowAddonLst"]').click(function (event) {
            $('#prodshwaddonmodel').modal({
                backdrop: 'static',
                keyboard: false
            });

            event.preventDefault();
            var ModelData = {};
            ModelData["tempId"] = $("#hdnutempId").val();
            ModelData["Code"] = $("#hdnProductAddOn").val();
            ModelData["Type"] = $("#hdnType").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetProdEditAddOnList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#prodshwaddonmodel').modal('show');
                    $('#prodshwDialog').html(data.Html);
                    $('#prodshowaddongrid input[id=txtshwpadd_F001]').focus();
                    $('#hdnPtempId').val(data.PtempId);
                    $('#controllername').val(data.Controller);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });

        });

        $('#btndiscchargesEdit').click(function (event) {
            event.preventDefault();
            if ($('#hdnuDiscNotAllowed').val() == "True" || $('#hdnuDiscNotAllowed').val() == "true") {
                alert('Cant set Discount Charges since already PriceRate is set .')
                return;
            }

            if ($('#hdnuAddDisChgSvd').val() == "1") {
                $('#disccalcmodeledt').modal('show');
            }
            else {
                $('#disccalcmodeledt').modal({
                    backdrop: 'static',
                    keyboard: false
                });
                var Disc6 = 0;
                $('#addldiscchargesgridEdt tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "6") {
                        Disc6 = tds.eq(2).text();
                    }
                });
                var ModelData = {};
                ModelData["Code"] = $("#UpdateCode").val();
                ModelData["tempId"] = $("#hdnutempId").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["NonStock"] = $("#NonStock").val();
                ModelData["DiscCharge6"] = Disc6;
                ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
                ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetDiscountChargesEdit")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        if (data.Status == 'DiscNoAllow') {
                            alert('Cant set Discount Charges since already PriceRate is set .')
                        }
                        else {

                            $('#disccalcmodeledt').modal('show');
                            $('#edtdiscchargeDialog').html(data.Html);
                            $('#hdnuPriceDiscCode').val(data.PriceDiscCode);

                        }


                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
            }
        });

        $('button[action|="ShowBatchAddSess"]').click(function (event) {
            event.preventDefault();
            $('#addedtitembatch').modal({
                backdrop: 'static',
                keyboard: false
            });
            var ModelData = {};
            ModelData["tempId"] = $(this).val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["ProductQty"] = $("#UpdateQty").val();
            ModelData["ProductQty2"] = $("#UpdateQty2").val();
            ModelData["ProductRateOn2"] = $('#UpdateRateOn2').is(':checked');
            ModelData["Code"] = $('#UpdateCode').val();
            ModelData["Store"] = $('#UpdateStore').val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["IsBatchReqd"] = $('#hdnuIsBatchReqd').val();
            ModelData["IsGstDocType"] = $('#IsGstDocType').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetEditItemBatchList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#addedtitembatch').modal('show');
                    $('#addedtItemBatch').html(data.Html);
                    $('#controllername').val(data.Controller);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('button[action|="ShowSerialAddSess"]').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["tempId"] = $("#hdnutempId").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["ChangeLog"] = $("#hdnchangelog").val();
            ModelData["Qty"] = $("#UpdateQty").val();
            ModelData["Qty2"] = $("#UpdateQty2").val();
            ModelData["RateOn2"] = $('#UpdateRateOn2').is(':checked');
            ModelData["Code"] = $('#UpdateCode').val();
            ModelData["Store"] = $('#UpdateStore').val();
            ModelData["LocationCode"] = $('#LocationCode').val();
            ModelData["SerialReq"] = $('#hdnuSerialReq').val();
            ModelData["IsStockSerial"] = $('#hdnuIsStockSerial').val();
            ModelData["IsGstDocType"] = $('#IsGstDocType').val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetAddSessEdtSrlList")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#serialbatchaddedt').modal('show');
                    $('#SerialBatchAddEdt').html(data.Html);
                    $('#controllername').val(data.Controller);

                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $('#UpdateClassValues1').change(function (event) {
            event.preventDefault();
                var ModelData = {};
                ModelData["Code"] = $("#UpdateCode").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["NonStock"] = $("#NonStock").val();
                ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
                ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Unit"] = $('#UpdateUnit').val();
                ModelData["Unit2"] = $('#UpdateUnit2').val();
                ModelData["Factor"] = $('#UpdateFactor').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetProductPriceListRate")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (result) {
                         $('.spinner').hide();
                        $('#UpdateRate').val(parseFloat(result.Rate));
                        $('#UpdateFactor').val(parseFloat(result.Factor));
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
        });

        $('#UpdateClassValues2').change(function (event) {
            event.preventDefault();
                var ModelData = {};
                ModelData["Code"] = $("#UpdateCode").val();
                ModelData["Account"] = $("#Account").val();
                ModelData["DocuDate"] = $("#DocuDate").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["NonStock"] = $("#NonStock").val();
                ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
                ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
                ModelData["Type"] = $("#hdnType").val();
                ModelData["Unit"] = $('#UpdateUnit').val();
                ModelData["Unit2"] = $('#UpdateUnit2').val();
                ModelData["Factor"] = $('#UpdateFactor').val();
                ModelData["IsGstDocType"] = $('#IsGstDocType').val();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetProductPriceListRate")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (result) {
                         $('.spinner').hide();
                        $('#UpdateRate').val(parseFloat(result.Rate));
                        $('#UpdateFactor').val(parseFloat(result.Factor));
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
        });

        $('#btnedtstkadjust').click(function (event) {
            event.preventDefault();
            $('#StockAdjustEditmodel').modal('show');
        });

        $('#btnStkDetails').click(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["Code"] = $("#UpdateCode").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetStoreWiseStock")';
            $.ajax({
               type: "POST",
               dataType: "json",
               data: JSON.stringify(DTO),
               cache: false,
               url: url,
               contentType: "application/json;charset=utf-8",
               beforeSend: function () {
                    $('.spinner').show();
               },
               success: function (result) {
                   $('.spinner').hide();
                   $('#StoreWiseStockmodel').modal('show');
                   $('#StoreWiseStockDialog').html(result.Html);
               },
               error: function () {
                   alert("Error occured while processing your request.");
               }
               });
        })
    });

    function GetGSTCalculation1() {
        $('#ErrorMessage').hide();
        var ModelData = {};
        ModelData["DelyCode"] = $('#DelyCode').val();
        ModelData["HSN"] = $('#UpdateHSN').val();
        ModelData["GSTCode"] = $('#UpdateGSTCode').val();
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["LocationCode"] = $('#LocationCode').val();
        ModelData["Sno"] = $('#DelyAltAdd').val();
        ModelData["VATGSTApp"] = $('#hdnVATGSTApp').val();
        ModelData["GSTType"] = $('#GSTType').val();
        ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetGSTCalculation")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                if (result != null) {
                    $("#UpdatePCgst").val(result.CGSTRate);
                    $("#UpdatePSgst").val(result.SGSTRate);
                    $("#UpdatePIgst").val(result.IGSTRate);
                    $("#hdnuInclusive").val(result.Inclusive);
                    $('#hdnuDiscOnTaxable').val(result.DiscOnTaxable);
                }
                Calculation1()
            },
            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function CalcTaxableOnUpdDisc() {
        var taxable;
        if ($('#UpdateRateOn2').is(':checked')) {
                taxable = (parseFloat($('#UpdateQty2').val()) * parseFloat($('#UpdateRate').val()));
        }
        else {
                taxable = (parseFloat($('#UpdateQty').val()) * parseFloat($('#UpdateRate').val()));
        }

        if ($('#hdnuInclusive').val() == "false" || $('#hdnuInclusive').val() == "False") {
            //(parseFloat($('#UpdateTaxable').val(taxable.toFixed(2))));
            var pa = (parseFloat($('#UpdateDisc').val()));
            //var sper = (parseFloat($('#UpdateTaxable').val()));

            var samt = (pa * taxable) / 100;
            $('#UpdateDiscPerAmt').val(samt.toFixed(2));
        }
        else {
            //(parseFloat($('#UpdateVal1').val(taxable)));
            var pa = parseFloat($('#UpdateDisc').val());
            //var sper = parseFloat($('#UpdateVal1').val());
            if ($('#hdnuDiscOnTaxable').val() == "True" || $('#hdnuDiscOnTaxable').val() == "true") {
                var samt = taxable - (((taxable) / parseFloat((100 + pa))) * parseFloat(100));
                $('#UpdateDiscPerAmt').val(samt.toFixed(2));
            }
            else {
                var samt = (pa * taxable) / 100;
                $('#UpdateDiscPerAmt').val(samt.toFixed(2));
            }
        }
    }

    function Calculation1(LastSave = "") {
        CalcTaxableOnUpdDisc();

        if ($('#hdnuRateType').val() == "P" || $('#hdnuRateType').val() == "V") {
            var url = '@Url.Action("GetRateByRatePercent")?RateCalcType=' + $('#hdnuRateCalcType').val() + '&Rate=' + $('#UpdateRate').val() + '&RateType=' + $('#hdnuRateType').val();
            $.ajax({
                async: false,
                cache: false,
                url: url,
                type: "GET",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                },
                success: function (data) {
                    $('#hdnuRateTypeTaxable').val(parseFloat(data.Taxable));
                },
            });

        }

        var taxable;
        var value;
        if ($('#hdnuInclusive').val() == "false" || $('#hdnuInclusive').val() == "False") {

            if ($('#IsGstDocType').val() == "false" || $('#IsGstDocType').val() == "False") {
                if ($('#hdnuRateType').val() == "P" || $('#hdnuRateType').val() == "V") {

                    if ($('#UpdateRateOn2').is(':checked')) {
                        $('#UpdateQty2').val(parseFloat(1));
                        taxable = (parseFloat($('#hdnuRateTypeTaxable').val()));
                    }
                    else {
                        $('#UpdateQty').val(parseFloat(1));
                        taxable = (parseFloat($('#hdnuRateTypeTaxable').val()));
                    }
                }
                else {

                    if ($('#UpdateRateOn2').is(':checked')) {
                        taxable = (parseFloat($('#UpdateQty2').val()) * parseFloat($('#UpdateRate').val()));
                    }
                    else {
                        taxable = (parseFloat($('#UpdateQty').val()) * parseFloat($('#UpdateRate').val()));
                    }
                }
            }
            else {
                taxable = parseFloat($('#UpdateTaxable').val());
            }
            //(parseFloat($('#UpdateTaxable').val(taxable)));

            //var taxval = (parseFloat($('#UpdateTaxable').val()));
            var samt = parseFloat($('#UpdateDiscAmt').val());
            var dicpamt = parseFloat($('#UpdateDiscPerAmt').val());
            var discval;
            var tempdiscval;
            tempdiscval = (taxable - samt - dicpamt) + parseFloat($('#hdnuDiscChargeAmt').val());
            discval = parseFloat(tempdiscval) * parseFloat($('#CurrRate').val());
            var taxablewithcurr;

            if ($('#hdnSType').val() == "IM") {
                taxablewithcurr = discval + parseFloat($('#UpdateCVDExtra').val()) + parseFloat($('#UpdateCVDAmt').val()) + parseFloat($('#UpdateCVDCessAmt').val()) + parseFloat($('#UpdateCVDSCessAmt').val());
            }
            else {
                taxablewithcurr = discval;
            }

            $('#UpdateTaxable').val(taxablewithcurr.toFixed(2));

            var sper1 = (parseFloat($("#UpdateTaxable").val()));
            var PCgst = (parseFloat($("#UpdatePCgst").val()));
            var AmtCgst = (PCgst * sper1) / 100;

            if (($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM") && LastSave == "T") {
                var tempcgstamt = Math.abs(parseFloat($('#UpdateCGSTAmt').val()) - parseFloat(AmtCgst));
                if (tempcgstamt <= parseFloat(1)) {

                }
                else {
                    $('#UpdateCGSTAmt').val(AmtCgst.toFixed(2));
                }
            }
            else {
                $('#UpdateCGSTAmt').val(AmtCgst.toFixed(2));
            }


            var sper2 = (parseFloat($("#UpdateTaxable").val()));
            var PSgst = (parseFloat($("#UpdatePSgst").val()));
            var AmtSgst = (PSgst * sper2) / 100;
            if (($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM") && LastSave == "T") {
                var tempsgstamt = Math.abs(parseFloat($('#UpdateSGSTAmt').val()) - parseFloat(AmtSgst));
                if (tempsgstamt <= parseFloat(1)) {

                }
                else {
                    $('#UpdateSGSTAmt').val(AmtSgst.toFixed(2));
                }
            }
            else {
                $('#UpdateSGSTAmt').val(AmtSgst.toFixed(2));
            }


            var sper3 = (parseFloat($("#UpdateTaxable").val()));
            var PIgst = (parseFloat($("#UpdatePIgst").val()));
            var AmtIgst = (PIgst * sper3) / 100;
            if (($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM") && LastSave == "T") {
                var tempigstamt = Math.abs(parseFloat($('#UpdateIGSTAmt').val()) - parseFloat(AmtIgst));
                if (tempigstamt <= parseFloat(1)) {

                }
                else {
                    $('#UpdateIGSTAmt').val(AmtIgst.toFixed(2));
                }
            }
            else {
                $('#UpdateIGSTAmt').val(AmtIgst.toFixed(2));
            }

            var FTval = (parseFloat($("#UpdateTaxable").val()));
            var FIval = (parseFloat($("#UpdateIGSTAmt").val()));
            var FCval = (parseFloat($("#UpdateCGSTAmt").val()));
            var FSval = (parseFloat($("#UpdateSGSTAmt").val()));
            var Fval = FTval + FIval + FCval + FSval;
            if ($("#GSTType").val() != "1") {
                $('#UpdateVal1').val(Fval.toFixed(2));
            }
            else {
                $('#UpdateVal1').val(taxablewithcurr.toFixed(2));
            }
        }
        else {
            if ($('#IsGstDocType').val() == "false" || $('#IsGstDocType').val() == "False") {
                if ($('#hdnuRateType').val() == "P" || $('#hdnuRateType').val() == "V") {
                    if ($('#UpdateRateOn2').is(':checked')) {
                        $('#UpdateQty2').val(parseFloat(1));
                        value = (parseFloat($('#hdnuRateTypeTaxable').val()));
                    }
                    else {
                        $('#UpdateQty').val(parseFloat(1));
                        value = (parseFloat($('#hdnuRateTypeTaxable').val()));
                    }
                }
                else {
                    if ($('#UpdateRateOn2').is(':checked')) {
                        value = (parseFloat($('#UpdateQty2').val()) * parseFloat($('#UpdateRate').val()));
                    }
                    else {
                        value = (parseFloat($('#UpdateQty').val()) * parseFloat($('#UpdateRate').val()));
                    }
                }
            }
            else {
                value = parseFloat($('#UpdateVal1').val());
            }

            var val1 = value;
            var samt = $('#UpdateDiscAmt').val();
            var dicpamt = parseFloat($('#UpdateDiscPerAmt').val());
            var discval;
            var tempdiscval;
            tempdiscval = (val1 - samt - dicpamt) + parseFloat($('#hdnuDiscChargeAmt').val());
            discval = parseFloat(tempdiscval) * parseFloat($('#CurrRate').val());
            var taxablewithcurr;
            if ($('#hdnSType').val() == "IM") {
                taxablewithcurr = discval + parseFloat($('#UpdateCVDExtra').val()) + parseFloat($('#UpdateCVDAmt').val()) + parseFloat($('#UpdateCVDCessAmt').val()) + parseFloat($('#UpdateCVDSCessAmt').val());
            }
            else {
                taxablewithcurr = discval;
            }

            $('#UpdateVal1').val(taxablewithcurr.toFixed(2));
            var gstintaxable = parseFloat($("#UpdatePIgst").val()) + parseFloat($("#UpdatePCgst").val()) + parseFloat($("#UpdatePSgst").val());
            taxable = (taxablewithcurr * 100) / (gstintaxable + 100);
            $('#UpdateTaxable').val(parseFloat(taxable.toFixed(2)));


            var sper1 = taxable;
            var PCgst = (parseFloat($("#UpdatePCgst").val()));
            var AmtCgst = (PCgst * sper1) / 100;
            $('#UpdateCGSTAmt').val(AmtCgst.toFixed(2));


            var sper2 = taxable;
            var PSgst = (parseFloat($("#UpdatePSgst").val()));
            var AmtSgst = (PSgst * sper2) / 100;
            $('#UpdateSGSTAmt').val(AmtSgst.toFixed(2));


            var sper3 = taxable;
            var PIgst = (parseFloat($("#UpdatePIgst").val()));
            var AmtIgst = (PIgst * sper3) / 100;
            $('#UpdateIGSTAmt').val(AmtIgst.toFixed(2));


        }
    }

    function loadUpdatedGST() {
        $("#UpdateGSTCode").empty();
        var url = '@Url.Action("GetGSTCode")?MainType=' + $("#hdnMType").val() + '&VATGSTApp=' + $('#hdnVATGSTApp').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UpdateGSTCode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UpdateGSTCode').val($('#hdnuGSTCode').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("4-An error occurred while processing the request.");
            }
        });
    };

    function loadUpdatedHSN() {
        $("#UpdateHSN").empty();
        var url = '@Url.Action("GetHSN")';
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UpdateHSN").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UpdateHSN').val($('#hdnuHSN').val()).attr("selected", "selected");
            },
            error: function () {
                $('.spinner').hide();
                alert("2-An error occurred while processing the request.");
            }
        });
    };

    function loadProductDetails1() {
          var ModelData = {};
        ModelData["Code"] = $("#UpdateCode").val();
        ModelData["MainType"] = $('#hdnMType').val();
        ModelData["Store"] = $('#UpdateStore').val();
        ModelData["Account"] = $('#Account').val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["DocuDate"] = $("#DocuDate").val();
        ModelData["LocationCode"] = $('#LocationCode').val();
        ModelData["ChangeLog"] = 'Edit';
        ModelData["GSTType"] = $('#GSTType').val();
        var DTO = { Model2: ModelData };
        var url = '@Url.Action("GetProductDetails")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('#UpdateUnit').val(result.Unit);
                $('#hdnuGSTCode').val(result.GSTCode);
                $('#hdnuHSN').val(result.HSN);
                $('#hdnuUnit2').val(result.Unit2);
                $('#hdnuStore').val(result.Store);
                $('#hdnuBinNumber').val(result.BinNumber);
                $('#hdnuMinSaleRate').val(result.MinSaleRate);
                $('#hdnuRateType').val(result.RateType);
                $('#hdnuRateCalcType').val(result.RateCalcType);
                $('#hdnuDiscNotAllowed').val(result.DiscNotAllowed);
                $('#UpdateDisc').val(result.Disc);
                $('#UpdateDiscAmt').val(result.DiscAmt);
                $('#UpdateNarr').text(result.Narr);
                $('#hdnuClassValues1').val(result.ClassValues1);
                $('#hdnuClassValues2').val(result.ClassValues2);
                loadClassValuesEdit1($('#UpdateCode').val())
                loadClassValuesEdit2($('#UpdateCode').val())
                loadUpdatedHSN();
                loadUpdatedGST();
                loadUpdatedUnit2();
                loadUpdatedStore();
                loadUpdatedBinNumber();

                if ($('#hdnuIsBlanketOrder').val() == "True" || $('#hdnuIsBlanketOrder').val() == "true") {

                }
                else {
                    $('#UpdateRate').val(result.Rate);
                }

                $('#UpdateFactor').val(result.Factor);
                if (result.RateOn2 == true) {
                    $('#UpdateRateOn2').prop('checked', true);
                }
                else {
                    $('#UpdateRateOn2').prop('checked', false);
                }
                $('#hdnuSerialReq').val(result.SerialReq);
                $('#hdnuIsStockSerial').val(result.IsStockSerial);
                $('#hdnuIsBatchReqd').val(result.IsBatchReqd);
                if ($('#hdnuIsStockSerial').val() == "False" || $('#hdnuIsStockSerial').val() == "false") {
                    $('#btnedtstksrl').hide();
                }
                else {
                    $('#btnedtstksrl').show();
                }
                if ($('#hdnuIsBatchReqd').val() == "False" || $('#hdnuIsBatchReqd').val() == "false") {
                    $('#btnedtbatch').hide();
                }
                else {
                    $('#btnedtbatch').show();
                }
                $('#edtdiscchargeDialog').html(result.RichNote);
                $('#hdnuPriceDiscCode').val(result.PriceDiscCode);
                $('#hdnuPriceRateCode').val(result.PriceRateCode);
                $('#hdnuDiscOnTaxable').val(result.DiscOnTaxable);
            },
            error: function () {

                alert("1-An error occurred while processing the request.");
            }
        });
    }

    function loadUpdatedStore() {
        var url = '@Url.Action("GetStoreUpdCode")?Type=' + $('#hdnType').val() + '&SubType=' + $('#hdnSType').val() + '&LocationCode=' + $('#LocationCode').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $("#UpdateStore").empty();
                $.each(result, function (i, item) {
                    $("#UpdateStore").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UpdateStore').val($('#hdnuStore').val()).attr("selected", "selected");

            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function loadUpdatedBinNumber() {
        var url = '@Url.Action("GetBinNumber")'
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#UpdateBinNumber").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UpdateBinNumber').val($('#hdnuBinNumber').val()).attr("selected", "selected");

            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };

    function UpdloadPopulateQty2() {
        var ModelData = {};
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Unit"] = $('#UpdateUnit').val();
        ModelData["Unit2"] = $('#UpdateUnit2').val();
        ModelData["Factor"] = $('#UpdateFactor').val();
        ModelData["Qty"] = $('#UpdateQty').val();
        ModelData["Qty2"] = $('#UpdateQty2').val();
        ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
        ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("PopulateQty2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                $('#UpdateQty2').val(result.Qty2);
                CalcAddlDiscChargesOnTabEdit()
                GetGSTCalculation1();

            },
            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function UpdloadFactorOnUnit2() {
        var ModelData = {};
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Unit"] = $('#UpdateUnit').val();
        ModelData["Unit2"] = $('#UpdateUnit2').val();
        ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
        ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("LoadFactorByUnit2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                $('#UpdateFactor').val(result.Factor);

            },
            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function UpdloadQty1byQty2() {
        var ModelData = {};
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Unit"] = $('#UpdateUnit').val();
        ModelData["Unit2"] = $('#UpdateUnit2').val();
        ModelData["Factor"] = $('#UpdateFactor').val();
        ModelData["Qty2"] = $('#UpdateQty2').val();
        ModelData["Qty"] = $('#UpdateQty').val();
        ModelData["RateOn2"] = $('#UpdateRateOn2').is(':checked');
        ModelData["ClassValues1"] = $('#UpdateClassValues1').val();
        ModelData["ClassValues2"] = $('#UpdateClassValues2').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("PopulateQty1byQty2")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                $('#UpdateQty').val(result.Qty);
                loadSchemeQtyDetailsUpd()
                GetGSTCalculation1();
                CalcAddlDiscChargesOnTabEdit()

            },
            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    }

    function loadUpdatedUnit2() {
        var url = '@Url.Action("GetUnit")?Code=' + $('#UpdateCode').val();
        $.ajax({
            type: "GET",
            dataType: "json",
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {

            },
            success: function (result) {
                $("#UpdateUnit2").empty();
                $.each(result, function (i, item) {
                    $("#UpdateUnit2").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#UpdateUnit2').val($('#hdnuUnit2').val()).attr("selected", "selected");

            },

            error: function () {
                $('.spinner').hide();
                alert("An error occurred while processing the request.");
            }
        });
    };


    function loadUpdateItem() {
        var url = '@Url.Action("GetItemList")'
        $('#UpdateItemName').select2({
            minimumInputLength: @Session["MinItem"],
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: @Session["MinItem"],
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $('#hdnType').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name, id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Code', text: '@Model.ItemName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function MadidateSerialInUpd() {

        var url = '@Url.Action("MandiDateSerial")?Code=' + $('#UpdateCode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $('#hdnuSerialReq').val(data.SerialReq);
            },
        });
        if($("#NonStock").val() == "False" || $("#NonStock").val() == "false"){
            if ($('#hdnuSerialReq').val() == "true" || $('#hdnuSerialReq').val() == "True") {
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                    var checkedSerialPR = 0;
                    $('#ItemSerialPREdt tr:not(:first)').each(function () {
                        var tds = $(this).find('td');
                        if (tds.eq(1).find("input[class='txtserialinpedt']").val() != null && tds.eq(1).find("input[class='txtserialinpedt']").val().trim() != '') {
                            var SerialPR = 1;
                            checkedSerialPR += (parseInt(SerialPR));
                        }
                    })

                    if ($("#UpdateRateOn2").is(':checked')) {
                        if (parseInt(checkedSerialPR) != parseInt($('#UpdateQty2').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }
                    else {
                        if (parseInt(checkedSerialPR) != parseInt($('#UpdateQty').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }



                }
                if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX") {
                    var checkedSerialSl = 0;
                    $('#ItemSerialSLEdt tr:not(:first)').each(function () {
                        if ($(this).find('input[type="checkbox"]').is(':checked')) {
                            var CheckSL = 1;
                            checkedSerialSl += (parseInt(CheckSL));
                        }
                    })

                    if ($("#UpdateRateOn2").is(':checked')) {
                        if (parseInt(checkedSerialSl) != parseInt($('#UpdateQty2').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }
                    else {
                        if (parseInt(checkedSerialSl) != parseInt($('#UpdateQty').val())) {
                            alert('Please Enter Serial Numbers Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }

                }

            }
        }
        else{
            return false;
        }
    }

    function MadidateBatchInUpd() {

        var url = '@Url.Action("CheckItemBatch")?Code=' + $('#UpdateCode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $('#hdnuIsBatchReqd').val(data.IsBatchReqd);
            },
        });
        if($("#NonStock").val() == "False" || $("#NonStock").val() == "false"){
            if ($('#hdnuIsBatchReqd').val() == "true" || $('#hdnuIsBatchReqd').val() == "True") {
                if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                    var checkedBatchPR = 0;
                    if ($("#UpdateRateOn2").is(':checked')) {
                        $('#ItmBtPREdt tbody tr').each(function () {
                            var tds = $(this).find('td');
                            var BatchPR = tds.eq(3).text();
                            checkedBatchPR += (parseFloat(BatchPR));
                        }
                        )
                    }
                    else {
                        $('#ItmBtPREdt tbody tr').each(function () {
                            var tds = $(this).find('td');
                            var BatchPR = tds.eq(2).text();
                            checkedBatchPR += (parseFloat(BatchPR));

                        })
                    }
                    if ($("#UpdateRateOn2").is(':checked')) {
                        if (parseFloat(checkedBatchPR) != parseFloat($('#UpdateQty2').val())) {
                            alert('Please Enter Batch Qty2 Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }
                    else {
                        if (parseFloat(checkedBatchPR) != parseFloat($('#UpdateQty').val())) {
                            alert('Please Enter Batch Qty Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }



                }
                if ($("#hdnSType").val() == "RS" || $("#hdnSType").val() == "CS" || $("#hdnSType").val() == "XS" || $("#hdnSType").val() == "NP" || $("#hdnSType").val() == "OC" || $("#hdnSType").val() == "PX") {
                    var checkedBatchSl = 0;
                    if ($("#UpdateRateOn2").is(':checked')) {
                        $('#itembatchSLEdt tr:not(:first)').each(function () {
                            if ($(this).find('input[type="checkbox"]').is(':checked')) {
                                var tds = $(this).find('td');
                                var CheckSL = parseFloat(tds.eq(4).text());
                                checkedBatchSl += (parseFloat(CheckSL));
                            }
                        })
                    }
                    else {
                        $('#itembatchSLEdt tr:not(:first)').each(function () {
                            if ($(this).find('input[type="checkbox"]').is(':checked')) {
                                var tds = $(this).find('td');
                                var CheckSL = parseFloat(tds.eq(3).text());
                                checkedBatchSl += (parseFloat(CheckSL));
                            }
                        })
                    }

                    if ($("#UpdateRateOn2").is(':checked')) {
                        if (parseFloat(checkedBatchSl) != parseFloat($('#UpdateQty2').val())) {
                            alert('Please Enter Batch Qty2 Its Not Equal to Qty2 ');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }
                    else {
                        if (parseFloat(checkedBatchSl) != parseFloat($('#UpdateQty').val())) {
                            alert('Please Enter Batch Qty Its Not Equal to Qty');
                            return true;
                        }
                        else {
                            return false;
                        }

                    }

                }

            }
        }
        else{
            return false;
        }
    }


    function CheckDuplBatchInUpd() {
        var actualdupl = false;
        var url = '@Url.Action("CheckNoDuplBatch")?Code=' + $('#UpdateCode').val();
        $.ajax({
            async: false,
            cache: false,
            url: url,
            type: "GET",
            dataType: "json",
            cache: false,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                $('#hdnuBatchNoDupl').val(data.BatchNoDupl);
            },
        });


        if ($('#hdnuBatchNoDupl').val() == "Y") {
            if ($("#hdnSType").val() == "RP" || $("#hdnSType").val() == "CP" || $("#hdnSType").val() == "IM" || $("#hdnSType").val() == "NS" || $("#hdnSType").val() == "IC" || $("#hdnSType").val() == "SX") {
                var DuplBatchArray = [];
                $('#ItmBtPREdt tr:not(:first)').each(function () {
                    var tds = $(this).find('td');
                    DuplBatchArray.push(tds.eq(1).text());
                })
                for (var i = 0; i < DuplBatchArray.length - 1; i++) {
                    for (var ai = i; ai < DuplBatchArray.length - 1; ai++) {
                        if (ai != i && DuplBatchArray[ai] == DuplBatchArray[i]) {
                            alert('Duplicate Batch Found Pls Check')
                            actualdupl = true;
                            return;

                        }
                    }

                }
            }

        }

        return actualdupl;
    }

    function CleanSalesSerial() {
        var ModelData = {};
        ModelData["tempId"] = $("#hdnutempId").val();
        ModelData["SubType"] = $("#hdnSType").val();
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Store"] = $('#UpdateStore').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("CleanStockSerialEntry")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
            },
            success: function (data) {
                if (data.Status == "Success") {
                    $('#ItemSerialSLEdt tbody tr').remove();
                }
            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }

    function CalcAddlDiscChargesOnTabEdit(){
        var justDCSerial = [];
        $('#addldiscchargesgridEdt tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Disc: tds.eq(2).text(),
                DiscCaption: tds.eq(1).text(),
                AddLess: tds.eq(3).text(),
                CalcOn: tds.eq(4).text(),
                DiscAmt: tds.eq(5).text(),
                PerValue: tds.eq(6).text()
            }
            justDCSerial.push(myDets);
        });
        var ModelData = {};
        ModelData["DiscChargeList"] = justDCSerial;
        ModelData["MainType"] = $("#hdnMType").val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["Qty"] = $("#UpdateQty").val();
        ModelData["Rate"] = $("#UpdateRate").val();
        ModelData["RateOn2"] = $('#UpdateRateOn2').is(':checked');
        ModelData["Qty2"] = $('#UpdateQty2').val();
        ModelData["tempId"] = $('#hdnutempId').val();
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Account"] = $('#Account').val();
        ModelData["SubType"] = $('#hdnSType').val();
        ModelData["NonStock"] = $("#NonStock").val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("CalDiscountChargesEdit")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforesend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == 'DiscNoAllow') {

                }
                else {
                    $('#edtdiscchargeDialog').html(data.Html);
                    $('#hdnuDiscChargeAmt').val(parseFloat(data.DiscAmt).toFixed(2))
                    Calculation1()
                }

            },
            error: function () {
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }


    function loadSchemeQtyDetailsUpd(){
        var ModelData = {};
        ModelData["Code"] = $('#UpdateCode').val();
        ModelData["Account"] = $('#Account').val();
        ModelData["Qty"] =$('#UpdateQty').val();
        ModelData["DocuDate"] =$('#DocuDate').val();
        ModelData["Type"] = $('#hdnType').val();
        ModelData["MainType"] = $('#hdnMType').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("GetSchemeQtyDetails")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                //if(parseFloat(result.Rate) != parseFloat(0)){
                //    $('#UpdateRate').val(parseFloat(result.Rate).toFixed(2));
                //}
                //if(parseFloat(result.Disc) != parseFloat(0)){
                //    $('#UpdateDisc').val(parseFloat(result.Disc).toFixed(2));
                //}
                   $('#addldiscchargesgridEdt tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.eq(0).text() == "6") {
                        tds.eq(2).html(parseFloat(result.Disc).toFixed(2));
                       }
                   });
                $('#hdnuItemSchemeCode').val(result.ItemSchemeCode);
                //if(parseFloat(result.DiscAmt) != parseFloat(0)){
                //    $('#UpdateDiscAmt').val(parseFloat(result.DiscAmt).toFixed(2));
                //}
                $('.spinner').hide();
            },
            error: function () {
                $('.spinner').hide();
                alert("10-An error occurred while processing the request.");
            }
        });
    }

    function btnStkHistory() {
        var url = "/Reports/ItemPartyHistory?ViewDataId=ItemPartyHistory&Module=Inventory&optiontype=R&optioncode=ItemPartyHistory&Header=Item-Party%20History&Controller2=ItemPartyHistory&Document=" + '@Model.Account' + "&AccountName=" + '@Model.AccountName' + "&Item=" + $('#UpdateCode').val();
        window.open(url, '_blank');
    }
      function loadStockAdjustEdit() {
          var ModelData = {};
                ModelData["Store"] = $("#UpdateStore").val();
                //ModelData["Party"] = $("#Store").val();
                ModelData["Code"] = $('#UpdateCode').val();
                ModelData["SubType"] = $("#hdnSType").val();
                ModelData["MainType"] = $("#hdnMType").val();
                ModelData["LocationCode"] = $("#LocationCode").val();
                ModelData["ChangeLog"] = $("#hdnchangelog").val();
                //ModelData["Qty"] = $("#txtQty").val();
                //ModelData["Qty2"] = $("#txtQty2").val();
                ModelData["RateOn2"] = $("#UpdateRateOn2").is(':checked');
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetStockAdjustInEdit")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#StockAdjustEditDialog').html(data.Html);
                    },
                    error: function () {
                        alert("Error occured while processing your request.");
                    }
                });
    }
</script>
<div class="example-modal">
    <div id="prodshwaddonmodel" class="modal modal-default" style="z-index:2500;overflow:unset;">
        <div class="modal-dialog modal-lg" style="width:840px;overflow:unset">
            <div id="prodshwDialog">
                @Html.Partial("PEditOnGrid", Model)
            </div>
        </div>
    </div>
</div>







<div class="example-modal">
    <div id="disccalcmodeledt" class="modal modal-default">
        <div class="modal-dialog" style="width:840px;overflow:unset">
            <div id="edtdiscchargeDialog">
                @Html.Partial("DiscountChargesEdit", Model)
            </div>
        </div>
    </div>
</div>




@Html.HiddenFor(x => x.tempId, new { @Id = "hdnutempId" })
@Html.HiddenFor(x => x.HSN, new { @Id = "hdnuHSN" })
@Html.HiddenFor(x => x.GSTCode, new { @Id = "hdnuGSTCode" })
@Html.HiddenFor(x => x.HSNName, new { @Id = "hdnuHSNName" })
@Html.HiddenFor(x => x.GSTCodeName, new { @Id = "hdnuGSTCodeName" })
@Html.HiddenFor(x => x.Store, new { @Id = "hdnuStore", @name = "hdnuStore" })
@Html.HiddenFor(x => x.StoreName, new { @Id = "hdnuStoreName" })
@Html.HiddenFor(x => x.LocationCode, new { @Id = "hdnuLocationCode" })
@Html.HiddenFor(x => x.Unit2, new { @Id = "hdnuUnit2" })
@Html.HiddenFor(x => x.BinNumber, new { @Id = "hdnuBinNumber" })
@Html.HiddenFor(x => x.IsBlanketOrder, new { @Id = "hdnuIsBlanketOrder" })
@Html.HiddenFor(x => x.Inclusive, new { @Id = "hdnuInclusive" })
@Html.HiddenFor(x => x.IsPickUp, new { @Id = "hdnuIsPickUp" })
@Html.HiddenFor(x => x.Qty, new { @Id = "hdnuQty" })
@Html.HiddenFor(x => x.Qty2, new { @Id = "hdnuQty2" })
@Html.HiddenFor(x => x.QtyTolePlus, new { @Id = "hdnuQtyTolePlus" })
@Html.HiddenFor(x => x.SerialReq, new { @Id = "hdnuSerialReq" })
@Html.HiddenFor(x => x.MinSaleRate, new { @Id = "hdnuMinSaleRate" })
@Html.HiddenFor(x => x.IsBatchReqd, new { @Id = "hdnuIsBatchReqd" })
@Html.HiddenFor(x => x.BatchNoDupl, new { @Id = "hdnuBatchNoDupl" })
@Html.HiddenFor(x => x.RateType, new { @Id = "hdnuRateType" })
@Html.HiddenFor(x => x.RateTypeTaxable, new { @Id = "hdnuRateTypeTaxable" })
@Html.HiddenFor(x => x.RateCalcType, new { @Id = "hdnuRateCalcType" })
@Html.HiddenFor(x => x.DiscChargeAmt, new { @Id = "hdnuDiscChargeAmt" })
@Html.HiddenFor(x => x.DiscNotAllowed, new { @Id = "hdnuDiscNotAllowed" })
@Html.HiddenFor(x => x.IsStockSerial, new { @Id = "hdnuIsStockSerial" })
@Html.HiddenFor(x => x.PriceDiscCode, new { @Id = "hdnuPriceDiscCode" })
@Html.HiddenFor(x => x.ClassValues1, new { @Id = "hdnuClassValues1" })
@Html.HiddenFor(x => x.ClassValues2, new { @Id = "hdnuClassValues2" })
@Html.HiddenFor(x => x.hdnAddDisChgSvd, new { @Id = "hdnuAddDisChgSvd" })
@Html.HiddenFor(x => x.PriceRateCode, new { @Id = "hdnuPriceRateCode" })
@Html.HiddenFor(x => x.ItemSchemeCode, new { @Id = "hdnuItemSchemeCode" })
@Html.HiddenFor(x => x.DiscOnTaxable, new { @Id = "hdnuDiscOnTaxable" })
<input id="hdnStkAdjEditSaved" hidden="hidden">