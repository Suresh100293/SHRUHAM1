@model ALT_ERP3.Areas.Accounts.Models.OtherTransactModel
@using Common
<style>
</style>
<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title"><b></b></h4>
        </div>
        <div class="modal-body" style="min-height:500px;">
            <div class="form-group">
                <label class="col-sm-1 control-label">Account:</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(m => m.Code, new { @style = "width:99%; margin-top:2px;height:25px;", @class = "input-large search-query", @Name = "txtAccount", @Id = "txtAccount" })
                </div>
                <div class="col-sm-2">
                    <label class="col-sm-6 control-label" id="lblBalancetxtAccount" style="width:auto;padding-right:0px;padding-left:0px;">Ledger Balance: </label>
                    <label class="col-sm-6 control-label" id="lbltxtAccountBalance" style="margin-top:-1px;font-weight:bolder;font-size:11pt;font-family:Verdana;">&nbsp;&nbsp;@Model.BalanceAmt</label>
                </div>

                @Html.TextBoxFor(x => x.tempId, new { @class = "form-control", @id = "addtempId", @Name = "addtempId", @style = "text-align:right;display:none;" })
                <div id="actyperadio">
                    @if (Model.Mode != "Add")
                    {
                        <div class="col-sm-2">

                            <div class="col-sm-6 control-label" style="padding:0px;">
                                Payment:  @Html.RadioButtonFor(x => x.AmtType, "Payment", new { @style = "padding-left:0px;width:20px;height:20px;", @disabled = "disabled" })
                            </div>

                            <div class="col-sm-6 control-label" style="padding:0px;">
                                Receipt: @Html.RadioButtonFor(x => x.AmtType, "Receipt", new { @style = "padding-left:0px;width:20px;height:20px;", @disabled = "disabled" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-2">
                            <div class="col-sm-6 control-label" style="padding:0px;">
                                Payment:  @Html.RadioButtonFor(x => x.AmtType, "Payment", new { @style = "padding-left:0px;width:20px;height:20px;" })
                            </div>

                            <div class="col-sm-6 control-label" style="padding:0px;">
                                Receipt: @Html.RadioButtonFor(x => x.AmtType, "Receipt", new { @style = "padding-left:0px;width:20px;height:20px;" })
                            </div>
                        </div>
                    }
                </div>

                <div class="col-sm-2 control-label" style="padding-top:0px;">
                    <label class="col-sm-4 control-label">Amount:</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @id = "addAmt", @Name = "addAmt", @style = "text-align:right;" })
                    </div>
                </div>
            </div>
            <div class="tab">
                <button class="tablinks ItemDesign NarrTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable5')" id="btnNarrDesign">Narr</button>
                <button class="tablinks ItemDesign ITemDetailTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable4')" id="btnCostDesign">Item Master</button>
                <button class="tablinks ItemDesign CostCenterTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable')" id="btnCostCenterDesign">Cost Center</button>
                <button class="tablinks ItemDesign LRTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable1')" id="btnLRDesign">Lorry Receipt</button>
                <button class="tablinks ItemDesign FMTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable2')" id="btnFMDesign">Freight Memo</button>
                <button class="tablinks ItemDesign GSTTabDesign" onclick="openCityNew(event, 'TabdivLedgerTable3')">GST Details</button>
                <div class="tablinks col-sm-3" style="padding:0px;float: left;">
                    <label class="col-sm-6 control-label">Related Refer Account:</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.RelatedChoice, new { @style = "width:99%; margin-top:2px;height:25px;", @class = "input-large search-query", @Name = "RelatedChoice", @Id = "RelatedChoice", @value = Model.RelatedChoice })
                    </div>
                </div>
                <div class="tablinks col-sm-2" style="padding:0px;float: right;width:auto;">
                    <label class="col-sm-5 control-label hidden" id="ShowDriverOrVehicleLabel" style="width:auto;"></label>
                </div>

            </div>

            <div id="TabdivLedgerTable" class="tabcontent tabcontentNew" style="min-height:400px;max-height:400px;overflow-y:scroll;">
                <div id="TruckRelatedDialog" class="hidden">
                    @Html.Partial("TruckDetails")
                </div>
                <div id="BTNDialog" @*hidden="hidden"*@>
                </div>
            </div>
            <div id="TabdivLedgerTable1" class="tabcontent tabcontentNew" style="min-height:400px;max-height:400px;overflow-y:scroll;">
                <div id="LRDetailsDialog" class="hidden">
                    @Html.Partial("LRDetails")
                </div>
            </div>
            <div id="TabdivLedgerTable2" class="tabcontent tabcontentNew" style="min-height:400px;max-height:400px;overflow-y:scroll;">
                <div id="FMDetailsDialog" class="hidden">
                    @Html.Partial("FMDetails")
                </div>
            </div>
            <div id="TabdivLedgerTable3" class="tabcontent tabcontentNew" style="min-height:360px;max-height:360px;overflow-y:scroll;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">GST/HSN Cut?</label>
                    <div class="col-sm-1">
                        @Html.CheckBoxFor(x => x.GSTFlag, new { @id = "addGSTNoItc", @Name = "addGSTNoItc" })
                    </div>
                    <label class="col-sm-1 control-label">GST/HSN</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(x => x.GSTCode, new { @class = "input-large search-query", @id = "addGSTCode", @Name = "addGSTCode", @style = "width:99%;" })
                    </div>
                    <label class="col-sm-1 control-label">Taxable</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.Taxable, new { @class = "form-control", @id = "addTaxable", @Name = "addTaxable" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">IGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTRate, new { @class = "form-control", @id = "addIGSTRate", @Name = "addIGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">IGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.IGSTAmt, new { @class = "form-control", @id = "addIGSTAmt", @Name = "addIGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">CGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTRate, new { @class = "form-control", @id = "addCGSTRate", @Name = "addCGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">CGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.CGSTAmt, new { @class = "form-control", @id = "addCGSTAmt", @Name = "addCGSTAmt" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-1 control-label">SGST Rate</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTRate, new { @class = "form-control", @id = "addSGSTRate", @Name = "addSGSTRate" })
                    </div>
                    <label class="col-sm-1 control-label">SGST Amt</label>
                    <div class="col-sm-1">
                        @Html.TextBoxFor(x => x.SGSTAmt, new { @class = "form-control", @id = "addSGSTAmt", @Name = "addSGSTAmt" })
                    </div>
                </div>
            </div>
            <div id="TabdivLedgerTable4" class="tabcontent tabcontentNew" style="min-height:400px;max-height:400px;overflow-y:scroll;">
                <div id="ItemRelatedDialog">
                    @Html.Partial("ItemDetails")
                </div>
            </div>
            <div id="TabdivLedgerTable5" class="tabcontent tabcontentNew" style="min-height:400px;max-height:400px;overflow-y:scroll;">
                <div class="form-group">
                    <label class="col-sm-1 control-label">Remark</label>
                    <div class="col-sm-11">
                        @Html.TextAreaFor(x => x.Narr, new { @id = "txtNarr", @name = "txtNarr", @Value = @Model.Narr, @cols = 140, @rows = 2 })
                    </div>
                </div>
            </div>

            @*<div class="" style="position:relative;background-color:white;padding:2px;color:unset;width:85%">
                    <label class="col-sm-1 control-label">Remark:</label>
                    <div class="col-sm-11">
                        @Html.TextAreaFor(x => x.Narr, new { @id = "txtNarr", @name = "txtNarr", @Value = @Model.Narr, @cols = 140, @rows = 2 })
                    </div>
                </div>*@
        </div>
        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
            <button type="button" class="btn btn-success" id="btnadddetSave">Save</button>
            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
        </div>
    </div>
</div>
<script>
    $(document).ready(function ()
    {
		$("#addAmt").constrain({ allow: { regex: "[0-9.]" } });
        loadaccount1();
        loadRelatedChoiceTo();
        loadGSTCodeList();
        document.getElementById("btnNarrDesign").click();
        if ('@Model.SessionFlag' == "Add")
        {
            $('#TruckRelatedDialog').removeClass("hidden");
        }
		if ('@Model.PartialDivName' == "Y"  ) {

            $('#TruckRelatedDialog').removeClass("hidden");
            $('#LRDetailsDialog').addClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
            $('#BTNDialog').addClass("hidden");
        }
        else if ('@Model.PartialDivName' == "Branch"   ) {
            $('#LRDetailsDialog').addClass("hidden");
            $('#TruckRelatedDialog').addClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
            $('#BTNDialog').removeClass("hidden");
        }
        else if ('@Model.PartialDivName' == "LR"   ) {
            $('#LRDetailsDialog').removeClass("hidden");
            $('#TruckRelatedDialog').addClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
            $('#BTNDialog').addClass("hidden");
        }
        else if ('@Model.PartialDivName' == "EY" ) {

            $('#TruckRelatedDialog').removeClass("hidden");
            $('#LRDetailsDialog').addClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
            $('#BTNDialog').addClass("hidden");
        }
        else if ('@Model.PartialDivName' == "FM" ) {
            $('#FMDetailsDialog').removeClass("hidden");
            $('#TruckRelatedDialog').addClass("hidden");
            $('#LRDetailsDialog').addClass("hidden");
            $('#BTNDialog').addClass("hidden");
        }
        if ('@Model.SaveCostCenter' == "false" || '@Model.SaveCostCenter' == "False") {
            $("#truckrelatedtable tbody").hide();
        } else {
            $("#truckrelatedtable tbody").show();
        }

        $('#addGSTCode').change(function () {
            var url = '@Url.Action("GetGSTRateDetail")?Code=' + $('#addGSTCode').val() + '&Party=' + $('#BankCashCode').val() + '&DocDate=' + $('#DocuDate').val();
            $.ajax({
                type: "GET",
                dataType: "json",
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#addIGSTRate').val(data.IGSTRate);
                    $('#addCGSTRate').val(data.CGSTRate);
                    $('#addSGSTRate').val(data.SGSTRate);
                    SetValuesInTable();
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $('#addGSTNoItc').change(function () {
            SetValuesInTable();
        });
        $('#addIGSTRate').focusout(function () {
            SetValuesInTable();
        });
        $('#addSGSTRate').focusout(function () {
            SetValuesInTable();
        });
        $('#addCGSTRate').focusout(function () {
            SetValuesInTable();
        });
        $("#addAmt").focusout(function (event) {
            
            $("#addTaxable").val($("#addAmt").val());
            SetValuesInTable();
        });

        $("input[name$='rdbtnRelatedAccount'],input[name$='AmtType']").change(function () {
            if ($("#txtAccount").val() == null || $("#txtAccount").val() == '') {
                alert("Please Select Account.....!");
                return;
            }
            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["Code"] = $("#txtAccount").val();
            ModelData["AmtType"] = $("input[name=AmtType]:checked").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("RelatedToDecide")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $("#hdnPartialDivName").val(data.PartialDivName);
                    $("#hdnReferAccReq").val(data.ReferAccReq);
                    $("#hdnCCAmtMatch").val(data.CostCenterTally);
                    if (data.GstFlag == true) {
                        $("#addGSTNoItc").prop("checked", true);
                    } else {
                        $("#addGSTNoItc").prop("checked", false);
                    }
                    if (data.GSTCode == "0") {
                        //$('#addGSTCode').val(null).trigger("change");
                        $('#addGSTCode').select2('data', { id: '', text: '' });
                        $('#addIGSTRate,#addCGSTRate,#addSGSTRate').val("0");
                    }
                    else {
                        $('#addGSTCode').select2('data', { id: data.GSTCode, text: data.GSTName });
                        $('#addIGSTRate').val(data.IGST);
                        $('#addCGSTRate').val(data.CGST);
                        $('#addSGSTRate').val(data.SGST);
                    }
                    if (data.PartialDivName == "Y") {
                        $('#TruckRelatedDialog').removeClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                        var ModelData = {};
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewList")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').removeClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "HY") {
                        var ModelData = {};
                        ModelData["RelatedTo"] = data.Name;
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewListE")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').removeClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                                $('#RelatedTo').select2('data', { id: data.RelatedTo, text: data.RelatedToN });
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "N") {
                        var ModelData = {};
                        ModelData["RelatedTo"] = data.Name;
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewListE")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').addClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                                $('#RelatedTo').select2('data', { id: data.RelatedTo, text: data.RelatedToN });
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "LR" /*&& AccReqRelated*/) {
                        $('#LRDetailsDialog').removeClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                    else if (data.PartialDivName == "FM" /*&& AccReqRelated*/) {
                        $('#FMDetailsDialog').removeClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                    else if (data.PartialDivName == "Branch" /*&& AccReqRelated*/) {
                        $('#BTNDialog').html('');
                        $('#BTNDialog').html(data.Html);
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').removeClass("hidden");
                    }
                    else {
                        $('#BTNDialog').html('');
                        $('#TruckRelatedDialog').html('');
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $("#txtAccount").change(function (event) {
            event.preventDefault();
            var ModelData = {};
            ModelData["DocuDate"] = $("#DocuDate").val();
            ModelData["HSNCODE"] = $("#HSNCODE").val();
            ModelData["Code"] = $("#txtAccount").val();
            ModelData["AmtType"] = $("input[name=AmtType]:checked").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("RelatedToDecide")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();

                    if (data.ShowDriverOrVehicle == true) {
                        $("#ShowDriverOrVehicleLabel").removeClass("hidden");
                        $('#ShowDriverOrVehicleLabel').html(data.ShowDriverOrVehicleLabel);

                    }
                    else {
                        $("#ShowDriverOrVehicleLabel").addClass("hidden");
                    }
                    if (data.PartialDivName == "Y")
                    {
                        if (data.AllowToChange == false)
                        {
                            $("#btnCostCenterDesign,#btnCostDesign").prop("disabled", false);
                            $("#btnLRDesign,#btnFMDesign").prop("disabled", true);
                        }
                        else
                        {
                            $("#btnCostCenterDesign,#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", false);
                        }
                        document.getElementById("btnCostCenterDesign").click();

                    }
                    else if (data.PartialDivName == "LR")
                    {
                        if (data.AllowToChange == false) {
                            $("#btnLRDesign").prop("disabled", false);
                            $("#btnFMDesign,#btnCostCenterDesign,#btnCostDesign").prop("disabled", true);
                        }
                        else {
                            $("#btnCostCenterDesign,#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", false);
                        }
                        document.getElementById("btnLRDesign").click();
                    }
                    else if (data.PartialDivName == "FM")
                    {
                        if (data.AllowToChange == false) {
                            $("#btnFMDesign").prop("disabled", false);
                            $("#btnLRDesign,#btnCostCenterDesign,#btnCostDesign").prop("disabled", true);
                        }
                        else {
                            $("#btnCostCenterDesign,#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", false);
                        }
                        document.getElementById("btnFMDesign").click();
                    }
                    else if (data.PartialDivName == "Branch")
                    {
                        if (data.AllowToChange == false) {
                            $("#btnCostCenterDesign").prop("disabled", false);
                            $("#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", true);
                        }
                        else {
                            $("#btnCostCenterDesign,#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", false);
                        }
                        document.getElementById("btnCostCenterDesign").click();
                    }
                    else
                    {
                        $("#btnCostCenterDesign,#btnCostDesign,#btnLRDesign,#btnFMDesign").prop("disabled", false);
                    }

                    if (data.GstFlag == true) {
                        $("#addGSTNoItc").prop("checked", true);
                    } else {
                        $("#addGSTNoItc").prop("checked", false);
                    }
                    if (data.GSTCode == "0") {
                        //$('#addGSTCode').val(null).trigger("change");
                        $('#addGSTCode').select2('data', { id: '', text: '' });
                        $('#addIGSTRate,#addCGSTRate,#addSGSTRate').val("0");
                    }
                    else {
                        $('#addGSTCode').select2('data', { id: data.GSTCode, text: data.GSTName });
                        $('#addIGSTRate').val(data.IGST);
                        $('#addCGSTRate').val(data.CGST);
                        $('#addSGSTRate').val(data.SGST);
                    }
                    $('#lblBalancetxtAccount').html(data.CurrBranch);
                    $('#lbltxtAccountBalance').html(data.Balance);
                    $("#hdnPartialDivName").val(data.PartialDivName);
                    $("#hdnReferAccReq").val(data.ReferAccReq);
                    $("#hdnCCAmtMatch").val(data.CostCenterTally);
                    if (data.PartialDivName == "Y") {
                        $('#TruckRelatedDialog').removeClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                        var ModelData = {};
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewList")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').removeClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "HY") {
                        var ModelData = {};
                        ModelData["RelatedTo"] = data.Name;
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewListE")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').removeClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                                $('#RelatedTo').select2('data', { id: data.RelatedTo, text: data.RelatedToN });
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "N") {
                        var ModelData = {};
                        ModelData["RelatedTo"] = data.Name;
                        ModelData["PartialDivName"] = data.PartialDivName;
                        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
                        ModelData["tempId"] = $('#hdntempId').val()
                        ModelData["Code"] = $("#txtAccount").val();
                        ModelData["DocuDate"] = $("#DocuDate").val();
                        var DTO = { Model: ModelData };
                        var url = '@Url.Action("GetTruckTypeWiseViewListE")';
                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            data: JSON.stringify(DTO),
                            cache: false,
                            url: url,
                            contentType: "application/json;charset=utf-8",
                            beforeSend: function () {
                                $('.spinner').show();
                            },
                            success: function (data) {
                                $('.spinner').hide();
                                $('#TruckRelatedDialog').html('');
                                $('#TruckRelatedDialog').html(data.Html);
                                $('#TruckRelatedDialog').addClass("hidden");
                                $('#LRDetailsDialog').addClass("hidden");
                                $('#FMDetailsDialog').addClass("hidden");
                                $('#BTNDialog').addClass("hidden");
                                $('#RelatedTo').select2('data', { id: data.RelatedTo, text: data.RelatedToN });
                            },
                            error: function () {
                                $('.spinner').hide();
                                alert("error occured while processing your request.");
                            }
                        });
                    }
                    else if (data.PartialDivName == "LR" /*&& AccReqRelated*/) {
                        $('#LRDetailsDialog').removeClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                    else if (data.PartialDivName == "FM" /*&& AccReqRelated*/) {
                        $('#FMDetailsDialog').removeClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                    else if (data.PartialDivName == "Branch" /*&& AccReqRelated*/) {
                        $('#BTNDialog').html('');
                        $('#BTNDialog').html(data.Html);
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#BTNDialog').removeClass("hidden");
                    }
                    else {
                        $('#BTNDialog').html('');
                        $('#TruckRelatedDialog').html('');
                        $('#FMDetailsDialog').addClass("hidden");
                        $('#TruckRelatedDialog').addClass("hidden");
                        $('#LRDetailsDialog').addClass("hidden");
                        $('#BTNDialog').addClass("hidden");
                    }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });
        $(".LRTabDesign").click(function (event) {
            event.preventDefault();
            $('#TruckRelatedDialog').addClass("hidden");
            $('#LRDetailsDialog').removeClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
        });
        $(".FMTabDesign").click(function (event) {
            event.preventDefault();
            $('#TruckRelatedDialog').addClass("hidden");
            $('#LRDetailsDialog').addClass("hidden");
            $('#FMDetailsDialog').removeClass("hidden");
        });
        $(".CostCenterTabDesign").click(function (event) {
            event.preventDefault();
            $('#TruckRelatedDialog').removeClass("hidden");
            $('#LRDetailsDialog').addClass("hidden");
            $('#FMDetailsDialog').addClass("hidden");
        });
        $('#btnadddetSave').click(function (event) {
            event.preventDefault();
            $("#btnadddetSave").prop("disabled", true);
            var ModelData = {};
            var Flg = true;
            var rlarray = [];
            var TotalAmount = 0;
            if ($("#txtAccount").val() == null || $("#txtAccount").val() == "") {
                alert("Please Select Account....!");
                $("#btnadddetSave").prop("disabled", false);
                return;
            }
            
            if ($("#hdnAllowZeroAmt").val() !="True") {
                if (parseInt($("#addAmt").val()) <= 0) {
                    alert("Please Enter Amount....!");
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            if (parseFloat($("#hdnOSAmt").val()) != 0) {
                if (parseFloat($("#hdnOSAmt").val()) <= parseFloat($("#addAmt").val())) {

                } else {
                    alert("This Document Adjusted In Outstanding Table and Adjust Amount Is " + parseFloat($("#hdnOSAmt").val()).toFixed(2) + " .\nSo,This Document Amount Required Minimum : " + parseFloat($("#hdnOSAmt").val()).toFixed(2) + "  Rupees...");
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            if ($("#hdnReferAccReq").val() == "true" || $("#hdnReferAccReq").val() == "True") {
                if ($("#RelatedChoice").val() == "" || $("#RelatedChoice").val() == null) {
                    alert("Please Select Refer Account....!");
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            if ($("#RelatedTo").val() == "000100949" || $("#RelatedTo").val() == "000100950" || $("#RelatedTo").val() == "000100343" || $("#RelatedTo").val() == "000100736" || $("#RelatedTo").val() == "000100653" || $("#RelatedTo").val() == "000100811" || $("#RelatedTo").val() == "000100326" || $("#RelatedTo").val() == "000100951" || $("#RelatedTo").val() == "000100952" || $("#RelatedTo").val() == "000100404" || $("#RelatedTo").val() == "000100781" || $("#RelatedTo").val() == "000100953" || $("#RelatedTo").val() == "000100954" || $("#RelatedTo").val() == "000100788" || $("#RelatedTo").val() == "000101135" || $("#RelatedTo").val() == "000100789" || $("#RelatedTo").val() == "000100346" || $("#RelatedTo").val() == "000100341" || $("#RelatedTo").val() == "000100345") {
                if ($("#RelatedChoice").val() == "" || $("#RelatedChoice").val() == null) {
                    alert("Please Select Refer Account....!");
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            var mValidate = '';
            // Vehicle Or VehicleExp Validation
            {
                //if (mValidate == 'Y' && ($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                //    alert('Amount does not Tally please check..');
                //    $("#btnadddetSave").prop("disabled", false);
                //    return;
                //}
                
                var Message = "";
                if ($('#SaveCostCenter').is(':checked')) {
                    //Accident Expenses -- Body Building Expenses  --  Principal Amount Expense
                    if ($('#RelatedTo').val() == "000100949" || $('#txtAccount').val() == "000100949" || $('#RelatedTo').val() == "000100950" || $('#txtAccount').val() == "000100950" || $('#RelatedTo').val() == "000100954" || $('#txtAccount').val() == "000100954") {
                        $('#truckrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F002") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());
                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val())) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                    }
                    //Other Charges  --  Miscellaneous Charges
                    else if ($('#RelatedTo').val() == "000100404" || $('#txtAccount').val() == "000100404" || $('#RelatedTo').val() == "000100952" || $('#txtAccount').val() == "000100952") {
                        $('#truckrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F001") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());
                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val())) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                    }
                    //Diesel Expenses --
                    else if ($('#RelatedTo').val() == "000100343" || $('#txtAccount').val() == "000100343" ) {
                        $('#itemrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F006") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());

                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val()) && ($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                    }
                    //Spare Parts Expenses
                    else if ($('#RelatedTo').val() == "000100346" || $('#txtAccount').val() == "000100346") {
                        $('#itemrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F001") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || tds.find(".addontxtfvalue").val() == "Select") {
                                    mValidate = 'Y';
                                    Message += "Product Group Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F003") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || tds.find(".addontxtfvalue").val() == "Select") {
                                    mValidate = 'Y';
                                    Message += "Item Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Please Enter Cost ....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F007") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Please Enter Warranty KM ....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F010") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Please Enter Warranty Days ....!\n";
                                }
                            }
                            //if (tds.eq(0).text() == "F008") {
                            //    if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) <= 0) {
                            //        mValidate = 'Y';
                            //        Message += "Please Enter Current KM ....!\n";
                            //    }
                            //}
                            //if (tds.eq(0).text() == "F009") {
                            //    if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                            //        mValidate = 'Y';
                            //        Message += "Please Enter Due KM ....!\n";
                            //    }
                            //}
                            if (tds.eq(0).text() == "F006") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());

                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val()) && ($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                        //$('#truckrelatedtable tbody tr').each(function () {
                        //    var tds = $(this).find('td');
                        //    if (tds.eq(0).text() == "F001") {
                        //        if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null) {
                        //            mValidate = 'Y';
                        //            Message += "Please Enter Receipt No ....!\n";
                        //        }
                        //    }
                        //});
                    }
                    //Trip Expenses
                    else if ($('#RelatedTo').val() == "000100341" || $('#txtAccount').val() == "000100341") {
                        $('#truckrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F003") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Trip Days Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Starting kms Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F005") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Ending kms Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F006") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Charge KMS Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F007") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Per KM Rate Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F008") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Trip Charges Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F008") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());

                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val()) && ($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                    }
                    //Tyres Expenses
                    else if ($('#RelatedTo').val() == "000100345" || $('#txtAccount').val() == "000100345") {
                        var StockRemould = true;
                        if ($("#RelatedChoice").val() == "Remould" || $("#RelatedChoice").val() == "Tyrestock") {
                            StockRemould = false;
                        }
                        $('#itemrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F001") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || tds.find(".addontxtfvalue").val() == "Select") {
                                    mValidate = 'Y';
                                    Message += "Product Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Cost Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F007") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Warranty KM Required....!\n";
                                }
                            }
                            if (tds.eq(0).text() == "F010") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                    mValidate = 'Y';
                                    Message += "Warranty Days Required....!\n";
                                }
                            }
                            if (StockRemould) {
                                if (tds.eq(0).text() == "F008") {
                                    if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                        mValidate = 'Y';
                                        Message += "Current KM Required....!\n";
                                    }
                                }
                                if (tds.eq(0).text() == "F009") {
                                    if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                        mValidate = 'Y';
                                        Message += "Due KM Required....!\n";
                                    }
                                }
                            }
                            if (tds.eq(0).text() == "F006") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());
                                //if (parseFloat($('#addAmt').val()) != parseFloat(tds.find(".addontxtfvalue").val()) && ($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                                //    mValidate = 'Y';
                                //    Message += "Amount does not Tally please check..!\n";
                                //}
                            }
                        });
                        $('#truckrelatedtable tbody tr').each(function () {
                            var tds = $(this).find('td');
                            if (tds.eq(0).text() == "F001") {
                                if (tds.find(".addontxtfvalue").val() == "Select") {
                                    mValidate = 'Y';
                                    Message += "Tyre Type Required....!\n";
                                }
                            }
                            if (StockRemould) {
                                if (tds.eq(0).text() == "F002") {
                                    if (tds.find('input[name="addontxtfvalue"]:checked').val() == "" || tds.find('input[name="addontxtfvalue"]:checked').val() == null) {
                                        mValidate = 'Y';
                                        Message += "Please Select Install For Option....!\n";
                                    }
                                }
                                if (tds.eq(0).text() == "F003") {
                                    if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null || parseFloat(tds.find(".addontxtfvalue").val()) < 0) {
                                        mValidate = 'Y';
                                        Message += "Tyre Placed No Required....!\n";
                                    }
                                }
                            }
                            if (tds.eq(0).text() == "F004") {
                                if (tds.find(".addontxtfvalue").val() == "" || tds.find(".addontxtfvalue").val() == null) {
                                    mValidate = 'Y';
                                    Message += "Tyre SerialNo Required....!\n";
                                }
                            }
                        });
                    }
                }
                else
                {
                    var compareOrNOt = false;
                    $('#itemrelatedtable tbody tr').each(function () {
                        var tds = $(this).find('td');

                        if (tds.eq(0).text() == "F003")
                        {
                            if (tds.find(".addontxtfvalue").val() != "" && tds.find(".addontxtfvalue").val() !="Select") {
                                compareOrNOt = true;
                            }
                        }
                        if (compareOrNOt)
                        {
                            if (tds.eq(0).text() == "F006") {
                                TotalAmount += parseFloat(tds.find(".addontxtfvalue").val());
                            }
                        }

                    });
                }
                
                if (mValidate == 'Y' && Message != "") {
                    alert(Message);
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            // Branch Receipt Validation
            if ($('#hdnPartialDivName').val() == "Branch" && $("input[name=AmtType]:checked").val() == "Receipt") {
                if (($('#txtBTNNOCombo').val() == "" || $('#txtBTNNOCombo').val() == null)) {
                    mValidate = 'Y';
                    Message += "Please Select BTN No ....!\n";
                }
                if (parseFloat($("#BTNTotalAmt").val()) < 0) {
                    mValidate = 'Y';
                    Message += "Please Enter BTN Amt ....!\n";
                }
                if (mValidate == 'Y' && Message != "") {
                    alert(Message);
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }
            // LR Validation
            var mlrqty = 0;
            $('#lrtabledata tbody tr').each(function () {
                
                var tds = $(this).find('td');
                mlrqty = parseFloat(mlrqty) + parseFloat(tds.eq(3).text());
            });
            TotalAmount += mlrqty;
            if ($('#hdnPartialDivName').val() == "LR") {

                //if ($('#lrtabledata tbody tr').length > 0) {
                //    if (($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                //        if (mlrqty != parseFloat($("#addAmt").val())) {
                //            alert('LR Amount total does not Tally please check..');
                //            $("#btnadddetSave").prop("disabled", false);
                //            return;
                //        }
                //    }
                //}
            }
            // FM Validation
            var mfmqty = 0;
            $('#FMtabledata tbody tr').each(function () {
                var tds = $(this).find('td');
                mfmqty = parseFloat(mfmqty) + parseFloat(tds.eq(3).text());
            });
            TotalAmount += mfmqty;
            if ($('#hdnPartialDivName').val() == "FM") {


                //if ($('#FMtabledata tbody tr').length > 0) {
                //    if (($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                //        if (mfmqty != parseFloat($("#addAmt").val())) {
                //            alert('FM Amount total does not Tally please check..');
                //            $("#btnadddetSave").prop("disabled", false);

                //            return;
                //        }
                //    }
                //}
            }

            if (($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
                if (parseFloat(TotalAmount) != parseFloat($("#addAmt").val())) {
                    alert('Amount total does not Tally please check..');
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
            }


            //***************************
            var ModelData = {};
            //LR Details Save
            var myBatchArray = [];
            $('#lrtabledata tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets = {
                    tempId: tds.eq(1).text(),
                    LRNumber: tds.eq(2).text(),
                    LRAmt: tds.eq(3).text(),
                    ConsignmentKey: tds.eq(5).text(),
                }
                myBatchArray.push(myDets);
            });
            ModelData["LRDetailList"] = myBatchArray;
            //FM Details Save
            var myBatchArray2 = [];
            $('#FMtabledata tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets2 = {
                    tempId: tds.eq(1).text(),
                    FMNumber: tds.eq(2).text(),
                    FMAmt: tds.eq(3).text(),
                    FreightMemoKey: tds.eq(5).text(),
                }
                myBatchArray2.push(myDets2);
            });
            ModelData["FMDetailList"] = myBatchArray2;
            //AddON Details Save
            var rlarray = [];
            if ($('#SaveCostCenter').is(':checked')) {
                $('#truckrelatedtable tbody tr').each(function () {
                    var tds = $(this).find('td');
                    var ApplyCode = "";
                    if (($('#RelatedTo').val() == "000100345" || $("#txtAccount").val() == "000100345") && tds.eq(0).text() == "F006") {
                        ApplyCode = $("input[class=addontxtfvalue]:checked").val();
                    }
                    else {
                        ApplyCode = tds.find(".addontxtfvalue").val();
                    }
                    var myDets2 = {
                        Fld: tds.eq(0).text(),
                        Head: tds.eq(1).text(),
                        ApplCode: ApplyCode,
                        FldType: tds.eq(3).text(),
                    }
                    rlarray.push(myDets2);
                });
            }
            ModelData["AddOnList"] = rlarray;
            var itemlarray = [];
            $('#itemrelatedtable tbody tr').each(function () {
                debugger;
                var tds = $(this).find('td');
                
                if (tds.eq(0).text().trim()=="F003") {
                    var myDets2 = {
                        Fld: tds.eq(0).text(),
                        Head: tds.eq(1).text(),
                        ApplCode: $("#SearchItem").val(),
                        FldType: tds.eq(3).text(),
                    }
                    itemlarray.push(myDets2);
                } else {
                    var myDets2 = {
                        Fld: tds.eq(0).text(),
                        Head: tds.eq(1).text(),
                        ApplCode: tds.find(".addontxtfvalue").val(),
                        FldType: tds.eq(3).text(),
                    }
                    itemlarray.push(myDets2);
                } 
                
            });
            ModelData["ItemList"] = itemlarray;
            //Tyre Stock Details Save
            var tystksrls = [];
            $('#tblTyreDocDetails tbody tr').each(function () {
                var tds = $(this).find('td');
                var myDets2 = {
                    TableKey: tds.eq(0).text(),
                    Code: tds.eq(1).text(),
                    ApplCode: tds.find(".tyretxtfvalue").val(),
                    Srl: tds.eq(2).text(),
                    DocuDate: tds.eq(3).text(),
                    ActWt: tds.eq(4).text(),
                    FEndDate: tds.eq(5).text(),
                    ChgWt: tds.eq(6).text(),
                    Name: tds.eq(7).text(),
                    StockAt: tds.eq(8).text(),
                    TyreNo: tds.eq(9).text(),
                    StepneeNo: tds.eq(10).text(),
                    IsActive: tds.eq(11).text()
                }
                tystksrls.push(myDets2);
            });
            ModelData["TyreStockList"] = tystksrls;
            ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
            ModelData["SubType"] = $("#hdnSubType").val();
            ModelData["MainType"] = $("#hdnMainType").val();
            ModelData["Type"] = $("#hdnType").val();
            ModelData["AmtType"] = $("input[name=AmtType]:checked").val();
            ModelData["Code"] = $("#txtAccount").val();
            ModelData["BankCashCode"] = $("#BankCashCode").val()
            ModelData["Amt"] = $("#addAmt").val();
            ModelData["AccountName"] = $("#txtAccount").select2('data').text;
            ModelData["tempId"] = $('#hdntempId').val();
            ModelData["RelatedTo"] = $('#RelatedTo').val();
            ModelData["RelatedChoice"] = $('#RelatedChoice').val();
            ModelData["Narr"] = $('#txtNarr').val();
            ModelData["PartialDivName"] = $('#hdnPartialDivName').val();
            ModelData["NoDuplExpDt"] = $('#hdnNoDuplExpDt').val();
            ModelData["DuplExpDtConfirm"] = $('#hdnDuplExpDtConfirm').val();
            ModelData["ParentKey"] = $("#hdnParentKey").val();
            ModelData["BTNNO"] = $("#hdnBTNNO").val();
            ModelData["BTNNOCombo"] = $("#hdnBTNNOCombo").val();
            ModelData["BTNTotalAmt"] = $("#hdnBTNTotalAmt").val();
            ModelData["BTNBalAmt"] = $("#hdnBTNBalAmt").val();
            ModelData["TDSFlag"] = $("#addTDSFlag").prop('checked');
            ModelData["GSTFlag"] = $("#addGSTNoItc").prop('checked');
            ModelData["TDSRate"] = $("#addTDSRate").val();
            ModelData["IGSTRate"] = $("#addIGSTRate").val();
            ModelData["CGSTRate"] = $("#addCGSTRate").val();
            ModelData["SGSTRate"] = $("#addSGSTRate").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("ConfirmRelationAddEdit")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();

                    if (data.Status == "ConfirmError") {
                        var confrm = confirm(data.Message);
                        $("#btnadddetSave").prop("disabled", false);
                        if (confrm == false) {
                            $("#btnadddetSave").prop("disabled", false);
                            return;
                        } else {
                            AddEditDetails();
                        }
                    }
                    else if (data.Status == "ConfirmError1") {
                        $("#btnadddetSave").prop("disabled", false);
                        alert(data.Message);
                    } else {
                        AddEditDetails();
                    }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });

    });

    function AutoCalculateTaxableAmt() {
        var TaxableAmt = 0;
        $('#itemrelatedtable tbody tr').each(function () {
            var tds = $(this).find('td');
            if (tds.eq(0).text() == "F006")
            {
                if ($.isNumeric(tds.find(".addontxtfvalue").val())) {
                    TaxableAmt += parseFloat(tds.find(".addontxtfvalue").val());
                }
            }
        });
        var mlrqty = 0;
        $('#lrtabledata tbody tr').each(function () {
            
            var tds = $(this).find('td');
            mlrqty = parseFloat(mlrqty) + parseFloat(tds.eq(3).text());
        });
        TaxableAmt += mlrqty;
        var mfmqty = 0;
        $('#FMtabledata tbody tr').each(function () {
            var tds = $(this).find('td');
            mfmqty = parseFloat(mfmqty) + parseFloat(tds.eq(3).text());
        });
        TaxableAmt += mfmqty;

        $("#addAmt").val(TaxableAmt);
        $("#addTaxable").val(TaxableAmt);
        SetValuesInTable();

    }


    function SetValuesInTable() {

            var ModelData = {};
            ModelData["Type"] = $("#hdnType").val();
            ModelData["SubType"] = $("#hdnSType").val();
            ModelData["MainType"] = $("#hdnMType").val();
            ModelData["PlaceOfSupply"] = $("#PlaceOfSupply").val();
            ModelData["GSTType"] = $("#GSTType").val();
            ModelData["Taxable"] = $("#addTaxable").val();
            ModelData["CutTDS"] = $("#CutTDS").is(':checked');
            ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();

            if ($('#addGSTNoItc').is(":checked")) {

                ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
                ModelData["GSTCode"] = $("#addGSTCode").val();
                ModelData["CGSTAmt"] = $('#txttotcgst').val();
                ModelData["SGSTAmt"] = $('#txttotsgst').val();
                ModelData["IGSTAmt"] = $('#txttotigst').val();
                ModelData["CGSTRate"] = $('#addCGSTRate').val();
                ModelData["IGSTRate"] = $('#addIGSTRate').val();
                ModelData["SGSTRate"] = $('#addSGSTRate').val();
            }
            if ($('#addTDSFlag').is(":checked")) {

                ModelData["TDSFlag"] = $('#addTDSFlag').is(":checked");
                ModelData["TDSCode"] = $("#addTDSCode").val();
                ModelData["TDSRate"] = $("#addTDSRate").val();
                ModelData["TDSAmt"] = $('#TDSAmt').val();
            }

            ModelData["DocuDate"] = $("#DocuDate").val();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetTotal")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    
                    $('#addCGSTAmt').val(parseFloat( data.CGSTAmt).toFixed(2));
                    $('#addSGSTAmt').val(parseFloat(data.SGSTAmt).toFixed(2));
                    $('#addIGSTAmt').val(parseFloat(data.IGSTAmt).toFixed(2));
                    //if ($('#hdnIsRoundOff_').val() == "True") {
                    //    $('#txtinvamt').val(parseFloat(data.Total).toFixed(2));
                    //    var rou = (parseFloat(data.Total.toFixed(0))) - parseFloat(data.Total);
                    //    $('#txtRoundOffVal').val(rou.toFixed(2));

                    //} else {
                    //    $('#txtinvamt').val(parseFloat(data.Total).toFixed(2));
                    //}
                    //$('#TDSAmt').val(parseFloat(data.TDSAmt).toFixed(2));
                    //$('#addTDSAmt').val(parseFloat(data.TDSAmt).toFixed(2));
                    //$('#RoundOff').val(parseFloat(data.RoundOff));
                    $('.spinner').hide();

                },
                error: function () {
                    $('.spinner').hide();
                    alert("error occured while processing your request.");
                }
            });
        }
    function GSTCalculation() {

        if ($('#addGSTNoItc').is(":checked")) {
            var irate1 = (parseFloat($("#addIGSTRate").val()));
            var srate1 = (parseFloat($("#addSGSTRate").val()));
            var crate1 = (parseFloat($("#addCGSTRate").val()));
            var amt1 = parseFloat($("#addTaxable").val());

            var AmtIgst = (irate1 * amt1) / 100;
            var AmtCgst = (crate1 * amt1) / 100;
            var AmtSgst = (srate1 * amt1) / 100;
            $('#addIGSTAmt').val(AmtIgst);
            $('#txttotigst').val(AmtIgst);
            $('#addCGSTAmt').val(AmtCgst);
            $('#txttotcgst').val(AmtCgst);
            $('#addSGSTAmt').val(AmtSgst);
            $('#txttotsgst').val(AmtSgst);
            $('#txtinvamt').val(amt1 + AmtSgst + AmtCgst + AmtIgst);
        }
        else {
            var amt1 = parseFloat($("#addTaxable").val());

            var AmtIgst = 0;
            var AmtCgst = 0;
            var AmtSgst = 0;
            $('#addIGSTAmt').val(0);
            $('#txttotigst').val(0);
            $('#addCGSTAmt').val(0);
            $('#txttotcgst').val(0);
            $('#addSGSTAmt').val(0);
            $('#txttotsgst').val(0);
            $('#txtinvamt').val(amt1);
        }

    }
    function loadGSTCodeList() {
                var url = '@Url.Action("GetGSTList")'
        $('#addGSTCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.GSTCode', text: '@Model.GSTCodeName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        });
    };
    function openCityNew(evt, cityName) {

        $("#ErrorMessage1").hide();
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontentNew");
        for (i = 0; i < tabcontent.length; i++) {

            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("ItemDesign");
        for (i = 0; i < tablinks.length; i++) {

            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
     function loadaccount1() {

        var url = '@Url.Action("GetAccountList")';
         $('#txtAccount').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.Code', text:'@Model.AccountName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
         })
    };
    function loadRelatedChoiceTo() {

        var url = '@Url.Action("GetRelatedChoiceToList")';
        $('#RelatedChoice').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.RelatedChoice', text:'@Model.RelatedChoiceN' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
         })
    };
    function AddEditDetails() {
        var myBatchArray = [];
        $('#lrtabledata tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                tempId: tds.eq(1).text(),
                LRNumber: tds.eq(2).text(),
                LRAmt: tds.eq(3).text(),
                ConsignmentKey: tds.eq(5).text(),
            }
            myBatchArray.push(myDets);
        });
        var myBatchArray2 = [];
        $('#FMtabledata tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets2 = {
                tempId: tds.eq(1).text(),
                FMNumber: tds.eq(2).text(),
                FMAmt: tds.eq(3).text(),
                FreightMemoKey: tds.eq(5).text(),
            }
            myBatchArray2.push(myDets2);
        });
        var rlarray = [];
        if ($('#SaveCostCenter').is(':checked')) {
            $('#truckrelatedtable tbody tr').each(function () {
                var tds = $(this).find('td');
                var ApplyCode = "";
                if (($('#RelatedTo').val() == "000100345" || $("#txtAccount").val() == "000100345") && tds.eq(0).text() == "F006") {
                    ApplyCode = $("input[class=addontxtfvalue]:checked").val();
                }
                else {
                    ApplyCode = tds.find(".addontxtfvalue").val();
                }
                var myDets2 = {
                    Fld: tds.eq(0).text(),
                    Head: tds.eq(1).text(),
                    ApplCode: ApplyCode,
                    FldType: tds.eq(3).text(),
                }
                rlarray.push(myDets2);
            });
        }
        var itemlarray = [];
        $('#itemrelatedtable tbody tr').each(function () {
            var tds = $(this).find('td');
            if (tds.eq(0).text().trim() == "F003") {
                var myDets2 = {
                    Fld: tds.eq(0).text(),
                    Head: tds.eq(1).text(),
                    ApplCode: $("#SearchItem").val(),
                    FldType: tds.eq(3).text(),
                }
                itemlarray.push(myDets2);
            } else {
                var myDets2 = {
                    Fld: tds.eq(0).text(),
                    Head: tds.eq(1).text(),
                    ApplCode: tds.find(".addontxtfvalue").val(),
                    FldType: tds.eq(3).text(),
                }
                itemlarray.push(myDets2);
            } 
        });
        //var mlrqty = 0;
        //$('#lrtabledata tbody tr').each(function () {
        //    var tds = $(this).find('td');
        //    mlrqty = parseFloat(mlrqty) + parseFloat(tds.eq(3).text());
        //});
        //if (mlrqty>0) {
        //    if (($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
        //        if (mlrqty != parseFloat($("#addAmt").val())) {
        //            alert('LR Amount total does not Tally please check..');
        //            $("#btnadddetSave").prop("disabled", false);
        //            return;
        //        }
        //    }
        //}
        //var mfmqty = 0;
        //$('#FMtabledata tbody tr').each(function () {
        //    var tds = $(this).find('td');
        //    mfmqty = parseFloat(mfmqty) + parseFloat(tds.eq(3).text());
        //});
        //if (mfmqty>0) {
        //    if (($('#hdnCCAmtMatch').val() == "True" || $('#hdnCCAmtMatch').val() == "true")) {
        //        if (mfmqty != parseFloat($("#addAmt").val())) {
        //            alert('FM Amount total does not Tally please check..');
        //            $("#btnadddetSave").prop("disabled", false);
        //            return;
        //        }
        //    }
        //}
        var tystksrls = [];
        $('#tblTyreDocDetails tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets2 = {
                TableKey: tds.eq(0).text(),
                Code: tds.eq(1).text(),
                ApplCode: tds.find(".tyretxtfvalue").val(),
                Srl: tds.eq(2).text(),
                DocuDate: tds.eq(3).text(),
                ActWt: tds.eq(4).text(),
                FEndDate: tds.eq(5).text(),
                ChgWt: tds.eq(6).text(),
                Name: tds.eq(7).text(),
                StockAt: tds.eq(8).text(),
                TyreNo: tds.eq(9).text(),
                StepneeNo: tds.eq(10).text(),
                IsActive: tds.eq(11).text(),
                ParentKey: tds.eq(14).text(),
                Branch: tds.eq(15).text(),
            }
            tystksrls.push(myDets2);
        });

        var ModelData = {};
        ModelData["SessionFlag"] = $('#hdnSessionFlag').val();
        ModelData["SubType"] = $("#hdnSubType").val();
        ModelData["HSNCODE"] = $("#HSNCODE").val();
        ModelData["MainType"] = $("#hdnMainType").val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["AmtType"] = $("input[name=AmtType]:checked").val();
        ModelData["Code"] = $("#txtAccount").val();
		ModelData["BankCashCode"] = $("#BankCashCode").val()
        ModelData["Amt"] = $("#addAmt").val();
        ModelData["AccountName"] = $("#txtAccount").select2('data').text;
        ModelData["LRDetailList"] = myBatchArray;
        ModelData["AddOnList"] = rlarray;
        ModelData["ItemList"] = itemlarray;
        ModelData["tempId"] = $('#hdntempId').val();
        ModelData["RelatedTo"] = $('#RelatedTo').val();
        ModelData["RelatedChoice"] = $('#RelatedChoice').val();
        ModelData["FMDetailList"] = myBatchArray2;
        ModelData["Narr"] = $('#txtNarr').val();
        ModelData["PartialDivName"] = $('#hdnPartialDivName').val();
        ModelData["TyreStockList"] = tystksrls;
        ModelData["NoDuplExpDt"] = $('#hdnNoDuplExpDt').val();
        ModelData["DuplExpDtConfirm"] = $('#hdnDuplExpDtConfirm').val();
        ModelData["ParentKey"] = $("#hdnParentKey").val();
        ModelData["BTNNO"] = $("#hdnBTNNO").val();
        ModelData["BTNNOCombo"] = $("#hdnBTNNOCombo").val();
        ModelData["BTNTotalAmt"] = $("#hdnBTNTotalAmt").val();
        ModelData["BTNBalAmt"] = $("#hdnBTNBalAmt").val();
        ModelData["CostCenterTally"] = $("#hdnCCAmtMatch").val();
        ModelData["ReferAccReq"] = $("#hdnReferAccReq").val();

        ModelData["TDSFlag"] = $("#addTDSFlag").prop('checked');
        ModelData["GSTFlag"] = $("#addGSTNoItc").prop('checked');
        ModelData["TDSRate"] = $("#addTDSRate").val();
        ModelData["GSTFlag"] = $('#addGSTNoItc').is(":checked");
        ModelData["GSTCode"] = $("#addGSTCode").val();
        ModelData["Taxable"] = $("#addTaxable").val();
        ModelData["IGSTRate"] = $("#addIGSTRate").val();
        ModelData["CGSTRate"] = $("#addCGSTRate").val();
        ModelData["SGSTRate"] = $("#addSGSTRate").val();
        ModelData["CGSTAmt"] = $('#addCGSTAmt').val();
        ModelData["SGSTAmt"] = $('#addSGSTAmt').val();
        ModelData["IGSTAmt"] = $('#addIGSTAmt').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("AddCashLedger")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                $('.spinner').hide();
                if (data.Status == "ValidError") {
                    alert(data.Message)
                    $("#btnadddetSave").prop("disabled", false);
                    return;
                }
                else {
                    $('#divLedgerTable').html(data.Html);
                    $('#SumDebit').val(data.Sumdebit.toFixed(2));
                    $('#SumCredit').val(data.Sumcredit.toFixed(2));

                    $('#txttottxable').val(parseFloat(data.Sumdebit.toFixed(2)) + parseFloat( data.Sumcredit.toFixed(2)));
                    $('#addTaxable').val(parseFloat(data.Sumdebit.toFixed(2)) + parseFloat(data.Sumcredit.toFixed(2)));

                    $('#TDSAmt').val(data.TdsAmt.toFixed(2));
                    $('#addTDSAmt').val(data.TdsAmt.toFixed(2));

                    $('#txttotigst').val(data.IGST.toFixed(2));
                    $('#addIGSTAmt').val(data.IGST.toFixed(2));

                    $('#txttotsgst').val(data.SGST.toFixed(2));
                    $('#addSGSTAmt').val(data.SGST.toFixed(2));

                    $('#txttotcgst').val(data.CGST.toFixed(2));
                    $('#addCGSTAmt').val(data.CGST.toFixed(2));

                    $('#txtinvamt').val(data.InvAmt.toFixed(2));
                }
            },
            error: function () {
                alert("Error occured while processing your request.");
            }
        });
    }
</script>


@Html.HiddenFor(x => x.SessionFlag, new { @id = "hdnSessionFlag", @name = "hdnSessionFlag" })
@Html.HiddenFor(x => x.PartialDivName, new { @id = "hdnPartialDivName", @name = "hdnPartialDivName" })
@Html.HiddenFor(x => x.tempId, new { @id = "hdntempId", @name = "hdntempId" })
@*@Html.HiddenFor(x => x.AccReqRelated, new { @id = "hdnAccReqRelated", @name = "hdnAccReqRelated" })*@
@Html.HiddenFor(x => x.TableKey, new { @id = "hdnAccTableKey", @name = "hdnAccTableKey" })
@Html.HiddenFor(x => x.ReferAccReq, new { @id = "hdnReferAccReq", @name = "hdnReferAccReq" })
@*@Html.HiddenFor(x => x.CostCenterTally, new { @id = "hdnCostCenterTally", @name = "hdnCostCenterTally" })*@
@Html.HiddenFor(x => x.CostCenterTally, new { @id = "hdnCCAmtMatch" })
@Html.HiddenFor(x => x.OSAmt, new { @id = "hdnOSAmt" })


