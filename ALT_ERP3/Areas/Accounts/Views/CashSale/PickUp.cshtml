@model LRInvoiceVM
@using Common;



<div class="modal-body">
    <div class="modal-content">
        <div class="modal-header" style="background-color:#cccccc;padding:7px;font-weight:bolder;">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
            <h4 class="modal-title">Pick from Source Document</h4>
        </div>
        <div class="modal-body">
            <div class="form-group">
                <div class="col-sm-1 control-label">Filter By:</div>
                
                <div class="col-sm-4" style="display:flex;">
                    <input type="radio" class="form-control" name="filBranch" id="CurrentBranch" value="CurrentBranch" style="height:20px;width:100px;" /><label class=" bold control-label" style="font-size: 14px;width:70%;"> Current Branch</label>
                    <input type="radio" class="form-control" name="filBranch" id="AllBranch" value="AllBranch" style="height:20px;width:100px;" /><label class=" bold control-label" style="font-size: 14px;width:70%;"> All Branch</label>
                </div>
                @*<div class="col-sm-1">
                        <button type="button" class="btn btn-success" id="filterrecord">Filter</button>
                    </div>*@
                <div class="col-sm-5">
                    <div class="col-sm-2">
                        <label class=" bold control-label" style="margin-top: 5px;"> Select By</label>
                    </div>
                    <div class="col-sm-3">
                        <input type="text" id="SelectLR" tabindex="2" class="form-control" placeholder="LR NO" />
                    </div>
                    <div class="col-sm-2">
                        <label class=" bold control-label" style="margin-top: 5px;"> Search</label>
                    </div>
                    <div class="col-sm-5">
                        <input type="text" id="SearchPickup" class="form-control" placeholder="Search Here" />
                    </div>

                </div>
            </div>

            <div class="fixPickupTableHead" id="PickTable" style="max-height:450px; min-height:450px;width:100%; overflow: scroll;">

                <table id="tabledatapick" class="zui-table">
                    <thead>
                        <tr role="row">
                            <th><input id="AllxCess" name="AllxCess" style="width:16px;height:16px;" type="checkbox"></th>
                            <th style="width:1%">Sr.</th>
                            <th hidden="hidden">TableKey</th>
                            <th hidden="hidden">ParentKey</th>
                            <th>Contract</th>
                            <th style="width:5%">POD Attach<input id="AllxPODCess" name="AllxPODCess" style="width:16px;height:16px;" type="checkbox"></th>
                            <th style="width:5%">LRNO</th>
                            <th style="width:8%">Date</th>
                            <th style="width:5%">From </th>
                            <th style="width:5%">To </th>

                            <th style="width:5%">Quantity</th>
                            <th style="width:5%">Pending</th>
                            <th style="width:5%">Enter Quantity</th>
                            <th style="width:5%">Total Amount</th>
                            <th style="width:5%">Act Weight</th>
                            <th style="width:5%">Charge Type</th>
                            <th style="width:5%">Unit</th>

                            <th style="width:5%">Consignor</th>
                            <th style="width:5%">Consignee </th>
                            <th style="width:5%">Bill Party</th>
                            <th style="width:5%">Branch</th>

                            @if (Model.HeaderList != null)
                            {
                                foreach (var a in @Model.HeaderList)
                                {
                                    <th style="width:4%">@a</th>
                                }
                            }
                            <th style="width:5%">LR Narration</th>

                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.NewItemList != null)
                        {
                            foreach (var item in @Model.NewItemList.Where(x => x.tempIsDeleted == false).ToList())
                            {
                                if (item != null)
                                {
                                    <tr class="clstr" style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                        <td><input type="checkbox" class='rolemaster_AccessType' atr="@item.TableKey" value="@item.tempId" /></td>
                                        <td style="width:1%">@item.tempId</td>
                                        <td hidden="hidden">@item.TableKey</td>
                                        <td hidden="hidden">@item.ParentKey</td>
                                        <td style="width:5%"><button type="button" class="calPoditem" style="font-size: 9pt;font-family: Verdana, Geneva, Tahoma, sans-serif;background-color:#f3c022;border-color: #f3c022;color:#FFFFFF;line-height:1.5;border-radius:3px;height:22px;width:25px;" value="@item.TableKey" title="Contract Calculate"><i class="fa fa-file"></i></button></td>
                                        <td style="width:5%"><input type="checkbox" disabled="disabled" class='pod_AccessType' atr="@item.TableKey" value="@item.tempId" /></td>
                                        <td style="width:5%">@item.Code</td>
                                        <td style="width:8%;">@item.LRDocuDate</td>
                                        <td style="width:5%">@item.FromLocation</td>
                                        <td style="width:5%">@item.ToLocation</td>
                                        <td style="width:5%">@item.Qty</td>
                                        <td style="width:5%">@item.Pending</td>
                                        <td style="width:5%" contenteditable="true" class="enttxtcls"></td>
                                        <td style="width:5%"></td>
                                        <td style="width:5%">@item.ActWt</td>
                                        <td style="width:5%">@item.ChargeType</td>
                                        <td style="width:5%">@item.Unit</td>

                                        <td style="width:5%">@item.Consignor</td>
                                        <td style="width:5%">@item.Consignee</td>
                                        <td style="width:5%">@item.Account</td>
                                        <td style="width:5%">@item.Branch</td>

                                        @if (item.ChgPickupList != null)
                                        {


                                            foreach (var a in item.ChgPickupList)
                                            {

                                                <td class="txtentercls" style="width:4%"><input style="width:100px;" disabled="disabled" class="enttxtcls" value="@a" /></td>

                                            }

                                        }
                                        <td style="width:5%" contenteditable="true">@item.BillNarr</td>

                                    </tr>
                                }

                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr style="font-family:Tahoma;font-size:9pt;border:solid 1px lightgray;background-color:seashell">
                            <td><label id="lblSelectTotal" style="font-weight: bold;color: red;">0</label></td>
                            <td></td>
                            <td hidden="hidden"></td>
                            <td hidden="hidden"></td>
                            <td></td>
                            <td><label id="lblSelectPOD" style="font-weight: bold;color: red;">0</label></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td><label id="lblSelectAmount" style="font-weight:bold;color: red;">0</label></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            @if (Model.HeaderList != null)
                            {
                                for (int i = 1; i <= @Model.HeaderList.Count; i++)
                                {

                                    <td style="padding-left: 15px;font-weight: bold;color: red;">
                                        0
                                    </td>
                                }


                            }
                            <td></td>
                        </tr>
                    </tfoot>
                </table>


            </div>
        </div>
        <div class="modal-footer" style="background-color:#cccccc;">

            <button type="button" class="btn btn-success" id="pickrecord">Accept Data</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Discard</button>
        </div>
    </div>
</div>
@Html.HiddenFor(x => x.TotalQty, new { @id = "hdnuCount" })
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {
       

        $("#CurrentBranch").attr("checked", true);


        if ('@Model.FilBranch' == 'Current') {
            $("#CurrentBranch").attr("checked", true);
        }
        if ('@Model.FilBranch' == 'All') {
            $("#AllBranch").attr("checked", true);
        }


        $('#AGroup').click(function (event) {
            event.preventDefault();

            var ModelData = {};
            ModelData["Account"] = $("#Account").val();
            ModelData["AccParentGrp"] = $('#AccParentGrp').val();
            if (($("#ACustomer").is(":checked") == true)) {
                ModelData["FilCustomer"] = 'Customer';
            }
            else {
                ModelData["FilCustomer"] = 'Group';
            }
            if (($("#CurrentBranch").is(":checked") == true)) {
                ModelData["FilBranch"] = "Current"
            }
            else {
                ModelData["FilBranch"] = "All";
            }

            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
         });

        $('#CurrentBranch').click(function (event) {
            event.preventDefault();

            var ModelData = {};
            ModelData["Account"] = $("#Account").val();
            ModelData["AccParentGrp"] = $('#AccParentGrp').val();
            if (($("#ACustomer").is(":checked") == true)) {
                ModelData["FilCustomer"] = 'Customer';
            }
            else {
                ModelData["FilCustomer"] = 'Group';
            }
            if (($("#CurrentBranch").is(":checked") == true)) {
                ModelData["FilBranch"] = "Current"
            }
            else {
                ModelData["FilBranch"] = "All";
            }

            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
         });

        $('#AllBranch').click(function (event) {
            event.preventDefault();

            var ModelData = {};
            ModelData["Account"] = $("#Account").val();
            ModelData["AccParentGrp"] = $('#AccParentGrp').val();
            if (($("#ACustomer").is(":checked") == true)) {
                ModelData["FilCustomer"] = 'Customer';
            }
            else {
                ModelData["FilCustomer"] = 'Group';
            }
            if (($("#CurrentBranch").is(":checked") == true)) {
                ModelData["FilBranch"] = "Current"
            }
            else {
                ModelData["FilBranch"] = "All";
            }

            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetPickUp")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#pickuplist').modal('show');
                    $('#PickUpList').html(data.Html);
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
        });




        $("#SelectLR").blur(function () {
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');

                if (tds.eq(6).text() == $("#SelectLR").val()) {

                    tds.find("input[class='rolemaster_AccessType']").prop("checked", true);

                    if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                        var mpending = parseFloat(tds.eq(11).text())
                        tds.eq(12).html(mpending.toFixed(0));
                        tds.find("input[class='pod_AccessType']").prop("checked", true);
                        tds.find("input[class='pod_AccessType']").prop("disabled", false);
                        tds.find("input[class='enttxtcls']").prop("disabled", false);
                    }
                    else {
                        tds.eq(12).html('');
                        tds.find("input[class='pod_AccessType']").prop("checked", false);
                        tds.find("input[class='pod_AccessType']").prop("disabled", true);
                        tds.find("input[class='enttxtcls']").prop("disabled", true);
                    }
                }
            });
        });

        $('#SearchPickup').keyup(function () {
            var value = $(this).val();
            if (value != "") {
                $('#tabledatapick td').removeClass('SearchRow');

                $('#tabledatapick > tbody > tr > td ').each(function () {
                    if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        var dd = $(this).text().toLowerCase();
                        $(this).addClass("SearchRow");
                    }
                    else {
                        $(this).removeClass("SearchRow");
                    }
                });
            }
            else {
                $('#tabledatapick td').removeClass('SearchRow');
            }
        });


        $('#AllxCess').click(function () {
            var xcess = $('#AllxCess').is(':checked');
            if (xcess == true) {
                $('#tabledatapick tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[class='rolemaster_AccessType']").prop("checked", true);
                    tds.find("input[class='pod_AccessType']").prop("checked", true);
                    if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                        tds.find("input[class='enttxtcls']").prop("disabled", false);
                        var mpending = parseFloat(tds.eq(11).text())
                        tds.eq(12).html(mpending.toFixed(2));
                        tds.find("input[class='pod_AccessType']").prop("checked", true);
                        tds.find("input[class='pod_AccessType']").prop("disabled", false);
                    }
                    else {
                        tds.eq(12).html('');
                        tds.find("input[class='enttxtcls']").prop("disabled", true);
                    }
                })
            }
            else {
                $('#tabledatapick tbody tr').each(function () {
                    var tds = $(this).find('td');
                    tds.find("input[class='rolemaster_AccessType']").prop("checked", false);
                    tds.find("input[class='pod_AccessType']").prop("checked", false);
                    if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                        var mpending = parseFloat(tds.eq(11).text())
                        tds.eq(12).html(mpending.toFixed(0));
                        tds.find("input[class='enttxtcls']").prop("disabled", false);
                    }
                    else {
                        tds.eq(12).html('');
                        tds.find("input[class='pod_AccessType']").prop("checked", false);
                        tds.find("input[class='pod_AccessType']").prop("disabled", true);
                        tds.find("input[class='enttxtcls']").prop("disabled", true);
                    }
                })
            }

            var acheckmil = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='pod_AccessType']").is(':checked')) {
                    acheckmil = parseInt(acheckmil) + parseInt(1);
                }
            })
            $('#lblSelectPOD').html(acheckmil);

            var acheckmil2 = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    acheckmil2 = parseInt(acheckmil2) + parseInt(1);
                }
            })
            $('#lblSelectTotal').html(acheckmil2);
        });

        $('#AllxPODCess').click(function () {
            var xcess = $('#AllxPODCess').is(':checked');
            if (xcess == true) {
                $('#tabledatapick tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                        tds.find("input[class='pod_AccessType']").prop("checked", true);
                    }
                })
            }
            else {
                $('#tabledatapick tbody tr').each(function () {
                    var tds = $(this).find('td');
                    if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                        tds.find("input[class='pod_AccessType']").prop("checked", false);
                    }

                })
            }
            var acheckmil = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='pod_AccessType']").is(':checked')) {
                    acheckmil = parseInt(acheckmil) + parseInt(1);
                }
            })
            $('#lblSelectPOD').html(acheckmil);

            var acheckmil2 = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    acheckmil2 = parseInt(acheckmil2) + parseInt(1);
                }
            })
            $('#lblSelectTotal').html(acheckmil2);
        });

        $('#tabledatapick tbody tr').each(function () {
            var tds = $(this).find('td');
            var abcCount = parseInt(21) + parseInt($('#hdnuCount').val());
            for (i = 21; i <= abcCount; i++) {
                var a = parseFloat(tds.eq(i).find('input[class="enttxtcls"]').val());
                tds.eq(i).find('input[class="enttxtcls"]').val(a.toFixed(2));
            }

        })

        $("#tabledatapick tbody").on('click', '.pod_AccessType', function () {
             var tds2 = $(this).closest("tr");
            var acheckmil = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='pod_AccessType']").is(':checked')) {
                    acheckmil = parseInt(acheckmil) + parseInt(1);
                }
            })
            $('#lblSelectPOD').html(acheckmil);
        });

        $("#tabledatapick tbody").on('click', '.rolemaster_AccessType', function () {
            var tds2 = $(this).closest("tr");
            tds2.find("input[class='enttxtcls']").prop("disabled", false);
             if (tds2.find("input[class='rolemaster_AccessType']").is(':checked')) {
              var mpending = parseFloat(tds2.find('td').eq(11).text())
                 tds2.find('td').eq(12).html(mpending.toFixed(0));
                 tds2.find("input[class='pod_AccessType']").prop("checked", true);
                 tds2.find("input[class='pod_AccessType']").prop("disabled", false);
            }
             else {

                 tds2.find('td').eq(12).html('');
                 tds2.find("input[class='pod_AccessType']").prop("checked", false);
                 tds2.find("input[class='pod_AccessType']").prop("disabled", true);
            }
             var myTableArray = [];
             var abcCount = parseInt(21) + parseInt($('#hdnuCount').val());
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    var PPSerial = [];
                    for (i = 21; i <= abcCount; i++) {
                        PPSerial.push(tds.eq(i).find('input[class="enttxtcls"]').val());
                    }
                    var myDets = {
                        tempId: tds.eq(1).text(),
                        TableKey: tds.eq(2).text(),
                        ParentKey: tds.eq(3).text(),
                        POD: tds.find('input[class="pod_AccessType"]').is(':checked'),
                        Code: tds.eq(6).text(),
                        LRDocuDate: tds.eq(7).text(),
                        FromLocation: tds.eq(8).text(),
                        ToLocation: tds.eq(9).text(),

                        Qty: tds.eq(12).text(),
                        ActWt: tds.eq(14).text(),
                        ChargeType: tds.eq(15).text(),
                        Unit: tds.eq(16).text(),

                        Consignor: tds.eq(17).text(),
                        Consignee: tds.eq(18).text(),
                        Account: tds.eq(19).text(),
                        Branch: tds.eq(20).text(),
                        ChgPickupList: PPSerial,
                        BillNarr: tds.eq(abcCount).text()
                    }
                    myTableArray.push(myDets);
                }
            })

            var ModelData = {};
             ModelData["PickUpList"] = myTableArray;
             ModelData["Code"] = tds2.find('td').eq(6).text();
            var DTO = { Model: ModelData };
                var url = '@Url.Action("PickUpCalCulation")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('#lblSelectAmount').html(parseFloat(data.Val1));
                        var acheckmil = 0;
                        $('#tabledatapick tr:not(:first)').each(function () {
                            var tds = $(this).find('td');
                            if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                                acheckmil = parseInt(acheckmil) + parseInt(1);
                            }
                        })


                        var acheckmil2 = 0;
                        $('#tabledatapick tr:not(:first)').each(function () {
                            var tds2 = $(this).find('td');
                            if (tds2.find("input[class='pod_AccessType']").is(':checked')) {
                                acheckmil2 = parseInt(acheckmil2) + parseInt(1);
                            }
                        })
                        $('#lblSelectPOD').html(acheckmil2);
                        $('#lblSelectTotal').html(acheckmil);
                        $('#lblSelectFLD01').html(data.NetFLD01);
                        $('#lblSelectFLD02').html(data.NetFLD02);
                        $('#lblSelectFLD03').html(data.NetFLD03);
                        $('#lblSelectFLD04').html(data.NetFLD04);
                        $('#lblSelectFLD05').html(data.NetFLD05);
                        tds2.find('td').eq(13).html(parseFloat(data.AccAmt));
                        $('.spinner').hide();
                    },
                    error: function (err) {
                        alert(JSON.stringify(err))
                        $('.spinner').hide();
                        alert("error occured while processing your request.");
                    }
                });

        });

        $("#tabledatapick tbody").on('focusout', '.enttxtcls', function () {
            var tds2 = $(this).closest("tr");

            var mpending = parseInt(tds2.find('td').eq(11).text());
            var mqty = parseInt(tds2.find('td').eq(12).text());
            if (mpending < mqty) {
                alert('Bill Quantity cant be greater than Pending Quantity')

                tds2.find('td').eq(12).html(mpending.toFixed(0));
                return;
            }
            var myTableArray = [];
            var abcCount = parseInt(21) + parseInt($('#hdnuCount').val());
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    var PPSerial = [];
                    for (i = 21; i <= abcCount; i++) {
                        PPSerial.push(tds.eq(i).find('input[class="enttxtcls"]').val());
                    }
                    var myDets = {
                        tempId: tds.eq(1).text(),
                        TableKey: tds.eq(2).text(),
                        ParentKey: tds.eq(3).text(),
                        POD: tds.find('input[class="pod_AccessType"]').is(':checked'),
                        Code: tds.eq(6).text(),
                        LRDocuDate: tds.eq(7).text(),
                        FromLocation: tds.eq(8).text(),
                        ToLocation: tds.eq(9).text(),

                        Qty: tds.eq(12).text(),
                        ActWt: tds.eq(14).text(),
                        ChargeType: tds.eq(15).text(),
                        Unit: tds.eq(16).text(),

                        Consignor: tds.eq(17).text(),
                        Consignee: tds.eq(18).text(),
                        Account: tds.eq(19).text(),
                        Branch: tds.eq(20).text(),
                        ChgPickupList: PPSerial,
                        BillNarr: tds.eq(abcCount).text()
                    }
                    myTableArray.push(myDets);
                }
            })

            var ModelData = {};
            ModelData["PickUpList"] = myTableArray;
            ModelData["Code"] = tds2.find('td').eq(6).text();
            var DTO = { Model: ModelData };
            var url = '@Url.Action("PickUpCalCulation")';
            $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('#lblSelectAmount').html(parseFloat(data.Val1));
                        var abcCount = parseInt($('#hdnuCount').val());
                        var acheckmil = 0;
                        $('#tabledatapick tr:not(:first)').each(function () {
                            var tds = $(this).find('td');
                            if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                                acheckmil = parseInt(acheckmil) + parseInt(1);
                            }
                        })
                        var mARRAY = Array.from(data.TotalChgPickupList);
                        $('#tabledatapick tfoot tr').each(function () {
                            var tdfoots = $(this).find('td');
                            var ai = 21;
                            for (i = 0; i < abcCount; i++) {


                                tdfoots.eq(ai).html(mARRAY[i]);
                                ai = ai + 1;
                            }
                        })
                        $('#lblSelectTotal').html(acheckmil);


                        tds2.find('td').eq(13).html(parseFloat(data.AccAmt));

                        $('.spinner').hide();
                    },
                    error: function (err) {
                        alert(JSON.stringify(err))
                        $('.spinner').hide();
                        alert("error occured while processing your request.");
                    }
                });

        });

        $("#pickrecord").click(function (event) {
            event.preventDefault();
            var acheckmil = 0;
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');
                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    acheckmil = parseInt(acheckmil) + parseInt(1);
                }
            })
            if (parseInt(acheckmil) == parseInt(0)) {
                alert('Select a Ledger to Pickup')
                return;
            }
            var PPSerial = [];
            $('#tabledatapick tr:not(:first)').each(function () {
                var tds = $(this).find('td');

                if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                    PPSerial.push(tds.eq(6).text());
                }
            });

        var ModelData = {};
        ModelData["Code"] = PPSerial.toString();

        var DTO = { Model: ModelData };
        var url = '@Url.Action("LRPickupValidation")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                if (result.POD == true) {
                    var confrm = confirm(result.Message + "Do you want to continue");
                    if (confrm == false) {
                       return;
                    } else {
                        SavePickupData()
                    }
                }
                else {
                    SavePickupData()
                }
                $('.spinner').hide();
            },
            error: function () {

                alert("1-An error occurred while processing the request.");
            }
        });


        });

        $("#tabledatapick tbody").on('click', '.calPoditem', function () {
            var tds2 = $(this).closest("tr");
            event.preventDefault(event);

            var ModelData = {};

            ModelData["LrNo"] = tds2.find('td').eq(6).text();

            var DTO = { Model: ModelData };
            var url = '@Url.Action("CustomerCharges")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == "Success") {

                        var abcCount = parseInt($('#hdnuCount').val());
                        var mARRAY = Array.from(data.ChargesListSelect);


                        for (i = 0; i < abcCount; i++) {
                            var ai = 21;
                            ai = ai + i;

                            tds2.find('td').eq(ai).find('input[class="enttxtcls"]').val(mARRAY[i]);
                        }
                        $('.spinner').hide();
                    } else if (data.Status == "Error") {

                        var result = confirm(data.Message);
                        if (result) {

                           var ModelData = {};

                            ModelData["LrNo"] = tds2.find('td').eq(6).text();

                            var DTO = { Model: ModelData };
                            var url = '@Url.Action("Charges")';
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json;charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data) {
                                    if (data.Status == "Success") {

                                        var abcCount = parseInt($('#hdnuCount').val());
                                        var mARRAY = Array.from(data.ChargesListSelect);


                                        for (i = 0; i < abcCount; i++) {
                                            var ai = 21;
                                            ai = ai + i;

                                            tds2.find('td').eq(ai).find('input[class="enttxtcls"]').val(mARRAY[i]);
                                        }
                                        $('.spinner').hide();
                                    } else if (data.Status == "Error") {

                                        alert(data.Message);

                                        $('.spinner').hide();
                                    } else {
                                        var result = confirm(data.Message);
                                        if (result) {

                                              var url = '@Url.Action("OTherContract")';
                                              var ModelData = {};

                                            var DTO = { Model: ModelData };
                                            $.ajax({
                                                type: "POST",
                                                dataType: "json",
                                                data: JSON.stringify(DTO),
                                                cache: false,
                                                url: url,
                                                contentType: "application/json; charset=utf-8",
                                                beforeSend: function () {
                                                    $('.spinner').show();
                                                },
                                                success: function (data) {
                                                    if (data.Status == "Success") {
                                                        var abcCount = parseInt($('#hdnuCount').val());
                                                        var mARRAY = Array.from(data.ChargesListSelect);


                                                        for (i = 0; i < abcCount; i++) {
                                                            var ai = 21;
                                                            ai = ai + i;

                                                            tds2.find('td').eq(ai).find('input[class="enttxtcls"]').val(mARRAY[i]);
                                                        }
                                                        $('.spinner').hide();

                                                    } else if (data.Status == "Error") {
                                                        alert(data.Message);
                                                         $('.spinner').hide();
                                                    }
                                                },
                                                error: function (error) {
                                                    alert("errror");
                                                }
                                            });

                                        } else {

                                            $('.spinner').hide();
                                        }
                                    }


                                },
                                error: function (er) {
                                    alert("Error occured while processing your request.");
                                }
                            });

                        }
                        else {

                        }
                        $('.spinner').hide();
                    } else {
                        var result = confirm(data.Message);
                        if (result) {

                              var url = '@Url.Action("CustomerOTherContract")';
                              var ModelData = {};

                            var DTO = { Model: ModelData };
                            $.ajax({
                                type: "POST",
                                dataType: "json",
                                data: JSON.stringify(DTO),
                                cache: false,
                                url: url,
                                contentType: "application/json; charset=utf-8",
                                beforeSend: function () {
                                    $('.spinner').show();
                                },
                                success: function (data) {
                                    if (data.Status == "Success") {
                                        var abcCount = parseInt($('#hdnuCount').val());
                                        var mARRAY = Array.from(data.ChargesListSelect);


                                        for (i = 0; i < abcCount; i++) {
                                            var ai = 21;
                                            ai = ai + i;

                                            tds2.find('td').eq(ai).find('input[class="enttxtcls"]').val(mARRAY[i]);
                                        }
                                        $('.spinner').hide();

                                    } else if (data.Status == "Error") {
                                        var result = confirm(data.Message);
                                        if (result) {
                                            ForceCharges();
                                        } else
                                        {

                                        }
                                         $('.spinner').hide();
                                    }
                                },
                                error: function (error) {
                                    alert("errror");
                                }
                            });

                        } else {

                            $('.spinner').hide();
                        }
                    }


                },
                error: function (er) {
                    alert("Error occured while processing your request.");
                }
            });
        });

        $("#tabledatapick tbody").on('dblclick','.clstr', function () {
            var tds2 = $(this).closest("tr");
            if (tds2.find("input[class='rolemaster_AccessType']").is(':checked')) {
                var abcCount = parseInt(21) + parseInt($('#hdnuCount').val());
                var PPSerial = [];
                for (i = 21; i <= abcCount; i++) {
                    PPSerial.push(tds2.find('td').eq(i).find('input[class="enttxtcls"]').val());
                }
                var ModelData = {};
                ModelData["Code"] = tds2.find('td').eq(6).text();
                ModelData["ChgPickupList"] = PPSerial;
                ModelData["BillNarr"] = tds2.find('td').eq(abcCount).text();
                var DTO = { Model: ModelData };
                var url = '@Url.Action("GetLRDetailsFromPickup")';
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $('#itemlistupdate').modal('show');
                        $('#ItemListUpdate').html(data.Html);
                        $('#updaterecord').hide();
                        $('#pushrecord').show();
                    },
                    error: function (er) {
                        alert("Error occured while processing your request.");
                    }
                });
            }
            else {
                alert('Please select LR for details')
                return;0
            }
        });
    });


    function GetOtherOptionTypeContract() {
        var url = '@Url.Action("OTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {

                    $('.spinner').hide();

                } else if (data.Status == "Error") {
                    alert(data.Message);
                    RefreshCharges();
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function SavePickupData() {
        var myTableArray = [];
        var acheckmil = 0;

        $('#tabledatapick tr:not(:first)').each(function () {
            var tds = $(this).find('td');
            if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                acheckmil = parseInt(acheckmil) + parseInt(1);
            }
        });
        if (parseInt(acheckmil) == parseInt(0)) {
            alert('Select a Ledger to Pickup');
            return;
        }
        $(':input[id="pickrecord"]').prop('disabled', true);
        var abcCount = parseInt(21) + parseInt($('#hdnuCount').val());
        var TotalAmount = 0;
        $('#tabledatapick tr:not(:first)').each(function () {
            var tds = $(this).find('td');
            if (tds.find("input[class='rolemaster_AccessType']").is(':checked')) {
                var PPSerial = [];
                for (i = 21; i <= abcCount; i++) {
                    //check Td Has Textbox or not if CheckInput.length == 1 means td Has a textbox.
                    var CheckInput = tds.eq(i).find('input[class="enttxtcls"]');
                    if (CheckInput.length == 1) {
                        TotalAmount += parseFloat(tds.eq(i).find('input[class="enttxtcls"]').val());
                    }
                    PPSerial.push(tds.eq(i).find('input[class="enttxtcls"]').val());
                }
                var myDets = {

                    tempId: tds.eq(1).text(),
                    TableKey: tds.eq(2).text(),
                    ParentKey: tds.eq(3).text(),
                    POD: tds.find('input[class="pod_AccessType"]').is(':checked'),
                    Code: tds.eq(6).text(),
                    LRDocuDate: tds.eq(7).text(),
                    FromLocation: tds.eq(8).text(),
                    ToLocation: tds.eq(9).text(),
                    TotalQty: tds.eq(10).text(),
                    Qty: tds.eq(12).text(),
                    ActWt: tds.eq(14).text(),
                    ChargeType: tds.eq(15).text(),
                    Unit: tds.eq(16).text(),

                    Consignor: tds.eq(17).text(),
                    Consignee: tds.eq(18).text(),
                    Account: tds.eq(19).text(),
                    Branch: tds.eq(20).text(),
                    ChgPickupList: PPSerial,
                    BillNarr: tds.eq(abcCount).text()
                }
                myTableArray.push(myDets);
            }
        });
        if (TotalAmount == 0) {
            debugger;
            alert('Please Enter The Charges Amount....!');
            return;
        }

        var ModelData = {};
        ModelData["PickUpList"] = myTableArray;
        ModelData["SubType"] = $("#hdnSubType").val();
        ModelData["MainType"] = $("#hdnMainType").val();
        ModelData["Type"] = $("#hdnType").val();
        ModelData["Mode"] = $('#hdnMode').val();
        ModelData["TDSCode"] = $("#TDSCode").val();
        ModelData["TDSRate"] = $("#TDSRate").val();
        ModelData["LRCutTDS"] = $('#hdnLRCutTDS').val();
        var DTO = { Model: ModelData };
        var url = '@Url.Action("PostPickUp")';
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json;charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
                $('#SaveData').prop('disabled', true);
                $('#Print').prop('disabled', true);
            },
            success: function (data) {
                $(':input[id="pickrecord"]').prop('disabled', false);
                if (data.Status == "ErrorStatus") {
                    $('.spinner').hide();
                    $('#ErrorMessage').hide();
                    alert(data.Message)

                    $('#SaveData').prop('disabled', false);
                    $('#Print').prop('disabled', false);
                }
                if (data.Status == "Success") {
                    $('.spinner').hide();
                    $('#ErrorMessage').hide();
                    $('#pickuplist').modal('hide');
                    $('#divLedgerTable').html('');
                    $('#divLedgerTable').html(data.Html);
                    $('#txttotitemqty').val(data.TotalQty);
                    $('#txttottxable').val(data.Taxable);
                    $('#addTaxable').val(data.Taxable);
                    $('#txtf_F001').val(data.Taxable);

                    SetValuesInTable();

                    $('#SaveData').prop('disabled', false);
                    $('#Print').prop('disabled', false);
                    document.getElementById("btntabitem").click();
                }
                else if (data.Status == "Fail") {
                    alert(data.Message)
                }
            },
            error: function (err) {
                alert(JSON.stringify(err))
                $('.spinner').hide();
                alert("error occured while processing your request.");
            }
        });
    }
</script>

<style>
    .fixPickupTableHead {
        overflow-y: auto;
        height: 450px;
    }

        .fixPickupTableHead thead th {
            position: sticky;
            top: 0;
        }


        .fixPickupTableHead tfoot tr {
            position: sticky;
            bottom: 0;
        }
</style>