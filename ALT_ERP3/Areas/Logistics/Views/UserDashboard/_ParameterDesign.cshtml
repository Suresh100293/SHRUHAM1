@model ALT_ERP3.Areas.Logistics.Models.UserDashboardVM
@using Common;
@{
    ViewBag.Title = "Lorry Receipt Master";
    Layout = null;
}
<style>
    .multiselect.disabled {
        background-color: aqua;
        color: black;
        font-weight: bold;
        width: 250px !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $('#StartDate').val('@Model.FromDate');
        $('#EndDate').val('@Model.ToDate');
        $('#StartDate,#EndDate').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
        });
        $("#DisplayOrder").constrain({ allow: { regex: "[0-9]" } });
        $("#UserList").prop("disabled", true);
        if ('@Model.Code' == "Outstanding" || '@Model.Code' == "Payable") {
            var CommonValue = "";

            $('#Branch').val("");
            if ('@Model.Branch' != "") {
                $.each('@Model.Branch'.split(','), function (idx, val) {
                    $("#BranchList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Branch').val(CommonValue);
            }

            CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }


            $(".CustomerMaster").addClass("hidden");

            if ('@Model.Para1' == "Customer") {
                CommonValue = "";
                $(".CustomerMaster").removeClass("hidden");
                $(".Master").addClass("hidden");
                $("#Customer").prop("checked", true);
                $("#CustomerNo").prop("checked", false);
                if ('@Model.Master' != "") {
                    $.each('@Model.Master'.split(','), function (idx, val) {
                        $("#CustomerList option[value='" + val + "']").attr("selected", true);
                        CommonValue += val + ",";
                    });
                    CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                    $('#Master').val(CommonValue);
                }
            }
            else {
                CommonValue = "";
                $(".CustomerMaster").addClass("hidden");
                $(".Master").removeClass("hidden");
                $("#Customer").prop("checked", false);
                $("#CustomerNo").prop("checked", true);

                if ('@Model.Master' != "") {
                    $.each('@Model.Master'.split(','), function (idx, val) {
                        $("#MasterList option[value='" + val + "']").attr("selected", true);
                        CommonValue += val + ",";
                    });
                    CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                    $('#Master').val(CommonValue);
                }
            }
            $('#Customer').change(function () {
                if ($('#Customer').is(":checked")) {
                    $(".CustomerMaster").removeClass("hidden");
                    $(".Master").addClass("hidden");

                }
                else {
                    $(".CustomerMaster").addClass("hidden");
                    $(".Master").removeClass("hidden");
                }
            });
            $('#CustomerNo').change(function () {
                if ($('#Customer').is(":checked")) {
                    $(".CustomerMaster").removeClass("hidden");
                    $(".Master").addClass("hidden");

                }
                else {
                    $(".CustomerMaster").addClass("hidden");
                    $(".Master").removeClass("hidden");
                }
            });
            $("#CustomerList").change(function () {
                debugger;
                $('#Master').val('');
                var selected = "";
                $("#CustomerList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Master').val(selected)
                return false;
            });

            $("#MasterList").change(function () {
                debugger;
                $('#Master').val('');
                var selected = "";
                $("#MasterList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Master').val(selected)
                return false;
            });
            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#BranchList").change(function () {
                debugger;
                $('#Branch').val('');
                var selected = "";
                $("#BranchList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Branch').val(selected)
                return false;
            });

        }
        else if ('@Model.Code' == "UnBillConsignmet" || '@Model.Code' == "ConsignmetStock" || '@Model.Code' == "ConsignmeTRNStock" )
        {
            var CommonValue = "";

            $('#Branch').val("");
            if ('@Model.Branch' != "") {
                $.each('@Model.Branch'.split(','), function (idx, val) {
                    $("#BranchList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Branch').val(CommonValue);
            }

            CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#BranchList").change(function () {
                debugger;
                $('#Branch').val('');
                var selected = "";
                $("#BranchList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Branch').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "ConsignmetBook")
        {
            var CommonValue = "";
            $('#Branch').val("");
            if ('@Model.Branch' != "") {
                $.each('@Model.Branch'.split(','), function (idx, val) {
                    $("#BranchList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Branch').val(CommonValue);
            }

            CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            if ('@Model.Para1' == "T") {
                $("#BillAmt").prop("checked", true);
                $("#BookAmt").prop("checked", false);
            }
            else {
                $("#BillAmt").prop("checked", false);
                $("#BookAmt").prop("checked", true);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#BranchList").change(function () {
                debugger;
                $('#Branch').val('');
                var selected = "";
                $("#BranchList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Branch').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "TopVendors" || '@Model.Code' == "TopGroupCustomers" || '@Model.Code' == "TopCustomers" || '@Model.Code' == "TopExpenses" )
        {
            var CommonValue = "";
            $('#Branch').val("");
            if ('@Model.Branch' != "") {
                $.each('@Model.Branch'.split(','), function (idx, val) {
                    $("#BranchList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Branch').val(CommonValue);
            }

            CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#BranchList").change(function () {
                debugger;
                $('#Branch').val('');
                var selected = "";
                $("#BranchList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Branch').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "VehicleStatus")
        {
            if ('@Model.Para1' == "T")
            {
                $("#OwnVehicle").prop("checked", true);
            }
            if ('@Model.Para2' == "T")
            {
                $("#AttaVehicle").prop("checked", true);
            }

            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "DriverStatus")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "VehicleLocation")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            CommonValue = "";
            $('#Vehicle').val("");
            if ('@Model.Para1' != "") {
                $.each('@Model.Para1'.split(','), function (idx, val) {
                    $("#VehicleList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Vehicle').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#VehicleList").change(function () {
                debugger;
                $('#Vehicle').val('');
                var selected = "";
                $("#VehicleList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Vehicle').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "VehicleTripDetails")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            CommonValue = "";
            $('#Vehicle').val("");
            if ('@Model.Para1' != "") {
                $.each('@Model.Para1'.split(','), function (idx, val) {
                    $("#VehicleList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Vehicle').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#VehicleList").change(function () {
                debugger;
                $('#Vehicle').val('');
                var selected = "";
                $("#VehicleList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Vehicle').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "DriverTripBalance")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            CommonValue = "";
            $('#Driver').val("");
            if ('@Model.Para1' != "") {
                $.each('@Model.Para1'.split(','), function (idx, val) {
                    $("#DriverList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Driver').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#DriverList").change(function () {
                debugger;
                $('#Driver').val('');
                var selected = "";
                $("#DriverList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Driver').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "VehicleExpDue")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }

            CommonValue = "";
            $('#VehicleMaster').val("");
            if ('@Model.Para1' != "") {
                $.each('@Model.Para1'.split(','), function (idx, val) {
                    $("#VehicleMasterList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#VehicleMaster').val(CommonValue);
            }

            CommonValue = "";
            $('#VehicleExpDue').val("");
            if ('@Model.Para2' != "") {
                $.each('@Model.Para2'.split(','), function (idx, val) {
                    $("#VehicleExpDueList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#VehicleExpDue').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });
            $("#VehicleMasterList").change(function () {
                debugger;
                $('#VehicleMaster').val('');
                var selected = "";
                $("#VehicleMasterList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#VehicleMaster').val(selected)
                return false;
            });
            $("#VehicleExpDueList").change(function () {
                debugger;
                $('#VehicleExpDue').val('');
                var selected = "";
                $("#VehicleExpDueList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#VehicleExpDue').val(selected)
                return false;
            });
        }
        else if ('@Model.Code' == "EwayBillDetails")
        {
            var CommonValue = "";
            $('#User').val("");
            if ('@Model.User' != "") {
                $.each('@Model.User'.split(','), function (idx, val) {
                    $("#UserList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#User').val(CommonValue);
            }
            debugger;
            CommonValue = "";
            $('#Branch').val("");
            if ('@Model.Branch' != "") {
                $.each('@Model.Branch'.split(','), function (idx, val) {
                    $("#BranchList option[value='" + val + "']").attr("selected", true);
                    CommonValue += val + ",";
                });
                CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
                $('#Branch').val(CommonValue);
            }

            $("#UserList").change(function () {
                debugger;
                $('#User').val('');
                var selected = "";
                $("#UserList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#User').val(selected)
                return false;
            });

            $("#BranchList").change(function () {
                debugger;
                $('#Branch').val('');
                var selected = "";
                $("#BranchList :selected").each(function () {
                    selected += ("" + $(this).val() + ",");
                });
                selected = selected.toString().substring(0, selected.length - 1);
                $('#Branch').val(selected)
                return false;
            });	
        }
        $("#btnAdd,#btnUpdate").click(function (event) {
            event.preventDefault();
            debugger;
            if ($("#DisplayOrder").val() == "" || $("#DisplayOrder").val() == null) {
                alert("Display Order No Required ...!");
                return;
            }
            if ($("#Code").val() == "" || $("#Code").val() == null) {
                alert("Please Select Menu ...!");
                return;
            }

            if ($("#Name").val() == "" || $("#Name").val() == null) {
                alert("Please Enter Heading ...!");
                return;
            }

            if ($("#User").val() == "") {
                alert("Please Select User ...!");
                return;
            }

            if ($("#Code").val() == "VehicleLocation" || $("#Code").val() == "VehicleTripDetails")
            {
                if ($("#Vehicle").val() == "") {
                    alert("Please Select Vehicle ...!");
                    return;
                }
            }
            if ($("#Code").val() == "DriverTripBalance") {
                if ($("#Driver").val() == "") {
                    alert("Please Select Driver ...!");
                    return;
                }
            }
            if ($("#Code").val() == "VehicleExpDue")
            {
                if ($("#VehicleMaster").val() == "") {
                    alert("Please Select Vehicle ...!");
                    return;
                }
            }
            if ($("#Code").val() == "VehicleExpDue")
            {
                if ($("#VehicleExpDue").val() == "") {
                    alert("Please Select Expenses Due ...!");
                    return;
                }
            }

            var ModelData = {};
            if ($("#Code").val() == "Outstanding" || $("#Code").val() == "Payable")
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["Master"] = $("#Master").val();
                if ($('#Customer').is(":checked")) {
                    ModelData["Para1"] = "Customer";
                } else {
                    ModelData["Para1"] = "Master";
                }
                ModelData["Para2"] = $("#Para2").val();
                ModelData["Para3"] = $("#Para3").val();
                ModelData["Para4"] = $("#Para4").val();
                ModelData["Para5"] = $("#Para5").val();
                ModelData["Para6"] = $("#Para6").val();
                ModelData["Para7"] = $("#Para7").val();
            }
            else if ($("#Code").val() == "UnBillConsignmet" || $("#Code").val() == "ConsignmetStock" || $("#Code").val() == "ConsignmeTRNStock")
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["Para1"] = $("#Para1").val();
                ModelData["Para2"] = $("#Para2").val();
                ModelData["Para3"] = $("#Para3").val();
                ModelData["Para4"] = $("#Para4").val();
            }
            else if ($("#Code").val() == "ConsignmetBook")
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Branch"] = $("#Branch").val();
                if ($('#BillAmt').is(":checked")) {
                    ModelData["Para1"] = "T";
                } else {
                    ModelData["Para1"] = "F";
                }
            }
            else if ($("#Code").val() == "TopCustomers" || $("#Code").val() == "TopGroupCustomers" || $("#Code").val() == "TopVendors" || $("#Code").val() == "TopExpenses" )
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Branch"] = $("#Branch").val();
            }
            else if ($("#Code").val() == "VehicleStatus" )
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                if ($('#OwnVehicle').is(":checked")) {
                    ModelData["Para1"] = "T";
                } else {
                    ModelData["Para1"] = "F";
                }
                if ($('#AttaVehicle').is(":checked")) {
                    ModelData["Para2"] = "T";
                } else {
                    ModelData["Para2"] = "F";
                }
            }
            else if ($("#Code").val() == "DriverStatus")
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
            }
            else if ($("#Code").val() == "VehicleLocation" )
            {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Para1"] = $("#Vehicle").val();
            }
            else if ($("#Code").val() == "VehicleTripDetails") {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Para1"] = $("#Vehicle").val();
            }
            else if ($("#Code").val() == "VehicleExpDue") {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Para1"] = $("#VehicleMaster").val();
                ModelData["Para2"] = $("#VehicleExpDue").val();
                ModelData["Para3"] = $("#Para3").val();
                ModelData["Para4"] = $("#Para4").val();
                ModelData["Para5"] = $("#Para5").val();
                ModelData["Para6"] = $("#Para6").val();
            }
            else if ($("#Code").val() == "DriverTripBalance") {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Para1"] = $("#Driver").val();
            }
            else if ($("#Code").val() == "EwayBillDetails") {
                ModelData["Document"] = $("#Document").val();
                ModelData["Status"] = $('#Status').is(":checked");
                ModelData["Code"] = $("#Code").val();
                ModelData["FromDate"] = $("#StartDate").val();
                ModelData["ToDate"] = $("#EndDate").val();
                ModelData["Name"] = $("#Name").val();
                ModelData["ObjectType"] = $("#ObjectType").val();
                ModelData["User"] = $("#User").val();
                ModelData["Branch"] = $("#Branch").val();
                ModelData["EmptyBranchEwayBill"] = $('#EmptyBranchEwayBill').is(":checked");
                ModelData["Para1"] = $("#Para1").val();
                ModelData["Para2"] = $("#Para2").val();
                ModelData["Para3"] = $("#Para3").val();
                ModelData["Para4"] = $("#Para4").val();
            }
            ModelData["DisplayOrder"] = $("#DisplayOrder").val();
            ModelData["Srno"] = $("#Srno").val();
            ModelData["ZoomURL"] = $('#ZoomURL').is(":checked");
            ModelData["Header"] = '@Model.Header';
            ModelData["GridMode"] = '@Model.GridMode';

            var DTO = { Model: ModelData };
            var url = '@Url.Action("AddSideBar")';
            $.ajax({
                async: false,
                cache: false,
                url: url,
                data: JSON.stringify(DTO),
                type: "POST",
                dataType: "json",
                cache: false,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    debugger;
                    if (data.Status == "Error") {
                        alert(data.Message);
                        $('.spinner').hide();
                    }
                    else {
                        $('.spinner').hide();
                        $('#MessageRulesdiv').html(data.Html);
                    }
                },
            });
        });
        $("#btnBackTolist").click(function (event) {
            event.preventDefault(event);
            var ModelData = {};
            ModelData["User"] = $('#User').val()

            var DTO = { Model: ModelData };
            var url = '@Url.Action("BackTolist")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#MessageRulesdiv').html(data.Html);
                },
                error: function (err) {
                    alert(JSON.stringify(err))
                    alert("Error occured while processing your request.");
                }
            });
        });
        $('.listbox').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '140',
            numberDisplayed: 1,
            nonSelectedText: 'Select Item',
        });
    });
</script>
<div class="col-sm-12">
    @if (Model.Code == "Outstanding" || Model.Code == "Payable")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @if (Model.Code == "Outstanding")
                {
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "OUTSTANDING", @disabled = "disabled" })
                }
                else
                {
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "PAYABLE", @disabled = "disabled" })
                }
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

            <label class="bold col-sm-2  control-label hidden">Account :</label>
            <div class="col-sm-2 hidden" style="display:flex;">
                <input type="radio" class="form-control " name="Chrges" id="Customer" value="Customer" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:black;padding: 3px 0px 0px 0px;"> Customer</label>
                <input type="radio" class="form-control " name="Chrges" id="CustomerNo" value="Master" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:black;padding: 3px 0px 0px 0px;"> Master</label>
            </div>
            <div class="col-md-2 Master1 hidden">
                @Html.ListBoxFor(x => x.MasterL, Model.Masters, new { @class = "listbox", @id = "MasterList" })
            </div>
            <div class="col-md-2 CustomerMaster1 hidden">
                @Html.ListBoxFor(x => x.MasterL, Model.Customers, new { @class = "listbox", @id = "CustomerList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para2, new { @class = "form-control", @Value = Model.Para2, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para5, new { @class = "form-control", @Value = Model.Para5, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-5:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para6, new { @class = "form-control", @Value = Model.Para6, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-6:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para7, new { @class = "form-control", @Value = Model.Para7, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "UnBillConsignmet")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "UNBILLED CONSIGNMENT", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para1, new { @class = "form-control", @Value = Model.Para1, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para2, new { @class = "form-control", @Value = Model.Para2, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "ConsignmetStock")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "GODOWN STOCK", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para1, new { @class = "form-control", @Value = Model.Para1, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para2, new { @class = "form-control", @Value = Model.Para2, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "ConsignmeTRNStock")
    {<div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "TRANSIT STOCK", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para1, new { @class = "form-control", @Value = Model.Para1, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para2, new { @class = "form-control", @Value = Model.Para2, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "ConsignmetBook")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "BOOKING", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>


        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <label class="bold col-sm-2  control-label">Amount :</label>
            <div class="col-sm-2" style="display:flex;">
                <input type="radio" class="form-control " name="ChrgesBK" id="BillAmt" value="T" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:black;padding: 3px 0px 0px 0px;"> Bill</label>
                <input type="radio" class="form-control " name="ChrgesBK" id="BookAmt" value="F" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:black;padding: 3px 0px 0px 0px;"> Booking</label>
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "TopCustomers")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "TOP 10 CUSTOMERS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "TopGroupCustomers")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "TOP 10 GROUP CUSTOMERS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "TopVendors")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "TOP 10 VENDORS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "TopExpenses")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "TOP 10 EXPENSES", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "VehicleStatus")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "VEHICLE STATUS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Vehicle Type:</label>
            <div class="col-sm-2" style="display:flex;">
                <input type="checkbox" id="OwnVehicle" name="VStatus" style="height:23px;width:35px;">
                <label class="control-label" style="font-weight: bold;"> Own</label>
                <input type="checkbox" id="AttaVehicle" name="VStatus" style="height:23px;width:35px;">
                <label class="control-label" style="font-weight: bold;"> Attach</label>
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "VehicleLocation")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "VEHICLE LOCATIONS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>
            <label class=" bold   col-sm-2  control-label">Vehicle:<span style="color:red;">*</span></label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.VehicleL, Model.Vehicles, new { @class = "listbox", @id = "VehicleList" })
            </div>

        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "DriverStatus")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "DRIVER STATUS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "DriverTripBalance")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "DRIVER TRIP & BALANCE", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Driver:<span style="color:red;">*</span></label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.DriverL, Model.Drivers, new { @class = "listbox", @id = "DriverList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "VehicleTripDetails")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "VEHICLE TRIP DETAILS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Vehicle:<span style="color:red;">*</span></label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.VehicleL, Model.Vehicles, new { @class = "listbox", @id = "VehicleList" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "VehicleExpDue")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "VEHICLE EXP DUE", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>

        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Vehicle:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.VehicleMasterL, Model.VehicleMasters, new { @class = "listbox", @id = "VehicleMasterList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Due Exp:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.VehicleExpDueL, Model.VehicleExpDues, new { @class = "listbox", @id = "VehicleExpDueList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para5, new { @class = "form-control", @Value = Model.Para5, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.Para6, new { @class = "form-control", @Value = Model.Para6, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
    else if (Model.Code == "EwayBillDetails")
    {
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Display No:</label>
            <div class="col-sm-2 ">
                @Html.TextBoxFor(x => x.DisplayOrder, new { @class = "form-control", @Value = Model.DisplayOrder })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4 hidden" style="display:flex;">
                <div class="col-md-1" style="font-weight:bold; color:black;padding-left:6px;font-family:Tahoma;padding-top:5px;font-size:12px; width:unset;">
                    Date:
                </div>
                <div class="input-group input-large" data-date-format="dd/mm/yyyy">
                    <input type="text" class="form-control dpd1" name="from" id="StartDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                    <span class="input-group-addon">to</span>
                    <input type="text" class="form-control dpd2" name="to" id="EndDate" data-date-format="dd/mm/yyyy" style="font-weight:bolder;text-align:center;">
                </div>
            </div>
            <label class=" bold   col-sm-2  control-label">Name(Heading):<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @Value = "EWAY BILL DETAILS", @disabled = "disabled" })
            </div>
            <label class=" bold   col-sm-2  control-label hidden" style="width:auto;">Diagram Type:<span style="color:red;">*</span></label>
            <div class="col-sm-2 hidden">
                @Html.DropDownListFor(x => x.ObjectType, Model.ObjectTypes, "<-- Select Diagram -->", new { @class = "form-control ObjectType", @style = "float: right;width:auto;display: inline-table;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">User:<span style="color:red;">*</span></label>
            <div class="col-sm-3 ">
                @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "listbox", @id = "UserList" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Branch:</label>
            <div class="col-sm-2 ">
                @Html.ListBoxFor(x => x.BranchL, Model.BranchsOnly, new { @class = "listbox", @id = "BranchList" })
            </div>
            <div class="col-sm-1 " style="padding-left: 25px;">
                @Html.CheckBoxFor(x => x.EmptyBranchEwayBill, new {@title="Users Allow To See UnMapped Eway Bills...", @value = Model.EmptyBranchEwayBill, @style = "height:23px;width:23px;" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-1:</label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Para1, new { @class = "form-control", @Value = Model.Para1, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-2:</label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Para2, new { @class = "form-control", @Value = Model.Para2, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-3:</label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Para3, new { @class = "form-control", @Value = Model.Para3, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class=" bold   col-sm-2  control-label">Age-4:</label>
            <div class="col-sm-3 ">
                @Html.TextBoxFor(x => x.Para4, new { @class = "form-control", @Value = Model.Para4, @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="btnBackTolist" data-toggle="tooltip" data-placement="top">Back To List</button>
            </div>
            <div class="pull-right" style="padding-right: 5px;">
                @if (Model.GridMode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAdd" data-toggle="tooltip" data-placement="top">Add</button>
                }
                else
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnUpdate" data-toggle="tooltip" data-placement="top">Update</button>
                }
            </div>
        </div>
    }
</div>
