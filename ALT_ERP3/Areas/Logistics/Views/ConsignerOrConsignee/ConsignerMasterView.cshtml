@model ALT_ERP3.Areas.Logistics.Models.ConsignerMasterVM
@using Common;
@{
    ViewBag.Title = "Consigner Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<script src="~/Scripts/jquery.jstree.js"></script>
<style>
    .multiselect-search {
        height: 31px !important;
    }

    .jstree a {
        color: black !important;
        font-weight: bold !important;
    }

    .jstree-default a.jstree-search {
        color: #ff0779 !important;
        font-weight: bold !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {

        GetMyFavorites('@Model.ViewDataId');
        LoadBillingParty();
        FillTreeView();
        ClickDefaultFirstAddress();

        if ('@Model.RemarkReq' == "True" || '@Model.RemarkReq' == "true") {
            $("#TickLrConsignor,#TickLrConsignee").prop("disabled", false);
        } else {
            $("#TickLrConsignor,#TickLrConsignee").prop("disabled", true);
        }

        if ('@Model.HoldReq' == "True" || '@Model.HoldReq' == "true") {
            $("#HoldTickLrConsignor,#HoldTickLrConsignee").prop("disabled", false);
        } else {
            $("#HoldTickLrConsignor,#HoldTickLrConsignee").prop("disabled", true);
        }

        $('#chkSelectAll').change(function () {
            if ($('#chkSelectAll').is(":checked")) {
                CheckUncheckTree('Check');
            }
            else {
                CheckUncheckTree('UnCheck');
            }
        });
        $('#search').keyup(function () {
            $('#treeviewcontrol').jstree('search', $(this).val());
        });

        $("#RemarkReq").change(function () {
            debugger;
            if (this.checked) {
                $("#Remark").removeAttr("disabled");
                $("#TickLrConsignor,#TickLrConsignee").prop("disabled", false);

            } else {
                $("#Remark").attr("disabled", "disabled");
                $("#TickLrConsignor,#TickLrConsignee").prop("disabled", true);
            }
        });

        $("#HoldReq").change(function () {
            debugger;
            if (this.checked) {
                $("#HoldRemark").removeAttr("disabled");
                $("#HoldTickLrConsignor,#HoldTickLrConsignee").prop("disabled", false);

            } else {
                $("#HoldRemark").attr("disabled", "disabled");
                $("#HoldTickLrConsignor,#HoldTickLrConsignee").prop("disabled", true);
            }
        });

        if ('@Model.Mode' == "Delete") {
            $('.form-group :input').prop("disabled", true);
        }
        $('#Name').blur(function () {
            CheckName();
        });
        $("#Name").constrain({ allow: { regex: "[(a-zA-Z0-9 .&)]" } });
        

        $('#btnDelete').click(function (event) {

            event.preventDefault();
            var result = confirm("Are you sure you want to delete?");
            if (result)
            {
                var url = '@Url.Action("DeleteStateMaster")';
                @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
                var ModelData = {};
                ModelData["Document"] = $("#Document").val();
                ModelData["Name"] = $("#Name").val();
                
                debugger;
                ModelData["ShortCutKey"] = '@Model.ShortCutKey';
                
                if ($('input[type=checkbox]').prop('checked'))
                {
                    ModelData["AcitveorNot"] = "True";
                }
                else
                {
                    ModelData["AcitveorNot"] = "False";
                }
                ModelData["Mode"] = '@Model.Mode';
                ModelData["Header"] = '@Model.Header';
                var DTO = { mModel: ModelData };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        if (data.Status == 'Success') {
                            debugger;
                            $('.spinner').hide();
                            if ('@Model.ShortCutKey' == "True")
                            {
                                window.close();
                            }
                            else
                            {
                                window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                            }
                            $("#ErrorMessage").hide();
                        }
                        else
                        {
                            $('.spinner').hide();
                            alert(data.Message);
                        }
                    },
                });
            } else
            {
                $('.spinner').hide();
                window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                $("#ErrorMessage").hide();
            }
        });

        $('#Submit').click(function (event) {
            event.preventDefault();

            if ($("#Name").val() == null || $("#Name").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Name is Required..');
                return;
            }
            
            var BranchList = "";
            $('#treeviewcontrol').each(function () {
                $(this).find('li').each(function () {
                    var current = $(this);
                    if (current.hasClass("jstree-checked")) {
                        BranchList += current.context.id + ",";
                    }
                });
            });
            BranchList = BranchList.substr(0, BranchList.length - 1);
            if (BranchList == '' || BranchList == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select Branch.....!');
                return;
            }
            if ($('#RemarkReq').is(":checked"))
            {
                if ($("#Remark").val() == null || $("#Remark").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Remark is Required..');
                    return;
                }
            }
            if ($('#HoldReq').is(":checked"))
            {
                if ($("#HoldRemark").val() == null || $("#HoldRemark").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('HoldRemark is Required..');
                    return;
                }
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Document"] = $("#Document").val();
            ModelData["RemarkReq"] = $('#RemarkReq').is(":checked");
            ModelData["Remark"] = $("#Remark").val();
            ModelData["CustomerCode"] = $("#CustomerCode").val();
            ModelData["HoldReq"] = $('#HoldReq').is(":checked");
            ModelData["HoldRemark"] = $("#HoldRemark").val();
            ModelData["Name"] = $("#Name").val();
            ModelData["Code"] = $("#Code").val();
            ModelData["Header"] = '@Model.Header';
            ModelData["Mode"] = '@Model.Mode';
            ModelData["ShortCutKey"] = '@Model.ShortCutKey';
            if ($('input[type=checkbox]').prop('checked'))
            {
                ModelData["AcitveorNot"] = "True";
            }
            else
            {
                ModelData["AcitveorNot"] = "False";
            }
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Area"] = $("#hdnID").val();
            ModelData["Branch"] = BranchList;
            ModelData["TickLrConsignor"] = $("#TickLrConsignor").is(":checked");
            ModelData["TickLrConsignee"] = $("#TickLrConsignee").is(":checked");
            ModelData["HoldTickLrConsignor"] = $("#HoldTickLrConsignor").is(":checked");
            ModelData["HoldTickLrConsignee"] = $("#HoldTickLrConsignee").is(":checked");
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        if ('@Model.ShortCutKey' == "True")
                        {
                            window.close();
                        }
                        else
                        {
                            window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        }
                        $("#ErrorMessage").hide();
                    }
                    else
                    {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });

        $('#expandall').click(function () {
            ExpandOrCollapse();
        });
    });
    function ExpandOrCollapse()
    {
        if ($("#treeviewcontrol>ul>li").hasClass("jstree-open"))
        {
            $("#treeviewcontrol").jstree("close_all", "#0");
        }
        else
        {
            $("#treeviewcontrol").jstree("open_all", "#0");
        }
    }
    function FillTreeView()
    {
        var Document = $("#Document").val();
        var tree = $("#treeviewcontrol");
        tree.jstree({
            json_data: {
                "ajax": {
                    "url": "/ConsignerOrConsignee/TreeView?Mode=@Model.Mode&Document=" + Document,
                    "type": "POST",
                    "dataType": "json",
                    "contentType": "application/json charset=utf-8"
                }
            },
            checkbox: {
                real_checkboxes: true,
                checked_parent_open: false
            },
            plugins: ["themes", "json_data", "ui", "checkbox", "search"]
        }).bind("loaded.jstree", function (event, data) {
            $('#treeviewcontrol').jstree('check_node', 'li[selected=selected]');
            $(this).jstree("open_all");
        });
    }
    function CheckUncheckTree(check)
    {
        var tree = $("#treeviewcontrol");
        tree.jstree({
            json_data: {
                "ajax": {
                    "url": "/ConsignerOrConsignee/CheckUncheckTree?Check=" + check,
                    "type": "POST",
                    "dataType": "json",
                    "contentType": "application/json charset=utf-8"
                }
            },
            checkbox: {
                real_checkboxes: true,
                checked_parent_open: false
            },
            plugins: ["themes", "json_data", "ui", "checkbox", "search"]
        }).bind("loaded.jstree", function (event, data) {
            $('#treeviewcontrol').jstree('check_node', 'li[selected=selected]');
            $(this).jstree("open_all");
        });
    }
    @* iX9: Autocomplete Code i.e. ControlType='A' and vDepend<>'' *@
    function CheckName()
    {
        NameFlag = "False";
        var currValue = $('#Name').val()
        var url = '@Url.Action("CheckExist")';
        if (currValue != null || currValue != "")
        {
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { TableName: "Consigner", Colfield: "Name", Value: $('#Name').val(), SkipColumnName: "Code", PKValue: '@Model.Document' },
                success: function (result)
                {
                    if (result.Message == "F")
                    {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Name is Exist Please Change The Name..');
                        $('#Submit').prop('disabled', true);
                        return;
                    }
                    else
                    {
                        $("#ErrorMessage").hide();
                        $('#Submit').prop('disabled', false);
                    }
                }
            });
        }
    }
    function LoadBillingParty()
    {
        var url = '@Url.Action("GetBillingParty")'
        $('#CustomerCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.CustomerCode', text: '@Model.CustomerName' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function GetGSTDetails()
    {
        if ($("#GSTNo").val() == "" || $("#GSTNo").val() == null) {
            alert("Please Enter GST NO...!");
            return;
        }
        var url = '/Logistics/SingleEwayBillTransaction/GetGSTDetails';
        var ModelData = {};
        ModelData["GSTNo"] = $("#GSTNo").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (result) {
                $('.spinner').hide();
                if (result.Status == "Sucess")
                {
                    $("#Name").val(result.Model.Name);
                    $('#State').select2('data', { id: result.Model.State, text: result.Model.StateName});
                    $("#Pincode").val(result.Model.Pincode);
                    $("#Address1").val(result.Model.Address1);
                    $("#Address2").val(result.Model.Address2);
                }
                else
                {
                    alert(result.errormsg);
                }
            },
        });
    }
    function ClickDefaultFirstAddress() {
        var ModelData = {};
            ModelData["SrNo"] = "0";
        ModelData["Mode"] = '@Model.Mode';
            var DTO = { Model: ModelData };
            var url = '@Url.Action("GetAddInfo")';
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json;charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $("#maildetail").html(data.Html);
                    xyz = $('#hdnSrNo1').val()
                    console.log(xyz);
                    if ($('#hdnSrNo1').val() != '') {
                        $('#' + xyz).css('background-color', '#FF8E2B');
                    } else {
                        $('#' + xyz).css('background-color', '#27AE60');
                    }
                },
                error: function () {
                    alert("Error occured while processing your request.");
                }
            });
    }
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right">
            @if (Model.ShortCutKey)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:1%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <br />
            <div class="tab">
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="Sales1">General</button>
                <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')">Mailing Info</button>
            </div>

            <div id="divLedgerTable" class="tabcontent" style="height:450px;overflow-x:auto;">
                <div id="DataEntry" class="col-sm-9">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Code:</label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(x => x.Code, new { @class = "input-large-query form-control", @readonly = "readonly", @style = "width:100%;margin-top:2px;", @Value = Model.Code })
                        </div>

                        <div class="col-sm-3">

                        </div>
                        <div class="col-sm-2"></div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name:<span style="color:red;">*</span></label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(x => x.Name, new { @class = "input-large-query form-control", @style = "width:100%;margin-top:2px;", @Value = Model.Name })
                        </div>

                        <div class="col-sm-2"></div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label">Customer :</label>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(x => x.CustomerCode, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.CustomerCode })
                        </div>
                        <div class="col-sm-2"></div>

                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Fax:</label>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(x => x.Fax, new { @maxlength = "10", @class = "form-control", @style = "width:100px;text-align:right;", @Value = Model.Fax })

                        </div>
                        <div class="col-sm-2"></div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label">Status:</label>
                        <div class="col-sm-2">
                            @Html.CheckBoxFor(x => x.Acitve, new { @class = "checkbox", @style = "width:20px;", @Value = Model.Acitve })
                        </div>

                    </div>

                    <div class="form-group">
                        <label class="col-sm-2 control-label">Tickler:</label>
                        <div class="col-sm-1" style="width:auto;">
                            @Html.CheckBoxFor(x => x.RemarkReq, new { @class = "checkbox", @style = "width:20px;", @Value = Model.RemarkReq })
                        </div>
                        <div class="col-sm-2" style="display:flex;">
                            <label class="col-sm-2 control-label" style="width:auto;">Consignor:</label>
                            <div>
                                @Html.CheckBoxFor(x => x.TickLrConsignor, new { @class = "checkbox", @style = "width:20px;", @Value = Model.TickLrConsignor })
                            </div>
                            <label class="col-sm-2 control-label" style="width:auto;">Consignee:</label>
                            <div>
                                @Html.CheckBoxFor(x => x.TickLrConsignee, new { @class = "checkbox", @style = "width:20px;", @Value = Model.TickLrConsignee })
                            </div>
                        </div>
                        <label class="col-sm-offset-1  col-sm-2 control-label">Tickler Narr:</label>
                        <div class="col-sm-4">
                            @if (Model.RemarkReq)
                            {
                                @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @Value = Model.Remark, @maxlength = "100", @rows = "2" })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.Remark, new { @class = "form-control", @style = "width:100%;", @Value = Model.Remark, @maxlength = "100", @rows = "2", @disabled = "disabled" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Tickler(Hold):</label>
                        <div class="col-sm-1" style="width:auto;">
                            @Html.CheckBoxFor(x => x.HoldReq, new { @class = "checkbox", @style = "width:20px;", @Value = Model.HoldReq })
                        </div>
                        <div class="col-sm-2" style="display:flex;">
                            <label class="col-sm-2 control-label" style="width:auto;">Consignor:</label>
                            <div>
                                @Html.CheckBoxFor(x => x.HoldTickLrConsignor, new { @class = "checkbox", @style = "width:20px;", @Value = Model.HoldTickLrConsignor })
                            </div>
                            <label class="col-sm-2 control-label" style="width:auto;">Consignee:</label>
                            <div>
                                @Html.CheckBoxFor(x => x.HoldTickLrConsignee, new { @class = "checkbox", @style = "width:20px;", @Value = Model.HoldTickLrConsignee })
                            </div>
                        </div>
                        <label class="col-sm-offset-1  col-sm-2 control-label">Tickler(Hold) Narr:</label>
                        <div class="col-sm-4">
                            @if (Model.HoldReq)
                            {
                                @Html.TextAreaFor(x => x.HoldRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.HoldRemark, @maxlength = "100", @rows = "2" })

                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.HoldRemark, new { @class = "form-control", @style = "width:100%;", @Value = Model.HoldRemark, @maxlength = "100", @rows = "2", @disabled = "disabled" })
                            }
                        </div>
                    </div>

                </div>
                <div class="col-sm-3" style="font-family:Tahoma;font-size:12px;border-left:double;">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="input-group" style="display:flex;">

                                <label class="control-label" style="font-size: 14px;font-weight: bold;padding-right:10px;">Select All</label>
                                <div style="padding-right:40px;"><input type="checkbox" class="checkbox" id="chkSelectAll" style="width:22px;" /></div>
                                <input type="text" class="form-control" style="width:150px;" placeholder="Search Node ..." id="search" />
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div id="treeviewcontrol" style=" min-height:300px;overflow-y:auto;max-height:300px;position: relative;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="divLedgerTable2" class="tabcontent" style="height:450px;">
                <div @*class="form-group"*@>
                    @Html.Partial("MailingInfo", Model)
                </div>
            </div>
            <script>
                function openCity(evt, cityName) {
                    debugger;
                    var i, tabcontent, tablinks;
                    tabcontent = document.getElementsByClassName("tabcontent");
                    for (i = 0; i < tabcontent.length; i++) {
                        tabcontent[i].style.display = "none";
                    }
                    tablinks = document.getElementsByClassName("tablinks");
                    for (i = 0; i < tablinks.length; i++) {
                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                    }
                    document.getElementById(cityName).style.display = "block";
                    evt.currentTarget.className += " active";
                }
                document.getElementById("Sales1").click();
            </script>
        </div>
    </div>
</section>

<footer class="footer-section" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">

        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-weight:bold;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            ALT AIR-3.0, Shruham Software

        </div>
        <div class="col-sm-4">
            <div class="pull-right" style="padding-left:5px;">
                <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="expandall">Expand All / Collapse All</button>
            </div>
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                @if (Model.ShortCutKey)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>

        </div>
    </div>
</footer>

@*<input type="hidden" id="controllername" />*@
@Html.HiddenFor(x => x.Document)
<input type="hidden" id="hdnID" />
@*@Html.HiddenFor(x => x.Branch, new { @id = "hdnAppBranch" })
    <input type="hidden" id="hdnBranchCodeArray" />*@


