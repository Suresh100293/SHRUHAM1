@model IEnumerable<ALT_ERP3.Areas.Logistics.Models.LRModal>
@{
    /**/

    Layout = null;
}

<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>

<style>
    td, th {
        padding: 4px !important;
    }

    .Ordertable {
        display: table;
    }

    .Ordertable-row {
        display: table-row;
        color: black;
    }

    .Ordertable-cell {
        display: table-cell;
        border: 1px solid black;
        padding: 5px;
        /*text-align: center;*/
    }


    .otherBranch {
        background-color: #d690aa;
    }

    .ClickrowColor {
        background-color: #71a1af !important;
        color: black;
    }

    /*.inputColor{
        color:black;
    }*/
    input[type=text] {
        color: black !important;
    }

    .span6 {
        display: none !important;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        //$('.NewDate').datepicker({
        //    format: 'dd/mm/yyyy',
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "-60:+0",
        //    autoclose: true,
        //});
        debugger;
        $("#OTHUnloadGridexample1").DataTable({
            "iDisplayLength": -1
        });
        $(".LGQty").constrain({ allow: { regex: "[0-9]" } });
        $(".LDQty").constrain({ allow: { regex: "[0-9]" } });
        $(".CalculateWeight").constrain({ allow: { regex: "[0-9]" } });


        $('.editrow').click(function () {
            var Row = $(this).closest('tr');
            //UnloadDate UnloadTime
            //Row.find(".NewDate").text('@DateTime.Now.ToShortDateString()');
            //Row.find(".NewTime").text('@DateTime.Now.ToString("HH:mm")');
            Row.find(".LGQty").prop("disabled", false);
            //Row.find(".LDQty").prop("disabled", false);
            //Row.find(".NewDate").prop("disabled", false);
            //Row.find(".NewTime").prop("disabled", false);
            Row.find(".CalculateWeight").prop("disabled", false);
            Row.find(".editrow").hide();
            Row.find(".Cancelrow").removeClass("hidden");
        });

        $('.Cancelrow').click(function () {
            var Row = $(this).closest('tr');
            Row.find(".LGQty").prop("disabled", true);
            //Row.find(".LDQty").prop("disabled", true);
            Row.find(".CalculateWeight").prop("disabled", true);
            //Row.find(".NewTime").prop("disabled", true);
            //Row.find(".NewDate").prop("disabled", true);
            Row.find(".editrow").show();
            Row.find(".Cancelrow").addClass("hidden");
        });

        $(".OTHdeletebtn").click(function () {
            debugger;
            var Row = $(this).closest('tr');
            var Reco = $(this).closest('tr').find(".RecorKey").text();

            @*var deletelr = $("#DeleteUnloadLr").val();
            deletelr += Reco + ",";
            $("#DeleteUnloadLr").val(deletelr);

            var result = confirm("Are you sure you want to delete?");
            if (result) {
                $(this).closest('tr').remove();
                var url = '@Url.Action("DeleteUnloadLR")';
                var DTO = { recordkey: Reco };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    },
                });
            }*@

            var url = '/Logistics/UnLoading/OTHDeleteUnloadLR';
            var ModelData = {};
            ModelData["Document"] = $('#Document').val();
            ModelData["DeleteUnloadLR"] = Reco;
            var DTO = { mModel: ModelData };
            var result = confirm("Are you sure you want to delete?");
            if (result) 
            {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function ()
                    {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        $('.spinner').hide();
                        $("#ErrorMessageLC").hide();
                        if (data.Status == 'Success')
                        {
                            alert(data.Message);
                            OTHUnLoadGridView();
                        }
                        else
                        {

                            alert(data.Message);

                        }
                    },
                });
            }

        });

    });
    function LDLoadQty(value) {
        debugger;
        var Row = $("#" + value);
        var Qty = Row.find(".Qty").text();
        var LoadGQty = Row.find(".LGQty").val();
        var LoadDQty = Row.find(".LDQty").val();

        var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
        var Weight = Row.find(".WeightU").text();
        if (!(parseFloat(Qty) >= parseFloat(LoadQty))) {
            Row.find(".CalculateWeight").val(Row.find(".WeightU").text());
            alert("GodownQty and DoorQty Not Greater Than Qty OF Lr.....!");
            Row.find(".LGQty").val(Row.find(".Qty").text());
            //Row.find(".LDQty").val(Row.find(".loadDQtyU").text());
            Row.find(".CalculateWeight").val(Row.find(".WeightU").text());
        }
        else {
            var CalculateWeight = parseFloat(LoadQty) / parseFloat(Qty) * parseFloat(Weight);
            if (parseInt(CalculateWeight) >= parseInt(Weight)) {
                Row.find(".CalculateWeight").val(Math.round(Weight));
            } else {
                Row.find(".CalculateWeight").val(Math.round(CalculateWeight));
            }
        }
    }
    function UNLoadweightBlur(value) {
        debugger;
        var Row = $("#" + value);
        var Qty = Row.find(".Qty").text();
        var LoadGQty = Row.find(".LGQty").val();
        var LoadDQty = Row.find(".LDQty").val();

        var LoadQty = parseInt(LoadGQty) + parseInt(LoadDQty);
        var Weight = Row.find(".WeightU").text();
        var LWeight = Row.find(".CalculateWeight").val();
        if (!(parseFloat(Weight) >= parseFloat(LWeight))) {
            var CalculateWeight = parseFloat(LoadQty) / parseFloat(Qty) * parseFloat(Weight);
            Row.find(".CalculateWeight").val(CalculateWeight);
            alert("Weight Not Greater Than Act Weight OF Lr.....!");
        }
    }





</script>

@if (Model != null)
{
    <div class="container-fluid" style="margin-top:8px;padding-left:0px;">
        <table id="OTHUnloadGridexample1" class="table-bordered example" style="width:100%!important;">
            <thead>

                <tr>
                    <th class="hidden">Record</th>
                    <th>Delete</th>
                    <th>UNL Area</th>
                    <th class="hidden">UNL Area</th>
                    <th>Lr No</th>
                    <th>Lr Date</th>
                    <th>Godown </th>
                    <th class="hidden"> Direct </th>
                    <th>Un-Weight</th>
                    <th>Avl Qty</th>
                    <th>Weight</th>
                    <th>From</th>
                    <th>To</th>
                    <th>G-Qty</th>
                    <th>D-Qty</th>
                    <th>LC No</th>
                    <th>Lc From</th>
                    <th>Lc TO</th>
                    <th>Charge Type</th>
                    <th>Consigner</th>
                    <th>Consignee</th>
                    @*<th>UnloadDate</th>
                        <th>UnloadTime</th>*@
                    @*<th class="hidden">loadDate</th>
                        <th class="hidden">loadTime</th>*@
                </tr>
            </thead>
            <tbody style="max-height:400px;min-height:400px;width:100%; overflow-x:hidden;overflow-y:auto">
                @foreach (var item in Model)
                {
                    <tr id="@item.recordkey">

                        <td class=" RecorKey hidden">@item.recordkey</td>
                        <td>
                            <center>
                                <button class="btn btn-danger OTHdeletebtn" style="font-size: 13px;padding:3px 13px;" id="@("btnDelete"+item.Lrno)"><i class="glyphicon glyphicon-trash" style="font-size: 1.2em;"></i></button>
                            </center>
                        </td>
                        <td>
                            @item.OTHBranchName
                        </td>
                        <td class="hidden  UnlLoadBranch">@item.OTHBranch</td>
                        <td class=" ">@item.Lrno</td>
                        <td class=" ">@item.Date</td>
                        <td class=" LoadGQty">
                            <center><input type="text" class="LGQty" style="width:50px;" onblur="LDLoadQty('@item.recordkey.ToString()')" value="@item.unloadGQty" disabled /></center>
                        </td>
                        <td class="hidden LoadDQty">
                            <center><input type="text" class="LDQty" style="width:50px;" onblur="LDLoadQty('@item.recordkey.ToString()')" value="@item.unloadDQty" disabled /></center>
                        </td>
                        <td class=" ">
                            <center><input type="text" class="CalculateWeight" style="width:50px;" disabled onblur="UNLoadweightBlur('@item.recordkey')" value="@item.UnWeight" /></center>
                        </td>
                        <td class="Qty ">@item.Qty</td>
                        <td class=" WeightU">@item.Weight</td>
                        <td class=" ">@item.From_Name</td>
                        <td class=" ">@item.To_Name</td>
                        <td class="loadGQtyU ">@item.loadGQty</td>
                        <td class="loadDQtyU ">@item.loadDQty</td>
                        <td class=" ">@item.Lcno</td>
                        <td class=" ">@item.LcFrom</td>
                        <td class=" ">@item.LCTo</td>
                        <td class=" ">@item.ChargeType</td>
                        <td class=" ">@item.Consignor</td>
                        <td class=" ">@item.Consignee</td>
                        @*<td class="">@DateTime.Now.ToShortDateString()</td>*@
                        @*<td><center><input type="text" class="NewDate" style="width:100px;" disabled value="@DateTime.Now.ToShortDateString()" /></center></td>
                            <td><center><input type="time" class="NewTime" style="width:100px;" disabled value="@DateTime.Now.ToString("HH:mm")" /></center></td>*@
                        @*<td class="">@DateTime.Now.ToShortTimeString()</td>*@
                        @*<td class="hidden ">@item.LoadDate</td>
                            <td class="hidden ">@item.LoadTime</td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
}