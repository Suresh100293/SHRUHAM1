@model ALT_ERP3.Areas.Logistics.Models.OrderRequestVM
@using Common;
@{
    ViewBag.Title = "OrderRequest Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>

<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>
<script src="~/Content/Tab/webcamjs/webcam.js"></script>
<style>
    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }
</style>
<style>
    #menu li {
        list-style: none;
        text-align: center;
        color: black;
        margin-left: 0px;
        position: relative;
    }

    #menu ul li:hover {
        cursor: pointer;
        background-color: coral;
        padding: 2px 0px 2px 0px;
        text-align: center;
        color: white;
    }

    /*#menu ul li:hover a {
            color: white !important;
        }*/

    ul, .list-unstyled {
        padding-left: 0px;
    }
</style>
<style>
    a:hover {
        cursor: pointer;
    }

    .Ordertable {
        display: table;
    }

    /*#Orderlist:hover a {
        background-color: #d8b9dc;
        color: white !important;

    }*/
    .legend2:hover, .legend3:hover {
        background-color: #1fb5ad;
        color: white;
    }

    .Ordertable-row:hover {
        /*background-color: #d8b9dc;*/
        background-color: #c7c1a1;
    }

        .Ordertable-row:hover a {
            /*color: white;*/
        }

    .Ordertable-row {
        display: table-row;
    }

    .Ordertable-cell {
        display: table-cell;
        border: 1px solid black;
        padding: 5px;
        text-align: center;
        /*border-bottom: 1px solid;*/
    }


    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>
<style>

    .BspanBlink {
        /*background-color: #d0d4d3;*/
        font-size: 15px !important;
        /*height: 35px;*/
        /*font-family: Tahoma;
        font-weight: bold;
        color: #f90e90fa;*/
        animation: blink 2s linear infinite;
    }

    @@keyframes blink {
        0% {
            opacity: 0;
        }

        10% {
            opacity: .1;
        }

        25% {
            opacity: .25;
        }

        50% {
            opacity: .5;
        }

        75% {
            opacity: .75;
        }

        100% {
            opacity: 1;
        }
    }

    .Bmarquee {
        white-space: nowrap;
    }

        .Bmarquee label {
            display: inline-block;
            padding-left: 100%;
            animation: marquee 12s linear infinite;
            font-size: 15px !important;
        }

    /* Make it move */
    @@keyframes marquee {
        0% {
            transform: translate(0, 0);
        }

        25% {
            transform: translate(-25%, 0);
        }

        50% {
            transform: translate(-50%, 0);
        }

        75% {
            transform: translate(-75%, 0);
        }

        100% {
            transform: translate(-100%, 0);
        }
    }

    .Bbold {
        font-weight: bold;
    }
</style>
<script type="text/javascript">
    var PrintLR = "";
    GetMyFavorites('@Model.ViewDataId');
    var LrGenerate = true;

   var C_POnumver = false, C_BEnumber = false, C_PartyChallan = false, C_PartyInvoice = false;


    $(document).ready(function () {


        //  $('#Cameramodal').modal('hide');
        $('#attachdoc').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#attachdoc").modal("hide");

        $("#AutoLRNo").val('@Model.OrderNO');
        $("#BothCHK").change(function () {
            $("#ErrorMessage").hide();
            if (this.checked) {
                LrGenerate = false;
                $("#OrderNO").removeAttr("disabled");
            } else {
                LrGenerate = true;
                $("#OrderNO").attr("disabled", "disabled");
                $("#OrderNO").val($("#AutoLRNo").val());
                $("#ErrorMessage").hide();
            }
        });

        $("#OrderNO").blur(function () {

            CheckManualLROnly();
        });

        LoadLRType();
        LoadServiceType();
        LoadConsigner();
        LoadConsignee();
        LoadBillingParty();
        LoadFrom();
        LoadTo();
        LoadBillAt();
        LoadOrderFor();
        LoadUnit();
        LoadParticular();
        LoadChargeType();
        //LoadDelivery();

        CollectionAndDelivery();
        Charges();


        if ('@Model.LRMode' == "R") {
            $("#Red").prop("checked", true);
        }
        else if ('@Model.LRMode' == "G") {
            $("#Green").prop("checked", true);
        }
        else if ('@Model.LRMode' == "W") {
            $("#White").prop("checked", true);
        }



        if (('@Model.Mode' == "View") || ('@Model.Mode' == "Delete")) {
            $('.form-group :input').prop("disabled", true);
            $('#BothCHK').prop("disabled", true);
            if ('@Model.Mode' == "View") {
                $('.btn').prop("disabled", true);
            }
            $('#changebranch .btn').prop("disabled", false);
            $('#changebranch :input').prop("disabled", false);

        }  else if ('@Model.Mode' == "Edit") {
            $('#BothCHK').prop("disabled", true);

        }

        BlockContentDispatch_Bill();

        if ('@Model.Mode' == "Edit") {
            var MessageDemo = "";

            if (MessageDemo != "") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(MessageDemo);
                $('.form-group :input').prop("disabled", true);
                $('#BothCHK').prop("disabled", true);
                $('.btn').prop("disabled", true);
                $('#changebranch .btn').prop("disabled", false);
                $('#changebranch :input').prop("disabled", false);
            }
        }
        if ('@Model.Mode' != "View") {
            if ('@Model.LockAuthorise' == "True") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").html("This Order Lock As Per The Authentication Rule...");
                $('.form-group :input').prop("disabled", true);
                $('#BothCHK').prop("disabled", true);

                $('.btn').prop("disabled", true);
                $('#btnPrintOnly').prop("disabled", false);
                $('#Printmodel :input').prop("disabled", false);
                $('#changebranch :input').prop("disabled", false);
                $('#changebranch .btn').prop("disabled", false);

            }
        }

        if ('@Model.PeriodLock' == "True") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('This Document Lock By Author....!');
            $('.form-group :input').prop("disabled", true);
            $('#BothCHK').prop("disabled", true);


            $('.btn').prop("disabled", true);
            $('#btnPrintOnly').prop("disabled", false);
            $('#Printmodel :input').prop("disabled", false);
            $('#changebranch .btn').prop("disabled", false);
            $('#changebranch :input').prop("disabled", false);


        }

        if ('@Model.Mode'!="Add") {
            $('#BothCHK').prop("disabled", true);
        }

        $(".CalculationTxt").constrain({ allow: { regex: "[0-9]" } });
        $("#OrderNO").constrain({ allow: { regex: "[0-9]" } });
        $("#PartyRef,#PartyInvoice,#BENumber,#EwayBill").constrain({ allow: { regex: "[a-zA-Z0-9/]" } });
        $("#PONumber").constrain({ allow: { regex: "[a-zA-Z0-9/]" } });
        $("#DecVal").constrain({ allow: { regex: "[0-9]" } });

        $(".tablinks").prop("disabled", false);

        $("#AddNewConsignerInLR,#AddNewConsigneeInLR").click(function (e) {
            e.preventDefault();
            var murl = "/Logistics/ConsignerOrConsignee/Index?TableName=&ShortCutKey=true&MainType=&Mode=Add&Header=Consigner%20/%20Consignee%20Master&ViewDataId=ConsignerOrConsignee&Controller2=ConsignerOrConsignee&Module=Master&optiontype=M&optioncode=ConsignerOrConsignee";
            window.open(murl, '_blank');
        });

        $('#ActWt').blur(function () {
            $("#ChgWt").val($("#ActWt").val());
        });
        $("#btnAddDoc").click(function (event) {
            event.preventDefault();

            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#OrderNO").val();
            ModelData["Type"] = "PCK00";
            ModelData["RefType"] = "@Model.Header";
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });
        $("#RecCode").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetTickler")';
            $.ajax({

                type: "POST",
                traditional: true,
                url: url,
                data: { Consigner: $("#RecCode").val() },
                success: function (result) {

                    if (result.HireBlackList == true) {
                        $("#hdnBlackListConsigner").val("T");
                    } else {
                        $("#hdnBlackListConsigner").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#SpclRMK").html(result.HireSpclRemark);
                            $("#SpclRemarkDiv").show();
                        }
                        else {
                            $("#SpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#BlackLStRMK").html(result.HireBlackListRemark);
                            $("#BlackListRemarkDiv").show();
                        }
                        else {
                            $("#BlackListRemarkDiv").hide();
                        }
                        $('#TicklerModal').modal('show');
                    }

                }
            });

        });
        $("#SendCode").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetTickler")';
            $.ajax({

                type: "POST",
                traditional: true,
                url: url,
                data: { Consigner: $("#SendCode").val() },
                success: function (result) {

                    if (result.HireBlackList == true) {
                        $("#hdnBlackListConsignee").val("T");
                    } else {
                        $("#hdnBlackListConsignee").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#SpclRMK").html(result.HireSpclRemark);
                            $("#SpclRemarkDiv").show();
                        }
                        else {
                            $("#SpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#BlackLStRMK").html(result.HireBlackListRemark);
                            $("#BlackListRemarkDiv").show();
                        }
                        else {
                            $("#BlackListRemarkDiv").hide();
                        }
                        $('#TicklerModal').modal('show');
                    }

                }
            });

        });

        $('#Bracode').click(function (event) {

            event.preventDefault();
            var url = '@Url.Action("GenerateBarCode")';
            var DTO = { Code: $("#OrderNO").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#BracodeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);

                },
            });
        });


        $('#BookDate').datepicker({
            format: 'dd/mm/yyyy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0",
            autoclose: true,
        });


        @*$("#btnPrint").click(function () {

            PrintLR = "SavePrint";

            if ('@Model.Mode' == "Edit") {
                if ('@Model.LRSetup.DispatchLREditReq' == "True" && '@Model.DispatchLR' == "True") {
                    var result = confirm("This Lr Dispatched R U Sure U Want To Save?");
                    if (result) {
                        if ('@Model.LRSetup.LRDate' != 'True') {
                            CheckDate();
                        }
                        else {
                            if (LrGenerate) {
                                CheckAutoLR();
                            }
                            else {
                                CheckManualLR();
                            }
                        }
                    }
                }
                else if ('@Model.LRSetup.LRBillEditReq' == "True" && '@Model.BillGenerate' == "True") {
                    var result = confirm("Bill Generated Of This Lr  R U Sure U Want To Save?");
                    if (result) {
                        if ('@Model.LRSetup.LRDate' != 'True') {
                            CheckDate();
                        }
                        else {
                            if (LrGenerate) {
                                CheckAutoLR();
                            }
                            else {
                                CheckManualLR();
                            }
                        }
                    }
                }
                else {
                    if ('@Model.LRSetup.LRDate' != 'True') {
                        CheckDate();
                    }
                    else {
                        if (LrGenerate) {
                            CheckAutoLR();
                        }
                        else {
                            CheckManualLR();
                        }
                    }
                }
            }
            else {
                if ('@Model.LRSetup.LRDate' != 'True') {
                    CheckDate();
                }
                else {
                    if (LrGenerate) {
                        CheckAutoLR();
                    } else {
                        CheckManualLR();
                    }
                }
            }


        });*@


        //$('#btnPrintOnly').click(function (event) {
        //    event.preventDefault();
        //    PrintLR = "OnlyPrint";
        //    $('#printpostmodel').modal('show');
        //});

        $('#Submit').click(function (event) {
            event.preventDefault();
            if ('@Model.Mode'=="Delete") {

                var result = confirm("Are you sure you want to Delete This Order ?");
                if (result) {
                    SaveLRBILL();
                }
            } else
            {
                CheckDate();
            }
        });
    });



    function CheckManualLROnly() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckManualLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#OrderNO").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    $("#Document").val($("#OrderNO").val());
                }
            }
        });
    }
    function CheckManualLR() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckManualLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#OrderNO").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    SaveLRBILL();
                }
            }
        });
    }
    function CheckAutoLR() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckAutoLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#OrderNO").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    SaveLRBILL();
                }
            }
        });
    }
    function PrintReport() {

       // var mformat = $("#hdnformatname").val();
        var Html = encodeURIComponent($('#PrintDiv').html());
       // var murl = "/ReportViewerCommon/Index?Date=" + mDate ;
        //window.open(murl, '_blank');
        @*window.location = '@Url.Action("DownloadAttachment", "PostDetail")';
        var sUrlpath = window.open('@Url.Action("Export")?GridHtml=' + Html, '_blank');*@

        var sUrlpath = window.open('@Url.Action("Export")?GridHtml=' + Html, '_blank');

    }



    function CheckDate() {
        var url = '@Url.Action("CheckLRDate")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { DocDate: $("#BookDate").val(), DocTime: $("#Time").val() },
                success: function (result) {
                    if (result.Status == "T") {
                        if (LrGenerate) {
                            CheckAutoLR();
                        } else {
                            CheckManualLR();
                        }
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text(result.Message);
                        return;
                    }
                }
            });
    }





    function LoadLRType() {

        var url = '@Url.Action("GetLRType")'
        $('#LRtype').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
            url: url,
            dataType: 'json',
            quietMillis: 100,
            enableFiltering: true,
            allowClear: true,
            minimumInputLength: 0,
            multiple: true,
            width: 300,
            data: function (term, page) {
                return {
                    types: ["exercise"],
                    limit: -1,
                    term: term
                };
            },
            results: function (data, page) {
                clientObj = JSON.stringify(data);
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.Name,
                            id: item.Code
                        }
                    })
                };
            }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.LRtype', text: '@Model.LRtype_Name' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                LoadCustomerBasedLrType();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadCustomerBasedLrType() {

       // $('#BillParty').select2('data', { id: 'asdf', text: 'rajesh ent' });
        var url = '@Url.Action("LoadCustomeThroughLRType")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        var DTO = { LRType: $("#LRtype").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function ()
            {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $('#BillParty').select2('data', { id: data.id, text: data.name });
                    $("#ErrorMessage").hide();
                } else {
                    $('.spinner').hide();
                }

            },
        });
    }


    function Charges() {
        $("#ChargeDiv .txtfvalue").each(function () {
            $(this).focus(function () {
                if ($(this).val() == "0") {
                    $(this).val("");
                }
            });
            $(this).blur(function () {
                if ($(this).val() == "" || $(this).val() == null) {
                    $(this).val("0");
                }
            });
        });
        $('#ChargeDiv .txtfvalue').blur(function () {
            var amt = 0;
            $("#ChargeDiv :text").each(function () {
                amt += parseFloat($(this).val());
            });
            $("#Amt").val((amt.toFixed(2)).toString());
        });
    }
    function CollectionAndDelivery() {

        $("input[name$='Delivery']").change(function () {
            if ($("#Door").is(":checked") == true) {
                $("#Godown").prop("checked", false);
            }
            else {
                $("#Door").prop("checked", false);
            }
        });

       if ('@Model.Mode'=="Add") {
            if ('@Model.Colln' == 'D')
            {
                $("#Direct").prop("checked", true);
            } else  {
                $("#Godown1").prop("checked", true);
            }

            if ('@Model.Delivery' == 'D')
            {
                $("#Door").prop("checked", true);
            } else {
                $("#Godown").prop("checked", true);
            }
        } else {
            if ('@Model.Colln' == 'D')
            {
                $("#Direct").prop("checked", true);
            } else if ('@Model.Colln' == 'G') {
                $("#Godown1").prop("checked", true);
            }
            if ('@Model.Crossing'=='True') {

                $("#Crossing").prop("checked", true);
            } else {
                $("#Crossing").prop("checked", false);
            }

            if ('@Model.Delivery' == 'D')
            {
                $("#Door").prop("checked", true);
            } else {
                $("#Godown").prop("checked", true);
            }
        }


    }


    function BlockContentDispatch_Bill()
    {
        if ('@Model.BillGenerate' == 'True')
        {
            $('#OrderNO').prop('disabled', true);
            $('#BookDate').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#Source').prop('disabled', true);
            $('#Dest').prop('disabled', true);
            $('#ActWt').prop('disabled', true);
            $('#ChgWt').prop('disabled', true);
            $('#LRtype').prop('disabled', true);
            $('#BillParty').prop('disabled', true);
            $('#BillBran').prop('disabled', true);
            $('#ChgType').prop('disabled', true);

            $('#btnGenaralContrct').prop('disabled', true);
            $('#btnContrct').prop('disabled', true);
            $('#Amt').prop('disabled', true);
            $("#ChargeDiv .txtfvalue").attr("disabled", true);

        }
        else if ('@Model.DispatchLR' == 'True')
        {
            $('#OrderNO').prop('disabled', true);
            $('#BookDate').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#Source').prop('disabled', true);
            $('#Dest').prop('disabled', true);
            $('#ActWt').prop('disabled', true);
            $('#ChgWt').prop('disabled', true);
            $('#TotQty').prop('disabled', true);
        }
    }
    function SaveLRBILL()
    {
        var ModelData = {};

        if ($("#hdnBlackListConsigner").val() == "T") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text($("#RecCode").val() + ' This Consigner Activity Hold By Setup.. Please Change Consigner....!');
            return;
        }

        if ($("#hdnBlackListConsignee").val() == "T") {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text($("#SendCode").val() + ' This Consignee Activity Hold By Setup.. Please Change Consignee....!');
            return;
        }


        //if ($("#OrderNO").val() == '0' || $("#OrderNO").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('OrderNO is required..');
        //    return;
        //}


        //if ($("#LRtype").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Order type is required..');
        //    return;
        //}

        if ($("#BookDate").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('OrderDate is required..');
            return;
        }

        if ($("#Time").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Time is required..');
            return;
        }
        //if ($("#Source").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('From is required..');
        //    return;
        //}

        //if ($("#Dest").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('To is required..');
        //    return;
        //}


        //if ($("#ServiceType").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('ServiceType is required..');
        //    return;
        //}

        if ($("#TotQty").val() == '' || $("#TotQty").val() == '0') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('PackQty is required..');
            return;
        }

        //if ($("#ActWt").val() == '' || $("#ActWt").val() == '0') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Actual_Weight is required..');
        //    return;
        //}

        //if ($("#ChgWt").val() == '' || $("#ChgWt").val() == '0') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Charged_Weight is required..');
        //    return;
        //}

        if (parseInt($("#ActWt").val()) > parseInt($("#ChgWt").val())) {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Actual_Weight Should Be Less Than Or Equal To Charged_Weight ..');
            return;
        }

        //if ($("#LRtype").val() == "100001")
        //{
        //    if ($("#BillParty").val() == '') {
        //        $("#ErrorMessage").show();
        //        $("#ErrorMessage").text('Billing_Party is required..');
        //        return;
        //    }
        //}
        //else if ($("#LRtype").val() == "100002")
        //{
        //    if ($("#BillParty").val() == '') {
        //        $("#ErrorMessage").show();
        //        $("#ErrorMessage").text('Billing_Party is required..');
        //        return;
        //    }
        //}
        //if ($("#LRtype").val() == "100000")
        //{
        //    if ($("#BillParty").val() == '')
        //    {
        //        $("#ErrorMessage").show();
        //        $("#ErrorMessage").text('Billing_Party is required..');
        //        return;
        //    }
        //}

        if ($("#Direct").is(":checked") == false && $("#Godown1").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Collection is required..');
            return;
        }

        if ($("#Door").is(":checked") == false && $("#Godown").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Delivery is required..');
            return;
        }

        if ($("#Red").is(":checked") == false && $("#Green").is(":checked") == false && $("#White").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('LR-Mode is required..');
            return;
        }
        var amt1 = 0;
        var ChargeList = [];

        $('#LRChargetbl tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            amt1 += parseInt(tds.find(".txtfvalue").val());
            ChargeList.push(myDets);
        });

        ModelData["Charges"] = ChargeList;


        //if ($("#LrContactPerson").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Contact Person Name is required..');
        //    $("#InfoModal").modal("show");
        //    return;
        //}

        //if ($("#LrContactPersonNo").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Contact Person No is required..');
        //    $('#InfoModal').modal('show');
        //    return;
        //}

        //if ($("#LrContactPersonEmailId").val() == '') {
        //    $("#ErrorMessage").show();
        //    $("#ErrorMessage").text('Contact Person Email-Id is required..');
        //    $('#InfoModal').modal('show');
        //    return;
        //}




        var url = '@Url.Action("SaveData")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@

        if (LrGenerate) {
            ModelData["LrGenerate"] = "A";
        } else {
            ModelData["LrGenerate"] = "M";
        }

        if ($("#MAll").prop("checked") == true) {
            ModelData["MDispach"] = true;
            ModelData["MDelivery"] = true;
            ModelData["MBilling"] = true;
            ModelData["MAll"] = true;
        } else {

            if ($("#All").prop("checked") == true) {
                ModelData["MDispach"] = true;
            } else {
                ModelData["MDispach"] = false;
            }
            if ($("#MDelivery").prop("checked") == true) {
                ModelData["MDelivery"] = true;
            } else {
                ModelData["MDelivery"] = false;
            }
            if ($("#MBilling").prop("checked") == true) {
                ModelData["MBilling"] = true;
            } else {
                ModelData["MBilling"] = false;
            }
        }
        ModelData["OrderFor"] = $("#OrderFor").val();
        ModelData["PONumber"] = $("#PONumber").val();
        ModelData["BENumber"] = $("#BENumber").val();
        ModelData["MRemark"] = $("#MRemark").val();
        ModelData["MNote"] = $("#MNote").val();
        ModelData["Document"] = $("#Document").val();
        ModelData["MaxDate"] = '@Model.MaxDate';
        ModelData["MinDate"] = '@Model.MinDate';
        ModelData["DocDate"] = '@Model.DocDate';
        //var amt = "",Fld="";
        //$("#ChargeDiv .CalculationTxt").each(function () {
        //    amt += $(this).val()+",";
        //});
        //$("#ChargeDiv .Fld").each(function () {
        //    Fld += $(this).text()+",";
        //});

        ModelData["Amt"] = $("#Amt").val();//(amt.toFixed(2)).toString();
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
        ModelData["Val1"] = amt1;
        //ModelData["FldValue"] = Fld.substring(0, Fld.length - 1);

        if ($("#Door").is(":checked") == false) {

            ModelData["Delivery"] = "G";
        } else {
            ModelData["Delivery"] = "D";
        }


        if ($("#Red").is(":checked") == true)
        {
            ModelData["LRMode"] = "R";
        }
        else if ($("#Green").is(":checked") == true)
        {
            ModelData["LRMode"] = "G";
        }
        else if ($("#White").is(":checked") == true)
        {
            ModelData["LRMode"] = "W";
        }






        if ($("#Direct").is(":checked") == true) {
            ModelData["Colln"] = "D";
        } else if ($("#Godown1").is(":checked") == true) {
            ModelData["Colln"] = "G";
        }
        ModelData["Crossing"] = $("#Crossing").is(":checked");
        if ($("#Godown").is(":checked") == true) {
            ModelData["TransactionAt"] = "G";
        } else {
            ModelData["TransactionAt"] = "D";
        }

        ModelData["DeliveryTxt"] = $("#DeliveryTxt").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Time"] = $("#Time").val();
        ModelData["OrderNO"] = $("#OrderNO").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["BillBran"] = $("#BillBran").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["LRtype"] = $("#LRtype").val();
        ModelData["ServiceType"] = $("#ServiceType").val();
        ModelData["RecCode"] = $("#RecCode").val();
        ModelData["SendCode"] = $("#SendCode").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["PartyRef"] = $("#PartyRef").val();
        ModelData["PartyInvoice"] = $("#PartyInvoice").val();
        ModelData["GSTNO"] = $("#GSTNO").val();
        ModelData["EwayBill"] = $("#EwayBill").val();
        ModelData["VehicleNo"] = $("#VehicleNo").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["Amt"] = $("#Amt").val();
        ModelData["DecVal"] = $("#DecVal").val();
        ModelData["DescrType"] = $("#DescrType").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["UnitCode"] = $("#UnitCode").val();
        ModelData["ConsignerEXTRAInfo"] = $("#ConsignerEXTRAInfo").val();
        ModelData["ConsigneeEXTRAInfo"] = $("#ConsigneeEXTRAInfo").val();
        ModelData["BillingPartyEXTRAInfo"] = $("#BillingPartyEXTRAInfo").val();
        ModelData["Narr"] = $("#Narr").val();
        ModelData["BalQty"] = $("#BalQty").val();


        ModelData["LrContactPerson"] = $("#LrContactPerson").val();
        ModelData["LrContactPersonNo"] = $("#LrContactPersonNo").val();
        ModelData["LrContactPersonEmailId"] = $("#LrContactPersonEmailId").val();



        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                    $('.spinner').show();
                },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    if (PrintLR =="SavePrint")
                    {
                        $('.spinner').hide();
                        $('#printpostmodel').modal('show');
                    }
                    else
                    {
                        window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";
                    }
                    $("#ErrorMessage").hide();

                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function PrintExecute() {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var mwhat = "";
        var mpaper = $("input[name=CurrName]:checked").val()                // paper size
        var mpageorient = $("input[name=ChequeNo]:checked").val();          // page orient (layout)
        var moutput = $("input[name=BillNumber]:checked").val();            // output
        var mtool = $("input[name=Sno]:checked").val();                     // report tool
        //var mmsg = $('#message').val();
        //mmsg=mmsg.replace("\n", "<br />");
        var memaildata = $('#repsubject').val() + "~" + $('#emailid').val() + "~" + $('#message').val();;
        // special loop for multiple parties
        var mstr = $('#hiddenvalues').val() + "~";
        // for reportcentreplus hiddenvalues is blank
        if (mstr == "~") {
            mstr = "$X$~";
        }
        //alert(mstr);
        var msel = mstr.split('~');
        var i;
        for (i = 0; i < msel.length; ++i)
        {
            if (msel[i]!='')
            {
                if (msel[i] = "$X$") {
                    msel[i] = "";
                }
                if ($('#EmailOnly').is(':checked')) {
                    if (moutput=="Pdf"){             // output
                        //window.open("/SendEmail/Index?Date=" + mDate + "&ViewDataId=" + $("#viewcode").val() + "&mpapersize=" + mpaper + "&mTo=" + $("#emailid").val(), '_blank');
                        //return;
                        if (mtool == "Crystal") {
                            mwhat = "ECRPDF";
                        } else {
                            mwhat = "EPDF";
                        }
                    }
                    if (moutput == "XLS") {          // output
                        mwhat = "EXLS";
                    }
                    if (moutput == "Word") {         // output
                        mwhat = "EWRD";
                    }
                }
                else
                {
                    debugger;
                    if (mtool=="SSRS"){                  // reporttool
                        if (moutput == "Pdf") {          // output
                            if (mpageorient=="Portrait"){   // Layout
                                mwhat = "RPDF";
                            }else{
                                mwhat = "RPDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat ="RXLS";
                        }
                        if (moutput == "Word") {         // output
                            mwhat = "RWRD";
                        }
                        if (moutput == "VIEW") {         // Report viewer
                            //$("#hdnparastring") is defined in parent form (e.g. acledger, stock ledger, reportcentreplus etc.
                            var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#printformats").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            //var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#hdnformatname").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            window.open(murl, '_blank');
                            return;
                        }
                    }
                    if (mtool=="Crystal"){
                        mwhat = "CRPDF";
                    }
                    if (mtool=="Grid"){
                        if (moutput == "Pdf") {          // output
                            if (mpageorient == "Portrait") {   // Layout
                                mwhat="PDF";
                            }else{
                                mwhat="PDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat = "XLS";
                            if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }

                            @*if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }*@
                            sUrlpath = window.open(sUrlPath, '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&SelectContent=' + msel[i] + $("#hdnparastring").val(), '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val()+ '&SelectContent=' + $('#hiddenvalues').val(), '_blank');
                            return;
                        }
                    }
                } // emailonly
                if ($("#hdnisreportplus").val() == '!!!')
                {
                    var murl = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                } else {
                    var VIEWid = $("#printformats").val().split(',');
                    for (var i = 0; i < VIEWid.length; i++) {
                        debugger;
                        var murl = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&LocationCode=' + $("#Document").val() + '&ViewDataId=' + VIEWid[i] + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                        murl = window.open(murl, '_blank');
                    }
                }






                if (PrintLR == "SavePrint") {
                    window.location.href = "/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";
                }

            }
        }
        if (mwhat.startsWith("E"))
        {
            alert("Email is Sent..Please Close the other Opened Blank tabs..");
        }
    };


    function LoadFrom() {

        var url = '@Url.Action("From")'
        $('#Source').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Source', text: '@Model.Source_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadChargeType() {

        var url = '@Url.Action("ChargeType")'
        $('#ChgType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ChgType', text: '@Model.ChgType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function GeneralContract() {
        var url = '@Url.Action("GeneralCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();

        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
            alert("ChgType Required....!");
            return;
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        GeneralOtherContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }


            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function GeneralOtherContract() {
        var url = '@Url.Action("GeneralOTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        //ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    alert(data.Message);
                    RefreshCharges();
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function ForceToGetCustomerContract() {
        var url = '@Url.Action("CustomerCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
            alert("ChgType Required....!");
            return;
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        GetCustomerOtherOptionTypeContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }


            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function GetCustomerOtherOptionTypeContract() {
        var url = '@Url.Action("CustomerOTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }













    function ForceToGetContract() {
        var url = '@Url.Action("Charges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
            alert("ChgType Required....!");
            return;
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        GetOtherOptionTypeContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }


            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function GetOtherOptionTypeContract() {
        var url = '@Url.Action("OTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                } else if (data.Status == "Error") {
                    alert(data.Message);
                    RefreshCharges();
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function RefreshCharges() {
        var url = '@Url.Action("RefreshCharges")';
        var ModelData = {};
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function LoadUnit() {

        var url = '@Url.Action("GetUnit")'
        $('#UnitCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.UnitCode', text: '@Model.UnitCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadParticular() {

        var url = '@Url.Action("GetParticulars")'
        $('#DescrType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DescrType', text: '@Model.DescrType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };



    function LoadServiceType() {

        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadDelivery() {
        var url = '@Url.Action("LoadDeliveryAtSearch")'
        $('#DeliveryAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#Dest').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DeliveryAt', text: '@Model.DeliveryAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadBillAt() {
        var url = '@Url.Action("BillatBranch")'
        $('#BillBran').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillBran', text: '@Model.BillBran_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadOrderFor() {
        var url = '@Url.Action("BillatBranch")'
        $('#OrderFor').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.OrderFor', text: '@Model.OrderForN' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#Dest').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Dest', text: '@Model.Dest_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadConsigner() {
        var url = '@Url.Action("GetConsigner")'
        $('#RecCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.RecCode', text: '@Model.RecCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                LoadCustomerBasedConsignorOrConsignee();
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";

            },
        })
    };
    function LoadCustomerBasedConsignorOrConsignee() {
        var url = '@Url.Action("LoadCustomeThroughConsignorOrConsignee")';
        var DTO = { LRType: $("#LRtype").val(), Consignor:$("#RecCode").val(), Consignee:$("#SendCode").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function ()
            {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $('#BillParty').select2('data', { id: data.id, text: data.name });
                    $("#ErrorMessage").hide();
                } else {
                    $('.spinner').hide();
                }

            },
        });
    }
    function LoadBillingParty() {
        var url = '@Url.Action("GetBillingParty")'
        $('#BillParty').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillParty', text: '@Model.BillParty_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                GetOtherRequiredParameters();
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };



    function LoadConsignee() {

        var url = '@Url.Action("GetConsignee")'
        $('#SendCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.SendCode', text: '@Model.SendCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetAddress();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function GetOtherRequiredParameters() {
        C_POnumver = false, C_BEnumber = false, C_PartyChallan = false, C_PartyInvoice = false;
        var BillParty = $('#BillParty').val();
        var url = '@Url.Action("GetCustomerDetails")';

            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: {  BillingParty: BillParty},
                success: function (result) {
                    C_POnumver = result.POnumver;
                    C_BEnumber = result.BEnumber;
                    C_PartyChallan = result.PartyChallan;
                    C_PartyInvoice = result.PartyInvoice;
                    if ('@Model.Mode'=='Add') {
                    if (result.Coln == "G") {
                        $("#Direct").prop("checked", false)
                        $("#Godown1").prop("checked", true)
                        $("#Crossing").prop("checked", false)
                    } else if (result.Coln == "D") {
                        $("#Direct").prop("checked", true)
                        $("#Godown1").prop("checked", false)
                        $("#Crossing").prop("checked", false)
                    }
                    else {
                        $("#Direct").prop("checked", false)
                        $("#Godown1").prop("checked", false)
                        $("#Crossing").prop("checked", true)
                    }
                    if (result.Deli == "G") {
                        $("#Door").prop("checked", false)
                        $("#Godown").prop("checked", true)
                    } else {
                        $("#Door").prop("checked", true)
                        $("#Godown").prop("checked", false)
                        }
                    }
                }
            });
    }
    function GetAddress() {
        var Consigner = $('#RecCode').val();
        var Consignee = $('#SendCode').val();
        var BillParty = $('#BillParty').val();

        var url = '@Url.Action("GetAddress")';

            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: { Consigner: Consigner, Consignee: Consignee, BillingParty: BillParty},
                success: function (result) {
                    $("#ConsignorID").val(result.Message);
                    $("#ConsignoeeID").val(result.Message1);
                    $("#BillingID").val(result.Message2);
                }
            });
    }
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right" style="margin-top:5px;">
            <a href="~/Logistics/MasterGrid/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right" style="margin-top:5px;">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>
    </div>
</header>


<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="LRMaster" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-sm-12" style="margin-top: 0px;">
                @if (1 == 1)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (1 == 2)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }
                <div class="col-sm-6" style="position: absolute;margin-top:-28px;">
                    <label class=" bold col-sm-offset-2 col-sm-2 control-label">Order For :</label>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(x => x.OrderFor, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.OrderFor })
                    </div>
                </div>
                <div class="panel panel-default" style="height:420px;">
                    <div class="panel-body " style="padding-left: 20px;" id="PrintDiv">

                        <div class="form-group">
                            <div class="tab" style="margin-top: -15px;">
                                <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="LorryReceiptDesign">Basic Details</button>
                                <button class="tablinks" onclick="openCity(event, 'divLedgerTable1')" id="ExtraInfo">Extra Info</button>
                            </div>

                            <div id="divLedgerTable" style="height:400px;position:absolute;width:99%;overflow:auto;" class="tabcontent">
                                <div class="form-group">
                                    <div class="col-sm-9">
                                        <div class="form-group" id="BracodeDiv">
                                        </div>
                                        <div class="form-group" style="margin-top: 0px;">
                                            <label class=" bold   col-sm-1 control-label">Order No:</label>
                                            <div class="col-sm-1">
                                                @Html.TextBoxFor(x => x.OrderNO, new { @class = "form-control", @Value = Model.OrderNO, @disabled = "disabled" })
                                            </div>
                                            <label class=" bold col-sm-1 control-label">Order Date :</label>
                                            <div class="col-sm-1" style="padding-left: 1px!important;">
                                                @Html.TextBoxFor(x => x.BookDate, new { @class = "form-control", @Value = Model.BookDate })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">Order Time :</label>
                                            <div class=" col-sm-2">
                                                @Html.TextBoxFor(x => x.Time, new { @class = "form-control", @type = "time", @style = "", @Value = Model.Time })
                                            </div>
                                            <label class=" bold col-sm-offset-1 col-sm-1 control-label">Order Type :</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.LRtype, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.LRtype })
                                            </div>

                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">
                                                Consigner:
                                                @if (Model.ConsignorRestrict)
                                                {
                                                    <button class="btn btn-danger" style="padding:0px 25px;" id="AddNewConsignerInLR" data-toggle="tooltip" data-placement="top" title="Add New Consignor."><i class="glyphicon glyphicon-plus"></i></button>
                                                }
                                            </label>
                                            <div class="col-sm-3 ">
                                                @Html.TextBoxFor(x => x.RecCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.RecCode })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">
                                                Consignee:
                                                @if (Model.ConsignorRestrict)
                                                {
                                                    <button class="btn btn-danger" style="padding:0px 25px;" id="AddNewConsigneeInLR" data-toggle="tooltip" data-placement="top" title="Add New Consignee."><i class="glyphicon glyphicon-plus"></i></button>
                                                }
                                            </label>
                                            <div class="col-sm-3 ">
                                                @Html.TextBoxFor(x => x.SendCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.SendCode })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Bill Party:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.BillParty, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.BillParty })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.ConsignerEXTRAInfo, new { @class = "form-control", @id = "ConsignorID", @style = "", @maxlength = 100, @rows = "2", @disabled = "disabled", @Value = Model.ConsignerEXTRAInfo })
                                            </div>
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.ConsigneeEXTRAInfo, new { @class = "form-control", @style = "", @id = "ConsignoeeID", @maxlength = 100, @rows = "2", @disabled = "disabled", @Value = Model.ConsigneeEXTRAInfo })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.BillingPartyEXTRAInfo, new { @class = "form-control", @style = "", @id = "BillingID", @maxlength = 100, @rows = "2", @disabled = "disabled", @Value = Model.BillingPartyEXTRAInfo })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ConsignerEXTRAInfo, new { @class = "form-control", @Value = Model.ConsignerEXTRAInfo, @placeholder = "Consigner Extra Info" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ConsigneeEXTRAInfo, new { @class = "form-control", @Value = Model.ConsigneeEXTRAInfo, @placeholder = "Consignee Extra Info" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.BillingPartyEXTRAInfo, new { @class = "form-control", @Value = Model.BillingPartyEXTRAInfo, @placeholder = "BillParty Extra Info" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">From:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.Source, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Source })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">To:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.Dest, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Dest })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label" style="">Bill Branch:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.BillBran, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.BillBran })
                                            </div>
                                        </div>
                                        <div class="form-group " style="">
                                            <label class=" bold   col-sm-1 control-label">Collection :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="Collection" id="Direct" value="Direct" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Direct</label>
                                                <input type="radio" class="form-control" name="Collection" id="Godown1" value="Godown1" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                                <input type="checkbox" class="form-control" id="Crossing" value="Crossing" style="height:20px;width:35px;" /><label class=" bold control-label"> Crossing</label>

                                            </div>

                                            <label class=" bold   col-sm-1 control-label">Vehicle No:</label>
                                            <div class="col-sm-3" style="">
                                                @Html.TextBoxFor(x => x.VehicleNo, new { @class = "form-control", @Value = Model.VehicleNo, @maxlenght = "25" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">Service Type :</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.ServiceType })
                                            </div>
                                        </div>
                                        <div class="form-group " style="">
                                            <label class=" bold   col-sm-1 control-label">Delivery :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="Delivery" id="Door" value="Yes" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Door</label>
                                                <input type="radio" class="form-control" name="Delivery" id="Godown" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                            </div>

                                            <label class=" bold   col-sm-1 control-label">Lr-Mode:</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="LRMode" id="Red" value="Express" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:red;"> Express</label>
                                                <input type="radio" class="form-control" name="LRMode" id="Green" value="Regular" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:green;"> Regular</label>
                                                <input type="radio" class="form-control" name="LRMode" id="White" value="Normal" style="height:20px;width:35px;" /><label class=" bold control-label"> Normal</label>
                                            </div>
                                        </div>

                                        <hr />
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">Package :</label>
                                            <div class="col-sm-2">
                                                @if (Model.Mode == "Add")
                                                {
                                                    @Html.TextBoxFor(x => x.TotQty, new { @class = "form-control", @Value = Model.TotQty })
                                                }
                                                else
                                                {
                                                    if (Model.TotQty == Model.BalQty)
                                                    {
                                                        @Html.TextBoxFor(x => x.TotQty, new { @class = "form-control  ", @Value = Model.TotQty })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(x => x.TotQty, new { @class = "form-control  ", @Value = Model.TotQty, @disabled = "disabled" })
                                                    }

                                                }

                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Unit :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.UnitCode, new { @class = "input-large-query", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">Actual Wt :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.ActWt, new { @class = "form-control", @Value = Model.ActWt })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label" style="">Charge Wt:</label>
                                            <div class="col-sm-2" style="">
                                                @Html.TextBoxFor(x => x.ChgWt, new { @class = "form-control", @Value = Model.ChgWt })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">ChargeType:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.ChgType, new { @class = "input-large-query", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">
                                                Describe:
                                                @if (Model.DescriptionRestrict)
                                                {
                                                    <a href="~/Logistics/DescriptionMaster/Index?TableName=DescriptionMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Description%20Master&ViewDataId=DescriptionMaster&Controller2=DescriptionMaster&Module=Master&optiontype=M&optioncode=DescriptionMaster" target="_blank" class="btn btn-danger" style="padding:0px 25px;" id="AddHireVehicle" data-toggle="tooltip" data-placement="top" title="Add New Description Here."><i class="glyphicon glyphicon-plus"></i></a>
                                                }
                                            </label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.DescrType, new { @class = "input-large-query ", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Party Challan :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PartyRef, new { @class = "form-control", @Value = Model.PartyRef, @maxlength = "50" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Party Invoice :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PartyInvoice, new { @class = "form-control", @Value = Model.PartyInvoice, @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label" style="">Declared Value:</label>
                                            <div class="col-sm-2" style="">
                                                @Html.TextBoxFor(x => x.DecVal, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.DecVal) })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">GST NO :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.GSTNO, new { @class = "form-control", @Value = Model.GSTNO })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">PONumber:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PONumber, new { @class = "form-control", @Value = Model.PONumber, @maxlength = "50" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">BENumber:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.BENumber, new { @class = "form-control", @Value = Model.BENumber, @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">Remark :</label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(x => x.Narr, new { @class = "form-control", @Value = Model.Narr, @rows = "1", @maxlength = 100 })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">EwayBill No :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.EwayBill, new { @class = "form-control", @Value = Model.EwayBill, @maxlength = "50" })
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-sm-3" style="padding-left:7px!important;">
                                        <div class="col-sm-12" style="border: 3px solid #dec0c0;padding-left:1px!important;">
                                            <label class=" bold col-sm-12 control-label" style="text-align:center;font-size:14px;width:auto;">Charges</label>
                                            <div class="col-sm-2" style="width:auto;">
                                                @if (1 == 1)
                                                {
                                                    <button class="btn btn-warning" id="btnContrct" style="padding:4px 8px;" onclick="ForceToGetCustomerContract()">Contract Rate</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-warning" id="btnContrct" style="padding:4px 8px;" onclick="ForceToGetCustomerContract()" disabled>Contract Rate</button>
                                                }
                                            </div>
                                            <div class="col-sm-2">
                                                @if (1 == 1)
                                                {
                                                    <button class="btn btn-warning" id="btnGenaralContrct" style="padding:4px 8px;" onclick="GeneralContract()">General Rate</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-warning" id="btnGenaralContrct" style="padding:4px 8px;" onclick="GeneralContract()" disabled>General Rate</button>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-sm-12" id="ChargeDiv" style="border: 3px solid #dec0c0;padding-left:1px!important; overflow-y:auto;overflow-x:hidden; height:362px;">
                                            @Html.Partial("_Charges", Model)
                                        </div>
                                        <div class="col-sm-12" style="border: 3px solid #dec0c0;">
                                            <label class=" bold col-sm-6 control-label" style="margin-top:5px;">Total Amout :</label>
                                            <div class=" col-sm-4" style="margin-top:5px;">
                                                @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.Amt), @style = "text-align: right;height: 40px;width: 100%;" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="divLedgerTable1" style="height:400px;position:absolute;width:99%;" class="tabcontent">
                                <div class="form-group">
                                    <label class=" bold   col-sm-2 control-label">Contact Person Name:</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.LrContactPerson, new { @class = "form-control", @Value = Model.LrContactPerson, @maxlenght = "150" })
                                    </div>
                                    <label class=" bold   col-sm-2 control-label">Contact Person No:</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.LrContactPersonNo, new { @class = "form-control", @Value = Model.LrContactPersonNo, @maxlenght = "10" })
                                    </div>
                                    <label class=" bold   col-sm-2 control-label">Contact Person Email-Id:</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.LrContactPersonEmailId, new { @class = "form-control", @Value = Model.LrContactPersonEmailId, @maxlenght = "250" })
                                    </div>
                                </div>

                            </div>
                            <script>
                                function openCity(evt, cityName) {
                                    $("#ErrorMessage1").hide();
                                    var i, tabcontent, tablinks;
                                    tabcontent = document.getElementsByClassName("tabcontent");
                                    for (i = 0; i < tabcontent.length; i++) {

                                        tabcontent[i].style.display = "none";
                                    }
                                    tablinks = document.getElementsByClassName("tablinks");
                                    for (i = 0; i < tablinks.length; i++) {

                                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                                    }
                                    document.getElementById(cityName).style.display = "block";
                                    evt.currentTarget.className += " active";
                                }
                                document.getElementById("LorryReceiptDesign").click();
                            </script>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>

</section>

<footer class="footer-section" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-4">
            <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" title="Attachment">Attachment</button>
        </div>
        <div class="col-sm-4" style="margin-top:0px;">
            @*color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;*@

            <div class="col-sm-12" id="BradCastDiv" style="overflow: hidden;padding-left: 0px!important;">
                <label class="col-sm-offset-4 col-sm-8 control-label" style="margin-top:5px;" id="BradCastText">ALT AIR-3.0, Shruham Software</label>
            </div>
        </div>
        <div class="col-sm-4" style="padding-right:20px;">
            @if (Model.Mode != "View")
            {
                @*<div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:5px;font-size:9pt; width:unset;">
                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="SubmitPrint" data-toggle="tooltip" data-placement="top" title="Save & Print">Save & Print</button>
                    </div>*@
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">
                    @if (Model.Mode == "Add" || Model.Mode == "Edit" || Model.Mode == "Select")
                    {
                        @*<button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save"><i class="glyphicon glyphicon-floppy-saved"><br />Save</i></button>*@
                        if (Model.Mode == "Add")
                        {
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" disabled id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                        }
                        else
                        {
                            <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                        }

                        <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Save</button>
                        <div class="btn-group dropup">
                            <button type="button" style="font-size: 13px;padding:3px 12px;" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">SMS Print Email<span class="caret"></span></button>
                            <ul role="menu" class="dropdown-menu" style="border: 1px thin;box-shadow:3px 3px 15px 1px rgba(0,0,0,0.2) !important; background-color: whitesmoke; height: 120px; font-family: Tahoma; font-weight: bolder; color: darkgray; padding-left: 10px; padding-right: 10px; left:0px;">
                                <li>@*<a id="btnSendSMS">Send SMS</a>*@</li>
                                <li><a id="btnPrint">Save &amp; Print</a></li>
                                <li>@*<a id="BothSaveEmail" href="#">Save &amp; Email</a>*@</li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        @*<button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save"><i class="glyphicon glyphicon-trash"><br />Delete</i></button>*@
                        <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Delete</button>
                    }
                </div>
                <div class="col-md-4 pull-right" style="padding-left:6px;font-family:Tahoma;padding-top:2px;padding-right:0px;font-size:9pt; width:unset;">

                </div>
            }

        </div>
    </div>
</footer>


<input type="hidden" id="AutoLRNo" />
<input type="hidden" id="hdnAreaID" />
@Html.HiddenFor(x => x.Document)
<input type="hidden" id="hdnBlackListConsigner" />
<input type="hidden" id="hdnBlackListConsignee" />

@*Print Option*@
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @*@Html.Partial("ReportPrintOptions")*@
            </div>
        </div>
    </div>
</div>

<!--Tickler Modal -->
<div class="example-modal">
    <div id="TicklerModal" class="modal modal-default">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Tickler Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group " id="SpclRemarkDiv">
                                <label style="font-weight:bold;color:black;">Remark :-&nbsp;&nbsp;</label><label id="SpclRMK" style="font-weight:bold;color:black;"></label>
                            </div>
                            <div class="form-group " id="BlackListRemarkDiv">
                                <label style="font-weight:bold;color:black;">Hold Remark :-&nbsp;&nbsp;</label><label id="BlackLStRMK" style="font-weight:bold;color:red;"></label>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->

<div class="example-modal">
    <div id="InfoModal" class="modal modal-default">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Contact Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>

                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model != null)
                                            {
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person Name: </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPerson, new { @class = "form-control", @Value = Model.LrContactPerson, @maxlenght = "150" })
                                                    </td>
                                                </tr>
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person No:</td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPersonNo, new { @class = "form-control", @Value = Model.LrContactPersonNo, @maxlenght = "10" })
                                                    </td>
                                                </tr>
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person Email-Id:</td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPersonEmailId, new { @class = "form-control", @Value = Model.LrContactPersonEmailId, @maxlenght = "250" })
                                                    </td>
                                                </tr>

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*Suchan Attachment*@
<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>