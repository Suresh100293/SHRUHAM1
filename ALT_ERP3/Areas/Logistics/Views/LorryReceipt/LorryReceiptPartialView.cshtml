@model ALT_ERP3.Areas.Logistics.Models.LRVM
@using Common;
@{
    /**/

    ViewBag.Title = "Lorry Receipt Master";
    Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>

<link href="~/Content/ToogleCreate/CreateTgl.css" rel="stylesheet" />
<script src="~/Content/ToogleCreate/CreateTgl.js"></script>
<script src="~/Content/WebCamera/webcam.js"></script>
<style>
    /*textarea {
        resize: none;
    }*/

    .bold {
        font-weight: bold !important;
    }

    hr {
        border: 1px solid #dec0c0;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }


    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }

    .legend2 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #57c8f1;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .legend3 {
        position: relative;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        border-radius: 15px;
        /*background-color: #dec0c0;*/
        background-color: #a66ca7;
        color: white !important;
        width: auto;
        z-index: auto;
        padding: 5px 20px 5px 20px;
        margin-bottom: 0px !important;
        margin-top: -36px;
        height: 33px;
    }

    .toggle {
        border-radius: 15px !important;
        margin-top: -35px !important;
    }
</style>
<style>
    #menu li {
        list-style: none;
        text-align: center;
        color: black;
        margin-left: 0px;
        position: relative;
    }

    #menu ul li:hover {
        cursor: pointer;
        background-color: coral;
        padding: 2px 0px 2px 0px;
        text-align: center;
        color: white;
    }

    /*#menu ul li:hover a {
            color: white !important;
        }*/

    ul, .list-unstyled {
        padding-left: 0px;
    }
</style>
<style>
    a:hover {
        cursor: pointer;
    }

    .Ordertable {
        display: table;
    }

    /*#Orderlist:hover a {
        background-color: #d8b9dc;
        color: white !important;

    }*/
    .legend2:hover {
        background-color: #1fb5ad;
        color: white;
    }

    .Ordertable-row:hover {
        /*background-color: #d8b9dc;*/
        background-color: #c7c1a1;
    }

        .Ordertable-row:hover a {
            /*color: white;*/
        }

    .Ordertable-row {
        display: table-row;
    }

    .Ordertable-cell {
        display: table-cell;
        border: 1px solid black;
        padding: 5px;
        text-align: center;
        /*border-bottom: 1px solid;*/
    }


    .example {
        border: 1px solid #ccc;
        border-collapse: collapse;
        width: max-content;
        font-size: 9px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .example th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .example th, .example td {
            border: 1px solid #ccc;
            padding: 5px;
            font-size: 12px;
        }

        .example, .example table td {
            border: 0px solid #ccc;
        }
</style>
<style>

    .BspanBlink {
        /*background-color: #d0d4d3;*/
        font-size: 15px !important;
        /*height: 35px;*/
        /*font-family: Tahoma;
        font-weight: bold;
        color: #f90e90fa;*/
        animation: blink 2s linear infinite;
    }

    @@keyframes blink {
        0% {
            opacity: 0;
        }

        10% {
            opacity: .1;
        }

        25% {
            opacity: .25;
        }

        50% {
            opacity: .5;
        }

        75% {
            opacity: .75;
        }

        100% {
            opacity: 1;
        }
    }

    .Bmarquee {
        white-space: nowrap;
    }

        .Bmarquee label {
            display: inline-block;
            padding-left: 100%;
            animation: marquee 12s linear infinite;
            font-size: 15px !important;
        }

    /* Make it move */
    @@keyframes marquee {
        0% {
            transform: translate(0, 0);
        }

        25% {
            transform: translate(-25%, 0);
        }

        50% {
            transform: translate(-50%, 0);
        }

        75% {
            transform: translate(-75%, 0);
        }

        100% {
            transform: translate(-100%, 0);
        }
    }

    .Bbold {
        font-weight: bold;
    }
</style>
<script type="text/javascript">
    var PrintLR = "";
    var LrGenerate = true;
    var C_POnumver = false, C_BEnumber = false, C_PartyChallan = false, C_PartyInvoice = false;
    $(document).ready(function () {

        GetMyFavorites('@Model.ViewDataId');
        var mstartdate = $('#hdnStartDate').val();
        var menddate = $('#hdnEndDate').val();

        $('#OrderReceivedDate,#DateOfOrder,#ScheduleDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
        });

        $('#BookDate').datepicker({
            format: "dd/mm/yyyy",
            autoclose: true,
            startDate: new Date(mstartdate),
            endDate: new Date(menddate)
        });
        if ('@Model.LRSetup.LRBoth' == "True")
        {
            LrGenerate = true;
        }
        else if ('@Model.LRSetup.LRGenerate' == "False")
        {
            LrGenerate = false;
        }
        $("#AutoLRNo").val('@Model.LrNo');
        $("#BothCHK").change(function () {
            $("#ErrorMessage").hide();
            if (this.checked) {
                LrGenerate = false;
                $("#LrNo").removeAttr("disabled");
            } else {
                LrGenerate = true;
                $("#LrNo").attr("disabled", "disabled");
                $("#LrNo").val($("#AutoLRNo").val());
                $("#ErrorMessage").hide();
            }
        });
        $('#attachdoc').modal({
            backdrop: 'static',
            keyboard: false
        })
        $("#attachdoc").modal("hide");
        $("#LrNo").blur(function () {
            CheckManualLROnly();
        });
        $("#VehicleNo").change(function () {
            var url = '@Url.Action("FetchDriver")';
            $.ajax({
                type: "POST",
                dataType: "json",
                url: url,
                data: { VehicleNo: $("#VehicleNo").val() },
                success: function (result) {
                    if (result.DriverCode!="") {
                        $('#Driver').select2('data', { id: result.DriverCode, text: result.DriverNCombo });
                    } else {
                        $('#Driver').select2('data', { id: '', text:'' });
                    }

                }
            });
        });
        $("#btnAddDoc").click(function (event) {
            event.preventDefault();

            var url = '/Logistics/Attachment/UploadFile';
            var ModelData = {};
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Srl"] = $("#Document").val();
            ModelData["Type"] = "LR000";
            ModelData["RefType"] = "@Model.Header";
            var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    var AttachDoc = $("#AttachDoc");
                    AttachDoc.html('');
                    AttachDoc.html(data.Html);
                    $('#attachdoc').modal('show');
                },
            });
        });

        LoadLRType();
        LoadServiceType();
        LoadConsigner();
        loadConsignerAddress();
        LoadConsignee();
        loadConsigneeAddress();
        LoadBillingParty();
        loadBillPartyAddress();
        LoadFrom();
        LoadTo();
        LoadBillAt();
        LoadUnit();
        LoadParticular();
        LoadChargeType();
        LoadVehicle();
        LoadDriver();
        CollectionAndDelivery();
        Charges();
        loadTRNMode();



        if ('@Model.LRMode' == "R") {
            $("#Red").prop("checked", true);
        }
        else if ('@Model.LRMode' == "G") {
            $("#Green").prop("checked", true);
        }
        else if ('@Model.LRMode' == "W") {
            $("#White").prop("checked", true);
        }

        if ('@Model.Mode' == "View" || '@Model.Mode' == "Delete")
        {
            $('#BothCHK,#PickUpList,#DraftList,#btnRecentLR').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
        }
        else if ('@Model.Mode' == "Edit")
        {
            $('#BothCHK,#PickUpList,#DraftList,#btnRecentLR').prop("disabled", true);
            BlockContentDispatch_Bill();
        }
        else if ('@Model.Mode' == "Add")
        {
            if ('@Model.LrGenerate' == "M")
            {
                $('#BothCHK').bootstrapToggle('on');
            }
        }

        if ('@Model.Mode' == "Edit" || '@Model.Mode' == "Delete")
        {
            if ('@Model.LockAuthorise' == "True")
            {
                var Message = $("#ErrorMessage").text() + "<br>Document Lock In @Model.Mode Mode As Per The Authentication Rule...";
                $("#ErrorMessage").show();
                $("#ErrorMessage").html(Message);
                $('#BothCHK,#PickUpList,#DraftList,#btnRecentLR').prop("disabled", true);
                $('.form-group :input').prop("disabled", true);
                $('.btn').prop("disabled", true);
            }
        }
        if ('@Model.PeriodLock' == "True")
        {
            var Message = $("#ErrorMessage").text() + "<br>This Document Lock By Author....!";
            $("#ErrorMessage").show();
            $("#ErrorMessage").html(Message);
            $('#BothCHK,#PickUpList,#DraftList,#btnRecentLR').prop("disabled", true);
            $('.form-group :input').prop("disabled", true);
            $('.btn').prop("disabled", true);
        }

        $('.tablinks').prop("disabled", false);
        $('#btnAddNote,#btnAddDoc,#btnPrintOnly').prop("disabled", false);
        $('#changebranch :input').prop("disabled", false);
        $('#changeperiod :input').prop("disabled", false);
        $('#addnotemodel :input').prop("disabled", false);
        $('#attachdoc :input').prop("disabled", false);
        $('#printpostmodel :input').prop("disabled", false);
        $(".CalculationTxt").constrain({ allow: { regex: "[0-9]" } });
        $("#LrNo").constrain({ allow: { regex: "[0-9]" } });
        $("#PartyRef,#PartyInvoice,#BENumber,#EwayBill").constrain({ allow: { regex: "[a-zA-Z0-9/]" } });
        $("#PONumber").constrain({ allow: { regex: "[a-zA-Z0-9/]" } });
        $("#DieselAmt,#Rate,#ActualExp,#DriverTripExp").constrain({ allow: { regex: "[0-9.]" } });
        $("#DieselLtr,#ApprovedDiesel,#PendingDiesel,#AdvanceDiesel,#TripNo").constrain({ allow: { regex: "[0-9]" } });
        $(".tablinks").prop("disabled", false);
        debugger;
        if ('@Model.ExtraInfoTab'=="True") {
            $("#ExtraInfo").prop("disabled", true);
        }

        $("#DieselLtr,#ApprovedDiesel").blur(function () {
            var TotalDiesel = 0;
            if ($("#DieselLtr").val().trim() != "" && $("#DieselLtr").val() != null) {
                TotalDiesel = parseInt($("#DieselLtr").val());
            }
            var ApprovedDiesel = 0;
            if ($("#ApprovedDiesel").val().trim() != "" && $("#ApprovedDiesel").val() != null) {
                ApprovedDiesel = parseInt($("#ApprovedDiesel").val());
            }

            var Diff = ApprovedDiesel - TotalDiesel;
            if (Diff >= 0)
            {
                $("#AdvanceDiesel").val(Diff);
                $("#PendingDiesel").val("0");
            }
            else
            {
                $("#AdvanceDiesel").val("0");
                $("#PendingDiesel").val(Diff*(-1));
            }
        });

        $("#AddNewConsignerInLR,#AddNewConsigneeInLR").click(function (e) {
            e.preventDefault();
            var murl = "/Logistics/ConsignerOrConsignee/Index?TableName=&ShortCutKey=true&MainType=&Mode=Add&Header=Consigner%20/%20Consignee%20Master&ViewDataId=ConsignerOrConsignee&Controller2=ConsignerOrConsignee&Module=Master&optiontype=M&optioncode=ConsignerOrConsignee";
            window.open(murl, '_blank');
        });
        $("#AddNewHireVehicleInLR").click(function (e) {
            e.preventDefault();
            var murl = "/Vehicles/HireVehicle/Index?TableName=VehicleMaster&MainType=&Mode=Add&Header=Hire%20Vehicle%20Master&ViewDataId=HireVehicle&Controller2=HireVehicle&Module=Master&optiontype=M&optioncode=HireVehicleMaster&ShortCutKey=true";
            window.open(murl, '_blank');
        });
        $('#btnRecentLR').click(function (event) {
            event.preventDefault();
            if (LrGenerate) {
                window.location.href = "/Logistics/LorryReceipt/Index?LrGenerate=A&TableName=&getRecentLR=true&MainType=&Mode=Add&Header=Lorry%20Receipts&ViewDataId=LREntry&Controller2=LorryReceipt&Module=Transactions&optiontype=&optioncode=LREntry";
            } else {
                window.location.href = "/Logistics/LorryReceipt/Index?LrGenerate=M&TableName=&getRecentLR=true&MainType=&Mode=Add&Header=Lorry%20Receipts&ViewDataId=LREntry&Controller2=LorryReceipt&Module=Transactions&optiontype=&optioncode=LREntry";
            }
        });
        if ('@Model.StockAt'=="Godown") {
            $("#SGodown").prop("checked", true);
            $("#STransit").prop("checked", false);
        }
        else
        {
            $("#SGodown").prop("checked", false);
            $("#STransit").prop("checked", true);
        }
        $("input[name$='StockAt']").change(function () {
            if ($("#SGodown").is(":checked") == true) {
                $("#STransit").prop("checked", false);
            }
            else {
                $("#SGodown").prop("checked", false);
            }
        });
        $("input[name$='Collection']").change(function () {
            if ($("#Godown1").is(":checked") == true) {
                if ($("#Crossing").is(":checked") == true) {
                    $("#SGodown").prop("checked", false);
                    $("#STransit").prop("checked", true);
                } else {
                    $("#SGodown").prop("checked", true);
                    $("#STransit").prop("checked", false);
                }

            }
            else {
                $("#SGodown").prop("checked", false);
                $("#STransit").prop("checked", true);
            }
        });
        $("#Crossing").change(function () {
            if ($("#Crossing").is(":checked") == false) {
                if ($("#Godown1").is(":checked") == true) {
                    $("#SGodown").prop("checked", true);
                    $("#STransit").prop("checked", false);
                }
                else {
                    $("#SGodown").prop("checked", false);
                    $("#STransit").prop("checked", true);
                }
            }
            else {
                $("#SGodown").prop("checked", false);
                $("#STransit").prop("checked", true);
            }
        });


        $('#ActWt').blur(function () {
            $("#ChgWt").val($("#ActWt").val());
            CalculateRateOnScript();
        });
        $('#ChgWt,#TotQty').blur(function () {
            CalculateRateOnScript();
        });
        $('#Rate').blur(function () {
            $("#hdnRate").val(this.value);
            CalculateRateOnScript();
        });
        $('#RateType').change(function () {
            $("#hdnRateType").val(this.value);
            CalculateRateOnScript();
        });
        $('#RateChrgOn').change(function () {
            $("#hdnRateChrgOn").val(this.value);
            CalculateRateOnScript();
        });
        $('#Search,#SearchConsigner').keyup(function () {
            var value = $(this).val();
            $('#tblConsignerList > tbody  > tr').each(function () {
                var found = 'false';
                $(this).each(function () {
                    if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                        found = 'true';
                    }
                });
                if (found == 'true') {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
        });
        $("#RecCode").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetTickler")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { Consigner: $("#RecCode").val(), ConsignorH: true },
                success: function (result) {

                    if (result.HireBlackList == true) {
                        $("#hdnBlackListConsigner").val("T");
                    } else {
                        $("#hdnBlackListConsigner").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#SpclRMK").html(result.HireSpclRemark);
                            $("#SpclRemarkDiv").show();
                        }
                        else {
                            $("#SpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#BlackLStRMK").html(result.HireBlackListRemark);
                            $("#BlackListRemarkDiv").show();
                        }
                        else {
                            $("#BlackListRemarkDiv").hide();
                        }
                        $('#TicklerModal').modal('show');
                    }

                    $('#ConsignerAddNo').select2('data', { id: result.AddressSno, text: result.AddressSnoText });
                    GetCAddress();

                }
            });
        });
        $("#SendCode").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetTickler")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { Consigner: $("#SendCode").val(), ConsignorH: false },
                success: function (result) {
                    if (result.HireBlackList == true) {
                        $("#hdnBlackListConsignee").val("T");
                    } else {
                        $("#hdnBlackListConsignee").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#SpclRMK").html(result.HireSpclRemark);
                            $("#SpclRemarkDiv").show();
                        }
                        else {
                            $("#SpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#BlackLStRMK").html(result.HireBlackListRemark);
                            $("#BlackListRemarkDiv").show();
                        }
                        else {
                            $("#BlackListRemarkDiv").hide();
                        }
                        $('#TicklerModal').modal('show');
                    }

                    $('#ConsigneeAddNo').select2('data', { id: result.AddressSno, text: result.AddressSnoText });
                    GetCeeAddress();
                }
            });

        });
        $("#Driver").change(function (event) {
            $("#ErrorMessage").hide();
            var url = '@Url.Action("GetDriverTickler")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { Driver: $("#Driver").val() },
                success: function (result) {
                    if (result.HireBlackList == true) {
                        $("#hdnBlackListDriver").val("T");
                    } else {
                        $("#hdnBlackListDriver").val("F");
                    }
                    if (result.HireBlackList == true || result.HireSpcl == true) {
                        //VehicleRemarkModal
                        if (result.HireSpcl == true) {
                            //SpclRemarkDiv SpclRMK
                            $("#DriverSpclRMK").html(result.HireSpclRemark);
                            $("#DriverSpclRemarkDiv").show();
                        }
                        else {
                            $("#DriverSpclRemarkDiv").hide();
                        }
                        if (result.HireBlackList == true) {
                            //BlackListRemarkDiv BlackLStRMK
                            $("#DriverBlackLStRMK").html(result.HireBlackListRemark);
                            $("#DriverBlackListRemarkDiv").show();
                        }
                        else {
                            $("#DriverBlackListRemarkDiv").hide();
                        }
                        $('#DriverTicklerModal').modal('show');
                    }
                }
            });

        });


        $('#Bracode').click(function (event) {
            event.preventDefault();
            var url = '@Url.Action("GenerateBarCode")';
            var DTO = { Code: $("#LrNo").val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    var LoadDownLoadFiles = $("#BracodeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                },
            });
        });

        $('#DecVal').blur(function (event) {
            if (parseFloat($("#DecVal").val()) > 0)
            {
                var url = '@Url.Action("GetTicklrOfDeclareValue")';
                var DTO = { DeclareValue: $("#DecVal").val() };
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify(DTO),
                    cache: false,
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.spinner').show();
                    },
                    success: function (data) {
                        if (data.Show == "Y") {
                            $('#GST_Tickler_DecalreValue').val(data.GST_TicklrString);
                            $('#EWB_Tickler_DecalreValue').val(data.EWB_TicklrString);
                            $("#TSaveNamePopUp").modal("show");
                        } else {
                            $('#GST_Tickler_DecalreValue').val("");
                            $('#EWB_Tickler_DecalreValue').val("");
                            $("#TSaveNamePopUp").modal("hide");
                        }
                        $('.spinner').hide();
                        $("#ErrorMessage").hide();
                    },
                });
            }
        });
        $('#SaveDraftName').click(function (event) {
            if ($("#Draft_Name").val() == '' || $("#Draft_Name").val() == null) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Draft_Name Required.');
                return;
            }
            else {
                var url = '@Url.Action("CheckExistLR")';
                $.ajax({
                    type: "POST",
                    traditional: true,
                    url: url,
                    data: { TableName: "LRMaster_Draft", Colfield: "[DraftName]", Value: $('#Draft_Name').val(), SkipColumnName: "[LRno]", PKValue: '@Model.Document' },
                    success: function (result) {
                        if (result.Message == "T") {
                            SaveDraft();
                        } else {
                            $("#ErrorMessage").show();
                            $("#ErrorMessage").text('Draft_Name Exist Please CHange Draft_Name.');
                            return;
                        }
                    }
                });
            }
        });

        //$("#btnPrint").click(function () {
        $('#btnPrint').click(function (event) {
            PrintLR = "SavePrint";
            if ('@Model.Mode' == "Edit") {
                if ('@Model.LRSetup.DispatchLREditReq' == "True" && '@Model.DispatchLR' == "True") {
                    var result = confirm("This Lr Dispatched R U Sure U Want To Save?");
                    if (result) {
                        CheckDate();
                    }
                }
                else if ('@Model.LRSetup.LRBillEditReq' == "True" && '@Model.BillGenerate' == "True") {
                    var result = confirm("Bill Generated Of This Lr  R U Sure U Want To Save?");
                    if (result) {
                        CheckDate();
                    }
                }
                else {
                    CheckDate();
                }
            }
            else {
                CheckDate();
            }
        });
        $('#btnPrintOnly').click(function (event) {
            event.preventDefault();
            PrintLR = "OnlyPrint";
            $('#printpostmodel').modal('show');
        });
        //$('#Submit').click(function (event) {
        $('#Submit').click(function (event) {
            event.preventDefault();
            //$('#Submit').prop("disabled", true);
            if ('@Model.Mode'=="Delete") {

                var result = confirm("Are you sure you want to Delete This LR ?");
                if (result) {
                    SaveLRBILL();
                }
            } else
            {
                if ('@Model.Mode' == "Edit")
                {
                    if ('@Model.LRSetup.DispatchLREditReq' == "True" && '@Model.DispatchLR'=="True")
                    {
                        var result = confirm("This Lr Dispatched R U Sure U Want To Save?");
                        if (result)
                        {
                            CheckDate();
                        }
                    }
                    else if ('@Model.LRSetup.LRBillEditReq' == "True" && '@Model.BillGenerate'=="True")
                    {
                        var result = confirm("Bill Generated Of This Lr  R U Sure U Want To Save?");
                        if (result)
                        {
                            CheckDate();
                        }
                    }
                    else
                    {
                        CheckDate();
                    }
                }
                else
                {
                    CheckDate();
                }
            }
        });
        $("#btnAddNote").click(function (e) {
            e.preventDefault();
            var url = '/Logistics/AlertNote/ShoWAlertNoteList';
            var myTableArray = [];
            myTableArray.push($('#Document').val());
            var DTO = { Type: "LR000", TypeCode: myTableArray, DocTpe: "LR000" };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();


                        var AttachDoc = $("#AlertNoteDiv");
                        AttachDoc.html('');
                        AttachDoc.html(data.Html);
                        $('#addnotemodel').modal('show');
                        $("#AlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                },
            });
        });
        //$("#btnAddNarr").click(function (e) {
        //    e.preventDefault();
        //    $("#AlertNoteDiv,#btnAddNarr").addClass("hidden");
        //    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").removeClass("hidden");
        //    var url = '/Logistics/AlertNote/PartialView';
        //    var ModelData = {};
        //    ModelData["AType"] = "LR000";
        //    ModelData["DocReceived"] = $("#LrNo").val();
        //    ModelData["DocumentKey"] = $("#Document").val();
        //    var DTO = { mModel: ModelData };
        //    $.ajax({
        //        type: "POST",
        //        dataType: "json",
        //        data: JSON.stringify(DTO),
        //        cache: false,
        //        url: url,
        //        contentType: "application/json; charset=utf-8",
        //        beforeSend: function () {
        //            $('.spinner').show();
        //        },
        //        success: function (data) {
        //            $('.spinner').hide();

        //            var AttachDoc = $("#AddAlertNoteDiv");
        //            AttachDoc.html('');
        //            AttachDoc.html(data.Html);
        //        },
        //    });
        //});
        //$("#btnNarrList").click(function (e) {
        //    e.preventDefault();
        //    $("#AlertNoteDiv,#btnAddNarr").removeClass("hidden");
        //    $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
        //});
        @*$('#btnNarrSave').click(function (event) {
            event.preventDefault();

            if ($("#AType").val() == null || $("#AType").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Type is required..');
                return;
            }
            if ($("#CommonRemark").val() == null || $("#CommonRemark").val() == '') {
                $("#CommonErrorMessage").show();
                $("#CommonErrorMessage").text('Remark is required..');
                return;
            }
            var AlertRefType = [];

            $('#ALerttbl > tbody  > tr').each(function () {
                var tds = $(this).find('td');
                if ($(this).find(".chkfvalue").prop("checked") == true || $(this).find(".chkfvalueStop").prop("checked")) {
                    var myDets =
                    {
                        Code: tds.eq(1).text(),
                        select: $(this).find(".chkfvalue").prop("checked"),
                        stop: $(this).find(".chkfvalueStop").prop("checked"),
                    }
                    AlertRefType.push(myDets);
                }
            });
            var url = '/Logistics/AlertNote/SaveDataGetList';
            var ModelData = {};
            ModelData["AType"] = $("#AType").val();
            ModelData["TypeCode"] = $("#TypeCode").val();
            ModelData["RefersType"] = AlertRefType;
            ModelData["Remark"] = $("#CommonRemark").val();
            ModelData["Bling"] = $("#Bling").is(":checked");
            ModelData["PartyNarr"] = $("#PartyNarr").is(":checked");
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';
            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    if (data.Status == "Error") {
                        alert(data.Message);
                    } else
                    {
                        var LoadDownLoadFiles = $("#AlertNoteDiv");
                        LoadDownLoadFiles.html('');
                        LoadDownLoadFiles.html(data.Html);
                        $("#AlertNoteDiv,#btnAddNarr").removeClass("hidden");
                        $("#AddAlertNoteDiv,#btnNarrList,#btnNarrSave").addClass("hidden");
                    }
                },
            });
        });*@
    });


    function CheckManualLROnly() {
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckManualLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#LrNo").val(), document: $("#Document").val() },
            success: function (result) {
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    $("#Document").val($("#LrNo").val());
                }
            }
        });
    }
    function CheckManualLR() {
        $('.spinner').show();
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckManualLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#LrNo").val(), document: $("#Document").val() },
            success: function (result) {
                $('.spinner').hide();
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    SaveLRBILL();
                }
            }
        });
    }
    function CheckAutoLR() {
        $('.spinner').show();
        $("#ErrorMessage").hide();
        var url = '@Url.Action("CheckAutoLR")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { lrno: $("#LrNo").val(), document: $("#Document").val(),Mode :'@Model.Mode' },
            success: function (result) {
                $('.spinner').hide();
                if (result.Message == "T") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text(result.Msg);
                    return;
                } else {
                    SaveLRBILL();
                }
            }
        });
    }
    function CheckDate() {
        $('.spinner').show();
        var url = '@Url.Action("CheckLRDate")';
            $.ajax({
                type: "POST",
                traditional: true,
                url: url,
                data: { DocDate: $("#BookDate").val(), DocTime: $("#Time").val() },
                success: function (result) {
                    $('.spinner').hide();
                    if (result.Status == "T") {
                        if (LrGenerate) {
                            CheckAutoLR();
                        } else {
                            CheckManualLR();
                        }
                    } else {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text(result.Message);
                        return;
                    }
                }
            });
    }

    function LorryDraft() {
        var url = '@Url.Action("LorryDraftIndex")';
        var ModelData = {};
        var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#LorryDraft').html(data.Html);
                    $("#LorryDraftmodal").modal("show");
                    $("#ErrorMessage").hide();
                },
            });
    }
    function PickUpList() {
        var url = '@Url.Action("PickUpList")';
        var ModelData = {};
        var DTO = { Model: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    $('.spinner').hide();
                    $('#LRPickUpList').html(data.Html);
                    $("#PICKUPmodal").modal("show");
                    $("#ErrorMessage").hide();
                },
            });
    }
    function LoadLRType() {
        var url = '@Url.Action("GetLRType")'
        $('#LRtype').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
            url: url,
            dataType: 'json',
            quietMillis: 100,
            enableFiltering: true,
            allowClear: true,
            minimumInputLength: 0,
            multiple: true,
            width: 300,
            data: function (term, page) {
                return {
                    types: ["exercise"],
                    limit: -1,
                    term: term
                };
            },
            results: function (data, page) {
                clientObj = JSON.stringify(data);
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.Name,
                            id: item.Code
                        }
                    })
                };
            }
            },
            initSelection: function (element, callback) {
                var data = { id: '@Model.LRtype', text: '@Model.LRtype_Name' };
                callback(data);
            },
            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
            formatSelection: function (exercise) {
                LoadCustomerBasedLrType();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadCustomerBasedLrType() {
       // $('#BillParty').select2('data', { id: 'asdf', text: 'rajesh ent' });
        var url = '@Url.Action("LoadCustomeThroughLRType")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
        var DTO = { LRType: $("#LRtype").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function ()
            {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $('#BillParty').select2('data', { id: data.id, text: data.name });
                    $("#ErrorMessage").hide();
                } else {
                    $('.spinner').hide();
                }
            },
        });
    }
    function Charges() {

        $("#ChargeDiv .txtfvalue").each(function () {

            $(this).focus(function () {
                if ($(this).val() == "0") {
                    $(this).val("");
                }
            });
            $(this).blur(function () {
                if ($(this).val() == "" || $(this).val() == null) {
                    $(this).val("0");
                }
            });
        });
        $('#ChargeDiv .txtfvalue').blur(function () {

            var amt = 0;
            $("#ChargeDiv :text").each(function () {
                amt += parseFloat($(this).val());
            });
            $("#Amt").val((amt.toFixed(2)).toString());
        });

        var amt = 0;
        $("#ChargeDiv :text").each(function () {
            amt += parseFloat($(this).val());
        });
        $("#Amt").val((amt.toFixed(2)).toString());
    }
    function CollectionAndDelivery() {
        $("input[name$='Delivery']").change(function () {
            if ($("#Door").is(":checked") == true) {
                $("#Godown").prop("checked", false);
            }
            else {
                $("#Door").prop("checked", false);
            }
        });


       if ('@Model.Mode'=="Add") {
            if ('@Model.Colln' == 'D')
            {
                $("#Direct").prop("checked", true);
            } else  {
                $("#Godown1").prop("checked", true);
            }

            if ('@Model.Delivery' == 'D')
            {
                $("#Door").prop("checked", true);
            } else {
                $("#Godown").prop("checked", true);
            }
        } else {
            if ('@Model.Colln' == 'D')
            {
                $("#Direct").prop("checked", true);
            } else if ('@Model.Colln' == 'G') {
                $("#Godown1").prop("checked", true);
            }
            if ('@Model.Crossing'=='True') {

                $("#Crossing").prop("checked", true);
            } else {
                $("#Crossing").prop("checked", false);
            }

            if ('@Model.Delivery' == 'D')
            {
                $("#Door").prop("checked", true);
            } else {
                $("#Godown").prop("checked", true);
            }
        }
    }
    function BlockContentDispatch_Bill()
    {
        debugger;
        var MessageDemo = "";
        if ('@Model.BillGenerate' == 'True' && '@Model.DispatchLR' != 'True')
        {
            $("#ErrorMessage").show();
            MessageDemo += "This Consignment Bill Generated...<Br>"
            $("#ErrorMessage").html(MessageDemo);
            $('#LrNo').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#TotQty').prop('disabled', true);
            $('#btnGenaralContrct').prop('disabled', true);
            $('#btnContrct').prop('disabled', true);
            $('#Amt').prop('disabled', true);
            $("#ChargeDiv .txtfvalue").attr("disabled", true);
        }
        if ('@Model.DispatchLR' == 'True' && '@Model.BillGenerate' != 'True' )
        {
            $("#ErrorMessage").show();
            MessageDemo += "This Consignment Dispatched...<Br>"
            $("#ErrorMessage").html(MessageDemo);
            $('#LrNo').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#TotQty').prop('disabled', true);
        }
        if ('@Model.DispatchLR' == 'True' && '@Model.BillGenerate' == 'True') {
            $("#ErrorMessage").show();
            MessageDemo += "This Consignment Dispatched And Bill Generated...<Br>"
            $("#ErrorMessage").html(MessageDemo);
            $('#LrNo').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#TotQty').prop('disabled', true);
            $('#btnGenaralContrct').prop('disabled', true);
            $('#btnContrct').prop('disabled', true);
            $('#Amt').prop('disabled', true);
            $("#ChargeDiv .txtfvalue").attr("disabled", true);
        }
        if ('@Model.DeliveryLR' == "True")
        {
            $("#ErrorMessage").show();
            MessageDemo += "This Consignment Deliverd...<Br>";
            $("#ErrorMessage").html(MessageDemo);
            $('#LrNo').prop('disabled', true);
            $('#Time').prop('disabled', true);
            $('#TotQty').prop('disabled', true);
            $('#btnGenaralContrct').prop('disabled', true);
            $('#btnContrct').prop('disabled', true);
            $('#Amt').prop('disabled', true);
            $("#ChargeDiv .txtfvalue").attr("disabled", true);
        }
        if ('@Model.TripLock' == "True")
        {
            $("#ErrorMessage").show();
            MessageDemo += "Trip Generated Of This Consignment...!";
            $("#ErrorMessage").html(MessageDemo);
            $('#DriverTripExp,#DieselLtr,#DieselAmt,#Driver').prop('disabled', true);

        }

    }
    function SaveLRBILL() {
        $('.spinner').show();
        var ModelData = {};

        if ('@Model.Mode' == "Add" || '@Model.Mode' == "Edit")
        {
            if ($("#hdnBlackListConsigner").val() == "T") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text($("#RecCode").val() + ' This Consigner Activity Hold By Setup.. Please Change Consigner....!');
                return;
            }

            if ($("#hdnBlackListConsignee").val() == "T") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text($("#SendCode").val() + ' This Consignee Activity Hold By Setup.. Please Change Consignee....!');
                return;
            }
            if ($("#hdnBlackListDriver").val() == "T") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text($('#Driver').select2('data').text + ' This Driver Activity Hold By Master.. Please Change Driver....!');
                return;
            }

            if (!(LrGenerate)) {
                if ($("#LrNo").val() == '0' || $("#LrNo").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('LrNo is required..');
                    return;
                } else {

                }
            }

            if ($("#LRtype").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('LRtype is required..');
                return;
        }
            if ($("#BookDate").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('BookDate is required..');
                return;
            }
            if ($("#Time").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Time is required..');
                return;
            }


            if ($("#ServiceType").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('ServiceType is required..');
                return;
            }
            if ($("#RecCode").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consigner is required..');
                return;
            }
        if ($("#SendCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Consignee_Code is required..');
                return;
            }

        if ($("#Source").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('From is required..');
                return;
            }
        if ($("#Dest").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('To is required..');
                return;
            }
        if ($("#BillBran").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billed_At is required..');
                return;
        }

        if ($("#TotQty").val() == '' || $("#TotQty").val() == '0') {
            if ($("#LRtype").val() != "100004")
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('PackQty is required..');
                return;
            }
        }
        else
        {
            if ($("#LRtype").val() != "100004") {
                if ($("#DocNo").val() != null && $("#DocNo").val() != '' && $("#DocNo").val() != ' ') {
                    if (!(parseInt($("#PickOrderBalQty").val()) >= parseInt($("#TotQty").val()))) {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text("PackQty Allow Only " + $("#PickOrderBalQty").val() + "  .....!");
                        return;
                    }
                }
            }

        }
        if ($("#UnitCode").val() == '') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Unit is required..');
                return;
        }

        if ($("#ChgType").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('ChargeType is required..');
            return;
        }
        if ($("#ChgType").val() == '100000') {
            if ($("#ActWt").val() == '' || $("#ActWt").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight is required..');
                return;
            }
            if ($("#ChgWt").val() == '' || $("#ChgWt").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charged_Weight is required..');
                return;
            }
            if (parseInt($("#ActWt").val()) > parseInt($("#ChgWt").val())) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight Should Be Less Than Or Equal To Charged_Weight ..');
                return;
            }
        }


        if ('@Model.LRSetup.ActWeightReq'=="True") {
            if ($("#ActWt").val() == '' || $("#ActWt").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight is required..');
                return;
            }
            if ($("#ChgWt").val() == '' || $("#ChgWt").val() == '0') {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Charged_Weight is required..');
                return;
            }
        }



        if (parseInt($("#ActWt").val()) > parseInt($("#ChgWt").val())) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Actual_Weight Should Be Less Than Or Equal To Charged_Weight ..');
                return;
        }
        if ($("#LRtype").val() == "100001")
        {
            if ('@Model.LRSetup.Topay' == 'True')
            {
                if ($("#BillParty").val() == '') {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Billing_Party is required..');
                    return;
                }
            }
        }
        else if ($("#LRtype").val() == "100002")
        {
            if ('@Model.LRSetup.Paid' == 'True')
                {
                    if ($("#BillParty").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('Billing_Party is required..');
                        return;
                    }
                }
        }
        else if ($("#LRtype").val() == "100000")
        {
            if ($("#BillParty").val() == '')
            {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Billing_Party is required..');
                return;
            }
        }



        if ('@Model.LRSetup.ParticularFlag' == 'True') {
            if ($("#DescrType").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Particulars is required..');
                return;
            }
        }
        if ('@Model.LRSetup.PartyChallan' == 'True' || C_PartyChallan == true) {
                if ($("#PartyRef").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Party_Challan is required..');
                    return;
                }
        }
        if ('@Model.LRSetup.PartyInvoice' == 'True' || C_PartyInvoice == true) {
                if ($("#PartyInvoice").val() == '') {

                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('PartyInvoice is required..');
                    return;
                }
            }
        if ('@Model.LRSetup.DeclareValueZero'!='True') {
            if ($("#DecVal").val() == "0.00") {

                $("#ErrorMessage").show();
                $("#ErrorMessage").text('DecVal is required..');
                return;
            }
        }

            if (parseInt($('#DecVal').val()) >= parseInt(@Model.LRSetup.DeclareValue)) {
                if ('@Model.LRSetup.GST' == 'True') {
                    //if ($("#GSTNO").val() == '') {
                    //    $("#ErrorMessage").show();
                    //    $("#ErrorMessage").text('GSTNO is required..');
                    //    return;
                    //}
                }
                if ('@Model.LRSetup.EwayBill' == 'True') {
                    if ($("#EwayBill").val() == '') {
                        $("#ErrorMessage").show();
                        $("#ErrorMessage").text('EwayBill is required..');
                        return;
                    }
                }
            }
        if ('@Model.LRSetup.Vehicle' == 'True') {

            if ($("#VehicleNo").val() == '') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('VehicleNo is required..');
                return;
                }
            }


        if ($("#Direct").is(":checked") == false && $("#Godown1").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Collection is required..');
            return;
        }
            if ($("#SGodown").is(":checked") == false && $("#STransit").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Stock In is required..');
            return;
        }

        if ($("#Door").is(":checked") == false && $("#Godown").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Delivery is required..');
            return;
        }

        if ($("#Red").is(":checked") == false && $("#Green").is(":checked") == false && $("#White").is(":checked") == false) {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('LR-Mode is required..');
            return;
        }


        }


        var amt1 = 0;
        var ChargeList = [];

        $('#LRChargetbl tbody tr').each(function () {

            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            amt1 += parseInt(tds.find(".txtfvalue").val());
            ChargeList.push(myDets);
        });

        ModelData["Charges"] = ChargeList;

        if ('@Model.LRSetup.Charges'=='False') {
            if (amt1 == 0) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Enter Charges..');
                return;
            }
        }
        if (C_POnumver == true) {

            if ($("#PONumber").val() == '') {
                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('PONumber is required..');
                    return;
                }
            }
        if (C_BEnumber == true) {

            if ($("#BENumber").val() == '') {
                    $("#ErrorMessage").show();
                $("#ErrorMessage").text('BENumber is required..');
                    return;
                }
            }

            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@


        if (LrGenerate) {
            ModelData["LrGenerate"] = "A";
        } else {
            ModelData["LrGenerate"] = "M";
        }

        if ($("#MAll").prop("checked") == true) {
            ModelData["MDispach"] = true;
            ModelData["MDelivery"] = true;
            ModelData["MBilling"] = true;
            ModelData["MAll"] = true;
        } else {

            if ($("#All").prop("checked") == true) {
                ModelData["MDispach"] = true;
            } else {
                ModelData["MDispach"] = false;
            }
            if ($("#MDelivery").prop("checked") == true) {
                ModelData["MDelivery"] = true;
            } else {
                ModelData["MDelivery"] = false;
            }
            if ($("#MBilling").prop("checked") == true) {
                ModelData["MBilling"] = true;
            } else {
                ModelData["MBilling"] = false;
            }
        }
        ModelData["PONumber"] = $("#PONumber").val();
        ModelData["BENumber"] = $("#BENumber").val();
        ModelData["MRemark"] = $("#MRemark").val();
        ModelData["MNote"] = $("#MNote").val();
        ModelData["Document"] = $("#Document").val();
        ModelData["MaxDate"] = '@Model.MaxDate';
        ModelData["MinDate"] = '@Model.MinDate';
        ModelData["DocDate"] = '@Model.DocDate';


        ModelData["Amt"] = $("#Amt").val();//(amt.toFixed(2)).toString();
        ModelData["Mode"] = '@Model.Mode';
        ModelData["Header"] = '@Model.Header';
        ModelData["Val1"] = amt1;
        //ModelData["FldValue"] = Fld.substring(0, Fld.length - 1);

        if ($("#Door").is(":checked") == false) {

            ModelData["Delivery"] = "G";
        } else {
            ModelData["Delivery"] = "D";
        }


        if ($("#Red").is(":checked") == true)
        {
            ModelData["LRMode"] = "R";
        }
        else if ($("#Green").is(":checked") == true)
        {
            ModelData["LRMode"] = "G";
        }
        else if ($("#White").is(":checked") == true)
        {
            ModelData["LRMode"] = "W";
        }
        if ($("#Direct").is(":checked") == true) {
            ModelData["Colln"] = "D";
        } else if ($("#Godown1").is(":checked") == true) {
            ModelData["Colln"] = "G";
        }
        if ($("#SGodown").is(":checked") == true) {
            ModelData["StockAt"] = "Godown";
        } else if ($("#STransit").is(":checked") == true) {
            ModelData["StockAt"] = "Transi";
        }
        ModelData["Crossing"] = $("#Crossing").is(":checked");
        //if ($("#Crossing").is(":checked")==true) {
        //    ModelData["StockAt"] = "Transi";
        //}
        if ($("#Godown").is(":checked") == true) {
            ModelData["TransactionAt"] = "G";
        } else {
            ModelData["TransactionAt"] = "D";
        }

        ModelData["DeliveryTxt"] = $("#DeliveryTxt").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["OrderReceivedDate"] = $("#OrderReceivedDate").val();
        ModelData["DateOfOrder"] = $("#DateOfOrder").val();
        ModelData["ScheduleDate"] = $("#ScheduleDate").val();
        ModelData["Time"] = $("#Time").val();
        ModelData["LrNo"] = $("#LrNo").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["BillBran"] = $("#BillBran").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["LRtype"] = $("#LRtype").val();
        ModelData["ServiceType"] = $("#ServiceType").val();
        ModelData["RecCode"] = $("#RecCode").val();
        ModelData["SendCode"] = $("#SendCode").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["PartyRef"] = $("#PartyRef").val();
        ModelData["PartyInvoice"] = $("#PartyInvoice").val();
        ModelData["RecGST"] = $("#RecGST").val();
        ModelData["SendGST"] = $("#SendGST").val();
        ModelData["BillGST"] = $("#BillGST").val();
        ModelData["TrnMode"] = $("#TrnMode").val();
        ModelData["HSNCODE"] = $("#HSNCODE").val();

        ModelData["EwayBill"] = $("#EwayBill").val();
        //ModelData["EwayBillValid"] = $("#EwayBillValid").val();
        ModelData["VehicleNo"] = $("#VehicleNo").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["Amt"] = $("#Amt").val();
        ModelData["DecVal"] = $("#DecVal").val();
        ModelData["DescrType"] = $("#DescrType").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["UnitCode"] = $("#UnitCode").val();
        ModelData["ConsignerEXTRAInfo"] = $("#ConsignerEXTRAInfo").val();
        ModelData["ConsigneeEXTRAInfo"] = $("#ConsigneeEXTRAInfo").val();
        ModelData["BillingPartyEXTRAInfo"] = $("#BillingPartyEXTRAInfo").val();
        ModelData["Narr"] = $("#Narr").val();
        ModelData["DocNo"] = $("#DocNo").val();
        ModelData["AllowMultiVehicle"] = $("#hdnAllowMultiVehicle").val();

        ModelData["RateChrgOn"] = $("#hdnRateChrgOn").val();
        ModelData["Rate"] = $("#Rate").val();
        ModelData["RateType"] = $("#hdnRateType").val();
        ModelData["ConsignerAddNo"] = $("#ConsignerAddNo").val();
        ModelData["ConsigneeAddNo"] = $("#ConsigneeAddNo").val();
        ModelData["BillPartyAddNo"] = $("#BillPartyAddNo").val();

        if ('@Model.Mode' =='Pick') {
            ModelData["Document"] = null;
            ModelData["Mode"] = "Add";
        }
        if ('@Model.Mode'=='Select') {
            ModelData["Mode"] = "Add";
            ModelData["Document"] = null;
        }

        ModelData["LrContactPerson"] = $("#LrContactPerson").val();
        ModelData["LrContactPersonNo"] = $("#LrContactPersonNo").val();
        ModelData["LrContactPersonEmailId"] = $("#LrContactPersonEmailId").val();

        var myBatchArray = [];
        $('#lrtabledata tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                tempId: tds.eq(1).text(),
                ExpAcount: tds.eq(2).text(),
                ExpAcountName: tds.eq(3).text(),
                SubHeadAcc: tds.eq(4).text(),
                ExpAmount: tds.eq(5).text(),
            }
            myBatchArray.push(myDets);
        });
        ModelData["LRDetailList"] = myBatchArray;
        ModelData["DieselAmt"] = $("#DieselAmt").val();
        ModelData["DieselLtr"] = $("#DieselLtr").val();
        ModelData["Driver"] = $("#Driver").val();
        ModelData["DriverTripExp"] = $("#DriverTripExp").val();
        ModelData["ActualExp"] = $("#ActualExp").val();
        ModelData["ApprovedDiesel"] = $("#ApprovedDiesel").val();
        ModelData["PendingDiesel"] = $("#PendingDiesel").val();
        ModelData["AdvanceDiesel"] = $("#AdvanceDiesel").val();
        ModelData["TripNarr"] = $("#TripNarr").val();
        ModelData["TripNo"] = $("#TripNo").val();

        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    $("#Document").val(data.SerialNo);
                    if ('@Model.Mode'!="Delete") {
                        alert("Document Saved as " + data.SerialNo + "");
                    } else {
                        alert("Document Delete Sucessfully...!");
                    }

                    if (PrintLR =="SavePrint")
                    {
                        $('.spinner').hide();
                        $('#printpostmodel').modal('show');
                        @*window.location.href = "/Logistics/LorryReceipt/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";*@
                    }
                    else
                    {
                        if ('@Model.Mode'=="Add") {
                            window.location.href = "/Logistics/LorryReceipt/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";
                        } else {
                            window.location.href =  "/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType";
                        }
                    }
                    $("#ErrorMessage").hide();
                }
                else if (data.Status == "Prompt") {
                    var result = confirm(data.Message);
                    if (result) {
                        $('.spinner').show();
                        $("#hdnAllowMultiVehicle").val("true");
                        SaveLRBILL();
                    }

                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
        });
    }
    function PrintExecute() {
        var mDate = ($('#Fromdate').val() + ':' + $('#ToDate').val());
        var mwhat = "";
        var mpaper = $("input[name=CurrName]:checked").val()                // paper size
        var mpageorient = $("input[name=ChequeNo]:checked").val();          // page orient (layout)
        var moutput = $("input[name=BillNumber]:checked").val();            // output
        var mtool = $("input[name=Sno]:checked").val();                     // report tool
        //var mmsg = $('#message').val();
        //mmsg=mmsg.replace("\n", "<br />");
        var memaildata = $('#repsubject').val() + "~" + $('#emailid').val() + "~" + $('#message').val();;
        // special loop for multiple parties
        var mstr = $('#hiddenvalues').val() + "~";
        // for reportcentreplus hiddenvalues is blank
        if (mstr == "~") {
            mstr = "$X$~";
        }
        //alert(mstr);
        var msel = mstr.split('~');
        var i;
        for (i = 0; i < msel.length; ++i)
        {
            if (msel[i]!='')
            {
                if (msel[i] = "$X$") {
                    msel[i] = "";
                }
                if ($('#EmailOnly').is(':checked')) {
                    if (moutput=="Pdf"){             // output
                        //window.open("/SendEmail/Index?Date=" + mDate + "&ViewDataId=" + $("#viewcode").val() + "&mpapersize=" + mpaper + "&mTo=" + $("#emailid").val(), '_blank');
                        //return;
                        if (mtool == "Crystal") {
                            mwhat = "ECRPDF";
                        } else {
                            mwhat = "EPDF";
                        }
                    }
                    if (moutput == "XLS") {          // output
                        mwhat = "EXLS";
                    }
                    if (moutput == "Word") {         // output
                        mwhat = "EWRD";
                    }
                }
                else
                {

                    if (mtool=="SSRS"){                  // reporttool
                        if (moutput == "Pdf") {          // output
                            if (mpageorient=="Portrait"){   // Layout
                                mwhat = "RPDF";
                            }else{
                                mwhat = "RPDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat ="RXLS";
                        }
                        if (moutput == "Word") {         // output
                            mwhat = "RWRD";
                        }
                        if (moutput == "VIEW") {         // Report viewer
                            //$("#hdnparastring") is defined in parent form (e.g. acledger, stock ledger, reportcentreplus etc.
                            var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#printformats").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            //var murl = encodeURI("/ReportViewerCommon/Index?Date=" + mDate + "&ViewDataId=" + $("#hdnformatname").val() + "&mpageorient=" + mpageorient + "&SelectContent=" + msel[i] + $("#hdnparastring").val() + "&mParaString=" + $("#hdnparastring").val());
                            window.open(murl, '_blank');
                            return;
                        }
                    }
                    if (mtool=="Crystal"){
                        mwhat = "CRPDF";
                    }
                    if (mtool=="Grid"){
                        if (moutput == "Pdf") {          // output
                            if (mpageorient == "Portrait") {   // Layout
                                mwhat="PDF";
                            }else{
                                mwhat="PDL";
                            }
                        }
                        if (moutput == "XLS") {          // output
                            mwhat = "XLS";
                            if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }

                            @*if ($("#hdnisreportplus").val() == '!!!') {
                                var sUrlPath = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            } else {
                                var sUrlPath = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#hdnformatname").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                            }*@
                            sUrlpath = window.open(sUrlPath, '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#viewcode").val() + '&SelectContent=' + msel[i] + $("#hdnparastring").val(), '_blank');
                            //var sUrlpath = window.open('@Url.Action("GetExcel")?Date=' + mDate + '&ViewDataId=' + $("#viewcode").val()+ '&SelectContent=' + $('#hiddenvalues').val(), '_blank');
                            return;
                        }
                    }
                } // emailonly
                if ($("#hdnisreportplus").val() == '!!!')
                {
                    var murl = '@Url.Action("GetPDFX")?mWhat=' + mwhat + '&Date=' + mDate + '&ViewDataId=' + $("#printformats").val() + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                } else {
                    var VIEWid = $("#printformats").val().split(',');
                    for (var i = 0; i < VIEWid.length; i++) {

                        var murl = '@Url.Action("GetPDF")?mWhat=' + mwhat + '&Date=' + mDate + '&LocationCode=' + $("#Document").val() + '&ViewDataId=' + VIEWid[i] + '&mwhat=' + mwhat + '&mpageorient=' + mpageorient + '&mpapersize=' + mpaper + '&memaildata=' + memaildata + '&SelectContent=' + msel[i] + $("#hdnparastring").val();
                        murl = window.open(murl, '_blank');
                    }
                }
                if (PrintLR == "SavePrint") {
                    window.location.href = "/Logistics/LorryReceipt/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType&Mode=Add";
                }
            }
        }
        if (mwhat.startsWith("E"))
        {
            alert("Email is Sent..Please Close the other Opened Blank tabs..");
        }
    };
    function SaveDraft() {
        if ($("#LRtype").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('LRtype is required..');
            return;
        }
        if ($("#BookDate").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('BookDate is required..');
            return;
        }
        if ($("#Time").val() == '') {
            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Time is required..');
            return;
        }


        if ($("#ServiceType").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('ServiceType is required..');
            return;
        }
        if ($("#RecCode").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Consigner is required..');
            return;
        }
        if ($("#SendCode").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Consignee_Code is required..');
            return;
        }
        if ($("#BillParty").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Billing_Party is required..');
            return;
        }
        if ($("#Source").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('From is required..');
            return;
        }
        if ($("#Dest").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('To is required..');
            return;
        }
        if ($("#BillBran").val() == '') {

            $("#ErrorMessage").show();
            $("#ErrorMessage").text('Billed_At is required..');
            return;
        }
        if ('@Model.LRSetup.ActWeightReq'=="True") {
            if ($("#ActWt").val() == '' || $("#ActWt").val() == '0') {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Weight is required..');
                return;
            }
        }

        var url = '@Url.Action("SaveDraft")';
        @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
        var ModelData = {};
        ModelData["Draft"] = true;
        //ModelData["Document"] = $("#Document").val();;
        ModelData["MaxDate"] = '@Model.MaxDate';
        ModelData["MinDate"] = '@Model.MinDate';
        ModelData["Draft_Name"] = $("#Draft_Name").val();
        var amt1 = 0;
        var ChargeList = [];
        $('#LRChargetbl tbody tr').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                Code: tds.eq(0).text(),
                AddLess: tds.eq(1).text(),
                Val1: tds.find(".txtfvalue").val(),
                ChgPostCode: tds.eq(3).text(),
                Fld: tds.eq(4).text()
            }
            amt1 += parseInt(tds.find(".txtfvalue").val());
            ChargeList.push(myDets);
        });

        ModelData["Charges"] = ChargeList;
        ModelData["Amt"] = amt1;//(amt.toFixed(2)).toString();
        ModelData["Mode"] = 'Add';
        ModelData["PONumber"] = $("#PONumber").val();
        ModelData["BENumber"] = $("#BENumber").val();

        if ($("#Door").is(":checked") == false) {
            ModelData["Delivery"] = "G";
        } else {
            ModelData["Delivery"] = "D";
        }
        if ($("#Direct").is(":checked") == true) {
            //ModelData["CollNArea"] = $("#CollNArea").val();
            ModelData["Colln"] = "D";

        } else if ($("#Godown1").is(":checked") == true) {
            //ModelData["CollNArea"] = null;
            ModelData["Colln"] = "G";
        }
        else {
            //ModelData["CollNArea"] = null;
            ModelData["Colln"] = "C";
        }
        if ($("#Godown").is(":checked") == true) {
            ModelData["TransactionAt"] = "G";
        } else {
            ModelData["TransactionAt"] = "D";
        }
        ModelData["DeliveryTxt"] = $("#DeliveryTxt").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Time"] = $("#Time").val();
        ModelData["LrNo"] = $("#LrNo").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["BillBran"] = $("#BillBran").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["LRtype"] = $("#LRtype").val();
        ModelData["ServiceType"] = $("#ServiceType").val();
        ModelData["RecCode"] = $("#RecCode").val();
        ModelData["SendCode"] = $("#SendCode").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["PartyRef"] = $("#PartyRef").val();
        ModelData["PartyInvoice"] = $("#PartyInvoice").val();
        ModelData["GSTNO"] = $("#GSTNO").val();
        ModelData["EwayBill"] = $("#EwayBill").val();
        //ModelData["EwayBillValid"] = $("#EwayBillValid").val();
        ModelData["VehicleNo"] = $("#VehicleNo").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["Amt"] = $("#Amt").val();
        ModelData["DecVal"] = $("#DecVal").val();
        ModelData["DescrType"] = $("#DescrType").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["UnitCode"] = $("#UnitCode").val();
        ModelData["ConsignerEXTRAInfo"] = $("#ConsignerEXTRAInfo").val();
        ModelData["ConsigneeEXTRAInfo"] = $("#ConsigneeEXTRAInfo").val();
        ModelData["BillingPartyEXTRAInfo"] = $("#BillingPartyEXTRAInfo").val();
        ModelData["Narr"] = $("#Narr").val();
        var DTO = { mModel: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == 'Success') {
                    $('.spinner').hide();
                    //
                    $("#ErrorMessage").hide();
                    $("#SaveNamePopUp").modal("hide");
                    alert("Draft Created Sucessfully..........!");
                }
                else {
                    $('.spinner').hide();
                    alert(data.Message);
                }
            },
            error: function (data) {
                $('.spinner').hide();
                alert(data.Message);
            },
        });
    }
    function LoadFrom() {
        var url = '@Url.Action("From")'
        $('#Source').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Source', text: '@Model.Source_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadChargeType() {
        var url = '@Url.Action("ChargeType")'
        $('#ChgType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ChgType', text: '@Model.ChgType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadVehicle() {
        var url = '@Url.Action("LoadVehicleNo")'
        $('#VehicleNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.VehicleNo', text: '@Model.VehicleNoName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadDriver() {
        var url = '@Url.Action("GetDriver")'
        $('#Driver').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Driver', text: '@Model.DriverN' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadConsignerAddress() {
        var url = '@Url.Action("GetConsignerAddressSrno")'
        $('#ConsignerAddNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $("#RecCode").val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ConsignerAddNo', text: '@Model.ConsignerAddNoName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetCAddress();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadConsigneeAddress() {
        var url = '@Url.Action("GetConsignerAddressSrno")'
        $('#ConsigneeAddNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $("#SendCode").val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ConsigneeAddNo', text: '@Model.ConsigneeAddNoName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetCeeAddress();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadBillPartyAddress() {
        var url = '@Url.Action("GetBillPartyAddressSrno")'
        $('#BillPartyAddNo').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term + "^" + $("#BillParty").val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillPartyAddNo', text: '@Model.BillPartyAddNoName' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetBAddress();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function GeneralContract() {
        var url = '@Url.Action("GeneralCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["ChgType"] = $("#ChgType").val();

        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val()=="C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else
        {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);
                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();

                }
                else
                {
                    var result = confirm(data.Message);
                    if (result) {
                        GeneralOtherContract();
                    }
                    else
                    {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }

    function GeneralOtherContract() {
        var url = '@Url.Action("GeneralOTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        //ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["ChgType"] = $("#ChgType").val();

        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    alert(data.Message);
                    RefreshCharges();
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function ConfirmScriptFunction() {
        if ($("#HitContractType").val() == "C") {
            ForceToGetCustomerContract();
        } else if ($("#HitContractType").val() == "I") {
            ItemwiseCustomerContract();
        }
    }
    function ConfirmGeneralMethods() {

        if ($("#HitContractType").val() == "C") {
            GeneralContract();
        } else if ($("#HitContractType").val() == "I") {
            GeneralItemContract();
        }
    }

    function ForceToGetCustomerContract() {
        var url = '@Url.Action("CustomerCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val() == "C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);

                    Charges();

                } else if (data.Status == "Error") {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        GetCustomerOtherOptionTypeContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function ItemwiseCustomerContract() {
        var url = '@Url.Action("ItemWiseCustomerCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val() == "C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    var result = confirm(data.Message);
                    if (result) {
                        ItemwiseMasterContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function ItemwiseMasterContract() {
        var url = '@Url.Action("ItemWiseMasterCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val() == "C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function GeneralItemContract() {
        var url = '@Url.Action("GeneralItemWiseCharges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val()=="C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else
        {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function GetCustomerOtherOptionTypeContract() {
        var url = '@Url.Action("CustomerOTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);

                    Charges();
                } else if (data.Status == "Error") {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        ForceToGetContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function ForceToGetContract() {
        var url = '@Url.Action("Charges")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        if ($("#BillParty").val() == null || $("#BillParty").val() == "") {
            alert("BillParty Required....!");
            return;
        }
        if ($("#BookDate").val() == null || $("#BookDate").val() == "") {
            alert("BookDate Required....!");
            return;
        }
        if ($("#Source").val() == null || $("#Source").val() == "") {
            alert("From Required....!");
            return;
        }
        if ($("#Dest").val() == null || $("#Dest").val() == "") {
            alert("To Required....!");
            return;
        }
        if ($("#HitContractType").val() == "C") {
            if ($("#ChgType").val() == null || $("#ChgType").val() == "") {
                alert("ChgType Required....!");
                return;
            }
        }
        else {
            if ($("#DescrType").val() == null || $("#DescrType").val() == "") {
                alert("Describe Required....!");
                return;
            }
        }
        var DTO = { Model: ModelData};
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == "Success")
                {

                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();

                } else if (data.Status == "Error") {
                    RefreshCharges();
                    alert(data.Message);
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                } else {
                    var result = confirm(data.Message);
                    if (result) {
                        GetOtherOptionTypeContract();
                    } else {
                        RefreshCharges();
                        $("#ErrorMessage").hide();
                        $('.spinner').hide();
                    }
                }


            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function GetOtherOptionTypeContract() {
        var url = '@Url.Action("OTherContract")';
        var ModelData = {};
        ModelData["Document"] = $("#Document").val();
        ModelData["BillParty"] = $("#BillParty").val();
        ModelData["BookDate"] = $("#BookDate").val();
        ModelData["Source"] = $("#Source").val();
        ModelData["Dest"] = $("#Dest").val();
        ModelData["ChgType"] = $("#ChgType").val();
        ModelData["ActWt"] = $("#ActWt").val();
        ModelData["ChgWt"] = $("#ChgWt").val();
        ModelData["TotQty"] = $("#TotQty").val();
        ModelData["DescrType"] = $("#DescrType").val();

        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    $('#ChgType').select2('data', { id: data.OthCode, text: data.OthName });
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val(data.RateChrgOn);
                    $("#hdnRate").val(data.MRate);
                    $("#Rate").val(data.MRate);
                    $("#hdnRateType").val(data.RateType);

                    $('#RateType').val(data.RateType);
                    $('#RateChrgOn').val(data.RateChrgOn);
                    Charges();
                } else if (data.Status == "Error") {
                    alert(data.Message);
                    RefreshCharges();
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function RefreshCharges() {
        var url = '@Url.Action("RefreshCharges")';
        var ModelData = {};
        var DTO = { Model: ModelData };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.spinner').show();
            },
            success: function (data) {
                if (data.Status == "Success") {
                    var LoadDownLoadFiles = $("#ChargeDiv");
                    $("#ErrorMessage").hide();
                    $('.spinner').hide();
                    LoadDownLoadFiles.html('');
                    LoadDownLoadFiles.html(data.Html);
                    $("#hdnRateChrgOn").val("");
                    $("#hdnRate").val("0");
                    $("#hdnRateType").val("");

                    $("#Rate").val("0");
                    Charges();
                }
            },
            error: function (error) {
                alert("errror");
            }
        });
    }
    function CalculateRateOnScript() {

        if ($("#hdnRateType").val() != "" && $("#hdnRateType").val() != null) {
            if ($("#hdnRateType").val() == "1")
            {
                if ($("#hdnRateChrgOn").val() == "C")
                {
                    var Rate = parseFloat($("#Rate").val());
                    var Weight = parseFloat($("#ChgWt").val());
                    var RateCalculate = Rate * Weight;
                    $("#txtf_F001").val(parseFloat(RateCalculate).toFixed(2));
                }
                else if ($("#hdnRateChrgOn").val() == "A")
                {
                    var Rate = parseFloat($("#Rate").val());
                    var Weight = parseFloat($("#ActWt").val());
                    var RateCalculate = Rate * Weight;
                    $("#txtf_F001").val(parseFloat(RateCalculate).toFixed(2));
                } else {
                    $("#txtf_F001").val(parseFloat("0").toFixed(2));
                }
            }
            else if ($("#hdnRateType").val() == "3")
            {
                var Rate = parseFloat($("#Rate").val());
                var Qty = parseFloat($("#TotQty").val());
                var RateCalculate = Rate * Qty;
                $("#txtf_F001").val(parseFloat(RateCalculate).toFixed(2));
            }
            else if ($("#hdnRateType").val() == "4")
            {
                var Rate = parseFloat($("#Rate").val());
                $("#txtf_F001").val(parseFloat(Rate).toFixed(2));
            }
        } else {
            $("#txtf_F001").val(parseFloat("0").toFixed(2));
        }
    }
    function loadTRNMode() {
        event.preventDefault();
        var url = '@Url.Action("GetTrasactMode")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: {  },
            success: function (result) {
                $("#TrnMode").empty();
                $.each(result, function (i, item) {
                    $("#TrnMode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#TrnMode').val('@Model.TrnMode').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
    function LoadUnit() {
        var url = '@Url.Action("GetUnit")'
        $('#UnitCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.UnitCode', text: '@Model.UnitCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadParticular() {
        var url = '@Url.Action("GetParticulars")'
        $('#DescrType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DescrType', text: '@Model.DescrType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadServiceType() {
        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadDelivery() {
        var url = '@Url.Action("LoadDeliveryAtSearch")'
        $('#DeliveryAt').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                        From: $('#Dest').val()
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DeliveryAt', text: '@Model.DeliveryAt_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadBillAt() {
        var url = '@Url.Action("BillatBranch")'
        $('#BillBran').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillBran', text: '@Model.BillBran_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadTo() {
        var url = '@Url.Action("To")'
        $('#Dest').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Dest', text: '@Model.Dest_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadConsigner() {
        var url = '@Url.Action("GetConsigner")'
        $('#RecCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.RecCode', text: '@Model.RecCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                LoadCustomerBasedConsignorOrConsignee();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadCustomerBasedConsignorOrConsignee() {
        var url = '@Url.Action("LoadCustomeThroughConsignorOrConsignee")';
        var DTO = { LRType: $("#LRtype").val(), Consignor:$("#RecCode").val(), Consignee:$("#SendCode").val() };
        $.ajax({
            type: "POST",
            dataType: "json",
            data: JSON.stringify(DTO),
            cache: false,
            url: url,
            contentType: "application/json; charset=utf-8",
            beforeSend: function ()
            {
                $('.spinner').show();
            },
            success: function (data)
            {
                if (data.Status == 'Success')
                {
                    $('.spinner').hide();
                    $('#BillParty').select2('data', { id: data.id, text: data.name });
                    $("#ErrorMessage").hide();
                } else {
                    $('.spinner').hide();
                }

            },
        });
    }
    function LoadBillingParty() {
        var url = '@Url.Action("GetBillingParty")'
        $('#BillParty').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillParty', text: '@Model.BillParty_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                GetOtherRequiredParameters();
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadConsignee() {
        var url = '@Url.Action("GetConsignee")'
        $('#SendCode').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.SendCode', text: '@Model.SendCode_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function GetOtherRequiredParameters() {
        C_POnumver = false, C_BEnumber = false, C_PartyChallan = false, C_PartyInvoice = false;
        var BillParty = $('#BillParty').val();
        var url = '@Url.Action("GetCustomerDetails")';

            $.ajax({
                type: "POST",
                traditional: true,
                //url: "/Base/CheckExist",
                url: url,
                data: {  BillingParty: BillParty},
                success: function (result) {
                    C_POnumver = result.POnumver;
                    C_BEnumber = result.BEnumber;
                    C_PartyChallan = result.PartyChallan;
                    C_PartyInvoice = result.PartyInvoice;
                    if ('@Model.Mode'=='Add') {
                    if (result.Coln == "G") {
                        $("#Direct").prop("checked", false)
                        $("#Godown1").prop("checked", true)
                        $("#Crossing").prop("checked", false)
                    } else if (result.Coln == "D") {
                        $("#Direct").prop("checked", true)
                        $("#Godown1").prop("checked", false)
                        $("#Crossing").prop("checked", false)
                    }
                    else {
                        $("#Direct").prop("checked", false)
                        $("#Godown1").prop("checked", false)
                        $("#Crossing").prop("checked", true)
                    }
                    if (result.Deli == "G") {
                        $("#Door").prop("checked", false)
                        $("#Godown").prop("checked", true)
                    } else {
                        $("#Door").prop("checked", true)
                        $("#Godown").prop("checked", false)
                        }
                    }

                    $("#HitContractType").val(result.HitContract);

                    $('#BillPartyAddNo').select2('data', { id: result.AddrSno, text: result.Addr });
                    GetBAddress();

                }
            });
    }
    function GetCAddress() {
        var Consigner = $('#RecCode').val();
        var addressno = $('#ConsignerAddNo').val();
        var url = '@Url.Action("GetConsignerAddress")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { Consigner: Consigner, addressno: addressno},
            success: function (result) {
                $("#ConsignorID").val(result.Message);
                $("#RecGST").val(result.RecGST);
            }
        });
    }
    function GetCeeAddress() {
        var Consigner = $('#SendCode').val();
        var addressno = $('#ConsigneeAddNo').val();
        var url = '@Url.Action("GetConsigneeAddress")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { Consigner: Consigner, addressno: addressno},
            success: function (result) {
                $("#ConsignoeeID").val(result.Message);
                $("#SendGST").val(result.RecGST);
            }
        });
    }
    function GetBAddress() {
        var Consigner = $('#BillParty').val();
        var addressno = $('#BillPartyAddNo').val();
        var url = '@Url.Action("GetBillPartyAddress")';
        $.ajax({
            type: "POST",
            traditional: true,
            url: url,
            data: { Consigner: Consigner, addressno: addressno},
            success: function (result) {
                $("#BillingID").val(result.Message);
                $("#BillGST").val(result.RecGST);
            }
        });
    }
    function ResetConsignerAdd() {
        $("#ConsignorID,#RecGST").val("");
        //$('#ConsignerAddNo').select2('data', { id: '', text: '' });
        $('#ConsignerAddNo').val(null).trigger('change');
    }
    function ResetConsigneeAdd() {
        $("#ConsignoeeID,#SendGST").val("");
        //$('#ConsigneeAddNo').select2('data', { id: '', text: '' });
        $('#ConsigneeAddNo').val(null).trigger('change');
    }
    function ResetVehicleNo() {
        $("#VehicleNo").val("");
        //$('#VehicleNo').select2('data', { id: '', text: '' });
        $('#VehicleNo').val(null).trigger('change');
    }
    function ResetBillAdd() {
        $("#BillingID,#BillGST").val("");
        //$('#BillPartyAddNo').select2('data', { id: '', text: '' });
        $('#BillPartyAddNo').val(null).trigger('change');
    }
    function ResetBillPartyAdd() {
        $("#BillParty").val("");
        //$('#BillParty').select2('data', { id: '', text: '' });
        $('#BillParty').val(null).trigger('change');
    }
</script>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">@Model.Header</b>
        <span class="tools pull-right" style="margin-top:5px;">
            @if (Model.LedgerThrough)
            {
                <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
            else
            {
                <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
            }
        </span>
        <span class="tools pull-right" style="margin-top:5px;">
            <b class="CodeSt">@Model.Mode Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="LRMaster" role="form" style="margin-top:3%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>

            <fieldset class=" col-sm-12" style="margin-top: 0px;">
                @if (Model.LRSetup.LRBoth)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;">
                }
                else if (Model.LRSetup.LRGenerate)
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="info" data-offstyle="danger" data-on="Manual" data-off="Auto" style="width: 73px !important;height: 34px;" disabled>
                }
                else
                {
                    <input type="checkbox" data-toggle="toggle" id="BothCHK" data-onstyle="danger" data-offstyle="info" data-on="Auto" data-off="Manual" style="width: 73px !important;height: 34px;" disabled>
                }
                <button class="btn btn-info legend2" id="DraftList" title="DraftList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="LorryDraft();"><i class="glyphicon glyphicon-folder-open" style="font-size: 2em;margin-top: 4px;"></i></button>
                <button class="btn btn-info legend2" id="btnRecentLR" title="Get Previous LR" style="font-size: 12px;padding:0px 20px 6px 20px;"><i class="glyphicon glyphicon-repeat" style="font-size: 2em;margin-top: 4px;"></i></button>
                <button class="btn btn-warning legend3" id="PickUpList" title="PickUpList" style="font-size: 12px;padding:0px 20px 6px 20px;" onclick="PickUpList();"><i class="glyphicon glyphicon-shopping-cart" style="font-size: 2em;margin-top: 4px;"></i></button>

                <div class="panel panel-default" style="height:420px;">
                    <div class="panel-body " style="padding-left: 20px;" id="PrintDiv">
                        <div class="form-group">
                            <div class="tab" style="margin-top: -15px;">
                                <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="LorryReceiptDesign">Basic Details</button>
                                <button class="tablinks" onclick="openCity(event, 'divLedgerTable1')" id="ExtraInfo">Extra Info</button>
                            </div>
                            <div id="divLedgerTable" style="height:400px;position:absolute;width:99%;overflow-x:hidden;overflow-y:auto;" class="tabcontent">
                                <div class="form-group">
                                    <div class="col-sm-9">
                                        <div class="form-group" id="BracodeDiv">
                                        </div>
                                        <div class="form-group" style="margin-top: 0px;">
                                            <label class=" bold   col-sm-1 control-label">LR No:</label>
                                            <div class="col-sm-1">

                                                @if (Model.LRSetup.LRGenerate == false && Model.LRSetup.LRBoth == false)
                                                {
                                                    @Html.TextBoxFor(x => x.LrNo, new { @class = "form-control", @Value = Model.LrNo })
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(x => x.LrNo, new { @class = "form-control", @Value = Model.LrNo, @disabled = "disabled" })
                                                }
                                            </div>
                                            <label class=" bold col-sm-1 control-label">LR Date :</label>
                                            <div class="col-sm-1" style="padding-left: 1px!important;">
                                                @Html.TextBoxFor(x => x.BookDate, new { @class = "form-control", @Value = Model.DocDate.ToString("dd/MM/yyyy") })
                                                @*@Html.TextBoxFor(x => x.BookDate, new { @type = "text", @class = "form-control DocuDate", @id = "DocuDate", @Name = "DocuDate", @style = "width:100%;text-align:center;height:28px;font:size:14pt;font-weight:bolder;", @Value = Model.DocDate.ToString("dd-MM-yyyy") })*@

                                            </div>
                                            <label class=" bold  col-sm-1 control-label">LR Time :</label>
                                            <div class=" col-sm-2">
                                                @Html.TextBoxFor(x => x.Time, new { @class = "form-control", @type = "time", @style = "", @Value = Model.Time })
                                            </div>
                                            <label class=" bold col-sm-offset-1 col-sm-1 control-label">LR Type :</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.LRtype, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.LRtype })
                                            </div>

                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">
                                                Consigner:
                                                @if (Model.ConsignorRestrict)
                                                {
                                                    <button class="btn btn-danger" style="padding:0px 10px;" id="AddNewConsignerInLR" data-toggle="tooltip" data-placement="top" title="Add New Consignor."><i class="glyphicon glyphicon-plus"></i></button>
                                                }
                                            </label>
                                            <div class="col-sm-3 ">
                                                @Html.TextBoxFor(x => x.RecCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.RecCode })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">
                                                Consignee:
                                                @if (Model.ConsignorRestrict)
                                                {
                                                    <button class="btn btn-danger" style="padding:0px 10px;" id="AddNewConsigneeInLR" data-toggle="tooltip" data-placement="top" title="Add New Consignee."><i class="glyphicon glyphicon-plus"></i></button>
                                                }
                                            </label>
                                            <div class="col-sm-3 ">
                                                @Html.TextBoxFor(x => x.SendCode, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.SendCode })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Bill Party:</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <div class="col-sm-11" style="padding: 0px;">
                                                    @Html.TextBoxFor(x => x.BillParty, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.BillParty })
                                                </div>
                                                <div class="col-sm-1" style="padding-left: 3px;">
                                                    <button class="btn btn-danger" onclick="ResetBillPartyAdd();" style="padding: 4px 5px;"><i class="glyphicon glyphicon-remove"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">Address :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <div class="col-sm-11" style="padding: 0px;">
                                                    @Html.TextBoxFor(x => x.ConsignerAddNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.ConsignerAddNo })
                                                </div>
                                                <div class="col-sm-1" style="padding-left: 3px;">
                                                    <button class="btn btn-danger" onclick="ResetConsignerAdd();" style="padding: 4px 5px;"><i class="glyphicon glyphicon-remove"></i></button>
                                                </div>
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Address :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <div class="col-sm-11" style="padding: 0px;">
                                                    @Html.TextBoxFor(x => x.ConsigneeAddNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.ConsigneeAddNo })
                                                </div>
                                                <div class="col-sm-1" style="padding-left: 3px;">
                                                    <button class="btn btn-danger" onclick="ResetConsigneeAdd();" style="padding: 4px 5px;"><i class="glyphicon glyphicon-remove"></i></button>
                                                </div>
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Address :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <div class="col-sm-11" style="padding: 0px;">
                                                    @Html.TextBoxFor(x => x.BillPartyAddNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.BillPartyAddNo })
                                                </div>
                                                <div class="col-sm-1" style="padding-left: 3px;">
                                                    <button class="btn btn-danger" onclick="ResetBillAdd();" style="padding: 4px 5px;"><i class="glyphicon glyphicon-remove"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.ConsignerEXTRAInfo, new { @class = "form-control", @id = "ConsignorID", @style = "", @maxlength = "100", @rows = "5", @disabled = "disabled", @Value = Model.ConsignerEXTRAInfo })
                                            </div>
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.ConsigneeEXTRAInfo, new { @class = "form-control", @style = "", @id = "ConsignoeeID", @maxlength = "100", @rows = "5", @disabled = "disabled", @Value = Model.ConsigneeEXTRAInfo })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextAreaFor(x => x.BillingPartyEXTRAInfo, new { @class = "form-control", @style = "", @id = "BillingID", @maxlength = "100", @rows = "5", @disabled = "disabled", @Value = Model.BillingPartyEXTRAInfo })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ConsignerEXTRAInfo, new { @class = "form-control", @maxlength = "100", @Value = Model.ConsignerEXTRAInfo, @placeholder = "Consigner Extra Info" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ConsigneeEXTRAInfo, new { @class = "form-control", @maxlength = "100", @Value = Model.ConsigneeEXTRAInfo, @placeholder = "Consignee Extra Info" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.BillingPartyEXTRAInfo, new { @class = "form-control", @maxlength = "100", @Value = Model.BillingPartyEXTRAInfo, @placeholder = "BillParty Extra Info" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.RecGST, new { @class = "form-control", @id = "RecGST", @style = "", @maxlength = "15", @Value = Model.RecGST, @placeholder = "Consignor GST" })
                                            </div>
                                            <div class="col-sm-1">
                                                <button class="btn btn-warning" style="padding:3px 10px;border-radius:50%;" data-toggle="tooltip" data-placement="top" title="Check Consignor Info"><i class="glyphicon glyphicon-question-sign"></i></button>
                                            </div>
                                            <div class="col-sm-1">
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.SendGST, new { @class = "form-control", @id = "SendGST", @style = "", @maxlength = "15", @Value = Model.SendGST, @placeholder = "Consignee GST" })
                                            </div>
                                            <div class="col-sm-1">
                                                <button class="btn btn-warning" style="padding:3px 10px;border-radius:50%;" data-toggle="tooltip" data-placement="top" title="Check Consignee Info"><i class="glyphicon glyphicon-question-sign"></i></button>
                                            </div>
                                            <label class=" bold   col-sm-1 control-label"></label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.BillGST, new { @class = "form-control", @id = "BillGST", @style = "", @maxlength = "15", @Value = Model.BillGST, @placeholder = "BillParty GST" })
                                            </div>
                                            <div class="col-sm-1">
                                                <button class="btn btn-warning" style="padding:3px 10px;border-radius:50%;" data-toggle="tooltip" data-placement="top" title="Check Bill Info"><i class="glyphicon glyphicon-question-sign"></i></button>
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">From:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.Source, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Source })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">To:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.Dest, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Dest })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label" style="">Bill Branch:</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.BillBran, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.BillBran })
                                            </div>
                                        </div>
                                        <div class="form-group " style="">
                                            <label class=" bold   col-sm-1 control-label">Collection :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="Collection" id="Direct" value="Direct" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Direct</label>
                                                <input type="radio" class="form-control" name="Collection" id="Godown1" value="Godown1" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                                <input type="checkbox" class="form-control" id="Crossing" value="Crossing" style="height:20px;width:35px;" /><label class=" bold control-label"> Crossing</label>

                                            </div>

                                            <label class=" bold   col-sm-1 control-label">Vehicle No: <button class="btn btn-danger" style="padding:0px 10px;" id="AddNewHireVehicleInLR" data-toggle="tooltip" data-placement="top" title="Add New Hire Vehicle."><i class="glyphicon glyphicon-plus"></i></button></label>
                                            <div class="col-sm-3" style="display:flex;">
                                                <div class="col-sm-11" style="padding: 0px;">
                                                    @Html.TextBoxFor(x => x.VehicleNo, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.VehicleNo })
                                                </div>
                                                <div class="col-sm-1" style="padding-left: 3px;">
                                                    <button class="btn btn-danger" onclick="ResetVehicleNo();" style="padding: 4px 5px;"><i class="glyphicon glyphicon-remove"></i></button>
                                                </div>
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">Service Type :</label>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.ServiceType })
                                            </div>
                                        </div>
                                        <div class="form-group " style="">
                                            <label class=" bold   col-sm-1 control-label">Delivery :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="Delivery" id="Door" value="Yes" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Door</label>
                                                <input type="radio" class="form-control" name="Delivery" id="Godown" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Stock In :</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="StockAt" id="SGodown" value="Godown" style="height:20px;width:35px;" checked /><label class=" bold control-label"> Godown</label>
                                                <input type="radio" class="form-control" name="StockAt" id="STransit" value="Transit" style="height:20px;width:35px;" /><label class=" bold control-label"> Transit</label>
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Lr-Mode:</label>
                                            <div class="col-sm-3" style="display: flex;">
                                                <input type="radio" class="form-control" name="LRMode" id="Red" value="Express" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:red;"> Express</label>
                                                <input type="radio" class="form-control" name="LRMode" id="Green" value="Regular" style="height:20px;width:35px;" /><label class=" bold control-label" style="color:green;"> Regular</label>
                                                <input type="radio" class="form-control" name="LRMode" id="White" value="Normal" style="height:20px;width:35px;" /><label class=" bold control-label"> Normal</label>
                                            </div>

                                        </div>

                                        <hr />
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">Package :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.TotQty, new { @class = "form-control", @Value = Model.TotQty })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Unit :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.UnitCode, new { @class = "input-large-query", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">Actual Wt :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.ActWt, new { @class = "form-control", @Value = Model.ActWt })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label" style="">Charge Wt:</label>
                                            <div class="col-sm-2" style="">
                                                @Html.TextBoxFor(x => x.ChgWt, new { @class = "form-control", @Value = Model.ChgWt })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">ChargeType:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.ChgType, new { @class = "input-large-query", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label">
                                                Describe:
                                                @if (Model.DescriptionRestrict == true && Model.Mode == "Add")
                                                {
                                                    <a href="~/Logistics/DescriptionMaster/Index?TableName=DescriptionMaster&ShortCutKey=true&MainType=&Mode=Add&Header=Description%20Master&ViewDataId=DescriptionMaster&Controller2=DescriptionMaster&Module=Master&optiontype=M&optioncode=DescriptionMaster" target="_blank" class="btn btn-danger" style="padding:0px 25px;" id="AddHireVehicle" data-toggle="tooltip" data-placement="top" title="Add New Description Here."><i class="glyphicon glyphicon-plus"></i></a>
                                                }
                                            </label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.DescrType, new { @class = "input-large-query ", @style = "width:100%;" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Party Challan :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PartyRef, new { @class = "form-control", @Value = Model.PartyRef, @maxlength = "50" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">Party Invoice :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PartyInvoice, new { @class = "form-control", @Value = Model.PartyInvoice, @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label" style="">Declared Value:</label>
                                            <div class="col-sm-2" style="">
                                                @Html.TextBoxFor(x => x.DecVal, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.DecVal) })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label" style="width:auto;">Trn Mode :</label>
                                            <div class="col-sm-2">
                                                @Html.DropDownListFor(m => m.TrnMode, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "TrnMode", @Id = "TrnMode" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">PONumber:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.PONumber, new { @class = "form-control", @Value = Model.PONumber, @maxlength = "50" })
                                            </div>
                                            <label class=" bold   col-sm-1 control-label">BENumber:</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.BENumber, new { @class = "form-control", @Value = Model.BENumber, @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold  col-sm-1 control-label">Remark :</label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(x => x.Narr, new { @class = "form-control", @Value = Model.Narr, @rows = "1", @maxlength = 100 })
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <label class=" bold   col-sm-1 control-label">EwayBill No :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.EwayBill, new { @class = "form-control", @Value = Model.EwayBill, @maxlength = "50" })
                                            </div>
                                            <label class=" bold  col-sm-1 control-label" style="width:auto;">HSN Code :</label>
                                            <div class="col-sm-2">
                                                @Html.TextBoxFor(x => x.HSNCODE, new { @class = "form-control", @style = "width:100%;", @Value = Model.HSNCODE })
                                            </div>
                                            @*@if (Model.Mode == "Add")
                                                {
                                                    <label class=" bold   col-sm-1 control-label">EwayBill Valid :</label>
                                                    <div class="col-sm-2">
                                                        @Html.TextBoxFor(x => x.EwayBillValid, new { @class = "form-control", @Value = Model.EwayBillValid })
                                                    </div>
                                                }*@

                                        </div>

                                    </div>
                                    <div class="col-sm-3" style="padding-left:7px!important;">
                                        <div class="col-sm-12" style="border: 3px solid #dec0c0;padding-left:1px!important;">
                                            <label class=" bold col-sm-12 control-label" style="text-align:center;font-size:14px;width:auto;">Charges</label>
                                            <div class="col-sm-2" style="width:auto;">
                                                @if (Model.LRSetup.FetchContractbtn)
                                                {
                                                    <button class="btn btn-warning" id="btnContrct" style="padding:4px 8px;" onclick="ConfirmScriptFunction()">Contract Rate</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-warning" id="btnContrct" style="padding:4px 8px;" onclick="ConfirmScriptFunction()" disabled>Contract Rate</button>
                                                }
                                            </div>
                                            <div class="col-sm-2">
                                                @if (Model.LRSetup.FetchGeneralContrct)
                                                {
                                                    <button class="btn btn-warning" id="btnGenaralContrct" style="padding:4px 8px;" onclick="ConfirmGeneralMethods()">General Rate</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-warning" id="btnGenaralContrct" style="padding:4px 8px;" onclick="ConfirmGeneralMethods()" disabled>General Rate</button>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-sm-12" style="border: 3px solid #dec0c0;padding-left:1px!important; overflow-y:auto;overflow-x:hidden; height:362px;">
                                            <div class="form-group">
                                                <label class=" bold col-sm-6 control-label" style="margin-top:0px;color:brown;padding-left:30px!important;">Charge :</label>
                                                <div class=" col-sm-5" style="margin-top:5px;margin-left:6px;padding:0px;">
                                                    @Html.DropDownListFor(m => m.RateType, Model.ChargeTypeList, "-- Select --", new { @class = "form-control", @Name = "RateType", @Id = "RateType", @style = "text-align: center;width: 100%;" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold col-sm-6 control-label" style="margin-top:0px;color:brown;padding-left:30px!important;">Charge ON :</label>
                                                <div class=" col-sm-5" style="margin-top:5px;margin-left:6px;padding:0px;">
                                                    @Html.DropDownListFor(m => m.RateChrgOn, Model.ChargeOnWeightList, "-- Select --", new { @class = "form-control", @Name = "RateChrgOn", @Id = "RateChrgOn", @style = "text-align: center;width: 100%;" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold col-sm-6 control-label" style="margin-top:0px;color:brown;padding-left:30px!important;">Current Rate :</label>
                                                <div class=" col-sm-5" style="margin-top:5px;margin-left:6px;padding:0px;">
                                                    @Html.TextBoxFor(x => x.Rate, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.Rate), @style = "text-align: right;width: 100%;" })
                                                </div>
                                            </div>
                                            <div id="ChargeDiv">
                                                @Html.Partial("_Charges", Model)
                                            </div>
                                        </div>
                                        <div class="col-sm-12" style="border: 3px solid #dec0c0;">
                                            <label class=" bold col-sm-6 control-label" style="margin-top:5px;">Total Amout :</label>
                                            <div class=" col-sm-4" style="margin-top:5px;">
                                                @Html.TextBoxFor(x => x.Amt, new { @class = "form-control", @Value = String.Format("{0:0.00}", Model.Amt), @style = "text-align: right;height: 40px;width: 100%;" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="divLedgerTable1" style="height:400px;position:absolute;width:99%;overflow-x:hidden;overflow-y:auto;" class="tabcontent">
                                <div class="panel-group">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" style="background-color: #346983;border-color: #DDDDDD;color: aqua;padding: 5px;">Order Information</div>
                                        <div class="panel-body" style="padding: 5px 10px 1px 10px;">
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Order Received Date:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.OrderReceivedDate, new { @class = "form-control", @Value = Model.OrderReceivedDate })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Date Of Order:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.DateOfOrder, new { @class = "form-control", @Value = Model.DateOfOrder })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Contact Person Name:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.LrContactPerson, new { @class = "form-control", @Value = Model.LrContactPerson, @maxlenght = "150" })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Contact Person No:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.LrContactPersonNo, new { @class = "form-control", @Value = Model.LrContactPersonNo, @maxlenght = "10" })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Contact Person Email-Id:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.LrContactPersonEmailId, new { @class = "form-control", @Value = Model.LrContactPersonEmailId, @maxlenght = "250" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel panel-default">
                                        <div class="panel-heading" style="background-color: #346983;border-color: #DDDDDD;color: aqua;padding: 5px;">Schedule Of Delivery</div>
                                        <div class="panel-body" style="padding: 5px 10px 1px 10px;">
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Schedule Delivery Date:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.ScheduleDate, new { @class = "form-control", @Value = Model.ScheduleDate })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel panel-default">
                                        <div class="panel-heading" style="background-color: #346983;border-color: #DDDDDD;color: aqua;padding: 5px;">Expenses</div>
                                        <div class="panel-body" style="padding: 5px 10px 1px 10px;">
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">App. Diesel (In Liter):</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.DieselLtr, new { @class = "form-control", @Value = Model.DieselLtr, @maxlenght = "10" })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Used Diesel (In Liter):</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.ApprovedDiesel, new { @class = "form-control", @Value = Model.ApprovedDiesel, @maxlenght = "10" })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Advance Diesel (In Liter):</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.AdvanceDiesel, new { @class = "form-control", @Value = Model.AdvanceDiesel, @maxlenght = "10" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Pending Diesel(In Liter):</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.PendingDiesel, new { @class = "form-control", @Value = Model.PendingDiesel, @maxlenght = "10" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Diesel Amount:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.DieselAmt, new { @class = "form-control", @Value = Model.DieselAmt, @maxlenght = "10" })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Driver:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.Driver, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Driver })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">App. Trip Exp:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.DriverTripExp, new { @class = "form-control", @Value = Model.DriverTripExp, @maxlenght = "10" })
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label">Online Toll(Exp):</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.ActualExp, new { @class = "form-control", @Value = Model.ActualExp, @maxlenght = "10" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class=" bold   col-sm-2 control-label" title="Only For Your Record Not Any Document Relation.">Trip Exp. No:</label>
                                                <div class="col-sm-2">
                                                    @Html.TextBoxFor(x => x.TripNo, new { @class = "form-control", @Value = Model.TripNo, @maxlenght = "15", @title = "Only For Your Record Not Any Document Relation." })
                                                </div>
                                                <label class=" bold   col-sm-2 control-label">Trip Exp. Narr:</label>
                                                <div class="col-sm-6">
                                                    @Html.TextAreaFor(x => x.TripNarr, new { @class = "form-control", @Value = Model.TripNarr, @rows = "1", @maxlength = 150 })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div id="LRDetailsDialog" style="min-height: 267px;max-height: 267px;overflow: auto;">
                                                    @Html.Partial("ConsignmentExpGridList")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>





                            </div>
                            <script>
                                function openCity(evt, cityName) {
                                    $("#ErrorMessage1").hide();
                                    var i, tabcontent, tablinks;
                                    tabcontent = document.getElementsByClassName("tabcontent");
                                    for (i = 0; i < tabcontent.length; i++) {

                                        tabcontent[i].style.display = "none";
                                    }
                                    tablinks = document.getElementsByClassName("tablinks");
                                    for (i = 0; i < tablinks.length; i++) {

                                        tablinks[i].className = tablinks[i].className.replace(" active", "");
                                    }
                                    document.getElementById(cityName).style.display = "block";
                                    evt.currentTarget.className += " active";
                                }
                                document.getElementById("LorryReceiptDesign").click();
                            </script>

                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>

</section>

<footer class="footer-section" style="position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-4">
            @*<button class="btn btn-info" id="btnAddNote" style="background-color: #b6dd1a;color: #0044cc;border-color: #b6dd1a;font-size: 13px;padding:3px 12px;" name="Command">Add Note</button>*@
            <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnAddDoc" title="Attachment">Attachment</button>
        </div>
        <div class="col-sm-4" style="margin-top:0px;">
            <div class="col-sm-12" id="" style="overflow: hidden;padding-left: 0px!important;">
                <label class="col-sm-offset-4 col-sm-8 control-label" style="margin-top:5px;">ALT AIR-3.0, Shruham Software</label>
            </div>
        </div>
        <div class="col-sm-4" style="padding-right:20px;">
            <div class="pull-right">
                @if (Model.Mode != "Add")
                {
                    <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnPrintOnly" data-toggle="tooltip" data-placement="top" title="Print Only">Print Only</button>
                }
                @if (Model.Mode == "Edit" || Model.Mode == "Add")
                {
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Save</button>
                    @*<div class="btn-group dropup">
                            <button type="button" style="font-size: 13px;padding:3px 12px;" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">SMS Print Email<span class="caret"></span></button>
                            <ul role="menu" class="dropdown-menu" style="border: 1px thin;box-shadow:3px 3px 15px 1px rgba(0,0,0,0.2) !important; background-color: whitesmoke; height: 120px; font-family: Tahoma; font-weight: bolder; color: darkgray; padding-left: 10px; padding-right: 10px; left:0px;">
                                <li><a id="btnPrint">Save &amp; Print</a></li>
                            </ul>
                        </div>*@
                    <button class="btn btn-info" style="font-size: 13px;padding:3px 12px;" id="btnPrint">Save &amp; Print</button>
                }
                @if (Model.Mode == "Delete")
                {
                    <button class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Submit" data-toggle="tooltip" data-placement="top" title="Save">Delete</button>
                }
                @if (Model.LedgerThrough)
                {
                    <a href="" onclick="window.top.close();" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
                else
                {
                    <a href="~/Logistics/MasterGridd/Index?ViewDataId=@Model.ViewDataId&Module=@Model.Module&TableName=@Model.TableName&OptionType=@Model.OptionType&OptionCode=@Model.OptionCode&Header=@Model.Header&Controller2=@Model.Controller2&MainType=@Model.MainType" class="btn btn-danger" style="color:black;margin-right:10px;font-size:13px;padding:3px 12px;" id="Cancel">Cancel</a>
                }
            </div>
        </div>
    </div>
</footer>

@*Suchan Attachment*@
<div class="example-modal">
    @*<div id="attachdoc" class="modal modal-primary" style="z-index:2500;">*@
    <div id="attachdoc" class="modal modal-primary" style="margin-top:3%;width: 100%;display: block;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="false">
        <div class="modal-dialog" style="width:100%;">
            <div id="AttachDoc">
            </div>
        </div>
    </div>
</div>
<!--LorryDraft Modal -->
<div class="example-modal">
    <div id="LorryDraftmodal" class="modal modal-default">
        <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 4%;">
            <div id="LorryDraftmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Lorry Draft</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="margin:-1% 0% 0% -1%;max-height:450px;min-height:450px; width:100%;">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group col-sm-12" id="LorryDraft">
                                        <hr />
                                        @*@Html.Partial("LorryDraftView")*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            @*<button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnAttachSubmit" data-dismiss="modal">Save</button>*@
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Pick Up Modal -->
<div class="example-modal">
    <div id="PICKUPmodal" class="modal modal-default">
        <div class="modal-dialog modal-lg modal-sm modal-xl" style="width: auto;margin: auto;margin-top: 4%;">
            <div id="PICKUPmodalDiv">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Pick Up List</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="grid" id="FormatTable" style="margin:-1% 0% 0% -1%;max-height:450px;min-height:450px; width:100%; ">
                                <div id="" class="" style="width:100%;">
                                    <div class="form-group col-sm-12" id="LRPickUpList">
                                        <hr />
                                        @*@Html.Partial("LorryDraftView")*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            @*<button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnAttachSubmit" data-dismiss="modal">Save</button>*@
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Save Draft Name Modal -->
<div class="example-modal">
    <div id="SaveNamePopUp" class="modal modal-default">
        <div class="modal-dialog modal-md" @*style="width:1080px;"*@>
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Draft Name</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(x => x.Draft_Name, new { @class = "form-control", @maxlength = 30, @Value = Model.Draft_Name })
                                </div>
                                <div class="col-sm-offset-4 col-sm-8">

                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                            <button class="btn btn-info" id="SaveDraftName">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Tickler Information Modal -->
<div class="example-modal">
    <div id="TSaveNamePopUp" class="modal modal-default" style="margin-top: 1%;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Tickler Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                @Html.TextAreaFor(x => x.GST_Tickler_DecalreValue, new { @class = "form-control", @style = "", @id = "GST_Tickler_DecalreValue", @maxlength = "250", @rows = "5", @disabled = "disabled", @Value = Model.GST_Tickler_DecalreValue })
                            </div>
                            <div class="form-group ">
                                @Html.TextAreaFor(x => x.EWB_Tickler_DecalreValue, new { @class = "form-control", @style = "", @id = "EWB_Tickler_DecalreValue", @maxlength = "250", @rows = "5", @disabled = "disabled", @Value = Model.EWB_Tickler_DecalreValue })
                            </div>

                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Narration Information Modal -->
<div class="example-modal">
    <div id="addnotemodel" class="modal modal-primary" style="z-index:2500;">
        <div class="modal-dialog" style="width:100%;">
            <div class="modal-body">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><b>Alert Note System</b></h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group" id="AlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                        <div class="form-group hidden" id="AddAlertNoteDiv" style="min-height:430px;max-height:430px;overflow:auto;">

                        </div>
                    </div>
                    <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                        <button class="btn btn-success" type="button" id="btnAddNarr">Add Narration</button>
                        <button class="btn btn-info hidden" type="button" id="btnNarrList">Show List</button>
                        <button class="btn btn-success hidden" type="button" id="btnNarrSave">Save</button>
                        <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="AutoLRNo" />
<input type="hidden" id="hdnAreaID" />
@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.DocNo)
@Html.HiddenFor(x => x.PickOrderBalQty)
@Html.HiddenFor(x => x.HitContractType)
@Html.HiddenFor(x => x.RateChrgOn, new { @ID = "hdnRateChrgOn" })
@Html.HiddenFor(x => x.Rate, new { @ID = "hdnRate" })
@Html.HiddenFor(x => x.RateType, new { @ID = "hdnRateType" })
@Html.HiddenFor(x => x.Branch, new { @ID = "hdnBranch" })
@Html.HiddenFor(x => x.Mode, new { @ID = "hdnMode" })
@Html.HiddenFor(x => x.StartDate, new { @id = "hdnStartDate" })
@Html.HiddenFor(x => x.EndDate, new { @id = "hdnEndDate" })
@Html.HiddenFor(x => x.AllowMultiVehicle, new { @id = "hdnAllowMultiVehicle" })

<input type="hidden" id="hdnBlackListConsigner" />
<input type="hidden" id="hdnBlackListConsignee" />
<input type="hidden" id="hdnBlackListDriver" />

@*Print Option*@
<div class="example-modal">
    <div id="printpostmodel" class="modal modal-primary" style="margin-top:1%;">
        <div class="modal-dialog" style="width:700px;">
            <div id="Printmodel">
                @Html.Partial("ReportPrintOptions")
            </div>
        </div>
    </div>
</div>

<!--Consignor/Consignee Tickler Modal -->
<div class="example-modal">
    <div id="TicklerModal" class="modal modal-default" style="margin-top: 1%;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Tickler Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group " id="SpclRemarkDiv">
                                <label style="font-weight:bold;color:black;">Remark :-&nbsp;&nbsp;</label><label id="SpclRMK" style="font-weight:bold;color:black;"></label>
                            </div>
                            <div class="form-group " id="BlackListRemarkDiv">
                                <label style="font-weight:bold;color:black;">Hold Remark :-&nbsp;&nbsp;</label><label id="BlackLStRMK" style="font-weight:bold;color:red;"></label>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Driver Tickler Modal -->
<div class="example-modal">
    <div id="DriverTicklerModal" class="modal modal-default" style="margin-top: 1%;">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Tickler Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group " id="DriverSpclRemarkDiv">
                                <label style="font-weight:bold;color:black;">Remark :-&nbsp;&nbsp;</label><label id="DriverSpclRMK" style="font-weight:bold;color:black;"></label>
                            </div>
                            <div class="form-group " id="DriverBlackListRemarkDiv">
                                <label style="font-weight:bold;color:black;">Hold Remark :-&nbsp;&nbsp;</label><label id="DriverBlackLStRMK" style="font-weight:bold;color:red;"></label>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="example-modal">
    <div id="InfoModal" class="modal modal-default">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Contact Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>

                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model != null)
                                            {
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person Name: </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPerson, new { @class = "form-control", @Value = Model.LrContactPerson, @maxlenght = "150" })
                                                    </td>
                                                </tr>
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person No:</td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPersonNo, new { @class = "form-control", @Value = Model.LrContactPersonNo, @maxlenght = "10" })
                                                    </td>
                                                </tr>
                                                <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                                    <td>Contact Person Email-Id:</td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.LrContactPersonEmailId, new { @class = "form-control", @Value = Model.LrContactPersonEmailId, @maxlenght = "250" })
                                                    </td>
                                                </tr>

                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="example-modal">
    <div id="AddonModal" class="modal modal-default">
        <div class="modal-dialog modal-lg">
            <div id="">
                <div class="modal-body">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#cccccc;padding-top:5px;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title"><b>Information</b></h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group ">
                                <table id="" class="zui-table editableTable" style="width:100%;">
                                    <thead>

                                    </thead>
                                    <tbody>
                                        <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                            <td>Diesel (In Liter): </td>
                                            <td>
                                                @Html.TextBoxFor(x => x.DieselLtr, new { @class = "form-control", @Value = Model.DieselLtr, @maxlenght = "10" })
                                            </td>
                                        </tr>
                                        <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                            <td>Diesel Amount:</td>
                                            <td>
                                                @Html.TextBoxFor(x => x.DieselAmt, new { @class = "form-control", @Value = Model.DieselAmt, @maxlenght = "10" })
                                            </td>
                                        </tr>
                                        <tr style="font-family:Tahoma;font-size:9pt;border: solid 1px lightgray;">
                                            <td>Driver:</td>
                                            <td>
                                                @Html.TextBoxFor(x => x.Driver, new { @class = "input-large-query", @style = "width:100%;", @Value = Model.Driver })
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer" style="background-color:#cccccc;height:42px;padding-bottom:5px;padding-top:5px;border-radius: 0px 0px 5px 5px;">
                            <button data-dismiss="modal" class="btn btn-danger" type="button">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



