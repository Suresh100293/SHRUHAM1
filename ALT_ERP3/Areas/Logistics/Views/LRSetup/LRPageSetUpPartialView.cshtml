@model ALT_ERP3.Areas.Logistics.Models.LRSetupVM
@using Common;
@{
                /**/

                ViewBag.Title = "LRSetupVM";
                Layout = null;
}
<script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/js/jquery.constrain.js")" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<script src="~/Content/bootstrap-multiselect.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        GetMyFavorites('@Model.ViewDataId');
        LoadChargeType();
        LoadUnit();
        LoadBillAt();
        LoadLRType();
        LoadServiceType();
        LoadToPay();
        LoadPaid();
        loadTRNMode();

        $('#PrintFormat').val('');
        var CommonValue = "";
        if ('@Model.PrintFormat' != "") {
            $.each('@Model.PrintFormat'.split(','), function (idx, val) {
                $(".PrintFormatL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#PrintFormat').val(CommonValue);
        }

        $('#User').val('');
        var CommonValue = "";
        if ('@Model.User' != "") {
            $.each('@Model.User'.split(','), function (idx, val) {
                $(".UserL option[value='" + val + "']").attr("selected", true);
                CommonValue += "" + val + ",";
            });
            CommonValue = CommonValue.toString().substring(0, CommonValue.length - 1);
            $('#User').val(CommonValue);
        }


        $("#EditHours,#Class_Srl,#Declare_Value,#DeleteHours,#Class_BackDaysUpto,#Class_ForwardDaysUpto").constrain({ allow: { regex: "[0-9]" } });

        if ('@Model.FillFromCurr' != 'True') {
            $("#FillFromAll").prop("checked", true);
        } else {
            $("#FillFromCurr").prop("checked", true);
        }

        if ('@Model.EditReq'=='True') {
            $("#EditHours").prop('disabled', false);
        } else {
            $("#EditHours").prop('disabled', true);
        }
        if ('@Model.DeleteReq'=='True') {
            $("#DeleteHours").prop('disabled', false);
        } else {
            $("#DeleteHours").prop('disabled', true);
        }
        $("#EditReq").change(function () {
            debugger;
            if (this.checked) {

                $("#EditHours").prop('disabled', false);
            } else {
                $("#EditHours").val('0');
                $("#EditHours").prop('disabled', true);
            }
        });
        $("#DeleteReq").change(function () {
            debugger;
            if (this.checked) {

                $("#DeleteHours").prop('disabled', false);
            } else {
                $("#DeleteHours").val('0');
                $("#DeleteHours").prop('disabled', true);
            }
        });


        if ('@Model.CurrentBranch'=='True') {
            $("#CurrentBranch").prop("checked", true);
        } else {
            $("#AllBranch").prop("checked", true);
        }

        if ('@Model.Colln'=="G" ) {
            $("#Godown1").prop("checked", true);
        }
        else if ('@Model.Colln'=="D") {
            $("#Direct").prop("checked", true);
        }
        else {
            $("#Crossing").prop("checked", true);
        }

        if ('@Model.Del'=="D") {
            $("#Door").prop("checked", true);
        } else {
            $("#Godown").prop("checked", true);
        }
        // End Edit/View/Delete Mode Code


        //All Time USe Below Code

        $('#LrAutomatic').change(function () {
            if (this.checked) {
                $("#LrManual").prop('checked', false)
                $("#Both").prop('checked', false)
                $("#CheckManualLR").prop('checked', false)
                $("#CheckManualLR").prop('disabled', true)
            }
        });
        $('#LrManual').change(function () {
            if (this.checked) {
                $("#LrAutomatic").prop('checked', false)
                $("#Both").prop('checked', false)
                $("#CheckManualLR").prop('disabled', false)
            }
        });
        $('#Both').change(function () {
            if (this.checked) {
                $("#LrAutomatic").prop('checked', false)
                $("#LrManual").prop('checked', false)
                $("#CheckManualLR").prop('disabled', false)
            }
        });

        $('#Class_BranchwiseSrlReq').change(function () {
            if (this.checked) {
                $("#Class_YearwiseSrlReq").prop('checked', false)
                $("#Class_CetralisedSrlReq").prop('checked', false)
            }
        });
        $('#Class_YearwiseSrlReq').change(function () {
            if (this.checked) {
                $("#Class_BranchwiseSrlReq").prop('checked', false)
                $("#Class_CetralisedSrlReq").prop('checked', false)
            }
        });
        $('#Class_CetralisedSrlReq').change(function () {
            if (this.checked) {
                $("#Class_BranchwiseSrlReq").prop('checked', false)
                $("#Class_YearwiseSrlReq").prop('checked', false)
            }
        });
        $('#YearwiseManualSrlReq').change(function () {
            if (this.checked) {
                $("#CetralisedManualSrlReq").prop('checked', false)
            }
        });
        $('#CetralisedManualSrlReq').change(function () {
            if (this.checked) {
                $("#YearwiseManualSrlReq").prop('checked', false)
            }
        });

        $("input[name='TOPAY'").change(function () {
            if (this.value == "No") {
                $("#TopayCustomer").attr("disabled", "disabled");
                $("#DefaultToPay").attr("disabled", "disabled");
                $("#chkDefaultTopay").attr("disabled", "disabled");
            } else {
                $("#TopayCustomer").removeAttr("disabled");
                $("#DefaultToPay").removeAttr("disabled");
                $("#chkDefaultTopay").removeAttr("disabled");
            }
        });
        $("#chkDefaultTopay").change(function () {
            if (this.checked) {
                $("#DefaultToPay").attr("disabled", "disabled");

            } else {
                $("#DefaultToPay").removeAttr("disabled");
            }
        });

        if ('@Model.Topay'=='False') {
            $("#ToPayNO").prop('checked', true);
            $("#TopayCustomer").attr("disabled", "disabled");
            $("#DefaultToPay").attr("disabled", "disabled");
            $("#chkDefaultTopay").attr("disabled", "disabled");
        } else {
            $("#ToPayYes").prop('checked', true);
            if ($("#DefaultToPay").val()=="") {
                $("#chkDefaultTopay").prop('checked', true);
                $("#DefaultToPay").attr("disabled", "disabled");
            }
        }
        if ('@Model.Paid'=='False') {
            $("#PaidNO").prop('checked', true);
            $("#PaidCustomer").attr("disabled", "disabled");
            $("#DefaultPaid").attr("disabled", "disabled");
            $("#chkDefaultPaid").attr("disabled", "disabled");
        } else {
            $("#PaidYes").prop('checked', true);
            if ($("#DefaultPaid").val() == "") {
                $("#chkDefaultPaid").prop('checked', true);
                $("#DefaultPaid").attr("disabled", "disabled");
            }
        }
        $("input[name='Paid'").change(function () {
            if (this.value == "No") {
                $("#PaidCustomer").attr("disabled", "disabled");
                $("#DefaultPaid").attr("disabled", "disabled");
                $("#chkDefaultPaid").attr("disabled", "disabled");
            } else {
                $("#PaidCustomer").removeAttr("disabled");
                $("#DefaultPaid").removeAttr("disabled");
                $("#chkDefaultPaid").removeAttr("disabled");
            }
        });
        $("#chkDefaultPaid").change(function () {
            if (this.checked) {
                $("#DefaultPaid").attr("disabled", "disabled");
            } else {
                $("#DefaultPaid").removeAttr("disabled");
            }
        });

        $(".PrintFormatL").change(function () {
            $('#PrintFormat').val('');
            var selected = "";
            $(".PrintFormatL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#PrintFormat').val(selected);
            return false;
        });
        $(".UserL").change(function () {
            $('#User').val('');
            var selected = "";
            $(".UserL :selected").each(function () {
                selected += ("" + $(this).val() + ",");
            });
            selected = selected.toString().substring(0, selected.length - 1);
            $('#User').val(selected);
            return false;
        });

        debugger;
        $('.PrintFormatL,.UserL').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            enableCaseInsensitiveFiltering: true,
            filterPlaceholder: 'Search for something...',
            buttonWidth: '235',
            numberDisplayed: 1,
            nonSelectedText: 'Select Item',
        });


        $('#Submit').click(function (event) {
            event.preventDefault();

            if (($("#Class_BranchwiseSrlReq").is(":checked") == false) && ($("#Class_YearwiseSrlReq").is(":checked") == false) && ($("#Class_CetralisedSrlReq").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select System Generate No...!');
                return;
            }
            if ($("#Class_Srl").val() == null || $("#Class_Srl").val() == "0"|| $("#Class_Srl").val() == "") {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Enter Start From ...!');
                return;
            }
            if (($("#YearwiseManualSrlReq").is(":checked") == false) && ($("#CetralisedManualSrlReq").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select System Manual No...!');
                return;
            }
            if (($("#LrAutomatic").is(":checked") == false) && ($("#LrManual").is(":checked") == false) && ($("#Both").is(":checked") == false)) {
                $("#ErrorMessage").show();
                $("#ErrorMessage").text('Please Select LR Generate...!');
                return;
            }
            if ($("#DeclareValueZero").is(":checked") == false) {
                if (($("#Declare_Value").val() == null) || ($("#Declare_Value").val() == "0")) {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Please Enter Declare Value...!');
                    return;
                }
            }
            if ($("#EditReq").is(":checked") == true) {
                if ($("#EditHours").val() == ""||$("#EditHours").val() == "0") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Edit Hours Required...!');
                    return;
                }
            }
            if ($("#DeleteReq").is(":checked") == true) {
                if ($("#DeleteHours").val() == ""||$("#DeleteHours").val() == "0") {
                    $("#ErrorMessage").show();
                    $("#ErrorMessage").text('Delete Hours Required...!');
                    return;
                }
            }
            var url = '@Url.Action("SaveData")';
            @* iX9: Data from individual field is passed on to the Model and then to Controller for Saving *@
            var ModelData = {};
            ModelData["Class_BranchwiseSrlReq"] = $("#Class_BranchwiseSrlReq").is(":checked");
            ModelData["Class_YearwiseSrlReq"] = $("#Class_YearwiseSrlReq").is(":checked");
            ModelData["Class_CetralisedSrlReq"] = $("#Class_CetralisedSrlReq").is(":checked");
            ModelData["Class_Srl"] = $("#Class_Srl").val();

            ModelData["CetralisedManualSrlReq"] = $("#CetralisedManualSrlReq").is(":checked");
            ModelData["YearwiseManualSrlReq"] = $("#YearwiseManualSrlReq").is(":checked");

            ModelData["Class_CurrDatetOnlyreq"] = $("#Class_CurrDatetOnlyreq").is(":checked");
            ModelData["Class_BackDateAllow"] = $("#Class_BackDateAllow").is(":checked");
            ModelData["Class_BackDaysUpto"] = $("#Class_BackDaysUpto").val();
            ModelData["Class_ForwardDateAllow"] = $("#Class_ForwardDateAllow").is(":checked");
            ModelData["Class_ForwardDaysUpto"] = $("#Class_ForwardDaysUpto").val();


            ModelData["PrintFormat"] = $("#PrintFormat").val();
            ModelData["User"] = $("#User").val();

            ModelData["ParticularFlag"] = $("#ParticularFlag").is(":checked");
            ModelData["ActWeightReq"] = $("#ActWeightReq").is(":checked");

            if (($("#Both").is(":checked") == true)) {
                ModelData["Both"] = true;
            } else {
                if (($("#LrAutomatic").is(":checked") == true)) {
                    ModelData["LrAutomatic"] = true;
                } else {
                    ModelData["LrAutomatic"] = false;
                }
            }

            ModelData["CheckManualLR"] = $("#CheckManualLR").is(":checked");

            if (($("#FillFromCurr").is(":checked") == true)) {
                ModelData["FillFromCurr"] = true;
            } else {
                ModelData["FillFromCurr"] = false;
            }


            ModelData["EditReq"] = $("#EditReq").is(":checked");
            ModelData["DeleteReq"] = $("#DeleteReq").is(":checked");
            ModelData["DispachLREdit"] = $("#DispachLREdit").is(":checked");
            ModelData["BillLREdit"] = $("#BillLREdit").is(":checked");
            ModelData["FetchContract"] = $("#FetchContract").is(":checked");
            ModelData["GenralContract"] = $("#GenralContract").is(":checked");
            ModelData["EditHours"] = $("#EditHours").val();
            ModelData["DeleteHours"] = $("#DeleteHours").val();
            ModelData["LRType"] = $("#LRType").val();
            ModelData["ServiceType"] = $("#ServiceType").val();
            ModelData["Unit"] = $("#Unit").val();
            ModelData["BillBranch"] = $("#BillBranch").val();
            ModelData["ChrType"] = $("#ChrType").val();
            ModelData["CurrentBranch"] = $("#CurrentBranch").is(":checked");
            ModelData["GetAutoTripNo"] = $("#GetAutoTripNo").is(":checked");
            debugger;
            ModelData["FooterDetails1"] = $("#FooterDetails1").val();
            ModelData["FooterDetails2"] = $("#FooterDetails2").val();
            ModelData["FooterDetails3"] = $("#FooterDetails3").val();
            ModelData["FooterDetails4"] = $("#FooterDetails4").val();

            ModelData["TrnMode"] = $("#TrnMode").val();
            ModelData["defaultQty"] = $("#defaultQty").val();




            if (($("#Direct").is(":checked") == true)) {
                ModelData["Colln"] = "D";
            } else if (($("#Godown1").is(":checked") == true)) {
                ModelData["Colln"] = "G";
            }
            else {
                ModelData["Colln"] = "C";
            }

            if (($("#Door").is(":checked") == true)) {
                ModelData["Del"] = "D";
            } else {
                ModelData["Del"] = "G";
            }

            if (($("#DeclareValueZero").is(":checked") == true)) {
                ModelData["DeclareValueZero"] = true;
            } else {
                ModelData["DeclareValueZero"] = false;
            }

            if (($("#Charges").is(":checked") == true)) {
                ModelData["Charges"] = true;
            } else {
                ModelData["Charges"] = false;
            }

            ModelData["Declare_Value"] = $("#Declare_Value").val();

            if (($("#GST").is(":checked") == true)) {
                ModelData["GST"] = true;
            }

            if (($("#Eway_Bill").is(":checked") == true)) {
                ModelData["Eway_Bill"] = true;
            }

            ModelData["GST_Ticklr"] = $("#GST_Ticklr").val();
            ModelData["EWB_Ticklr"] = $("#EWB_Ticklr").val();

            if (($("#Vehicle").is(":checked") == true)) {
                ModelData["Vehicle"] = true;
            }

            if (($("#Party_Challan").is(":checked") == true)) {
                ModelData["Party_Challan"] = true;
            }

            if (($("#Party_Invoice").is(":checked") == true)) {
                ModelData["Party_Invoice"] = true;
            }


            if ($("#ToPayNO").is(":checked") == true)
            {
                ModelData["Topay"] = false;
                ModelData["TopayCustomer"] = "0";
                ModelData["DefaultToPay"] = "";
            }
            else
            {
                ModelData["Topay"] = true;
                ModelData["TopayCustomer"] = $("#TopayCustomer").val();
                ModelData["DefaultToPay"] = $("#DefaultToPay").val();
                if ($("#chkDefaultTopay").is(":checked") == true) {
                    ModelData["DefaultToPay"] = "";
                }
            }
            if ($("#PaidNO").is(":checked") == true) {
                ModelData["Paid"] = false;
                ModelData["PaidCustomer"] = "0";
                ModelData["DefaultPaid"] = "";
            }
            else {
                ModelData["Paid"] = true;
                ModelData["PaidCustomer"] = $("#PaidCustomer").val();
                ModelData["DefaultPaid"] = $("#DefaultPaid").val();
                if ($("#chkDefaultPaid").is(":checked") == true) {
                    ModelData["DefaultPaid"] = "";
                }
            }
            ModelData["Mode"] = '@Model.Mode';
            ModelData["Header"] = '@Model.Header';

            var DTO = { mModel: ModelData };
            $.ajax({
                type: "POST",
                dataType: "json",
                data: JSON.stringify(DTO),
                cache: false,
                url: url,
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.spinner').show();
                },
                success: function (data) {
                    if (data.Status == 'Success') {
                        $('.spinner').hide();
                        window.location.href = "/DashBoard/SetUP";
                        $("#ErrorMessage").hide();
                    }
                    else {
                        $('.spinner').hide();
                        alert(data.Message);
                    }
                },
            });
        });
    });

    function ResetLrType() {
        $('#LRType').select2('data', { id: '', text: '' });
    }
    function ResetServiceType() {
        $('#ServiceType').select2('data', { id: '', text: '' });
    }
    function ResetBillBranch() {
        $('#BillBranch').select2('data', { id: '', text: '' });
    }
    function ResetUnit() {
        $('#Unit').select2('data', { id: '', text: '' });
    }
    function ResetChargeType() {
        $('#ChrType').select2('data', { id: '', text: '' });
    }


    function LoadChargeType() {

        var url = '@Url.Action("ChargeType")'
        $('#ChrType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ChrType', text: '@Model.ChrType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadUnit() {

        var url = '@Url.Action("GetUnit")'
        $('#Unit').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.Unit', text: '@Model.Unit_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };

    function LoadBillAt() {
        var url = '@Url.Action("BillatBranch")'
        $('#BillBranch').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term,
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.BillBranch', text: '@Model.BillBranch_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {
                //CheckName();
                //$('#Submit').prop('disabled', true);
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadLRType() {

        var url = '@Url.Action("GetLRType")'
        $('#LRType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.LRType', text: '@Model.LRType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };


    function LoadServiceType() {

        var url = '@Url.Action("GetServiceType")'
        $('#ServiceType').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.ServiceType', text: '@Model.ServiceType_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadToPay() {

        var url = '@Url.Action("LoadToPay")'
        $('#DefaultToPay').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DefaultToPay', text: '@Model.DefaultToPay_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function LoadPaid() {

        var url = '@Url.Action("LoadToPay")'
        $('#DefaultPaid').select2({
            minimumInputLength: 0,
            placeholder: 'Search',
            ajax: {
                url: url,
                dataType: 'json',
                quietMillis: 100,
                enableFiltering: true,
                allowClear: true,
                minimumInputLength: 0,
                multiple: true,
                width: 300,
                data: function (term, page) {
                    return {
                        types: ["exercise"],
                        limit: -1,
                        term: term
                    };
                },
                results: function (data, page) {
                    clientObj = JSON.stringify(data);
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.Name,
                                id: item.Code
                            }
                        })
                    };
                }
            },

            initSelection: function (element, callback) {
                var data = { id: '@Model.DefaultPaid', text: '@Model.DefaultPaid_Name' };
                callback(data);
            },

            formatResult: function (exercise) {
                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },

            formatSelection: function (exercise) {

                return "<div class='row-fluid'><div class=''><span class='span1'><div style='color:" + exercise.alias + "'>" + exercise.text +
                    "</div></span></div></div>";
            },
        })
    };
    function loadTRNMode() {
        event.preventDefault();
        var url = '@Url.Action("GetTrasactMode")';
        $.ajax({
            type: 'POST',
            url: url,
            dataType: 'json',
            data: {  },
            success: function (result) {
                $("#TrnMode").empty();
                $.each(result, function (i, item) {
                    $("#TrnMode").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                });
                $('#TrnMode').val('@Model.TrnMode').attr("selected", "selected");
                $('.spinner').hide();
            },
            error: function (ex) {
                alert("Error occured while processing your request." + ex);
            }
        });
        return false;
    };
</script>
<style>
    hr {
        margin-top: 0%;
        margin-bottom: 15px;
        border: 0;
        border-top: 2px solid #e0cbcb !important;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        /*xmin-width: 0;*/
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 5px !important;
    }

    legend {
        margin-left: 1%;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 45px 5px 45px;
        background-color: white;
        width: auto;
        color: red;
    }
</style>

<header class="header fixed-top" style="position:fixed;background-color:lightgray;padding:6px;width:100%;margin-top:0%;">
    <div class="fixhead">
        <b class="CodeSt">Lorry Receipt</b>
        <span class="tools pull-right">
            <a href="~/DashBoard/SetUP" class="btn btn-danger" style="color:white;font-weight:bolder;font-size:13px;padding:3px 10px;" id="Cancel2">X</a>
        </span>
        <span class="tools pull-right">
            <b class="CodeSt">Setup Mode</b>
        </span>
        <button class="fa fa-heart pull-right" type="submit" onclick="AddToFavorite('@Model.ViewDataId','@Model.OptionCode')" title="Add/Remove from My Favorites" id="MyFavorites" style="color: rgb(145,142,142); background-color: transparent; border: none; font-size: 20px; height: 27px; margin-right: 5px;margin-top:5px;" name="MyFavorites"></button>

        <span class="tools pull-right" style="    margin-right: 15px;">
        </span>
    </div>
</header>

<section class="panel" style="margin-bottom:0px;">
    <div class="panel-body">
        <div class="form-horizontal " id="ServiceMaster" role="form" style="margin-top:2%;">
            <div id="ErrorMessage" name="ErrorMessage" class="alert alert-danger" style="display: none"></div>
            <fieldset class=" col-sm-12" style="margin-top:0%;">
                <legend>Lorry Receipts</legend>
                <div class="panel panel-default" style="height:430px;overflow:auto;">
                    <div class="panel-body" style="padding-top: 5px;">
                        <div class="tab">
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable')" id="List"> Basic Info</button>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable1')" style="width:140px;"> Restriction Info</button>
                            <button class="tablinks" onclick="openCity(event, 'divLedgerTable2')" style="width:170px;"> Eway Bill Related Info</button>
                        </div>

                        <div id="divLedgerTable" class="tabcontent" style="min-height: 380px;max-height: 380px;overflow-y:auto;overflow-x:hidden;  border: 1px solid;">
                            <div class="form-group">
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title=" How To Generate Serial No In System.">System Generate No<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-4">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Branch-Wise Generate Serial No Per Year In System.">Branch Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.Class_BranchwiseSrlReq, new { @class = "", @Value = Model.Class_BranchwiseSrlReq, style = "height: 20px;width: 35px;", @title = "Branch-Wise Generate Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Year-Wise Generate Serial No Per Year In System.">Year Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.Class_YearwiseSrlReq, new { @class = "", @Value = Model.Class_YearwiseSrlReq, style = "height: 20px;width: 35px;", @title = "Year-Wise Generate Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;" title="Cetralised Generate Serial No In System.">Centralised:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.Class_CetralisedSrlReq, new { @class = "", @Value = Model.Class_CetralisedSrlReq, style = "height: 20px;width: 35px;", @title = "Cetralised Generate Serial No In System." })
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="If Data Not Found In System Then System Generate Start From No. Or Also BranchWise And Year Wise Process Repeated.">Start From <span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_Srl, new { @class = "form-control", @Value = Model.Class_Srl, @title = "If Data Not Found In System Then System Generate Start From No. Or Also BranchWise And Year Wise Process Repeated." })
                                </div>

                            </div>
                            <div class="form-group">
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title=" How To Manual Serial No In System.">System Manual No<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-4">
                                    <label class="col-sm-offset-4 col-sm-3 control-label" style="font-weight:100;" title="Year-Wise Manual Serial No Per Year In System.">Year Wise:</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.YearwiseManualSrlReq, new { @class = "", @Value = Model.YearwiseManualSrlReq, style = "height: 20px;width: 35px;", @title = "Year-Wise Manual Serial No Per Year In System." })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;" title="Cetralised Manual Serial No In System.">Centralised:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.CetralisedManualSrlReq, new { @class = "", @Value = Model.CetralisedManualSrlReq, style = "height: 20px;width: 35px;", @title = "Cetralised Manual Serial No In System." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Print OF Lorry Receipt.">Default Print :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-4">
                                        @Html.ListBoxFor(x => x.PrintFormatsL, Model.PrintFormats, new { @class = "PrintFormatL", @id = "PrintFormatL" })
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="Serial No Allow To How To Generate Auto,Manual  Or Both.">LR Generate Mode<span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-3" style="padding-left: 0px;">
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Auto:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.LrAutomatic, new { @class = "", @Value = Model.LrAutomatic, style = "height: 20px;width: 35px;" })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Manual:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.LrManual, new { @class = "", @Value = Model.LrManual, style = "height: 20px;width: 35px;" })
                                    </div>
                                    <label class=" col-sm-2 control-label" style="font-weight:100;">Both:</label>
                                    <div class="col-sm-2">
                                        @Html.CheckBoxFor(x => x.Both, new { @class = "", @Value = Model.Both, style = "height: 20px;width: 35px;" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default LR-Type In Lorry Receipt Of Add Mode.">LR Type By Default  :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.LRType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.LRType, @title = "Set Default LR-Type In Lorry Receipt Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetLrType();" style="padding: 4px 5px;" title="Remover LR-Type From The LR-Type Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Service-Type In Lorry Receipt Of Add Mode.">Service Type By Default  :</label>
                                <div class="col-sm-4" style="padding-left: 0px;">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.ServiceType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ServiceType, @title = "Set Default Service-Type In Lorry Receipt Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetServiceType();" style="padding: 4px 5px;" title="Remover Service-Type From The LR-Type Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Bill Branch In Lorry Receipt Of Add Mode.">Bill Branch By Default  :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.BillBranch, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.BillBranch, @title = "Set Default Bill Branch In Lorry Receipt Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetBillBranch();" style="padding: 4px 5px;" title="Remover LR-Type From The Bill Branch Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Unit In Lorry Receipt Of Add Mode.">Unit By Default  :</label>
                                <div class="col-sm-4" style="padding-left: 0px;">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.Unit, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.Unit, @title = "Set Default Unit In Lorry Receipt Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetUnit();" style="padding: 4px 5px;" title="Remover LR-Type From The Unit Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Charge Type In Lorry Receipt Of Add Mode.">Charge Type By Default  :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-7">
                                        @Html.TextBoxFor(x => x.ChrType, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.ChrType, @title = "Set Default Charge Type In Lorry Receipt Of Add Mode." })
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-danger" onclick="ResetChargeType();" style="padding: 4px 5px;" title="Remover LR-Type From The Charge Type Combo.."><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                </div>
                                <label class=" col-sm-2 control-label" style="font-weight: bold;" title="Set Default Qty In Lorry Receipt Of Add Mode.">Qty By Default <span style="color:red;padding-left: 5px;">*</span> :</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.defaultQty, new { @class = "form-control", @Value = Model.defaultQty, @title = "Set Default Qty In Lorry Receipt Of Add Mode." })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Fill The Combo Branch Wise Or Centralised.">Fill From Combo  :</label>
                                <div class="col-sm-4" style="display: flex;">
                                    <input type="radio" class="form-control" name="FillFromCombo" id="FillFromCurr" title="Fill The Combo Branch Wise Only." value="FillFromCurr" style="height:20px;width:35px;" checked /><label class=" bold col-sm-4  control-label"> Current Branch</label>
                                    <input type="radio" class="form-control" name="FillFromCombo" id="FillFromAll" title="Fill The Combo Centralised." value="FillFromAll" style="height:20px;width:35px;" /><label class=" bold col-sm-3 control-label"> All Area</label>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Fill The Combo Consignor/Consignee Wise Or Centralised.">Consignor/Consignee  :</label>
                                <div class="col-sm-4" style="display: flex;">
                                    <input type="radio" class="form-control" name="ConsignerRadiobtn" id="CurrentBranch" title="Fill The Consignor/Consignee Branch Wise Only." value="Asc" style="height:20px;width:35px;" checked /><label class=" bold col-sm-4  control-label"> Current Branch</label>
                                    <input type="radio" class="form-control" name="ConsignerRadiobtn" id="AllBranch" title="Fill The Consignor/Consignee Centralised." value="Desc" style="height:20px;width:35px;" /><label class=" bold col-sm-3 control-label"> All Branch</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Collection In Lorry Receipt Of Add Mode.">Collection By Default  :</label>
                                <div class="col-sm-4" style="display: flex;">
                                    <input type="radio" class="form-control" name="Collection" id="Direct" value="Direct" style="height:20px;width:35px;" /><label class=" bold control-label"> Direct</label>
                                    <input type="radio" class="form-control" name="Collection" id="Godown1" value="Godown" style="height:20px;width:35px;" /><label class=" bold control-label"> Godown</label>
                                    <input type="radio" class="form-control" name="Collection" id="Crossing" value="Crossing" style="height:20px;width:35px;" /><label class=" bold control-label"> Crossing</label>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Set Default Collection In Lorry Receipt Of Add Mode.">Delivery By Default  :</label>
                                <div class="col-sm-4" style="display: flex;">
                                    <input type="radio" class="form-control" name="Delivery" id="Door" value="Yes" style="height:20px;width:35px;" /><label class=" bold col-sm-2  control-label"> Door</label>
                                    <input type="radio" class="form-control" name="Delivery" id="Godown" value="No" style="height:20px;width:35px;" /><label class=" bold col-sm-3 control-label"> Godown</label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Get Latest TripNo.">Get Auto TripNO :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.GetAutoTripNo, new { @id = "GetAutoTripNo", @name = "GetAutoTripNo", @class = "form-control", @Value = Model.GetAutoTripNo, style = "height: 20px;width: 35px;", @title = "Get Latest TripNo." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Footer Details -:</label>
                                <div class="col-sm-8" style="padding-right:0px;padding-left:15px;">
                                    @Html.TextBoxFor(x => x.FooterDetails1, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails1 })
                                    @Html.TextBoxFor(x => x.FooterDetails2, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails2 })
                                    @Html.TextBoxFor(x => x.FooterDetails3, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails3 })
                                    @Html.TextBoxFor(x => x.FooterDetails4, new { @maxlength = "100", @class = "form-control", @style = "width:100%;margin-top:2px;", @Value = Model.FooterDetails4 })
                                </div>
                            </div>
                        </div>
                        <div id="divLedgerTable1" class="tabcontent" style="min-height: 380px;max-height: 380px;overflow-y:auto;overflow-x:hidden;  border: 1px solid;">
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Consignment DocDate Allow Only Current Date In Lorry Receipt.">Current DocDate Req Only :</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.Class_CurrDatetOnlyreq, new { @class = "", @Value = Model.Class_CurrDatetOnlyreq, style = "height: 20px;width: 35px;", @title = "Consignment DocDate Allow Only Current Date In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;" title="Consignment Serial No Check In The Manual Range BranchWise.">Check Manual Range :</label>
                                <div class="col-sm-2">
                                    @Html.CheckBoxFor(x => x.CheckManualLR, new { @class = "", @Value = Model.CheckManualLR, style = "height: 20px;width: 35px;" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Enable BackDated :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Class_BackDateAllow, new { @id = "Class_BackDateAllow", @name = "Class_BackDateAllow", @class = "form-control", @Value = Model.Class_BackDateAllow, style = "height: 20px;width: 35px;" })
                                </div>
                                <label class="col-sm-1 control-label" style="font-weight: 100;">Back Days:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_BackDaysUpto, new { @id = "Class_BackDaysUpto", @name = "Class_BackDaysUpto", @class = "form-control", @Value = Model.Class_BackDaysUpto })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Enable Forward Date :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Class_ForwardDateAllow, new { @id = "Class_ForwardDateAllow", @name = "Class_ForwardDateAllow", @class = "form-control", @Value = Model.Class_ForwardDateAllow, style = "height: 20px;width: 35px;" })
                                </div>
                                <label class="col-sm-1 control-label" style="font-weight: 100;">Forward Days:</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(x => x.Class_ForwardDaysUpto, new { @id = "Class_ForwardDaysUpto", @name = "Class_ForwardDaysUpto", @class = "form-control", @Value = Model.Class_ForwardDaysUpto })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Declare Value Allow Zero In Lorry Receipt.">Declare Value Allow Zero  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.DeclareValueZero, new { @class = "", @Value = Model.DeclareValueZero, style = "height: 20px;width: 35px;", @title = "Declare Value Allow Zero In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="Charges Allow Zero In Lorry Receipt.">Charges Allow Zero  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Charges, new { @class = "", @Value = Model.Charges, style = "height: 20px;width: 35px;", @title = "Charges Allow Zero In Lorry Receipt." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Enabled Contract Button In Lorry Receipt.">Contract btn (Show)  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.FetchContract, new { @class = "", @Value = Model.FetchContract, style = "height: 20px;width: 35px;", @title = "Enabled Contract Button In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-3 col-sm-2 control-label" style="font-weight: bold;" title="Enabled General-Contract Button In Lorry Receipt.">General Contract btn (Show)  :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.GenralContract, new { @class = "", @Value = Model.GenralContract, style = "height: 20px;width: 35px;", @title = "Enabled General-Contract Button In Lorry Receipt." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Edit Mode :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Consignment Update Will Stop.">Stop Edit :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.EditReq, new { @class = "", @Value = Model.EditReq, style = "height: 20px;width: 35px;", @title = "Consignment Update Will Stop." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Consignment Update Will Stop after Particular Hours Of The Docdate And Time.">After Hours :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.EditHours, new { @class = "form-control col-sm-6", @style = "margin-top:2px;", @Value = Model.EditHours, @title = "Consignment Update Will Stop after Particular Hours Of The Docdate And Time." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Delete Mode :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Consignment Delete Will Stop.">Stop Delete :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.DeleteReq, new { @class = "", @Value = Model.DeleteReq, style = "height: 20px;width: 35px;", @title = "Consignment Delete Will Stop." })
                                    </div>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;" title="Consignment Delete Will Stop after Particular Hours Of The Docdate And Time.">After Hours :</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.DeleteHours, new { @class = "form-control col-sm-6", @style = "margin-top:2px;", @Value = Model.DeleteHours, @title = "Consignment Delete Will Stop after Particular Hours Of The Docdate And Time." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Consignment Dispatch In Lorry Challan Then Allow To Update.">Dispatch LR(Edit) :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class="col-sm-3 control-label" style="font-weight:100;" title="If Consignment Dispatch In Lorry Challan Then Allow To Update.">Allow Edit :</label>
                                    <div class="col-sm-9">
                                        @Html.CheckBoxFor(x => x.DispachLREdit, new { @class = "", @Value = Model.DispachLREdit, style = "height: 20px;width: 35px;", @title = "If Consignment Dispatch In Lorry Challan Then Allow To Update." })
                                    </div>
                                </div>
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="If Consignment Bill Generate Then Allow To Update.">LR Bill(Edit) :</label>
                                <div class="col-sm-4" style="padding-left: 5px;">
                                    <label class="col-sm-3 control-label" style="font-weight:100;" title="If Consignment Bill Generate Then Allow To Update.">Allow Edit :</label>
                                    <div class="col-sm-9">
                                        @Html.CheckBoxFor(x => x.BillLREdit, new { @class = "", @Value = Model.BillLREdit, style = "height: 20px;width: 35px;", @title = "If Consignment Bill Generate Then Allow To Update." })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Act-Weight  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Act-Weight Mandatory In Lorry Receipt.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ActWeightReq, new { @class = "", @Value = Model.ActWeightReq, style = "height: 20px;width: 35px;", @title = "Act-Weight Mandatory In Lorry Receipt." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Vehicle  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Vehicle Mandatory In Lorry Receipt.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Vehicle, new { @class = "", @Value = Model.Vehicle, style = "height: 20px;width: 35px;", @title = "Vehicle Mandatory In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">Particular  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Particular Mandatory In Lorry Receipt.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.ParticularFlag, new { @class = "", @Value = Model.ParticularFlag, style = "height: 20px;width: 35px;", @title = "Particular Mandatory In Lorry Receipt." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Party Challan  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Party Challan Mandatory In Lorry Receipt.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Party_Challan, new { @class = "", @Value = Model.Party_Challan, style = "height: 20px;width: 35px;", @title = "Party Challan Mandatory In Lorry Receipt." })
                                </div>
                                <label class="col-sm-offset-2 col-sm-2 control-label" style="font-weight: bold;">Party Invoice  :</label>
                                <label class=" col-sm-1 control-label" style="font-weight:100;" title="Party Invoice Mandatory In Lorry Receipt.">Mandatory :</label>
                                <div class="col-sm-1">
                                    @Html.CheckBoxFor(x => x.Party_Invoice, new { @class = "", @Value = Model.Party_Invoice, style = "height: 20px;width: 35px;", @title = "Party Invoice Mandatory In Lorry Receipt." })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Users Can't See Exta Info Of Lorry Receipt.">Lock Rights Of Extra Info Tab :</label>
                                <div class="col-sm-4">
                                    <div class="col-sm-4">
                                        @Html.ListBoxFor(x => x.UserL, Model.Users, new { @class = "UserL", @id = "UserL" })
                                    </div>
                                </div>
                            </div>



                            
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">ToPay -:</label>
                                <div class="col-sm-10" style="padding-left: 0px;">
                                    <div class="col-sm-4" style="padding-left:0px;">
                                        <label class="col-sm-6 control-label" style="font-size: 14px;font-weight: bold;">Bill Party Required :</label>
                                        <div class="col-sm-5" style="display: flex;">
                                            <input type="radio" class="form-control" name="TOPAY" id="ToPayYes" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Yes</label>
                                            <input type="radio" class="form-control" name="TOPAY" id="ToPayNO" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <label class=" control-label  col-sm-6" style="font-size: 14px;font-weight: bold;">Auto Bill Party:</label>
                                        <div class="col-sm-6" style="padding-right:0px;padding-left:15px;">
                                            @Html.EnumDropDownListFor(x => x.TopayCustomer, new { @class = "form-control", @Value = Model.TopayCustomer })
                                        </div>
                                    </div>
                                    <div class="col-sm-5">
                                        <label class=" control-label  col-sm-5" style="font-size: 14px;font-weight: bold;">ByDefault Bill Party:</label>
                                        <input type="checkbox" class="col-sm-1 form-control" name="" id="chkDefaultTopay" value="" style="height:20px;width:35px;" />
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(x => x.DefaultToPay, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.DefaultToPay })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;">Paid -:</label>
                                <div class="col-sm-10" style="padding-left: 0px;">
                                    <div class="col-sm-4" style="padding-left:0px;">
                                        <label class="col-sm-6 control-label" style="font-size: 14px;font-weight: bold;">Bill Party Required :</label>
                                        <div class="col-sm-6" style="display: flex;">
                                            <input type="radio" class="form-control" name="Paid" id="PaidYes" value="Yes" style="height:20px;width:35px;" /><label class=" bold control-label"> Yes</label>
                                            <input type="radio" class="form-control" name="Paid" id="PaidNO" value="No" style="height:20px;width:35px;" /><label class=" bold control-label"> No</label>
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <label class=" control-label  col-sm-6" style="font-size: 14px;font-weight: bold;">Auto Bill Party:</label>
                                        <div class="col-sm-6" style="padding-right:0px;padding-left:15px;">
                                            @Html.EnumDropDownListFor(x => x.PaidCustomer, new { @class = "form-control", @Value = Model.PaidCustomer })
                                        </div>
                                    </div>
                                    <div class="col-sm-5">
                                        <label class=" control-label  col-sm-5" style="font-size: 14px;font-weight: bold;">ByDefault Bill Party:</label>
                                        <input type="checkbox" class="col-sm-1 form-control" name="" id="chkDefaultPaid" value="" style="height:20px;width:35px;" />
                                        <div class="col-sm-5">
                                            @Html.TextBoxFor(x => x.DefaultPaid, new { @class = "input-large-query", @style = "width:100%;margin-top:2px;", @Value = Model.DefaultPaid })
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Declare Value Conditon Base On Lorry Receipt Total Amount.">Declare Value :</label>
                                <div class="col-sm-5" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style="">More Than Rs.</label>
                                    <div class="col-sm-2">
                                        @Html.TextBoxFor(x => x.Declare_Value, new { @class = " form-control", @style = "", @Value = Model.Declare_Value })
                                    </div>
                                    <label class="col-sm-1 control-label" style="">Then </label>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;">GST Mandatory :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.GST, new { @class = "", @Value = Model.GST, style = "height: 20px;width: 35px;", @title = "GST Mandatory." })
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <label class=" col-sm-2 control-label" style="">GST Tickler</label>
                                    <div class="col-sm-9">
                                        @Html.TextAreaFor(x => x.GST_Ticklr, new { @class = "form-control", @style = "", @id = "GST_Ticklr", @maxlength = "250", @rows = "5", @Value = Model.GST_Ticklr })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" control-label col-sm-2" style="font-size: 14px;font-weight: bold;"></label>
                                <div class="col-sm-5" style="padding-left: 5px;">
                                    <label class=" col-sm-3 control-label" style=""></label>
                                    <div class="col-sm-2">
                                    </div>
                                    <label class="col-sm-1 control-label" style=""></label>
                                    <label class=" col-sm-3 control-label" style="font-weight:100;">EWB Mandatory :</label>
                                    <div class="col-sm-1">
                                        @Html.CheckBoxFor(x => x.Eway_Bill, new { @class = "", @Value = Model.Eway_Bill, style = "height: 20px;width: 35px;", @title = "Eway Bill No Mandatory." })
                                    </div>
                                </div>
                                <div class="col-sm-5">
                                    <label class=" col-sm-2 control-label" style="">EWB Tickler</label>
                                    <div class="col-sm-9">
                                        @Html.TextAreaFor(x => x.EWB_Ticklr, new { @class = "form-control", @style = "", @id = "EWB_Ticklr", @maxlength = "250", @rows = "5", @Value = Model.EWB_Ticklr })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="divLedgerTable2" class="tabcontent" style="min-height: 340px;max-height: 340px;overflow-y:auto;overflow-x:hidden;  border: 1px solid;">
                            <div class="form-group ">
                                <label class="col-sm-2 control-label" style="font-weight: bold;" title="Default Select TanMode In Add Mode In Lorry Receipt.">TRNMODE :</label>
                                <div class="col-sm-2">
                                    @Html.DropDownListFor(m => m.TrnMode, DropdownHelper.EmptyList(), new { @class = "form-control", @Name = "TrnMode", @Id = "TrnMode" })
                                </div>
                            </div>
                        </div>
                        <script>
                            function openCity(evt, cityName) {
                                var i, tabcontent, tablinks;
                                tabcontent = document.getElementsByClassName("tabcontent");
                                for (i = 0; i < tabcontent.length; i++) {
                                    tabcontent[i].style.display = "none";
                                }
                                tablinks = document.getElementsByClassName("tablinks");
                                for (i = 0; i < tablinks.length; i++) {
                                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                                }
                                document.getElementById(cityName).style.display = "block";
                                evt.currentTarget.className += " active";
                            }
                            document.getElementById("List").click();

                        </script>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</section>

<footer class="footer-section" style="height:33px;position:fixed;background-color:#4B4A4A;padding:3px;color:white;">
    <div class="row">
        <div class="col-sm-5">
        </div>
        <div class="col-sm-3" style="margin-top:4px;color:white;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
            T.LAT ERP-3.0, Shruham Software
        </div>
        <div class="col-sm-4">
            <div class="pull-right">
                @if (Model.Mode != "View")
                {
                    if (Model.Mode == "Delete")
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="btnDelete">Delete</button>
                    }
                    else
                    {
                        <button class="btn btn-success" style="font-size: 13px;padding:3px 12px;" id="Submit">Save</button>
                    }
                }
                <a href="~/DashBoard/SetUP" class="btn btn-danger" style="font-size: 13px;padding:3px 12px;" id="Cancel">Cancel</a>
            </div>
        </div>
    </div>
</footer>


@Html.HiddenFor(x => x.Document)
@Html.HiddenFor(x => x.PrintFormat)
@Html.HiddenFor(x => x.User)

